!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/pub/will/llvm/lib/Target/RVGPU/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
A16	Utils/RVGPUBaseInfo.h	/^  bool A16;$/;"	m	struct:llvm::RVGPU::MIMGBaseOpcodeInfo	typeref:typename:bool
AA	RVGPUAnnotateUniformValues.cpp	/^  AliasAnalysis *AA;$/;"	m	class:__anon9c77d1d40111::RVGPUAnnotateUniformValues	typeref:typename:AliasAnalysis *	file:
AA	RVGPUPromoteKernelArguments.cpp	/^  AliasAnalysis *AA;$/;"	m	class:__anon281388e70111::RVGPUPromoteKernelArguments	typeref:typename:AliasAnalysis *	file:
AA	SILoadStoreOptimizer.cpp	/^  AliasAnalysis *AA = nullptr;$/;"	m	class:__anon677101620111::SILoadStoreOptimizer	typeref:typename:AliasAnalysis *	file:
AARVAttributes	RVGPUAttributor.cpp	/^  AARVAttributes(const IRPosition &IRP, Attributor &A) : Base(IRP) {}$/;"	f	struct:__anon512e119a0111::AARVAttributes	file:
AARVAttributes	RVGPUAttributor.cpp	/^struct AARVAttributes$/;"	s	namespace:__anon512e119a0111	file:
AARVAttributesFunction	RVGPUAttributor.cpp	/^  AARVAttributesFunction(const IRPosition &IRP, Attributor &A)$/;"	f	struct:__anon512e119a0111::AARVAttributesFunction	file:
AARVAttributesFunction	RVGPUAttributor.cpp	/^struct AARVAttributesFunction : public AARVAttributes {$/;"	s	namespace:__anon512e119a0111	file:
AARVFlatWorkGroupSize	RVGPUAttributor.cpp	/^  AARVFlatWorkGroupSize(const IRPosition &IRP, Attributor &A)$/;"	f	struct:__anon512e119a0111::AARVFlatWorkGroupSize	file:
AARVFlatWorkGroupSize	RVGPUAttributor.cpp	/^struct AARVFlatWorkGroupSize : public AARVSizeRangeAttribute {$/;"	s	namespace:__anon512e119a0111	file:
AARVSizeRangeAttribute	RVGPUAttributor.cpp	/^  AARVSizeRangeAttribute(const IRPosition &IRP, Attributor &A,$/;"	f	struct:__anon512e119a0111::AARVSizeRangeAttribute	file:
AARVSizeRangeAttribute	RVGPUAttributor.cpp	/^struct AARVSizeRangeAttribute$/;"	s	namespace:__anon512e119a0111	file:
AARVWavesPerEU	RVGPUAttributor.cpp	/^  AARVWavesPerEU(const IRPosition &IRP, Attributor &A)$/;"	f	struct:__anon512e119a0111::AARVWavesPerEU	file:
AARVWavesPerEU	RVGPUAttributor.cpp	/^struct AARVWavesPerEU : public AARVSizeRangeAttribute {$/;"	s	namespace:__anon512e119a0111	file:
AAUniformWorkGroupSize	RVGPUAttributor.cpp	/^  AAUniformWorkGroupSize(const IRPosition &IRP, Attributor &A) : Base(IRP) {}$/;"	f	struct:__anon512e119a0111::AAUniformWorkGroupSize	file:
AAUniformWorkGroupSize	RVGPUAttributor.cpp	/^struct AAUniformWorkGroupSize$/;"	s	namespace:__anon512e119a0111	file:
AAUniformWorkGroupSizeFunction	RVGPUAttributor.cpp	/^  AAUniformWorkGroupSizeFunction(const IRPosition &IRP, Attributor &A)$/;"	f	struct:__anon512e119a0111::AAUniformWorkGroupSizeFunction	file:
AAUniformWorkGroupSizeFunction	RVGPUAttributor.cpp	/^struct AAUniformWorkGroupSizeFunction : public AAUniformWorkGroupSize {$/;"	s	namespace:__anon512e119a0111	file:
ABIVersion	MCTargetDesc/RVGPUAsmBackend.cpp	/^  uint8_t ABIVersion = 0;$/;"	m	class:__anon6b905a380211::ELFRVGPUAsmBackend	typeref:typename:uint8_t	file:
ABS	SIDefines.h	/^   ABS = 1 << 1,   \/\/ Floating-point absolute modifier$/;"	e	enum:llvm::SISrcMods::__anon1f24a7950303
AC	RVGPUCodeGenPrepare.cpp	/^  AssumptionCache *AC = nullptr;$/;"	m	class:__anond35e324e0111::RVGPUCodeGenPrepareImpl	typeref:typename:AssumptionCache *	file:
AC	RVGPULateCodeGenPrepare.cpp	/^  AssumptionCache *AC = nullptr;$/;"	m	class:__anon4d9375140111::RVGPULateCodeGenPrepare	typeref:typename:AssumptionCache *	file:
AC	RVGPULibCalls.cpp	/^  AssumptionCache *AC = nullptr;$/;"	m	class:llvm::RVGPULibCalls	typeref:typename:AssumptionCache *	file:
ADDR_SPACE	RVGPULibFunc.h	/^    ADDR_SPACE = 0xF, \/\/ Address space takes value 0x1 ~ 0xF.$/;"	e	enum:llvm::RVGPULibFuncBase::EPtrKind
ADDR_SPACE_CAST	RVGPUAttributor.cpp	/^  enum ConstantStatus { DS_GLOBAL = 1 << 0, ADDR_SPACE_CAST = 1 << 1 };$/;"	e	enum:__anon512e119a0111::RVGPUInformationCache::ConstantStatus	file:
AFTER	SIMemoryLegalizer.cpp	/^  AFTER$/;"	e	enum:__anon46517b8a0111::Position	file:
AGENT	SIMemoryLegalizer.cpp	/^  AGENT,$/;"	e	enum:__anon46517b8a0111::SIAtomicScope	file:
AGPR32	GCNRegPressure.h	/^    AGPR32,$/;"	e	enum:llvm::GCNRegPressure::RegKind
AGPR_OFFSET	SIInsertWaitcnts.cpp	/^  AGPR_OFFSET = 256,      \/\/ Maximum programmable ArchVGPRs across all targets.$/;"	e	enum:__anona6cbb7940211::RegisterMapping	file:
AGPR_TUPLE	GCNRegPressure.h	/^    AGPR_TUPLE,$/;"	e	enum:llvm::GCNRegPressure::RegKind
ALL	RVGPUIGroupLP.cpp	/^  ALL = ALU | VALU | SALU | MFMA | VMEM | VMEM_READ | VMEM_WRITE | DS |$/;"	e	enum:__anon61b122dc0111::SchedGroupMask	file:
ALL	SIDefines.h	/^  ALL = TH | SCOPE,$/;"	e	enum:llvm::RVGPU::CPol::CPol
ALL	SIMemoryLegalizer.cpp	/^  ALL = GLOBAL | LDS | SCRATCH | GDS | OTHER,$/;"	e	enum:__anon46517b8a0111::SIAtomicAddrSpace	file:
ALL_ARGUMENT_MASK	RVGPUAttributor.cpp	/^  ALL_ARGUMENT_MASK = (1 << LAST_ARG_POS) - 1$/;"	e	enum:ImplicitArgumentMask	file:
ALL_pregfx12	SIDefines.h	/^  ALL_pregfx12 = GLC | SLC | DLC | SCC,$/;"	e	enum:llvm::RVGPU::CPol::CPol
ALU	RVGPUIGroupLP.cpp	/^  ALU = 1u << 0,$/;"	e	enum:__anon61b122dc0111::SchedGroupMask	file:
AP	RVGPUMCInstLower.h	/^  const AsmPrinter &AP;$/;"	m	class:RVGPUMCInstLower	typeref:typename:const AsmPrinter &
ATOMIC	SIMemoryLegalizer.cpp	/^  ATOMIC = GLOBAL | LDS | SCRATCH | GDS,$/;"	e	enum:__anon46517b8a0111::SIAtomicAddrSpace	file:
ATOMIC_CMP_SWAP	RVGPUISelLowering.h	/^  ATOMIC_CMP_SWAP,$/;"	e	enum:llvm::RVGPUISD::NodeType
ATOMIC_LOAD_FMAX	RVGPUISelLowering.h	/^  ATOMIC_LOAD_FMAX,$/;"	e	enum:llvm::RVGPUISD::NodeType
ATOMIC_LOAD_FMIN	RVGPUISelLowering.h	/^  ATOMIC_LOAD_FMIN,$/;"	e	enum:llvm::RVGPUISD::NodeType
Abs	AsmParser/RVGPUAsmParser.cpp	/^    bool Abs = false;$/;"	m	struct:__anon672fa8550111::RVGPUOperand::Modifiers	typeref:typename:bool	file:
Abs	SIPeepholeSDWA.cpp	/^  bool Abs;$/;"	m	class:__anon00bd52b30111::SDWASrcOperand	typeref:typename:bool	file:
AccumOffset	SIProgramInfo.h	/^    uint32_t AccumOffset = 0;$/;"	m	struct:llvm::SIProgramInfo	typeref:typename:uint32_t
AddIMGInit	RVISelLowering.cpp	/^void RVTargetLowering::AddIMGInit(MachineInstr &MI) const {$/;"	f	class:RVTargetLowering	typeref:typename:void
AddNextRegisterToList	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::AddNextRegisterToList(unsigned &Reg, unsigned &RegWidth,$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
AddNoCarryInsts	GCNSubtarget.h	/^  bool AddNoCarryInsts = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
Addr	SILoadStoreOptimizer.cpp	/^  bool Addr = false;$/;"	m	struct:__anon677101620111::AddressRegs	typeref:typename:bool	file:
AddrIdx	SILoadStoreOptimizer.cpp	/^    int AddrIdx[MaxAddressRegs];$/;"	m	struct:__anon677101620111::SILoadStoreOptimizer::CombineInfo	typeref:typename:int[]	file:
AddrReg	SILoadStoreOptimizer.cpp	/^    const MachineOperand *AddrReg[MaxAddressRegs];$/;"	m	struct:__anon677101620111::SILoadStoreOptimizer::CombineInfo	typeref:typename:const MachineOperand * []	file:
AddressRegs	SILoadStoreOptimizer.cpp	/^struct AddressRegs {$/;"	s	namespace:__anon677101620111	file:
AddressableLocalMemorySize	RVGPUSubtarget.h	/^  unsigned AddressableLocalMemorySize = 0;$/;"	m	class:llvm::RVGPUSubtarget	typeref:typename:unsigned
AdjustInstrPostInstrSelection	RVISelLowering.cpp	/^void RVTargetLowering::AdjustInstrPostInstrSelection(MachineInstr &MI,$/;"	f	class:RVTargetLowering	typeref:typename:void
AdvanceCycle	GCNHazardRecognizer.cpp	/^void GCNHazardRecognizer::AdvanceCycle() {$/;"	f	class:GCNHazardRecognizer	typeref:typename:void
AgentOneAddressSpaceSSID	RVGPUMachineModuleInfo.h	/^  SyncScope::ID AgentOneAddressSpaceSSID;$/;"	m	class:llvm::RVGPUMachineModuleInfo	typeref:typename:SyncScope::ID
AgentSSID	RVGPUMachineModuleInfo.h	/^  SyncScope::ID AgentSSID;$/;"	m	class:llvm::RVGPUMachineModuleInfo	typeref:typename:SyncScope::ID
AgprIndexUnusedMin	AsmParser/RVGPUAsmParser.cpp	/^  int AgprIndexUnusedMin = -1;$/;"	m	class:__anon672fa8550111::KernelScopeInfo	typeref:typename:int	file:
AllNative	RVGPULibCalls.cpp	/^  bool AllNative = false;$/;"	m	class:llvm::RVGPULibCalls	typeref:typename:bool	file:
Alloc	GCNILPSched.cpp	/^  SpecificBumpPtrAllocator<Candidate> Alloc;$/;"	m	class:__anonbd2d93ba0111::GCNILPScheduler	typeref:typename:SpecificBumpPtrAllocator<Candidate>	file:
Alloc	GCNIterativeScheduler.h	/^  SpecificBumpPtrAllocator<Region> Alloc;$/;"	m	class:llvm::GCNIterativeScheduler	typeref:typename:SpecificBumpPtrAllocator<Region>
Alloc	GCNMinRegStrategy.cpp	/^  SpecificBumpPtrAllocator<Candidate> Alloc;$/;"	m	class:__anon807286a30111::GCNMinRegScheduler	typeref:typename:SpecificBumpPtrAllocator<Candidate>	file:
AllocatableAndAlignedRegClassMasks	GCNRewritePartialRegUses.cpp	/^  mutable SmallDenseMap<unsigned, BitVector> AllocatableAndAlignedRegClassMasks;$/;"	m	class:__anon37bf8c3b0111::GCNRewritePartialRegUses	typeref:typename:SmallDenseMap<unsigned,BitVector>	file:
AllowRiskySelect	RVGPUInstructionSelector.cpp	/^static cl::opt<bool> AllowRiskySelect($/;"	v	typeref:typename:cl::opt<bool>	file:
AlwaysUniform	Utils/RVGPUBaseInfo.cpp	/^struct AlwaysUniform {$/;"	s	namespace:llvm::RVGPU::__anonc82e9e910411	file:
AndN2Op	SILowerI1Copies.h	/^  unsigned AndN2Op;$/;"	m	class:llvm::PhiLoweringHelper	typeref:typename:unsigned
AndN2Opc	SIWholeQuadMode.cpp	/^  unsigned AndN2Opc;$/;"	m	class:__anon41aff2810111::SIWholeQuadMode	typeref:typename:unsigned	file:
AndOp	SILowerI1Copies.h	/^  unsigned AndOp;$/;"	m	class:llvm::PhiLoweringHelper	typeref:typename:unsigned
AndOpc	SILowerControlFlow.cpp	/^  unsigned AndOpc;$/;"	m	class:__anon0ce7c3340111::SILowerControlFlow	typeref:typename:unsigned	file:
AndOpc	SIOptimizeExecMaskingPreRA.cpp	/^  unsigned AndOpc;$/;"	m	class:__anon5760078c0111::SIOptimizeExecMaskingPreRA	typeref:typename:unsigned	file:
AndOpc	SIWholeQuadMode.cpp	/^  unsigned AndOpc;$/;"	m	class:__anon41aff2810111::SIWholeQuadMode	typeref:typename:unsigned	file:
AndSaveExecOpc	SIWholeQuadMode.cpp	/^  unsigned AndSaveExecOpc;$/;"	m	class:__anon41aff2810111::SIWholeQuadMode	typeref:typename:unsigned	file:
AndSaveExecTermOpc	SIWholeQuadMode.cpp	/^  unsigned AndSaveExecTermOpc;$/;"	m	class:__anon41aff2810111::SIWholeQuadMode	typeref:typename:unsigned	file:
AndTermOpc	SIWholeQuadMode.cpp	/^  unsigned AndTermOpc;$/;"	m	class:__anon41aff2810111::SIWholeQuadMode	typeref:typename:unsigned	file:
Andn2Opc	SIOptimizeExecMaskingPreRA.cpp	/^  unsigned Andn2Opc;$/;"	m	class:__anon5760078c0111::SIOptimizeExecMaskingPreRA	typeref:typename:unsigned	file:
Andn2TermOpc	SILowerControlFlow.cpp	/^  unsigned Andn2TermOpc;$/;"	m	class:__anon0ce7c3340111::SILowerControlFlow	typeref:typename:unsigned	file:
Any	Utils/RVGPUBaseInfo.h	/^  Any,$/;"	e	enum:llvm::RVGPU::IsaInfo::TargetIDSetting
AnyAddressSpace	RVGPURewriteOutArguments.cpp	/^static cl::opt<bool> AnyAddressSpace($/;"	v	typeref:typename:cl::opt<bool>	file:
ApplyRegBankMapping	RVGPURegisterBankInfo.cpp	/^  ApplyRegBankMapping(MachineIRBuilder &B, const RVGPURegisterBankInfo &RBI_,$/;"	f	class:__anon0a1a7df70111::ApplyRegBankMapping	file:
ApplyRegBankMapping	RVGPURegisterBankInfo.cpp	/^class ApplyRegBankMapping final : public GISelChangeObserver {$/;"	c	namespace:__anon0a1a7df70111	file:
ArgAllocaCost	RVGPUTargetTransformInfo.cpp	/^static cl::opt<unsigned> ArgAllocaCost("rvgpu-inline-arg-alloca-cost",$/;"	v	typeref:typename:cl::opt<unsigned>	file:
ArgAllocaCutoff	RVGPUTargetTransformInfo.cpp	/^    ArgAllocaCutoff("rvgpu-inline-arg-alloca-cutoff", cl::Hidden,$/;"	v	typeref:typename:cl::opt<unsigned>	file:
ArgCastInsertPt	RVGPUPromoteKernelArguments.cpp	/^  Instruction *ArgCastInsertPt;$/;"	m	class:__anon281388e70111::RVGPUPromoteKernelArguments	typeref:typename:Instruction *	file:
ArgDescriptor	RVGPUArgumentUsageInfo.h	/^  ArgDescriptor(unsigned Val = 0, unsigned Mask = ~0u, bool IsStack = false,$/;"	f	struct:llvm::ArgDescriptor
ArgDescriptor	RVGPUArgumentUsageInfo.h	/^struct ArgDescriptor {$/;"	s	namespace:llvm
ArgInfo	RVMachineFunctionInfo.h	/^  RVGPUFunctionArgInfo ArgInfo;$/;"	m	class:llvm::RVMachineFunctionInfo	typeref:typename:RVGPUFunctionArgInfo
ArgInfo	RVMachineFunctionInfo.h	/^  std::optional<SIArgumentInfo> ArgInfo;$/;"	m	struct:llvm::yaml::RVMachineFunctionInfo	typeref:typename:std::optional<SIArgumentInfo>
ArgInfoMap	RVGPUArgumentUsageInfo.h	/^  DenseMap<const Function *, RVGPUFunctionArgInfo> ArgInfoMap;$/;"	m	class:llvm::RVGPUArgumentUsageInfo	typeref:typename:DenseMap<const Function *,RVGPUFunctionArgInfo>
ArgType	RVGPULibFunc.h	/^    unsigned char ArgType = 0;$/;"	m	struct:llvm::RVGPULibFuncBase::Param	typeref:typename:unsigned char
AsmComments	RVInstrInfo.h	/^enum AsmComments {$/;"	g	namespace:llvm::RVGPU
AsmParser	AsmParser/RVGPUAsmParser.cpp	/^  const RVGPUAsmParser *AsmParser;$/;"	m	class:__anon672fa8550111::RVGPUOperand	typeref:typename:const RVGPUAsmParser *	file:
AsmSuffix	Utils/RVGPUBaseInfo.h	/^  const char *AsmSuffix;$/;"	m	struct:llvm::RVGPU::MIMGDimInfo	typeref:typename:const char *
AssumedStackSizeForDynamicSizeObjects	RVGPUResourceUsageAnalysis.cpp	/^static cl::opt<uint32_t> AssumedStackSizeForDynamicSizeObjects($/;"	v	typeref:typename:cl::opt<uint32_t>	file:
AssumedStackSizeForExternalCall	RVGPUResourceUsageAnalysis.cpp	/^static cl::opt<uint32_t> AssumedStackSizeForExternalCall($/;"	v	typeref:typename:cl::opt<uint32_t>	file:
Atomic	Utils/RVGPUBaseInfo.h	/^  bool Atomic;$/;"	m	struct:llvm::RVGPU::MIMGBaseOpcodeInfo	typeref:typename:bool
AtomicPseudoMIs	SIMemoryLegalizer.cpp	/^  std::list<MachineBasicBlock::iterator> AtomicPseudoMIs;$/;"	m	class:__anon46517b8a0111::SIMemoryLegalizer	typeref:typename:std::list<MachineBasicBlock::iterator>	file:
AtomicX2	Utils/RVGPUBaseInfo.h	/^  bool AtomicX2;$/;"	m	struct:llvm::RVGPU::MIMGBaseOpcodeInfo	typeref:typename:bool
AttrName	RVGPUAttributor.cpp	/^  StringRef AttrName;$/;"	m	struct:__anon512e119a0111::AARVSizeRangeAttribute	typeref:typename:StringRef	file:
AutoWaitcntBeforeBarrier	GCNSubtarget.h	/^  bool AutoWaitcntBeforeBarrier = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
AvailQueue	GCNILPSched.cpp	/^  Queue AvailQueue;$/;"	m	class:__anonbd2d93ba0111::GCNILPScheduler	typeref:typename:Queue	file:
B	RVGPURegisterBankInfo.cpp	/^  MachineIRBuilder &B;$/;"	m	class:__anon0a1a7df70111::ApplyRegBankMapping	typeref:typename:MachineIRBuilder &	file:
B16	RVGPULibFunc.h	/^    B16 = 2,$/;"	e	enum:llvm::RVGPULibFuncBase::EType
B32	RVGPULibFunc.h	/^    B32 = 3,$/;"	e	enum:llvm::RVGPULibFuncBase::EType
B64	RVGPULibFunc.h	/^    B64 = 4,$/;"	e	enum:llvm::RVGPULibFuncBase::EType
B8	RVGPULibFunc.h	/^    B8  = 1,$/;"	e	enum:llvm::RVGPULibFuncBase::EType
BASE_TYPE_MASK	RVGPULibFunc.h	/^    BASE_TYPE_MASK = 0x30,$/;"	e	enum:llvm::RVGPULibFuncBase::EType
BBLiveInMap	GCNSchedStrategy.h	/^  DenseMap<MachineInstr *, GCNRPTracker::LiveRegSet> BBLiveInMap;$/;"	m	class:llvm::GCNScheduleDAGMILive	typeref:typename:DenseMap<MachineInstr *,GCNRPTracker::LiveRegSet>
BBSelectRegIn	RVGPUMachineCFGStructurizer.cpp	/^  unsigned BBSelectRegIn;$/;"	m	class:__anon1695b1f50211::MRT	typeref:typename:unsigned	file:
BBSelectRegOut	RVGPUMachineCFGStructurizer.cpp	/^  unsigned BBSelectRegOut;$/;"	m	class:__anon1695b1f50211::MRT	typeref:typename:unsigned	file:
BC	SIMachineScheduler.h	/^  SIScheduleBlockCreator *BC;$/;"	m	class:llvm::SIScheduleBlock	typeref:typename:SIScheduleBlockCreator *
BCAST15	SIDefines.h	/^  BCAST15           = 0x142,$/;"	e	enum:llvm::RVGPU::DPP::DppCtrl
BCAST31	SIDefines.h	/^  BCAST31           = 0x143,$/;"	e	enum:llvm::RVGPU::DPP::DppCtrl
BEFORE	SIMemoryLegalizer.cpp	/^  BEFORE,$/;"	e	enum:__anon46517b8a0111::Position	file:
BFE_I32	RVGPUISelLowering.h	/^  BFE_I32,  \/\/ Extract range of bits with sign extension to 32-bits.$/;"	e	enum:llvm::RVGPUISD::NodeType
BFE_U32	RVGPUISelLowering.h	/^  BFE_U32,  \/\/ Extract range of bits with zero extension to 32-bits.$/;"	e	enum:llvm::RVGPUISD::NodeType
BFI	RVGPUISelLowering.h	/^  BFI,      \/\/ (src0 & src1) | (~src0 & src2)$/;"	e	enum:llvm::RVGPUISD::NodeType
BFM	RVGPUISelLowering.h	/^  BFM,      \/\/ Insert a range of bits into a 32-bit word.$/;"	e	enum:llvm::RVGPUISD::NodeType
BITMASK_AND_SHIFT	SIDefines.h	/^  BITMASK_AND_SHIFT     = 0,$/;"	e	enum:llvm::RVGPU::Swizzle::EncBits
BITMASK_MASK	SIDefines.h	/^  BITMASK_MASK          = 0x1F,$/;"	e	enum:llvm::RVGPU::Swizzle::EncBits
BITMASK_MAX	SIDefines.h	/^  BITMASK_MAX           = BITMASK_MASK,$/;"	e	enum:llvm::RVGPU::Swizzle::EncBits
BITMASK_OR_SHIFT	SIDefines.h	/^  BITMASK_OR_SHIFT      = 5,$/;"	e	enum:llvm::RVGPU::Swizzle::EncBits
BITMASK_PERM_ENC	SIDefines.h	/^  BITMASK_PERM_ENC      = 0x0000,$/;"	e	enum:llvm::RVGPU::Swizzle::EncBits
BITMASK_PERM_ENC_MASK	SIDefines.h	/^  BITMASK_PERM_ENC_MASK = 0x8000,$/;"	e	enum:llvm::RVGPU::Swizzle::EncBits
BITMASK_WIDTH	SIDefines.h	/^  BITMASK_WIDTH         = 5,$/;"	e	enum:llvm::RVGPU::Swizzle::EncBits
BITMASK_XOR_SHIFT	SIDefines.h	/^  BITMASK_XOR_SHIFT     = 10$/;"	e	enum:llvm::RVGPU::Swizzle::EncBits
BORROW	RVGPUISelLowering.h	/^  BORROW,$/;"	e	enum:llvm::RVGPUISD::NodeType
BRANCH_COND	RVGPUISelLowering.h	/^  BRANCH_COND,$/;"	e	enum:llvm::RVGPUISD::NodeType
BUCompareLatency	GCNILPSched.cpp	/^static int BUCompareLatency(const SUnit *left, const SUnit *right) {$/;"	f	typeref:typename:int	file:
BUFFER_ATOMIC_ADD	RVGPUISelLowering.h	/^  BUFFER_ATOMIC_ADD,$/;"	e	enum:llvm::RVGPUISD::NodeType
BUFFER_ATOMIC_AND	RVGPUISelLowering.h	/^  BUFFER_ATOMIC_AND,$/;"	e	enum:llvm::RVGPUISD::NodeType
BUFFER_ATOMIC_CMPSWAP	RVGPUISelLowering.h	/^  BUFFER_ATOMIC_CMPSWAP,$/;"	e	enum:llvm::RVGPUISD::NodeType
BUFFER_ATOMIC_CSUB	RVGPUISelLowering.h	/^  BUFFER_ATOMIC_CSUB,$/;"	e	enum:llvm::RVGPUISD::NodeType
BUFFER_ATOMIC_DEC	RVGPUISelLowering.h	/^  BUFFER_ATOMIC_DEC,$/;"	e	enum:llvm::RVGPUISD::NodeType
BUFFER_ATOMIC_FADD	RVGPUISelLowering.h	/^  BUFFER_ATOMIC_FADD,$/;"	e	enum:llvm::RVGPUISD::NodeType
BUFFER_ATOMIC_FMAX	RVGPUISelLowering.h	/^  BUFFER_ATOMIC_FMAX,$/;"	e	enum:llvm::RVGPUISD::NodeType
BUFFER_ATOMIC_FMIN	RVGPUISelLowering.h	/^  BUFFER_ATOMIC_FMIN,$/;"	e	enum:llvm::RVGPUISD::NodeType
BUFFER_ATOMIC_INC	RVGPUISelLowering.h	/^  BUFFER_ATOMIC_INC,$/;"	e	enum:llvm::RVGPUISD::NodeType
BUFFER_ATOMIC_OR	RVGPUISelLowering.h	/^  BUFFER_ATOMIC_OR,$/;"	e	enum:llvm::RVGPUISD::NodeType
BUFFER_ATOMIC_SMAX	RVGPUISelLowering.h	/^  BUFFER_ATOMIC_SMAX,$/;"	e	enum:llvm::RVGPUISD::NodeType
BUFFER_ATOMIC_SMIN	RVGPUISelLowering.h	/^  BUFFER_ATOMIC_SMIN,$/;"	e	enum:llvm::RVGPUISD::NodeType
BUFFER_ATOMIC_SUB	RVGPUISelLowering.h	/^  BUFFER_ATOMIC_SUB,$/;"	e	enum:llvm::RVGPUISD::NodeType
BUFFER_ATOMIC_SWAP	RVGPUISelLowering.h	/^  BUFFER_ATOMIC_SWAP,$/;"	e	enum:llvm::RVGPUISD::NodeType
BUFFER_ATOMIC_UMAX	RVGPUISelLowering.h	/^  BUFFER_ATOMIC_UMAX,$/;"	e	enum:llvm::RVGPUISD::NodeType
BUFFER_ATOMIC_UMIN	RVGPUISelLowering.h	/^  BUFFER_ATOMIC_UMIN,$/;"	e	enum:llvm::RVGPUISD::NodeType
BUFFER_ATOMIC_XOR	RVGPUISelLowering.h	/^  BUFFER_ATOMIC_XOR,$/;"	e	enum:llvm::RVGPUISD::NodeType
BUFFER_LOAD	RVGPUISelLowering.h	/^  BUFFER_LOAD,$/;"	e	enum:llvm::RVGPUISD::NodeType
BUFFER_LOAD	SILoadStoreOptimizer.cpp	/^  BUFFER_LOAD,$/;"	e	enum:__anon677101620111::InstClassEnum	file:
BUFFER_LOAD_BYTE	RVGPUISelLowering.h	/^  BUFFER_LOAD_BYTE,$/;"	e	enum:llvm::RVGPUISD::NodeType
BUFFER_LOAD_FORMAT	RVGPUISelLowering.h	/^  BUFFER_LOAD_FORMAT,$/;"	e	enum:llvm::RVGPUISD::NodeType
BUFFER_LOAD_FORMAT_D16	RVGPUISelLowering.h	/^  BUFFER_LOAD_FORMAT_D16,$/;"	e	enum:llvm::RVGPUISD::NodeType
BUFFER_LOAD_FORMAT_TFE	RVGPUISelLowering.h	/^  BUFFER_LOAD_FORMAT_TFE,$/;"	e	enum:llvm::RVGPUISD::NodeType
BUFFER_LOAD_SHORT	RVGPUISelLowering.h	/^  BUFFER_LOAD_SHORT,$/;"	e	enum:llvm::RVGPUISD::NodeType
BUFFER_LOAD_UBYTE	RVGPUISelLowering.h	/^  BUFFER_LOAD_UBYTE,$/;"	e	enum:llvm::RVGPUISD::NodeType
BUFFER_LOAD_USHORT	RVGPUISelLowering.h	/^  BUFFER_LOAD_USHORT,$/;"	e	enum:llvm::RVGPUISD::NodeType
BUFFER_STORE	RVGPUISelLowering.h	/^  BUFFER_STORE,$/;"	e	enum:llvm::RVGPUISD::NodeType
BUFFER_STORE	SILoadStoreOptimizer.cpp	/^  BUFFER_STORE,$/;"	e	enum:__anon677101620111::InstClassEnum	file:
BUFFER_STORE_BYTE	RVGPUISelLowering.h	/^  BUFFER_STORE_BYTE,$/;"	e	enum:llvm::RVGPUISD::NodeType
BUFFER_STORE_FORMAT	RVGPUISelLowering.h	/^  BUFFER_STORE_FORMAT,$/;"	e	enum:llvm::RVGPUISD::NodeType
BUFFER_STORE_FORMAT_D16	RVGPUISelLowering.h	/^  BUFFER_STORE_FORMAT_D16,$/;"	e	enum:llvm::RVGPUISD::NodeType
BUFFER_STORE_SHORT	RVGPUISelLowering.h	/^  BUFFER_STORE_SHORT,$/;"	e	enum:llvm::RVGPUISD::NodeType
BUILD_VERTICAL_VECTOR	RVGPUISelLowering.h	/^  BUILD_VERTICAL_VECTOR,$/;"	e	enum:llvm::RVGPUISD::NodeType
BVH	Utils/RVGPUBaseInfo.h	/^  bool BVH;$/;"	m	struct:llvm::RVGPU::MIMGBaseOpcodeInfo	typeref:typename:bool
BYTE_0	SIDefines.h	/^  BYTE_0 = 0,$/;"	e	enum:llvm::RVGPU::SDWA::SdwaSel
BYTE_1	SIDefines.h	/^  BYTE_1 = 1,$/;"	e	enum:llvm::RVGPU::SDWA::SdwaSel
BYTE_2	SIDefines.h	/^  BYTE_2 = 2,$/;"	e	enum:llvm::RVGPU::SDWA::SdwaSel
BYTE_3	SIDefines.h	/^  BYTE_3 = 3,$/;"	e	enum:llvm::RVGPU::SDWA::SdwaSel
BYVALUE	RVGPULibFunc.h	/^    BYVALUE = 0,$/;"	e	enum:llvm::RVGPULibFuncBase::EPtrKind
BackOffBarrier	GCNSubtarget.h	/^  bool BackOffBarrier = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
Barrier	SIDefines.h	/^namespace Barrier {$/;"	n	namespace:llvm::RVGPU
Base	RVGPUAttributor.cpp	/^  using Base = StateWrapper<BitIntegerState<uint32_t, ALL_ARGUMENT_MASK, 0>,$/;"	t	struct:__anon512e119a0111::AARVAttributes	typeref:typename:StateWrapper<BitIntegerState<uint32_t,ALL_ARGUMENT_MASK,0>,AbstractAttribute>	file:
Base	RVGPUAttributor.cpp	/^  using Base = StateWrapper<BooleanState, AbstractAttribute>;$/;"	t	struct:__anon512e119a0111::AAUniformWorkGroupSize	typeref:typename:StateWrapper<BooleanState,AbstractAttribute>	file:
Base	RVGPUAttributor.cpp	/^  using Base = StateWrapper<IntegerRangeState, AbstractAttribute, uint32_t>;$/;"	t	struct:__anon512e119a0111::AARVSizeRangeAttribute	typeref:typename:StateWrapper<IntegerRangeState,AbstractAttribute,uint32_t>	file:
Base	RVGPUPerfHintAnalysis.cpp	/^    const Value *Base = nullptr;$/;"	m	struct:__anon406ad74e0111::RVGPUPerfHint::MemAccessInfo	typeref:typename:const Value *	file:
Base	SILoadStoreOptimizer.cpp	/^    BaseRegisters Base;$/;"	m	struct:__anon677101620111::SILoadStoreOptimizer::MemAddress	typeref:typename:BaseRegisters	file:
BaseClass	GCNIterativeScheduler.h	/^  using BaseClass = ScheduleDAGMILive;$/;"	t	class:llvm::GCNIterativeScheduler	typeref:typename:ScheduleDAGMILive
BaseOff	SILoadStoreOptimizer.cpp	/^    unsigned BaseOff;$/;"	m	struct:__anon677101620111::SILoadStoreOptimizer::CombineInfo	typeref:typename:unsigned	file:
BaseOpcode	RVGPUInstrInfo.h	/^  unsigned BaseOpcode;$/;"	m	struct:llvm::RVGPU::ImageDimIntrinsicInfo	typeref:typename:unsigned
BaseOpcode	Utils/RVGPUBaseInfo.cpp	/^  uint16_t BaseOpcode;$/;"	m	struct:llvm::RVGPU::MTBUFInfo	typeref:typename:uint16_t	file:
BaseOpcode	Utils/RVGPUBaseInfo.cpp	/^  uint16_t BaseOpcode;$/;"	m	struct:llvm::RVGPU::MUBUFInfo	typeref:typename:uint16_t	file:
BaseOpcode	Utils/RVGPUBaseInfo.h	/^  MIMGBaseOpcode BaseOpcode;$/;"	m	struct:llvm::RVGPU::MIMGBaseOpcodeInfo	typeref:typename:MIMGBaseOpcode
BaseOpcode	Utils/RVGPUBaseInfo.h	/^  uint16_t BaseOpcode;$/;"	m	struct:llvm::RVGPU::MIMGInfo	typeref:typename:uint16_t
BaseOps	SIInsertHardClauses.cpp	/^    SmallVector<const MachineOperand *, 4> BaseOps;$/;"	m	struct:__anon09538a560111::SIInsertHardClauses::ClauseInfo	typeref:typename:SmallVector<const MachineOperand *,4>	file:
BaseRegisters	SILoadStoreOptimizer.cpp	/^  struct BaseRegisters {$/;"	s	class:__anon677101620111::SILoadStoreOptimizer	file:
BaseT	RVGPUTargetTransformInfo.h	/^  using BaseT = BasicTTIImplBase<GCNTTIImpl>;$/;"	t	class:llvm::GCNTTIImpl	typeref:typename:BasicTTIImplBase<GCNTTIImpl>
BaseT	RVGPUTargetTransformInfo.h	/^  using BaseT = BasicTTIImplBase<RVGPUTTIImpl>;$/;"	t	class:llvm::RVGPUTTIImpl	typeref:typename:BasicTTIImplBase<RVGPUTTIImpl>
BaseVOP	Utils/RVGPUBaseInfo.cpp	/^  uint16_t BaseVOP;$/;"	m	struct:llvm::RVGPU::VOPDComponentInfo	typeref:typename:uint16_t	file:
BasicBlockInfo	GCNPreRALongBranchReg.cpp	/^  struct BasicBlockInfo {$/;"	s	class:__anon4605b2240111::GCNPreRALongBranchReg	file:
Begin	GCNIterativeScheduler.h	/^    MachineBasicBlock::iterator Begin;$/;"	m	struct:llvm::GCNIterativeScheduler::Region	typeref:typename:MachineBasicBlock::iterator
BeginSyncGroupIdx	RVGPUIGroupLP.cpp	/^  int BeginSyncGroupIdx = 0;$/;"	m	class:__anon61b122dc0111::PipelineSolver	typeref:typename:int	file:
BestCost	RVGPUIGroupLP.cpp	/^  int BestCost = -1;$/;"	m	class:__anon61b122dc0111::PipelineSolver	typeref:typename:int	file:
BestPipeline	RVGPUIGroupLP.cpp	/^  SmallVector<SmallVector<SchedGroup, 4>, 4> BestPipeline;$/;"	m	class:__anon61b122dc0111::PipelineSolver	typeref:typename:SmallVector<SmallVector<SchedGroup,4>,4>	file:
BestSchedule	GCNIterativeScheduler.h	/^    std::unique_ptr<TentativeSchedule> BestSchedule;$/;"	m	struct:llvm::GCNIterativeScheduler::Region	typeref:typename:std::unique_ptr<TentativeSchedule>
Bias	Utils/RVGPUBaseInfo.h	/^  MIMGBaseOpcode Bias;$/;"	m	struct:llvm::RVGPU::MIMGBiasMappingInfo	typeref:typename:MIMGBaseOpcode
BiasIndex	RVGPUInstrInfo.h	/^  uint8_t BiasIndex;$/;"	m	struct:llvm::RVGPU::ImageDimIntrinsicInfo	typeref:typename:uint8_t
BiasTyArg	RVGPUInstrInfo.h	/^  uint8_t BiasTyArg;$/;"	m	struct:llvm::RVGPU::ImageDimIntrinsicInfo	typeref:typename:uint8_t
BitsPerComp	Utils/RVGPUBaseInfo.h	/^  unsigned BitsPerComp;$/;"	m	struct:llvm::RVGPU::GcnBufferFormatInfo	typeref:typename:unsigned
BlobType	Utils/RVGPUPALMetadata.h	/^  unsigned BlobType = 0;$/;"	m	class:llvm::RVGPUPALMetadata	typeref:typename:unsigned
Block	SILowerI1Copies.h	/^  MachineBasicBlock *Block;$/;"	m	struct:llvm::Incoming	typeref:typename:MachineBasicBlock *
Block	SIMachineScheduler.h	/^    SIScheduleBlock *Block = nullptr;$/;"	m	struct:llvm::SIScheduleBlockScheduler::SIBlockSchedCandidate	typeref:typename:SIScheduleBlock *
BlockCreator	SIMachineScheduler.h	/^  SIScheduleBlockCreator BlockCreator;$/;"	m	class:llvm::SIScheduler	typeref:typename:SIScheduleBlockCreator
BlockData	SIModeRegister.cpp	/^class BlockData {$/;"	c	file:
BlockInfo	SIInsertWaitcnts.cpp	/^  struct BlockInfo {$/;"	s	class:__anona6cbb7940211::SIInsertWaitcnts	file:
BlockInfo	SIModeRegister.cpp	/^  std::vector<std::unique_ptr<BlockData>> BlockInfo;$/;"	m	class:__anon070b45bc0111::SIModeRegister	typeref:typename:std::vector<std::unique_ptr<BlockData>>	file:
BlockInfo	SIWholeQuadMode.cpp	/^struct BlockInfo {$/;"	s	namespace:__anon41aff2810111	file:
BlockInfos	SIInsertWaitcnts.cpp	/^  MapVector<MachineBasicBlock *, BlockInfo> BlockInfos;$/;"	m	class:__anona6cbb7940211::SIInsertWaitcnts	typeref:typename:MapVector<MachineBasicBlock *,BlockInfo>	file:
BlockLatencyRegUsage	SIMachineScheduler.h	/^  BlockLatencyRegUsage,$/;"	e	enum:llvm::SISchedulerBlockSchedulerVariant
BlockNumPredsLeft	SIMachineScheduler.h	/^  std::vector<unsigned> BlockNumPredsLeft;$/;"	m	class:llvm::SIScheduleBlockScheduler	typeref:typename:std::vector<unsigned>
BlockNumSuccsLeft	SIMachineScheduler.h	/^  std::vector<unsigned> BlockNumSuccsLeft;$/;"	m	class:llvm::SIScheduleBlockScheduler	typeref:typename:std::vector<unsigned>
BlockPtrs	SIMachineScheduler.h	/^  std::vector<std::unique_ptr<SIScheduleBlock>> BlockPtrs;$/;"	m	class:llvm::SIScheduleBlockCreator	typeref:typename:std::vector<std::unique_ptr<SIScheduleBlock>>
BlockRegUsage	SIMachineScheduler.h	/^  BlockRegUsage$/;"	e	enum:llvm::SISchedulerBlockSchedulerVariant
BlockRegUsageLatency	SIMachineScheduler.h	/^  BlockRegUsageLatency,$/;"	e	enum:llvm::SISchedulerBlockSchedulerVariant
BlockState	RVGPUInsertDelayAlu.cpp	/^  DenseMap<MachineBasicBlock *, DelayState> BlockState;$/;"	m	class:__anonc7296b900111::RVGPUInsertDelayAlu	typeref:typename:DenseMap<MachineBasicBlock *,DelayState>	file:
Blocks	SIMachineScheduler.h	/^           SIScheduleBlocks> Blocks;$/;"	m	class:llvm::SIScheduleBlockCreator	typeref:typename:std::map<SISchedulerBlockCreatorVariant,SIScheduleBlocks>
Blocks	SIMachineScheduler.h	/^  std::vector<SIScheduleBlock*> Blocks;$/;"	m	class:llvm::SIScheduleBlockScheduler	typeref:typename:std::vector<SIScheduleBlock * >
Blocks	SIMachineScheduler.h	/^  std::vector<SIScheduleBlock*> Blocks;$/;"	m	struct:llvm::SIScheduleBlocks	typeref:typename:std::vector<SIScheduleBlock * >
Blocks	SIWholeQuadMode.cpp	/^  MapVector<MachineBasicBlock *, BlockInfo> Blocks;$/;"	m	class:__anon41aff2810111::SIWholeQuadMode	typeref:typename:MapVector<MachineBasicBlock *,BlockInfo>	file:
BlocksScheduled	SIMachineScheduler.h	/^  std::vector<SIScheduleBlock*> BlocksScheduled;$/;"	m	class:llvm::SIScheduleBlockScheduler	typeref:typename:std::vector<SIScheduleBlock * >
BoolFalse	SIAnnotateControlFlow.cpp	/^  ConstantInt *BoolFalse;$/;"	m	class:__anond71df4850111::SIAnnotateControlFlow	typeref:typename:ConstantInt *	file:
BoolRC	SILowerControlFlow.cpp	/^  const TargetRegisterClass *BoolRC = nullptr;$/;"	m	class:__anon0ce7c3340111::SILowerControlFlow	typeref:typename:const TargetRegisterClass *	file:
BoolTrue	SIAnnotateControlFlow.cpp	/^  ConstantInt *BoolTrue;$/;"	m	class:__anond71df4850111::SIAnnotateControlFlow	typeref:typename:ConstantInt *	file:
BoolUndef	SIAnnotateControlFlow.cpp	/^  UndefValue *BoolUndef;$/;"	m	class:__anond71df4850111::SIAnnotateControlFlow	typeref:typename:UndefValue *	file:
Boolean	SIAnnotateControlFlow.cpp	/^  Type *Boolean;$/;"	m	class:__anond71df4850111::SIAnnotateControlFlow	typeref:typename:Type *	file:
BotRoots	GCNIterativeScheduler.cpp	/^  SmallVector<SUnit*, 8> BotRoots;$/;"	m	class:GCNIterativeScheduler::BuildDAG	typeref:typename:SmallVector<SUnit *,8>	file:
BottomUpIndex2Block	SIMachineScheduler.h	/^  std::vector<int> BottomUpIndex2Block;$/;"	m	class:llvm::SIScheduleBlockCreator	typeref:typename:std::vector<int>
BottomUpIndex2SU	SIMachineScheduler.h	/^  std::vector<int> BottomUpIndex2SU;$/;"	m	class:llvm::SIScheduleDAGMI	typeref:typename:std::vector<int>
BranchOffsetBits	RVInstrInfo.cpp	/^BranchOffsetBits("rvgpu-s-branch-bits", cl::ReallyHidden, cl::init(16),$/;"	v	typeref:typename:cl::opt<unsigned>	file:
BranchPredicate	RVInstrInfo.h	/^  enum BranchPredicate {$/;"	g	class:llvm::RVInstrInfo
BranchesExplored	RVGPUIGroupLP.cpp	/^  uint64_t BranchesExplored = 0;$/;"	m	class:__anon61b122dc0111::PipelineSolver	typeref:typename:uint64_t	file:
BreakLargePHIs	RVGPUCodeGenPrepare.cpp	/^    BreakLargePHIs("rvgpu-codegenprepare-break-large-phis",$/;"	v	namespace:__anond35e324e0111	typeref:typename:cl::opt<bool>	file:
BreakLargePHIsThreshold	RVGPUCodeGenPrepare.cpp	/^static cl::opt<unsigned> BreakLargePHIsThreshold($/;"	v	namespace:__anond35e324e0111	typeref:typename:cl::opt<unsigned>	file:
BreakPhiNodesCache	RVGPUCodeGenPrepare.cpp	/^  DenseMap<const PHINode *, bool> BreakPhiNodesCache;$/;"	m	class:__anond35e324e0111::RVGPUCodeGenPrepareImpl	typeref:typename:DenseMap<const PHINode *,bool>	file:
BubbleCycles	GCNSchedStrategy.h	/^  unsigned BubbleCycles;$/;"	m	class:llvm::ScheduleMetrics	typeref:typename:unsigned
BuildDAG	GCNIterativeScheduler.cpp	/^  BuildDAG(const Region &R, GCNIterativeScheduler &_Sch)$/;"	f	class:GCNIterativeScheduler::BuildDAG	file:
BuildDAG	GCNIterativeScheduler.cpp	/^class GCNIterativeScheduler::BuildDAG {$/;"	c	class:GCNIterativeScheduler	file:
BuildSetprioMI	RVGPUSetWavePriority.cpp	/^RVGPUSetWavePriority::BuildSetprioMI(MachineBasicBlock &MBB,$/;"	f	class:RVGPUSetWavePriority	typeref:typename:MachineInstr *
Bytes	Disassembler/RVGPUDisassembler.h	/^  mutable ArrayRef<uint8_t> Bytes;$/;"	m	class:llvm::RVGPUDisassembler	typeref:typename:ArrayRef<uint8_t>
BytesInStackArgArea	RVMachineFunctionInfo.h	/^  unsigned BytesInStackArgArea = 0;$/;"	m	class:llvm::RVMachineFunctionInfo	typeref:typename:unsigned
BytesInStackArgArea	RVMachineFunctionInfo.h	/^  unsigned BytesInStackArgArea = 0;$/;"	m	struct:llvm::yaml::RVMachineFunctionInfo	typeref:typename:unsigned
CALL	RVGPUISelLowering.h	/^  CALL,$/;"	e	enum:llvm::RVGPUISD::NodeType
CARRY	RVGPUISelLowering.h	/^  CARRY,$/;"	e	enum:llvm::RVGPUISD::NodeType
CASE_CI_VI	Utils/RVGPUBaseInfo.cpp	/^#define CASE_CI_VI(/;"	d	file:
CASE_GFXPRE11_GFX11PLUS	Utils/RVGPUBaseInfo.cpp	/^#define CASE_GFXPRE11_GFX11PLUS(/;"	d	file:
CASE_GFXPRE11_GFX11PLUS_TO	Utils/RVGPUBaseInfo.cpp	/^#define CASE_GFXPRE11_GFX11PLUS_TO(/;"	d	file:
CASE_VI_GFX9PLUS	Utils/RVGPUBaseInfo.cpp	/^#define CASE_VI_GFX9PLUS(/;"	d	file:
CC	SIMemoryLegalizer.cpp	/^  std::unique_ptr<SICacheControl> CC = nullptr;$/;"	m	class:__anon46517b8a0111::SIMemoryLegalizer	typeref:typename:std::unique_ptr<SICacheControl>	file:
CCAssignFnForCall	RVGPUISelLowering.cpp	/^CCAssignFn *RVGPUCallLowering::CCAssignFnForCall(CallingConv::ID CC,$/;"	f	class:RVGPUCallLowering	typeref:typename:CCAssignFn *
CCAssignFnForCall	RVGPUISelLowering.cpp	/^CCAssignFn *RVGPUTargetLowering::CCAssignFnForCall(CallingConv::ID CC,$/;"	f	class:RVGPUTargetLowering	typeref:typename:CCAssignFn *
CCAssignFnForReturn	RVGPUISelLowering.cpp	/^CCAssignFn *RVGPUCallLowering::CCAssignFnForReturn(CallingConv::ID CC,$/;"	f	class:RVGPUCallLowering	typeref:typename:CCAssignFn *
CCAssignFnForReturn	RVGPUISelLowering.cpp	/^CCAssignFn *RVGPUTargetLowering::CCAssignFnForReturn(CallingConv::ID CC,$/;"	f	class:RVGPUTargetLowering	typeref:typename:CCAssignFn *
CIInsts	GCNSubtarget.h	/^  bool CIInsts = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
CLAMP	RVGPUISelLowering.h	/^  CLAMP,$/;"	e	enum:llvm::RVGPUISD::NodeType
CODEPROP	Utils/RVKernelCodeTInfo.h	/^#define CODEPROP(/;"	d
COMPLETION_ACTION_OFFSET	SIDefines.h	/^  COMPLETION_ACTION_OFFSET = 112,$/;"	e	enum:llvm::RVGPU::ImplicitArg::Offset_COV5
COMPONENTS	Utils/RVGPUBaseInfo.h	/^constexpr unsigned COMPONENTS[] = {ComponentIndex::X, ComponentIndex::Y};$/;"	v	namespace:llvm::RVGPU::VOPD	typeref:typename:unsigned[]
COMPONENTS_NUM	Utils/RVGPUBaseInfo.h	/^constexpr unsigned COMPONENTS_NUM = 2;$/;"	v	namespace:llvm::RVGPU::VOPD	typeref:typename:unsigned
COMPONENT_X	Utils/RVGPUBaseInfo.h	/^  COMPONENT_X, \/\/ A VOPD instruction, X component.$/;"	e	enum:llvm::RVGPU::VOPD::ComponentKind
COMPONENT_Y	Utils/RVGPUBaseInfo.h	/^  COMPONENT_Y, \/\/ A VOPD instruction, Y component.$/;"	e	enum:llvm::RVGPU::VOPD::ComponentKind
COMPPGM	Utils/RVKernelCodeTInfo.h	/^#define COMPPGM(/;"	d
COMPPGM1	Utils/RVKernelCodeTInfo.h	/^#define COMPPGM1(/;"	d
COMPPGM2	Utils/RVKernelCodeTInfo.h	/^#define COMPPGM2(/;"	d
CONST	RVGPULibFunc.h	/^    CONST      = 0x10,$/;"	e	enum:llvm::RVGPULibFuncBase::EPtrKind
CONST_ADDRESS	RVGPUISelLowering.h	/^  CONST_ADDRESS,$/;"	e	enum:llvm::RVGPUISD::NodeType
CONST_DATA_PTR	RVGPUISelLowering.h	/^  CONST_DATA_PTR,$/;"	e	enum:llvm::RVGPUISD::NodeType
CONTIGUOUS	GCNNSAReassign.cpp	/^    CONTIGUOUS      \/\/ NSA with all sequential address registers$/;"	e	enum:__anon7e838c8c0111::GCNNSAReassign::__anon7e838c8c0203	file:
COPY_TO_SCRATCH_SGPR	RVMachineFunctionInfo.h	/^  COPY_TO_SCRATCH_SGPR,$/;"	e	enum:llvm::SGPRSaveKind
COS_HW	RVGPUISelLowering.h	/^  COS_HW,$/;"	e	enum:llvm::RVGPUISD::NodeType
CPol	SIDefines.h	/^enum CPol {$/;"	g	namespace:llvm::RVGPU::CPol
CPol	SIDefines.h	/^namespace CPol {$/;"	n	namespace:llvm::RVGPU
CPol	SILoadStoreOptimizer.cpp	/^    unsigned CPol = 0;$/;"	m	struct:__anon677101620111::SILoadStoreOptimizer::CombineInfo	typeref:typename:unsigned	file:
CSP_MASK	SIDefines.h	/^  CSP_MASK = 0x7u << 29 \/\/ Bits 29..31$/;"	e	enum:llvm::RVGPU::Hwreg::ModeRegisterMasks
CSRegs	GCNNSAReassign.cpp	/^  const MCPhysReg *CSRegs;$/;"	m	class:__anon7e838c8c0111::GCNNSAReassign	typeref:typename:const MCPhysReg *	file:
CVT_F32_UBYTE0	RVGPUISelLowering.h	/^  CVT_F32_UBYTE0,$/;"	e	enum:llvm::RVGPUISD::NodeType
CVT_F32_UBYTE1	RVGPUISelLowering.h	/^  CVT_F32_UBYTE1,$/;"	e	enum:llvm::RVGPUISD::NodeType
CVT_F32_UBYTE2	RVGPUISelLowering.h	/^  CVT_F32_UBYTE2,$/;"	e	enum:llvm::RVGPUISD::NodeType
CVT_F32_UBYTE3	RVGPUISelLowering.h	/^  CVT_F32_UBYTE3,$/;"	e	enum:llvm::RVGPUISD::NodeType
CVT_PKNORM_I16_F32	RVGPUISelLowering.h	/^  CVT_PKNORM_I16_F32,$/;"	e	enum:llvm::RVGPUISD::NodeType
CVT_PKNORM_U16_F32	RVGPUISelLowering.h	/^  CVT_PKNORM_U16_F32,$/;"	e	enum:llvm::RVGPUISD::NodeType
CVT_PKRTZ_F16_F32	RVGPUISelLowering.h	/^  CVT_PKRTZ_F16_F32,$/;"	e	enum:llvm::RVGPUISD::NodeType
CVT_PK_I16_I32	RVGPUISelLowering.h	/^  CVT_PK_I16_I32,$/;"	e	enum:llvm::RVGPUISD::NodeType
CVT_PK_U16_U32	RVGPUISelLowering.h	/^  CVT_PK_U16_U32,$/;"	e	enum:llvm::RVGPUISD::NodeType
C_00B028_MEM_ORDERED	SIDefines.h	/^#define   C_00B028_MEM_ORDERED /;"	d
C_00B128_MEM_ORDERED	SIDefines.h	/^#define   C_00B128_MEM_ORDERED /;"	d
C_00B228_MEM_ORDERED	SIDefines.h	/^#define   C_00B228_MEM_ORDERED /;"	d
C_00B228_WGP_MODE	SIDefines.h	/^#define   C_00B228_WGP_MODE /;"	d
C_00B428_MEM_ORDERED	SIDefines.h	/^#define   C_00B428_MEM_ORDERED /;"	d
C_00B428_WGP_MODE	SIDefines.h	/^#define   C_00B428_WGP_MODE /;"	d
C_00B848_DEBUG_MODE	SIDefines.h	/^#define   C_00B848_DEBUG_MODE /;"	d
C_00B848_DX10_CLAMP	SIDefines.h	/^#define   C_00B848_DX10_CLAMP /;"	d
C_00B848_FLOAT_MODE	SIDefines.h	/^#define   C_00B848_FLOAT_MODE /;"	d
C_00B848_FWD_PROGRESS	SIDefines.h	/^#define   C_00B848_FWD_PROGRESS /;"	d
C_00B848_IEEE_MODE	SIDefines.h	/^#define   C_00B848_IEEE_MODE /;"	d
C_00B848_MEM_ORDERED	SIDefines.h	/^#define   C_00B848_MEM_ORDERED /;"	d
C_00B848_PRIORITY	SIDefines.h	/^#define   C_00B848_PRIORITY /;"	d
C_00B848_PRIV	SIDefines.h	/^#define   C_00B848_PRIV /;"	d
C_00B848_RR_WG_MODE	SIDefines.h	/^#define   C_00B848_RR_WG_MODE /;"	d
C_00B848_SGPRS	SIDefines.h	/^#define   C_00B848_SGPRS /;"	d
C_00B848_VGPRS	SIDefines.h	/^#define   C_00B848_VGPRS /;"	d
C_00B848_WGP_MODE	SIDefines.h	/^#define   C_00B848_WGP_MODE /;"	d
C_00B84C_EXCP_EN	SIDefines.h	/^#define   C_00B84C_EXCP_EN$/;"	d
C_00B84C_EXCP_EN_MSB	SIDefines.h	/^#define   C_00B84C_EXCP_EN_MSB /;"	d
C_00B84C_LDS_SIZE	SIDefines.h	/^#define   C_00B84C_LDS_SIZE /;"	d
C_00B84C_SCRATCH_EN	SIDefines.h	/^#define   C_00B84C_SCRATCH_EN /;"	d
C_00B84C_TGID_X_EN	SIDefines.h	/^#define   C_00B84C_TGID_X_EN /;"	d
C_00B84C_TGID_Y_EN	SIDefines.h	/^#define   C_00B84C_TGID_Y_EN /;"	d
C_00B84C_TGID_Z_EN	SIDefines.h	/^#define   C_00B84C_TGID_Z_EN /;"	d
C_00B84C_TG_SIZE_EN	SIDefines.h	/^#define   C_00B84C_TG_SIZE_EN /;"	d
C_00B84C_TIDIG_COMP_CNT	SIDefines.h	/^#define   C_00B84C_TIDIG_COMP_CNT /;"	d
C_00B84C_TRAP_HANDLER	SIDefines.h	/^#define   C_00B84C_TRAP_HANDLER /;"	d
C_00B84C_USER_SGPR	SIDefines.h	/^#define   C_00B84C_USER_SGPR /;"	d
Cache	RVGPUIGroupLP.cpp	/^  std::optional<SmallVector<SUnit *, 4>> Cache;$/;"	m	class:__anon61b122dc0111::InstructionRule	typeref:typename:std::optional<SmallVector<SUnit *,4>>	file:
CachePolicyIndex	RVGPUInstrInfo.h	/^  uint8_t CachePolicyIndex;$/;"	m	struct:llvm::RVGPU::ImageDimIntrinsicInfo	typeref:typename:uint8_t
CalcNodeSethiUllmanNumber	GCNILPSched.cpp	/^CalcNodeSethiUllmanNumber(const SUnit *SU, std::vector<unsigned> &SUNumbers) {$/;"	f	typeref:typename:unsigned	file:
CallGraphResourceInfo	RVGPUResourceUsageAnalysis.h	/^  DenseMap<const Function *, SIFunctionResourceInfo> CallGraphResourceInfo;$/;"	m	struct:llvm::RVGPUResourceUsageAnalysis	typeref:typename:DenseMap<const Function *,SIFunctionResourceInfo>
CallLoweringInfo	GCNSubtarget.h	/^  std::unique_ptr<RVGPUCallLowering> CallLoweringInfo;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:std::unique_ptr<RVGPUCallLowering>
CallReturnHandler	RVGPUCallLowering.cpp	/^  CallReturnHandler(MachineIRBuilder &MIRBuilder, MachineRegisterInfo &MRI,$/;"	f	struct:__anonad2fb0ad0111::CallReturnHandler	file:
CallReturnHandler	RVGPUCallLowering.cpp	/^struct CallReturnHandler : public RVGPUIncomingArgHandler {$/;"	s	namespace:__anonad2fb0ad0111	file:
CanBeVOPD	Utils/RVGPUBaseInfo.h	/^struct CanBeVOPD {$/;"	s	namespace:llvm::RVGPU
CanBeVOPDX	Utils/RVGPUBaseInfo.cpp	/^  bool CanBeVOPDX;$/;"	m	struct:llvm::RVGPU::VOPDComponentInfo	typeref:typename:bool	file:
CanLowerPriorityDirectlyInPredecessors	RVGPUSetWavePriority.cpp	/^static bool CanLowerPriorityDirectlyInPredecessors(const MachineBasicBlock &MBB,$/;"	f	typeref:typename:bool	file:
CanLowerReturn	RVISelLowering.cpp	/^bool RVTargetLowering::CanLowerReturn($/;"	f	class:RVTargetLowering	typeref:typename:bool
Candidate	GCNILPSched.cpp	/^    Candidate(SUnit *SU_)$/;"	f	struct:__anonbd2d93ba0111::GCNILPScheduler::Candidate	file:
Candidate	GCNILPSched.cpp	/^  struct Candidate : ilist_node<Candidate> {$/;"	s	class:__anonbd2d93ba0111::GCNILPScheduler	file:
Candidate	GCNMinRegStrategy.cpp	/^    Candidate(const SUnit *SU_, int Priority_ = 0)$/;"	f	struct:__anon807286a30111::GCNMinRegScheduler::Candidate	file:
Candidate	GCNMinRegStrategy.cpp	/^  struct Candidate : ilist_node<Candidate> {$/;"	s	class:__anon807286a30111::GCNMinRegScheduler	file:
Candidate	GCNNSAReassign.cpp	/^  using Candidate = std::pair<const MachineInstr*, bool>;$/;"	t	function:GCNNSAReassign::runOnMachineFunction	typeref:typename:std::pair<const MachineInstr *,bool>	file:
CandidateTy	RVGPULowerModuleLDSPass.cpp	/^      CandidateTy(GlobalVariable *GV, uint64_t UserCount, uint64_t AllocSize)$/;"	f	struct:__anoncc7483b30111::RVGPULowerModuleLDS::chooseBestVariableForModuleStrategy::CandidateTy	file:
CandidateTy	RVGPULowerModuleLDSPass.cpp	/^    struct CandidateTy {$/;"	s	function:__anoncc7483b30111::RVGPULowerModuleLDS::chooseBestVariableForModuleStrategy	file:
Carry	RVGPULegalizerInfo.cpp	/^  using Carry = SmallVector<Register, 2>;$/;"	t	function:RVGPULegalizerInfo::buildMultiply	typeref:typename:SmallVector<Register,2>	file:
Change	SIModeRegister.cpp	/^  Status Change;$/;"	m	class:BlockData	typeref:typename:Status	file:
Changed	RVGPUAnnotateUniformValues.cpp	/^  bool Changed;$/;"	m	class:__anon9c77d1d40111::RVGPUAnnotateUniformValues	typeref:typename:bool	file:
Changed	SIModeRegister.cpp	/^  bool Changed = false;$/;"	m	class:__anon070b45bc0111::SIModeRegister	typeref:typename:bool	file:
CheckNSA	GCNNSAReassign.cpp	/^GCNNSAReassign::CheckNSA(const MachineInstr &MI, bool Fast) const {$/;"	f	class:GCNNSAReassign	typeref:typename:GCNNSAReassign::NSA_Status
CheckRetType	SIPeepholeSDWA.cpp	/^    using CheckRetType =$/;"	t	function:SIPeepholeSDWA::matchSDWAOperand	typeref:typename:std::optional<std::pair<MachineOperand *,MachineOperand * >>	file:
Children	RVGPUMachineCFGStructurizer.cpp	/^  SetVector<MRT *> Children;$/;"	m	class:__anon1695b1f50211::RegionMRT	typeref:typename:SetVector<MRT * >	file:
ClampHi	SIDefines.h	/^  ClampHi = UINT64_C(1) << 48,$/;"	e	enum:llvm::SIInstrFlags::__anon1f24a7950203
ClampI64ToI16MatchInfo	RVGPUPreLegalizerCombiner.cpp	/^  struct ClampI64ToI16MatchInfo {$/;"	s	class:__anonb779c2ff0111::RVGPUPreLegalizerCombinerImpl	file:
ClampLo	SIDefines.h	/^  ClampLo = UINT64_C(1) << 47,$/;"	e	enum:llvm::SIInstrFlags::__anon1f24a7950203
ClassFlags	SIDefines.h	/^enum ClassFlags : unsigned {$/;"	g	namespace:llvm::SIInstrFlags	typeref:typename:unsigned
ClauseDefs	GCNHazardRecognizer.h	/^  BitVector ClauseDefs;$/;"	m	class:llvm::GCNHazardRecognizer	typeref:typename:BitVector
ClauseInfo	SIInsertHardClauses.cpp	/^  struct ClauseInfo {$/;"	s	class:__anon09538a560111::SIInsertHardClauses	file:
ClauseUses	GCNHazardRecognizer.h	/^  BitVector ClauseUses;$/;"	m	class:llvm::GCNHazardRecognizer	typeref:typename:BitVector
ClusteredLowOccStage	GCNSchedStrategy.h	/^  ClusteredLowOccStage(GCNSchedStageID StageID, GCNScheduleDAGMILive &DAG)$/;"	f	class:llvm::ClusteredLowOccStage
ClusteredLowOccStage	GCNSchedStrategy.h	/^class ClusteredLowOccStage : public GCNSchedStage {$/;"	c	namespace:llvm
ClusteredLowOccupancyReschedule	GCNSchedStrategy.h	/^  ClusteredLowOccupancyReschedule = 2,$/;"	e	enum:llvm::GCNSchedStageID
Cmp1	RVGPUPreLegalizerCombiner.cpp	/^    int64_t Cmp1 = 0;$/;"	m	struct:__anonb779c2ff0111::RVGPUPreLegalizerCombinerImpl::ClampI64ToI16MatchInfo	typeref:typename:int64_t	file:
Cmp2	RVGPUPreLegalizerCombiner.cpp	/^    int64_t Cmp2 = 0;$/;"	m	struct:__anonb779c2ff0111::RVGPUPreLegalizerCombinerImpl::ClampI64ToI16MatchInfo	typeref:typename:int64_t	file:
CodeObjectVersion	RVGPUAsmPrinter.h	/^  unsigned CodeObjectVersion;$/;"	m	class:llvm::RVGPUAsmPrinter	typeref:typename:unsigned
CodeObjectVersion	RVGPUAttributor.cpp	/^  const unsigned CodeObjectVersion;$/;"	m	class:__anon512e119a0111::RVGPUInformationCache	typeref:typename:const unsigned	file:
CodeObjectVersion	Utils/RVGPUBaseInfo.h	/^  unsigned CodeObjectVersion;$/;"	m	class:llvm::RVGPU::IsaInfo::RVGPUTargetID	typeref:typename:unsigned
Collection	RVGPUIGroupLP.cpp	/^  SmallVector<SUnit *, 32> Collection;$/;"	m	class:__anon61b122dc0111::SchedGroup	typeref:typename:SmallVector<SUnit *,32>	file:
CombineInfo	SILoadStoreOptimizer.cpp	/^  struct CombineInfo {$/;"	s	class:__anon677101620111::SILoadStoreOptimizer	file:
CommonDominators	SILowerI1Copies.cpp	/^  SmallVector<MachineBasicBlock *, 4> CommonDominators;$/;"	m	class:__anone16a92980111::LoopFinder	typeref:typename:SmallVector<MachineBasicBlock *,4>	file:
CommonTTI	RVGPUTargetTransformInfo.h	/^  RVGPUTTIImpl CommonTTI;$/;"	m	class:llvm::GCNTTIImpl	typeref:typename:RVGPUTTIImpl
Commuted	SIFoldOperands.cpp	/^  bool Commuted;$/;"	m	struct:__anon07e514130111::FoldCandidate	typeref:typename:bool	file:
CompInfo	Utils/RVGPUBaseInfo.h	/^  const ComponentInfo CompInfo[COMPONENTS_NUM];$/;"	m	class:llvm::RVGPU::VOPD::InstInfo	typeref:typename:const ComponentInfo[]
CompilerOptions	RVGPUUnifyMetadata.cpp	/^    const char CompilerOptions[]    = "opencl.compiler.options";$/;"	v	namespace:__anon26dde6960111::kOCLMD	typeref:typename:const char[]
Component	Utils/RVGPUBaseInfo.h	/^enum Component : unsigned {$/;"	g	namespace:llvm::RVGPU::VOPD	typeref:typename:unsigned
ComponentIndex	Utils/RVGPUBaseInfo.h	/^enum ComponentIndex : unsigned { X = 0, Y = 1 };$/;"	g	namespace:llvm::RVGPU::VOPD	typeref:typename:unsigned
ComponentInfo	Utils/RVGPUBaseInfo.h	/^  ComponentInfo(const MCInstrDesc &OpDesc, const ComponentProps &OpXProps)$/;"	f	class:llvm::RVGPU::VOPD::ComponentInfo
ComponentInfo	Utils/RVGPUBaseInfo.h	/^  ComponentInfo(const MCInstrDesc &OpDesc,$/;"	f	class:llvm::RVGPU::VOPD::ComponentInfo
ComponentInfo	Utils/RVGPUBaseInfo.h	/^class ComponentInfo : public ComponentLayout, public ComponentProps {$/;"	c	namespace:llvm::RVGPU::VOPD
ComponentKind	Utils/RVGPUBaseInfo.h	/^enum ComponentKind : unsigned {$/;"	g	namespace:llvm::RVGPU::VOPD	typeref:typename:unsigned
ComponentLayout	Utils/RVGPUBaseInfo.h	/^  ComponentLayout(ComponentKind Kind) : Kind(Kind) {$/;"	f	class:llvm::RVGPU::VOPD::ComponentLayout
ComponentLayout	Utils/RVGPUBaseInfo.h	/^  ComponentLayout(const ComponentProps &OpXProps)$/;"	f	class:llvm::RVGPU::VOPD::ComponentLayout
ComponentLayout	Utils/RVGPUBaseInfo.h	/^class ComponentLayout {$/;"	c	namespace:llvm::RVGPU::VOPD
ComponentProps	Utils/RVGPUBaseInfo.cpp	/^ComponentProps::ComponentProps(const MCInstrDesc &OpDesc) {$/;"	f	class:llvm::RVGPU::VOPD::ComponentProps
ComponentProps	Utils/RVGPUBaseInfo.h	/^class ComponentProps {$/;"	c	namespace:llvm::RVGPU::VOPD
ComputeNumSignBitsForTargetNode	RVGPUISelLowering.cpp	/^unsigned RVGPUTargetLowering::ComputeNumSignBitsForTargetNode($/;"	f	class:RVGPUTargetLowering	typeref:typename:unsigned
ComputePGMRSrc3GFX90A	SIProgramInfo.h	/^    uint64_t ComputePGMRSrc3GFX90A = 0;$/;"	m	struct:llvm::SIProgramInfo	typeref:typename:uint64_t
ComputeRegisters	Utils/RVGPUPALMetadata.h	/^  msgpack::DocNode ComputeRegisters;$/;"	m	class:llvm::RVGPUPALMetadata	typeref:typename:msgpack::DocNode
Cond	Utils/RVGPUAsmUtils.h	/^  bool (*Cond)(T Context) = nullptr;$/;"	m	struct:llvm::RVGPU::CustomOperand	typeref:typename:bool (*)(T Context)
Cond	Utils/RVGPUAsmUtils.h	/^  bool (*Cond)(const MCSubtargetInfo &STI) = nullptr;$/;"	m	struct:llvm::RVGPU::CustomOperandVal	typeref:typename:bool (*)(const MCSubtargetInfo & STI)
CondReg	SIOptimizeExecMaskingPreRA.cpp	/^  MCRegister CondReg;$/;"	m	class:__anon5760078c0111::SIOptimizeExecMaskingPreRA	typeref:typename:MCRegister	file:
ConstantStatus	RVGPUAttributor.cpp	/^  DenseMap<const Constant *, uint8_t> ConstantStatus;$/;"	m	class:__anon512e119a0111::RVGPUInformationCache	typeref:typename:DenseMap<const Constant *,uint8_t>	file:
ConstantStatus	RVGPUAttributor.cpp	/^  enum ConstantStatus { DS_GLOBAL = 1 << 0, ADDR_SPACE_CAST = 1 << 1 };$/;"	g	class:__anon512e119a0111::RVGPUInformationCache	file:
ConstrainRegs	SILowerI1Copies.cpp	/^  DenseSet<Register> ConstrainRegs;$/;"	m	class:__anone16a92980111::Vreg1LoweringHelper	typeref:typename:DenseSet<Register>	file:
Context	GCNIterativeScheduler.h	/^  MachineSchedContext *Context;$/;"	m	class:llvm::GCNIterativeScheduler	typeref:typename:MachineSchedContext *
ConvertOmodDiv	AsmParser/RVGPUAsmParser.cpp	/^static bool ConvertOmodDiv(int64_t &Div) {$/;"	f	typeref:typename:bool	file:
ConvertOmodMul	AsmParser/RVGPUAsmParser.cpp	/^static bool ConvertOmodMul(int64_t &Mul) {$/;"	f	typeref:typename:bool	file:
ConvertedInstructions	SIPeepholeSDWA.cpp	/^  SmallVector<MachineInstr *, 8> ConvertedInstructions;$/;"	m	class:__anon00bd52b30111::SIPeepholeSDWA	typeref:typename:SmallVector<MachineInstr *,8>	file:
CoordStart	RVGPUInstrInfo.h	/^  uint8_t CoordStart;$/;"	m	struct:llvm::RVGPU::ImageDimIntrinsicInfo	typeref:typename:uint8_t
CoordTyArg	RVGPUInstrInfo.h	/^  uint8_t CoordTyArg;$/;"	m	struct:llvm::RVGPU::ImageDimIntrinsicInfo	typeref:typename:uint8_t
Coordinates	Utils/RVGPUBaseInfo.h	/^  bool Coordinates;$/;"	m	struct:llvm::RVGPU::MIMGBaseOpcodeInfo	typeref:typename:bool
Copy	SIFixSGPRCopies.cpp	/^  MachineInstr *Copy;$/;"	m	class:__anond27816180111::V2SCopyInfo	typeref:typename:MachineInstr *	file:
Cost	RVGPURegisterBankInfo.h	/^    int16_t Cost;$/;"	m	struct:llvm::RVGPURegisterBankInfo::OpRegBankEntry	typeref:typename:int16_t
CreateCallEx	RVGPULibCalls.cpp	/^static CallInst *CreateCallEx(IRB &B, FunctionCallee Callee, Value *Arg,$/;"	f	typeref:typename:CallInst *	file:
CreateCallEx2	RVGPULibCalls.cpp	/^static CallInst *CreateCallEx2(IRB &B, FunctionCallee Callee, Value *Arg1,$/;"	f	typeref:typename:CallInst *	file:
CreateExpr	AsmParser/RVGPUAsmParser.cpp	/^  static RVGPUOperand::Ptr CreateExpr(const RVGPUAsmParser *AsmParser,$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:RVGPUOperand::Ptr	file:
CreateImm	AsmParser/RVGPUAsmParser.cpp	/^  static RVGPUOperand::Ptr CreateImm(const RVGPUAsmParser *AsmParser,$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:RVGPUOperand::Ptr	file:
CreateLiveInRegister	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::CreateLiveInRegister(SelectionDAG &DAG,$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
CreateLiveInRegister	RVGPUISelLowering.h	/^  SDValue CreateLiveInRegister(SelectionDAG &DAG,$/;"	f	class:llvm::RVGPUTargetLowering	typeref:typename:SDValue
CreateLiveInRegisterRaw	RVGPUISelLowering.h	/^  SDValue CreateLiveInRegisterRaw(SelectionDAG &DAG,$/;"	f	class:llvm::RVGPUTargetLowering	typeref:typename:SDValue
CreateReg	AsmParser/RVGPUAsmParser.cpp	/^  static RVGPUOperand::Ptr CreateReg(const RVGPUAsmParser *AsmParser,$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:RVGPUOperand::Ptr	file:
CreateTargetMIHazardRecognizer	RVInstrInfo.cpp	/^RVInstrInfo::CreateTargetMIHazardRecognizer(const InstrItineraryData *II,$/;"	f	class:RVInstrInfo	typeref:typename:ScheduleHazardRecognizer *
CreateTargetPostRAHazardRecognizer	RVInstrInfo.cpp	/^RVInstrInfo::CreateTargetPostRAHazardRecognizer(const InstrItineraryData *II,$/;"	f	class:RVInstrInfo	typeref:typename:ScheduleHazardRecognizer *
CreateTargetPostRAHazardRecognizer	RVInstrInfo.cpp	/^RVInstrInfo::CreateTargetPostRAHazardRecognizer(const MachineFunction &MF) const {$/;"	f	class:RVInstrInfo	typeref:typename:ScheduleHazardRecognizer *
CreateToken	AsmParser/RVGPUAsmParser.cpp	/^  static RVGPUOperand::Ptr CreateToken(const RVGPUAsmParser *AsmParser,$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:RVGPUOperand::Ptr	file:
Ctrl	AsmParser/RVGPUAsmParser.cpp	/^    int64_t Ctrl;$/;"	m	struct:RVGPUAsmParser::parseDPPCtrlSel::DppCtrlCheck	typeref:typename:int64_t	file:
Ctx	AsmParser/RVGPUAsmParser.cpp	/^  MCContext *Ctx = nullptr;$/;"	m	class:__anon672fa8550111::KernelScopeInfo	typeref:typename:MCContext *	file:
Ctx	RVGPUMCInstLower.h	/^  MCContext &Ctx;$/;"	m	class:RVGPUMCInstLower	typeref:typename:MCContext &
CurCycle	GCNILPSched.cpp	/^  unsigned CurCycle = 0;$/;"	m	class:__anonbd2d93ba0111::GCNILPScheduler	typeref:typename:unsigned	file:
CurPressure	GCNRegPressure.h	/^  GCNRegPressure CurPressure, MaxPressure;$/;"	m	class:llvm::GCNRPTracker	typeref:typename:GCNRegPressure
CurQueueId	GCNILPSched.cpp	/^  unsigned CurQueueId = 0;$/;"	m	class:__anonbd2d93ba0111::GCNILPScheduler	typeref:typename:unsigned	file:
CurrConflInstNo	RVGPUIGroupLP.cpp	/^  int CurrConflInstNo = 0;$/;"	m	class:__anon61b122dc0111::PipelineSolver	typeref:typename:int	file:
CurrCost	RVGPUIGroupLP.cpp	/^  int CurrCost = 0;$/;"	m	class:__anon61b122dc0111::PipelineSolver	typeref:typename:int	file:
CurrCycleInstr	GCNHazardRecognizer.h	/^  MachineInstr *CurrCycleInstr;$/;"	m	class:llvm::GCNHazardRecognizer	typeref:typename:MachineInstr *
CurrPipeline	RVGPUIGroupLP.cpp	/^  SmallVector<SmallVector<SchedGroup, 4>, 4> CurrPipeline;$/;"	m	class:__anon61b122dc0111::PipelineSolver	typeref:typename:SmallVector<SmallVector<SchedGroup,4>,4>	file:
CurrSyncGroupIdx	RVGPUIGroupLP.cpp	/^  int CurrSyncGroupIdx = 0;$/;"	m	class:__anon61b122dc0111::PipelineSolver	typeref:typename:int	file:
CurrentBlocks	SIMachineScheduler.h	/^  std::vector<SIScheduleBlock*> CurrentBlocks;$/;"	m	class:llvm::SIScheduleBlockCreator	typeref:typename:std::vector<SIScheduleBlock * >
CurrentBottomUpReservedDependencyColoring	SIMachineScheduler.h	/^  std::vector<int> CurrentBottomUpReservedDependencyColoring;$/;"	m	class:llvm::SIScheduleBlockCreator	typeref:typename:std::vector<int>
CurrentColoring	SIMachineScheduler.h	/^  std::vector<int> CurrentColoring;$/;"	m	class:llvm::SIScheduleBlockCreator	typeref:typename:std::vector<int>
CurrentLocalMemUsage	RVGPUPromoteAlloca.cpp	/^  uint32_t CurrentLocalMemUsage = 0;$/;"	m	class:__anonea904d1c0111::RVGPUPromoteAllocaImpl	typeref:typename:uint32_t	file:
CurrentMBB	GCNSchedStrategy.h	/^  MachineBasicBlock *CurrentMBB = nullptr;$/;"	m	class:llvm::GCNSchedStage	typeref:typename:MachineBasicBlock *
CurrentProgramInfo	RVGPUAsmPrinter.h	/^  SIProgramInfo CurrentProgramInfo;$/;"	m	class:llvm::RVGPUAsmPrinter	typeref:typename:SIProgramInfo
CurrentStage	GCNSchedStrategy.h	/^  SmallVectorImpl<GCNSchedStageID>::iterator CurrentStage = nullptr;$/;"	m	class:llvm::GCNSchedStrategy	typeref:typename:SmallVectorImpl<GCNSchedStageID>::iterator
CurrentTopDownReservedDependencyColoring	SIMachineScheduler.h	/^  std::vector<int> CurrentTopDownReservedDependencyColoring;$/;"	m	class:llvm::SIScheduleBlockCreator	typeref:typename:std::vector<int>
CustomOperand	Utils/RVGPUAsmUtils.h	/^template <class T> struct CustomOperand {$/;"	s	namespace:llvm::RVGPU
CustomOperandVal	Utils/RVGPUAsmUtils.h	/^struct CustomOperandVal {$/;"	s	namespace:llvm::RVGPU
CutoffForExact	RVGPUIGroupLP.cpp	/^static cl::opt<unsigned> CutoffForExact($/;"	v	namespace:__anon61b122dc0111	typeref:typename:cl::opt<unsigned>	file:
CvtF32UByteMatchInfo	RVGPUPostLegalizerCombiner.cpp	/^  struct CvtF32UByteMatchInfo {$/;"	s	class:__anonf94dcdde0111::RVGPUPostLegalizerCombinerImpl	file:
CvtVal	RVGPUPostLegalizerCombiner.cpp	/^    Register CvtVal;$/;"	m	struct:__anonf94dcdde0111::RVGPUPostLegalizerCombinerImpl::CvtF32UByteMatchInfo	typeref:typename:Register	file:
D16Buf	SIDefines.h	/^  D16Buf = UINT64_C(1) << 50,$/;"	e	enum:llvm::SIInstrFlags::__anon1f24a7950203
D16HelperIntr	RVGPUInstrInfo.h	/^  unsigned D16HelperIntr;$/;"	m	struct:llvm::RVGPU::D16ImageDimIntrinsic	typeref:typename:unsigned
D16ImageDimIntrinsic	RVGPUInstrInfo.h	/^struct D16ImageDimIntrinsic {$/;"	s	namespace:llvm::RVGPU
DA	Utils/RVGPUBaseInfo.h	/^  bool DA;$/;"	m	struct:llvm::RVGPU::MIMGDimInfo	typeref:typename:bool
DAG	GCNSchedStrategy.h	/^  GCNScheduleDAGMILive &DAG;$/;"	m	class:llvm::GCNSchedStage	typeref:typename:GCNScheduleDAGMILive &
DAG	RVGPUIGroupLP.cpp	/^  ScheduleDAGInstrs *DAG;$/;"	m	class:__anon61b122dc0111::IGLPStrategy	typeref:typename:ScheduleDAGInstrs *	file:
DAG	RVGPUIGroupLP.cpp	/^  ScheduleDAGInstrs *DAG;$/;"	m	class:__anon61b122dc0111::SchedGroup	typeref:typename:ScheduleDAGInstrs *	file:
DAG	RVGPUIGroupLP.cpp	/^  ScheduleDAGMI *DAG;$/;"	m	class:__anon61b122dc0111::IGroupLPDAGMutation	typeref:typename:ScheduleDAGMI *	file:
DAG	RVGPUIGroupLP.cpp	/^  ScheduleDAGMI *DAG;$/;"	m	class:__anon61b122dc0111::PipelineSolver	typeref:typename:ScheduleDAGMI *	file:
DAG	RVGPUSubtarget.cpp	/^  ScheduleDAGMI *DAG;$/;"	m	struct:__anon4eb125fb0111::FillMFMAShadowMutation	typeref:typename:ScheduleDAGMI *	file:
DAG	SIMachineScheduler.h	/^  SIScheduleDAGMI *DAG;$/;"	m	class:llvm::SIScheduleBlock	typeref:typename:SIScheduleDAGMI *
DAG	SIMachineScheduler.h	/^  SIScheduleDAGMI *DAG;$/;"	m	class:llvm::SIScheduleBlockCreator	typeref:typename:SIScheduleDAGMI *
DAG	SIMachineScheduler.h	/^  SIScheduleDAGMI *DAG;$/;"	m	class:llvm::SIScheduleBlockScheduler	typeref:typename:SIScheduleDAGMI *
DAG	SIMachineScheduler.h	/^  SIScheduleDAGMI *DAG;$/;"	m	class:llvm::SIScheduler	typeref:typename:SIScheduleDAGMI *
DEBUG_MASK	SIDefines.h	/^  DEBUG_MASK = 1 << 11,$/;"	e	enum:llvm::RVGPU::Hwreg::ModeRegisterMasks
DEBUG_TYPE	Disassembler/RVGPUDisassembler.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	GCNCreateVOPD.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	GCNDPPCombine.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	GCNILPSched.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	GCNIterativeScheduler.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	GCNMinRegStrategy.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	GCNNSAReassign.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	GCNPreRALongBranchReg.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	GCNPreRAOptimizations.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	GCNRegPressure.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	GCNRewritePartialRegUses.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	GCNSchedStrategy.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	GCNVOPDUtils.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	RVFrameLowering.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	RVGPUAliasAnalysis.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	RVGPUAnnotateKernelFeatures.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	RVGPUAnnotateUniformValues.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	RVGPUArgumentUsageInfo.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	RVGPUAtomicOptimizer.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	RVGPUAttributor.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	RVGPUCallLowering.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	RVGPUCodeGenPrepare.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	RVGPUCtorDtorLowering.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	RVGPUGlobalISelDivergenceLowering.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	RVGPUIGroupLP.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	RVGPUISelDAGToDAG.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	RVGPUImageIntrinsicOptimizer.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	RVGPUInsertDelayAlu.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	RVGPUInsertSingleUseVDST.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	RVGPUInstCombineIntrinsic.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	RVGPUInstructionSelector.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	RVGPULateCodeGenPrepare.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	RVGPULegalizerInfo.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	RVGPULibCalls.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	RVGPULowerKernelArguments.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	RVGPULowerKernelAttributes.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	RVGPULowerModuleLDSPass.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	RVGPUMachineCFGStructurizer.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	RVGPUOpenCLEnqueuedBlockLowering.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	RVGPUPerfHintAnalysis.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	RVGPUPostLegalizerCombiner.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	RVGPUPreLegalizerCombiner.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	RVGPUPrintfRuntimeBinding.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	RVGPUPromoteAlloca.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	RVGPUPromoteKernelArguments.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	RVGPURegBankCombiner.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	RVGPURegBankSelect.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	RVGPURemoveIncompatibleFunctions.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	RVGPUResourceUsageAnalysis.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	RVGPURewriteOutArguments.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	RVGPURewriteUndefForPHI.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	RVGPUSetWavePriority.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	RVGPUSubtarget.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	RVGPUTargetTransformInfo.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	RVGPUUnifyDivergentExitNodes.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	RVISelLowering.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	RVInstrInfo.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	SIAnnotateControlFlow.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	SIFixSGPRCopies.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	SIFixVGPRCopies.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	SIFoldOperands.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	SIFormMemoryClauses.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	SIInsertHardClauses.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	SIInsertWaitcnts.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	SILateBranchLowering.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	SILoadStoreOptimizer.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	SILowerControlFlow.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	SILowerI1Copies.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	SILowerSGPRSpills.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	SILowerWWMCopies.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	SIMachineScheduler.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	SIMemoryLegalizer.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	SIModeRegister.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	SIOptimizeExecMasking.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	SIOptimizeExecMaskingPreRA.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	SIOptimizeVGPRLiveRange.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	SIPeepholeSDWA.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	SIPostRABundler.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	SIPreAllocateWWMRegs.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	SIPreEmitPeephole.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	SIShrinkInstructions.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	SIWholeQuadMode.cpp	/^#define DEBUG_TYPE /;"	d	file:
DEBUG_TYPE	Utils/RVGPUMemoryUtils.cpp	/^#define DEBUG_TYPE /;"	d	file:
DECODE_OPERAND	Disassembler/RVGPUDisassembler.cpp	/^#define DECODE_OPERAND(/;"	d	file:
DECODE_OPERAND_REG_7	Disassembler/RVGPUDisassembler.cpp	/^#define DECODE_OPERAND_REG_7(/;"	d	file:
DECODE_OPERAND_REG_8	Disassembler/RVGPUDisassembler.cpp	/^#define DECODE_OPERAND_REG_8(/;"	d	file:
DECODE_OPERAND_REG_8	Disassembler/RVGPUDisassembler.cpp	/^DECODE_OPERAND_REG_8(VGPR_32_Lo128)$/;"	f	typeref:typename:VGPR_32	file:
DECODE_OPERAND_REG_AV10	Disassembler/RVGPUDisassembler.cpp	/^#define DECODE_OPERAND_REG_AV10(/;"	d	file:
DECODE_OPERAND_SRC_REG_9	Disassembler/RVGPUDisassembler.cpp	/^#define DECODE_OPERAND_SRC_REG_9(/;"	d	file:
DECODE_OPERAND_SRC_REG_A9	Disassembler/RVGPUDisassembler.cpp	/^#define DECODE_OPERAND_SRC_REG_A9(/;"	d	file:
DECODE_OPERAND_SRC_REG_OR_IMM_9	Disassembler/RVGPUDisassembler.cpp	/^#define DECODE_OPERAND_SRC_REG_OR_IMM_9(/;"	d	file:
DECODE_OPERAND_SRC_REG_OR_IMM_A9	Disassembler/RVGPUDisassembler.cpp	/^#define DECODE_OPERAND_SRC_REG_OR_IMM_A9(/;"	d	file:
DECODE_OPERAND_SRC_REG_OR_IMM_DEFERRED_9	Disassembler/RVGPUDisassembler.cpp	/^#define DECODE_OPERAND_SRC_REG_OR_IMM_DEFERRED_9(/;"	d	file:
DECODE_SDWA	Disassembler/RVGPUDisassembler.cpp	/^#define DECODE_SDWA(/;"	d	file:
DECODE_SDWA	Disassembler/RVGPUDisassembler.cpp	/^DECODE_SDWA(Src16)$/;"	f	typeref:typename:Src32	file:
DECODE_SRC_OPERAND_REG_AV10	Disassembler/RVGPUDisassembler.cpp	/^#define DECODE_SRC_OPERAND_REG_AV10(/;"	d	file:
DECODE_SrcOp	Disassembler/RVGPUDisassembler.cpp	/^#define DECODE_SrcOp(/;"	d	file:
DEFAULT	SIDefines.h	/^    DEFAULT = 0,$/;"	e	enum:llvm::RVGPUAsmVariants::__anon1f24a7950503
DEFAULT_QUEUE_OFFSET	SIDefines.h	/^  DEFAULT_QUEUE_OFFSET = 104,$/;"	e	enum:llvm::RVGPU::ImplicitArg::Offset_COV5
DENORM_MODE	RVGPUISelLowering.h	/^  DENORM_MODE,$/;"	e	enum:llvm::RVGPUISD::NodeType
DEP_CTR_SIZE	Utils/RVGPUAsmUtils.cpp	/^const int DEP_CTR_SIZE =$/;"	v	namespace:llvm::RVGPU::DepCtr	typeref:typename:const int
DFMT_10_10_10_2	SIDefines.h	/^  DFMT_10_10_10_2,$/;"	e	enum:llvm::RVGPU::MTBUFFormat::DataFormat
DFMT_10_11_11	SIDefines.h	/^  DFMT_10_11_11,$/;"	e	enum:llvm::RVGPU::MTBUFFormat::DataFormat
DFMT_11_11_10	SIDefines.h	/^  DFMT_11_11_10,$/;"	e	enum:llvm::RVGPU::MTBUFFormat::DataFormat
DFMT_16	SIDefines.h	/^  DFMT_16,$/;"	e	enum:llvm::RVGPU::MTBUFFormat::DataFormat
DFMT_16_16	SIDefines.h	/^  DFMT_16_16,$/;"	e	enum:llvm::RVGPU::MTBUFFormat::DataFormat
DFMT_16_16_16_16	SIDefines.h	/^  DFMT_16_16_16_16,$/;"	e	enum:llvm::RVGPU::MTBUFFormat::DataFormat
DFMT_2_10_10_10	SIDefines.h	/^  DFMT_2_10_10_10,$/;"	e	enum:llvm::RVGPU::MTBUFFormat::DataFormat
DFMT_32	SIDefines.h	/^  DFMT_32,$/;"	e	enum:llvm::RVGPU::MTBUFFormat::DataFormat
DFMT_32_32	SIDefines.h	/^  DFMT_32_32,$/;"	e	enum:llvm::RVGPU::MTBUFFormat::DataFormat
DFMT_32_32_32	SIDefines.h	/^  DFMT_32_32_32,$/;"	e	enum:llvm::RVGPU::MTBUFFormat::DataFormat
DFMT_32_32_32_32	SIDefines.h	/^  DFMT_32_32_32_32,$/;"	e	enum:llvm::RVGPU::MTBUFFormat::DataFormat
DFMT_8	SIDefines.h	/^  DFMT_8,$/;"	e	enum:llvm::RVGPU::MTBUFFormat::DataFormat
DFMT_8_8	SIDefines.h	/^  DFMT_8_8,$/;"	e	enum:llvm::RVGPU::MTBUFFormat::DataFormat
DFMT_8_8_8_8	SIDefines.h	/^  DFMT_8_8_8_8,$/;"	e	enum:llvm::RVGPU::MTBUFFormat::DataFormat
DFMT_DEFAULT	SIDefines.h	/^  DFMT_DEFAULT = DFMT_8,$/;"	e	enum:llvm::RVGPU::MTBUFFormat::DataFormat
DFMT_INVALID	SIDefines.h	/^  DFMT_INVALID = 0,$/;"	e	enum:llvm::RVGPU::MTBUFFormat::DataFormat
DFMT_MASK	SIDefines.h	/^  DFMT_MASK = 0xF$/;"	e	enum:llvm::RVGPU::MTBUFFormat::DataFormat
DFMT_MAX	SIDefines.h	/^  DFMT_MAX = DFMT_RESERVED_15,$/;"	e	enum:llvm::RVGPU::MTBUFFormat::DataFormat
DFMT_MIN	SIDefines.h	/^  DFMT_MIN = DFMT_INVALID,$/;"	e	enum:llvm::RVGPU::MTBUFFormat::DataFormat
DFMT_NFMT_DEFAULT	SIDefines.h	/^  DFMT_NFMT_DEFAULT = ((DFMT_DEFAULT & DFMT_MASK) << DFMT_SHIFT) |$/;"	e	enum:llvm::RVGPU::MTBUFFormat::MergedFormat
DFMT_NFMT_MASK	SIDefines.h	/^  DFMT_NFMT_MASK = (DFMT_MASK << DFMT_SHIFT) | (NFMT_MASK << NFMT_SHIFT),$/;"	e	enum:llvm::RVGPU::MTBUFFormat::MergedFormat
DFMT_NFMT_MAX	SIDefines.h	/^  DFMT_NFMT_MAX = DFMT_NFMT_MASK$/;"	e	enum:llvm::RVGPU::MTBUFFormat::MergedFormat
DFMT_NFMT_UNDEF	SIDefines.h	/^  DFMT_NFMT_UNDEF = -1,$/;"	e	enum:llvm::RVGPU::MTBUFFormat::MergedFormat
DFMT_RESERVED_15	SIDefines.h	/^  DFMT_RESERVED_15,$/;"	e	enum:llvm::RVGPU::MTBUFFormat::DataFormat
DFMT_SHIFT	SIDefines.h	/^  DFMT_SHIFT = 0,$/;"	e	enum:llvm::RVGPU::MTBUFFormat::DataFormat
DFMT_UNDEF	SIDefines.h	/^  DFMT_UNDEF = -1,$/;"	e	enum:llvm::RVGPU::MTBUFFormat::DataFormat
DISPATCH_ID	RVGPUArgumentUsageInfo.h	/^    DISPATCH_ID         =  4,$/;"	e	enum:llvm::RVGPUFunctionArgInfo::PreloadedValue
DISPATCH_PTR	RVGPUArgumentUsageInfo.h	/^    DISPATCH_PTR        =  1,$/;"	e	enum:llvm::RVGPUFunctionArgInfo::PreloadedValue
DIV2	SIDefines.h	/^    DIV2 = 3$/;"	e	enum:llvm::SIOutMods::__anon1f24a7950403
DIV_FIXUP	RVGPUISelLowering.h	/^  DIV_FIXUP,$/;"	e	enum:llvm::RVGPUISD::NodeType
DIV_FMAS	RVGPUISelLowering.h	/^  DIV_FMAS,$/;"	e	enum:llvm::RVGPUISD::NodeType
DIV_SCALE	RVGPUISelLowering.h	/^  DIV_SCALE,$/;"	e	enum:llvm::RVGPUISD::NodeType
DL	RVFrameLowering.cpp	/^  const DebugLoc &DL;$/;"	m	class:llvm::PrologEpilogSGPRSpillBuilder	typeref:typename:const DebugLoc &	file:
DL	RVGPUAliasAnalysis.h	/^  const DataLayout &DL;$/;"	m	class:llvm::RVGPUAAResult	typeref:typename:const DataLayout &
DL	RVGPUAtomicOptimizer.cpp	/^  const DataLayout *DL;$/;"	m	class:__anon7bca098a0111::RVGPUAtomicOptimizerImpl	typeref:typename:const DataLayout *	file:
DL	RVGPUCodeGenPrepare.cpp	/^  const DataLayout *DL = nullptr;$/;"	m	class:__anond35e324e0111::RVGPUCodeGenPrepareImpl	typeref:typename:const DataLayout *	file:
DL	RVGPULateCodeGenPrepare.cpp	/^  const DataLayout *DL = nullptr;$/;"	m	class:__anon4d9375140111::RVGPULateCodeGenPrepare	typeref:typename:const DataLayout *	file:
DL	RVGPUPerfHintAnalysis.cpp	/^  const DataLayout *DL;$/;"	m	struct:__anon406ad74e0111::RVGPUPerfHint	typeref:typename:const DataLayout *	file:
DL	RVGPUPromoteAlloca.cpp	/^  const DataLayout *DL = nullptr;$/;"	m	class:__anonea904d1c0111::RVGPUPromoteAllocaImpl	typeref:typename:const DataLayout *	file:
DL	RVGPURewriteOutArguments.cpp	/^  const DataLayout *DL = nullptr;$/;"	m	class:__anon63899d5a0111::RVGPURewriteOutArguments	typeref:typename:const DataLayout *	file:
DL	RVRegisterInfo.cpp	/^  const DebugLoc &DL;$/;"	m	struct:llvm::SGPRSpillBuilder	typeref:typename:const DebugLoc &	file:
DLC	SIDefines.h	/^  DLC = 4,$/;"	e	enum:llvm::RVGPU::CPol::CPol
DMask	SILoadStoreOptimizer.cpp	/^    unsigned DMask;$/;"	m	struct:__anon677101620111::SILoadStoreOptimizer::CombineInfo	typeref:typename:unsigned	file:
DMaskIndex	RVGPUInstrInfo.h	/^  uint8_t DMaskIndex;$/;"	m	struct:llvm::RVGPU::ImageDimIntrinsicInfo	typeref:typename:uint8_t
DOT4	RVGPUISelLowering.h	/^  DOT4,$/;"	e	enum:llvm::RVGPUISD::NodeType
DPP	RVGPU.h	/^enum class ScanOptions { DPP, Iterative, None };$/;"	e	enum:llvm::ScanOptions
DPP	SIDefines.h	/^    DPP = 4,$/;"	e	enum:llvm::RVGPUAsmVariants::__anon1f24a7950503
DPP	SIDefines.h	/^  DPP = 1 << 15,$/;"	e	enum:llvm::SIInstrFlags::__anon1f24a7950203
DPP	SIDefines.h	/^namespace DPP {$/;"	n	namespace:llvm::RVGPU
DPP8_FI_0	SIDefines.h	/^  DPP8_FI_0 = 0xE9,$/;"	e	enum:llvm::RVGPU::DPP::DppFiMode
DPP8_FI_1	SIDefines.h	/^  DPP8_FI_1 = 0xEA,$/;"	e	enum:llvm::RVGPU::DPP::DppFiMode
DPP_FI_0	SIDefines.h	/^  DPP_FI_0  = 0,$/;"	e	enum:llvm::RVGPU::DPP::DppFiMode
DPP_FI_1	SIDefines.h	/^  DPP_FI_1  = 1,$/;"	e	enum:llvm::RVGPU::DPP::DppFiMode
DPP_LAST	SIDefines.h	/^  DPP_LAST          = ROW_XMASK_LAST$/;"	e	enum:llvm::RVGPU::DPP::DppCtrl
DPP_UNUSED1	SIDefines.h	/^  DPP_UNUSED1       = 0x100,$/;"	e	enum:llvm::RVGPU::DPP::DppCtrl
DPP_UNUSED2	SIDefines.h	/^  DPP_UNUSED2       = 0x110,$/;"	e	enum:llvm::RVGPU::DPP::DppCtrl
DPP_UNUSED3	SIDefines.h	/^  DPP_UNUSED3       = 0x120,$/;"	e	enum:llvm::RVGPU::DPP::DppCtrl
DPP_UNUSED4_FIRST	SIDefines.h	/^  DPP_UNUSED4_FIRST = 0x131,$/;"	e	enum:llvm::RVGPU::DPP::DppCtrl
DPP_UNUSED4_LAST	SIDefines.h	/^  DPP_UNUSED4_LAST  = 0x133,$/;"	e	enum:llvm::RVGPU::DPP::DppCtrl
DPP_UNUSED5_FIRST	SIDefines.h	/^  DPP_UNUSED5_FIRST = 0x135,$/;"	e	enum:llvm::RVGPU::DPP::DppCtrl
DPP_UNUSED5_LAST	SIDefines.h	/^  DPP_UNUSED5_LAST  = 0x137,$/;"	e	enum:llvm::RVGPU::DPP::DppCtrl
DPP_UNUSED6_FIRST	SIDefines.h	/^  DPP_UNUSED6_FIRST = 0x139,$/;"	e	enum:llvm::RVGPU::DPP::DppCtrl
DPP_UNUSED6_LAST	SIDefines.h	/^  DPP_UNUSED6_LAST  = 0x13B,$/;"	e	enum:llvm::RVGPU::DPP::DppCtrl
DPP_UNUSED7_FIRST	SIDefines.h	/^  DPP_UNUSED7_FIRST = 0x13D,$/;"	e	enum:llvm::RVGPU::DPP::DppCtrl
DPP_UNUSED7_LAST	SIDefines.h	/^  DPP_UNUSED7_LAST  = 0x13F,$/;"	e	enum:llvm::RVGPU::DPP::DppCtrl
DPP_UNUSED8_FIRST	SIDefines.h	/^  DPP_UNUSED8_FIRST = 0x144,$/;"	e	enum:llvm::RVGPU::DPP::DppCtrl
DPP_UNUSED8_LAST	SIDefines.h	/^  DPP_UNUSED8_LAST  = 0x14F,$/;"	e	enum:llvm::RVGPU::DPP::DppCtrl
DS	RVGPUIGroupLP.cpp	/^  DS = 1u << 7,$/;"	e	enum:__anon61b122dc0111::SchedGroupMask	file:
DS	SIDefines.h	/^  DS = 1 << 25,$/;"	e	enum:llvm::SIInstrFlags::__anon1f24a7950203
DST	Utils/RVGPUBaseInfo.h	/^  DST = 0,$/;"	e	enum:llvm::RVGPU::VOPD::Component
DST_ENABLE	SIDefines.h	/^  DST_ENABLE = 1 << ID_DST,$/;"	e	enum:llvm::RVGPU::VGPRIndexMode::EncBits
DST_NUM	Utils/RVGPUBaseInfo.h	/^  DST_NUM = 1,$/;"	e	enum:llvm::RVGPU::VOPD::Component
DST_OP_SEL	SIDefines.h	/^   DST_OP_SEL = 1 << 3 \/\/ VOP3 dst op_sel (share mask with OP_SEL_1)$/;"	e	enum:llvm::SISrcMods::__anon1f24a7950303
DSWCount	RVGPUIGroupLP.cpp	/^static unsigned DSWCount = 0;$/;"	v	namespace:__anon61b122dc0111	typeref:typename:unsigned	file:
DSWWithPermCount	RVGPUIGroupLP.cpp	/^static unsigned DSWWithPermCount = 0;$/;"	v	namespace:__anon61b122dc0111	typeref:typename:unsigned	file:
DSWWithSharedVMEMCount	RVGPUIGroupLP.cpp	/^static unsigned DSWWithSharedVMEMCount = 0;$/;"	v	namespace:__anon61b122dc0111	typeref:typename:unsigned	file:
DS_GLOBAL	RVGPUAttributor.cpp	/^  enum ConstantStatus { DS_GLOBAL = 1 << 0, ADDR_SPACE_CAST = 1 << 1 };$/;"	e	enum:__anon512e119a0111::RVGPUInformationCache::ConstantStatus	file:
DS_ORDERED_COUNT	RVGPUISelLowering.h	/^  DS_ORDERED_COUNT,$/;"	e	enum:llvm::RVGPUISD::NodeType
DS_READ	RVGPUIGroupLP.cpp	/^  DS_READ = 1u << 8,$/;"	e	enum:__anon61b122dc0111::SchedGroupMask	file:
DS_READ	SILoadStoreOptimizer.cpp	/^  DS_READ,$/;"	e	enum:__anon677101620111::InstClassEnum	file:
DS_WRITE	RVGPUIGroupLP.cpp	/^  DS_WRITE = 1u << 9,$/;"	e	enum:__anon61b122dc0111::SchedGroupMask	file:
DS_WRITE	SILoadStoreOptimizer.cpp	/^  DS_WRITE,$/;"	e	enum:__anon677101620111::InstClassEnum	file:
DT	RVGPUCodeGenPrepare.cpp	/^  DominatorTree *DT = nullptr;$/;"	m	class:__anond35e324e0111::RVGPUCodeGenPrepareImpl	typeref:typename:DominatorTree *	file:
DT	RVGPULibCalls.cpp	/^  DominatorTree *DT = nullptr;$/;"	m	class:llvm::RVGPULibCalls	typeref:typename:DominatorTree *	file:
DT	SIAnnotateControlFlow.cpp	/^  DominatorTree *DT;$/;"	m	class:__anond71df4850111::SIAnnotateControlFlow	typeref:typename:DominatorTree *	file:
DT	SILowerI1Copies.cpp	/^  MachineDominatorTree &DT;$/;"	m	class:__anone16a92980111::LoopFinder	typeref:typename:MachineDominatorTree &	file:
DT	SILowerI1Copies.h	/^  MachineDominatorTree *DT = nullptr;$/;"	m	class:llvm::PhiLoweringHelper	typeref:typename:MachineDominatorTree *
DTU	RVGPUAtomicOptimizer.cpp	/^  DomTreeUpdater &DTU;$/;"	m	class:__anon7bca098a0111::RVGPUAtomicOptimizerImpl	typeref:typename:DomTreeUpdater &	file:
DUMMY	RVGPULibFunc.h	/^    DUMMY$/;"	e	enum:llvm::RVGPULibFuncBase::EType
DUMMY_CHAIN	RVGPUISelLowering.h	/^  DUMMY_CHAIN,$/;"	e	enum:llvm::RVGPUISD::NodeType
DWORD	SIDefines.h	/^  DWORD = 6,$/;"	e	enum:llvm::RVGPU::SDWA::SdwaSel
DWORDADDR	RVGPUISelLowering.h	/^  DWORDADDR,$/;"	e	enum:llvm::RVGPUISD::NodeType
DWORD_ALIGN	RVGPUPrintfRuntimeBinding.cpp	/^#define DWORD_ALIGN /;"	d	file:
DX10Clamp	RVMachineFunctionInfo.h	/^  bool DX10Clamp = true;$/;"	m	struct:llvm::yaml::SIMode	typeref:typename:bool
DX10Clamp	SIModeRegisterDefaults.h	/^  bool DX10Clamp : 1;$/;"	m	struct:llvm::SIModeRegisterDefaults	typeref:typename:bool:1
DX10Clamp	SIProgramInfo.h	/^    uint32_t DX10Clamp = 0;$/;"	m	struct:llvm::SIProgramInfo	typeref:typename:uint32_t
DX10_CLAMP_MASK	SIDefines.h	/^  DX10_CLAMP_MASK = 1 << 8,$/;"	e	enum:llvm::RVGPU::Hwreg::ModeRegisterMasks
Data	AsmParser/RVGPUAsmParser.cpp	/^    const char *Data;$/;"	m	struct:__anon672fa8550111::RVGPUOperand::TokOp	typeref:typename:const char *	file:
Data	SIMachineScheduler.h	/^  Data$/;"	e	enum:llvm::SIScheduleBlockLinkKind
DataFormat	SIDefines.h	/^enum DataFormat : int64_t {$/;"	g	namespace:llvm::RVGPU::MTBUFFormat	typeref:typename:int64_t
DataFormat	Utils/RVGPUBaseInfo.h	/^  unsigned DataFormat;$/;"	m	struct:llvm::RVGPU::GcnBufferFormatInfo	typeref:typename:unsigned
DebugMode	SIProgramInfo.h	/^    uint32_t DebugMode = 0;$/;"	m	struct:llvm::SIProgramInfo	typeref:typename:uint32_t
DecodeAVLdSt_128RegisterClass	Disassembler/RVGPUDisassembler.cpp	/^DecodeAVLdSt_128RegisterClass(MCInst &Inst, unsigned Imm, uint64_t Addr,$/;"	f	typeref:typename:DecodeStatus	file:
DecodeAVLdSt_160RegisterClass	Disassembler/RVGPUDisassembler.cpp	/^DecodeAVLdSt_160RegisterClass(MCInst &Inst, unsigned Imm, uint64_t Addr,$/;"	f	typeref:typename:DecodeStatus	file:
DecodeAVLdSt_32RegisterClass	Disassembler/RVGPUDisassembler.cpp	/^DecodeAVLdSt_32RegisterClass(MCInst &Inst, unsigned Imm, uint64_t Addr,$/;"	f	typeref:typename:DecodeStatus	file:
DecodeAVLdSt_64RegisterClass	Disassembler/RVGPUDisassembler.cpp	/^DecodeAVLdSt_64RegisterClass(MCInst &Inst, unsigned Imm, uint64_t Addr,$/;"	f	typeref:typename:DecodeStatus	file:
DecodeAVLdSt_96RegisterClass	Disassembler/RVGPUDisassembler.cpp	/^DecodeAVLdSt_96RegisterClass(MCInst &Inst, unsigned Imm, uint64_t Addr,$/;"	f	typeref:typename:DecodeStatus	file:
DecodeStatus	Disassembler/RVGPUDisassembler.cpp	/^using DecodeStatus = llvm::MCDisassembler::DecodeStatus;$/;"	t	typeref:typename:llvm::MCDisassembler::DecodeStatus	file:
DecodeVGPR_16_Lo128RegisterClass	Disassembler/RVGPUDisassembler.cpp	/^DecodeVGPR_16_Lo128RegisterClass(MCInst &Inst, unsigned Imm, uint64_t \/*Addr*\/,$/;"	f	typeref:typename:DecodeStatus	file:
DecoderUInt128	Disassembler/RVGPUDisassembler.h	/^  DecoderUInt128(uint64_t Lo, uint64_t Hi = 0) : Lo(Lo), Hi(Hi) {}$/;"	f	class:llvm::DecoderUInt128
DecoderUInt128	Disassembler/RVGPUDisassembler.h	/^class DecoderUInt128 {$/;"	c	namespace:llvm
DefBlock	SILowerI1Copies.cpp	/^  MachineBasicBlock *DefBlock = nullptr;$/;"	m	class:__anone16a92980111::LoopFinder	typeref:typename:MachineBasicBlock *	file:
DefPos	GCNHazardRecognizer.cpp	/^    SmallDenseMap<Register, int, 4> DefPos;$/;"	m	struct:GCNHazardRecognizer::fixVALUPartialForwardingHazard::StateType	typeref:typename:SmallDenseMap<Register,int,4>	file:
Default	Utils/RVGPUAsmUtils.h	/^  unsigned Default;$/;"	m	struct:llvm::RVGPU::CustomOperandVal	typeref:typename:unsigned
DefaultMode	SIModeRegister.cpp	/^  unsigned DefaultMode = FP_ROUND_ROUND_TO_NEAREST;$/;"	m	class:__anon070b45bc0111::SIModeRegister	typeref:typename:unsigned	file:
DefaultStatus	SIModeRegister.cpp	/^  Status DefaultStatus =$/;"	m	class:__anon070b45bc0111::SIModeRegister	typeref:typename:Status	file:
DefaultVALUInstsThreshold	RVGPUSetWavePriority.cpp	/^static cl::opt<unsigned> DefaultVALUInstsThreshold($/;"	v	typeref:typename:cl::opt<unsigned>	file:
DeferredList	RVInstrInfo.h	/^  SetVector<MachineInstr *> DeferredList;$/;"	m	struct:llvm::SIInstrWorklist	typeref:typename:SetVector<MachineInstr * >
DefinedLanes	SIWholeQuadMode.cpp	/^    LaneBitmask DefinedLanes;$/;"	m	struct:SIWholeQuadMode::markDefs::PhiEntry	typeref:typename:LaneBitmask	file:
Defs	SIPostRABundler.cpp	/^  SmallSet<Register, 16> Defs;$/;"	m	class:__anona97e3cd70111::SIPostRABundler	typeref:typename:SmallSet<Register,16>	file:
DelayInfo	RVGPUInsertDelayAlu.cpp	/^    DelayInfo(DelayType Type, unsigned Cycles) {$/;"	f	struct:__anonc7296b900111::RVGPUInsertDelayAlu::DelayInfo	file:
DelayInfo	RVGPUInsertDelayAlu.cpp	/^  struct DelayInfo {$/;"	s	class:__anonc7296b900111::RVGPUInsertDelayAlu	file:
DelayState	RVGPUInsertDelayAlu.cpp	/^  struct DelayState : DenseMap<unsigned, DelayInfo> {$/;"	s	class:__anonc7296b900111::RVGPUInsertDelayAlu	file:
DelayType	RVGPUInsertDelayAlu.cpp	/^  enum DelayType { VALU, TRANS, SALU, OTHER };$/;"	g	class:__anonc7296b900111::RVGPUInsertDelayAlu	file:
DepCtr	Utils/RVGPUAsmUtils.cpp	/^namespace DepCtr {$/;"	n	namespace:llvm::RVGPU	file:
DepCtr	Utils/RVGPUAsmUtils.h	/^namespace DepCtr {$/;"	n	namespace:llvm::RVGPU
DepCtr	Utils/RVGPUBaseInfo.cpp	/^namespace DepCtr {$/;"	n	namespace:llvm::RVGPU	file:
DepCtr	Utils/RVGPUBaseInfo.h	/^namespace DepCtr {$/;"	n	namespace:llvm::RVGPU
DepCtrInfo	Utils/RVGPUAsmUtils.cpp	/^const CustomOperandVal DepCtrInfo[] = {$/;"	v	namespace:llvm::RVGPU::DepCtr	typeref:typename:const CustomOperandVal[]
Depth	SIMachineScheduler.h	/^  Depth,$/;"	e	enum:llvm::SIScheduleCandReason
Depth	SIMachineScheduler.h	/^  unsigned Depth;   \/\/ Maximum bottomup path length to block without inputs$/;"	m	class:llvm::SIScheduleBlock	typeref:typename:unsigned
DestIndex	RVGPUPromoteAlloca.cpp	/^  ConstantInt *DestIndex = nullptr;$/;"	m	struct:MemTransferInfo	typeref:typename:ConstantInt *	file:
DfmtNfmt2UFmtGFX10	Utils/RVGPUAsmUtils.cpp	/^unsigned const DfmtNfmt2UFmtGFX10[] = {$/;"	v	namespace:llvm::RVGPU::MTBUFFormat	typeref:typename:unsigned const[]
DfmtNfmt2UFmtGFX11	Utils/RVGPUAsmUtils.cpp	/^unsigned const DfmtNfmt2UFmtGFX11[] = {$/;"	v	namespace:llvm::RVGPU::MTBUFFormat	typeref:typename:unsigned const[]
DfmtSymbolic	Utils/RVGPUAsmUtils.cpp	/^StringLiteral const DfmtSymbolic[] = {$/;"	v	namespace:llvm::RVGPU::MTBUFFormat	typeref:typename:StringLiteral const[]
Dim	RVGPUInstrInfo.h	/^  MIMGDim Dim;$/;"	m	struct:llvm::RVGPU::ImageDimIntrinsicInfo	typeref:typename:MIMGDim
Dim	Utils/RVGPUBaseInfo.h	/^  MIMGDim Dim;$/;"	m	struct:llvm::RVGPU::MIMGDimInfo	typeref:typename:MIMGDim
Dirty	SIInsertWaitcnts.cpp	/^    bool Dirty = true;$/;"	m	struct:__anona6cbb7940211::SIInsertWaitcnts::BlockInfo	typeref:typename:bool	file:
DisInfo	Disassembler/RVGPUDisassembler.h	/^  void *DisInfo;$/;"	m	class:llvm::RVGPUSymbolizer	typeref:typename:void *
DisableClusteredLowOccupancy	GCNSchedStrategy.cpp	/^static cl::opt<bool> DisableClusteredLowOccupancy($/;"	v	typeref:typename:cl::opt<bool>	file:
DisableFDivExpand	RVGPUCodeGenPrepare.cpp	/^static cl::opt<bool> DisableFDivExpand($/;"	v	namespace:__anond35e324e0111	typeref:typename:cl::opt<bool>	file:
DisableIDivExpand	RVGPUCodeGenPrepare.cpp	/^static cl::opt<bool> DisableIDivExpand($/;"	v	namespace:__anond35e324e0111	typeref:typename:cl::opt<bool>	file:
DisableLoopAlignment	RVISelLowering.cpp	/^static cl::opt<bool> DisableLoopAlignment($/;"	v	typeref:typename:cl::opt<bool>	file:
DisablePromoteAllocaToLDS	RVGPUPromoteAlloca.cpp	/^    DisablePromoteAllocaToLDS("disable-promote-alloca-to-lds",$/;"	v	namespace:__anonea904d1c0111	typeref:typename:cl::opt<bool>	file:
DisablePromoteAllocaToVector	RVGPUPromoteAlloca.cpp	/^    DisablePromoteAllocaToVector("disable-promote-alloca-to-vector",$/;"	v	namespace:__anonea904d1c0111	typeref:typename:cl::opt<bool>	file:
DisableUnclusterHighRP	GCNSchedStrategy.cpp	/^static cl::opt<bool> DisableUnclusterHighRP($/;"	v	typeref:typename:cl::opt<bool>	file:
DisableWQM	SIDefines.h	/^  DisableWQM = UINT64_C(1) << 36,$/;"	e	enum:llvm::SIInstrFlags::__anon1f24a7950203
Disabled	SIWholeQuadMode.cpp	/^  char Disabled = 0;$/;"	m	struct:__anon41aff2810111::InstrInfo	typeref:typename:char	file:
DisasmLineMaxLen	RVGPUAsmPrinter.h	/^  size_t DisasmLineMaxLen;$/;"	m	class:llvm::RVGPUAsmPrinter	typeref:typename:size_t
DisasmLines	RVGPUAsmPrinter.h	/^  std::vector<std::string> DisasmLines, HexLines;$/;"	m	class:llvm::RVGPUAsmPrinter	typeref:typename:std::vector<std::string>
DispatchID	GCNSubtarget.h	/^  bool DispatchID = false;$/;"	m	class:llvm::GCNUserSGPRUsageInfo	typeref:typename:bool
DispatchID	RVGPUArgumentUsageInfo.h	/^  ArgDescriptor DispatchID;$/;"	m	struct:llvm::RVGPUFunctionArgInfo	typeref:typename:ArgDescriptor
DispatchID	RVMachineFunctionInfo.h	/^  std::optional<SIArgument> DispatchID;$/;"	m	struct:llvm::yaml::SIArgumentInfo	typeref:typename:std::optional<SIArgument>
DispatchIdID	GCNSubtarget.h	/^    DispatchIdID = 5,$/;"	e	enum:llvm::GCNUserSGPRUsageInfo::UserSGPRID
DispatchPackedOffsets	RVGPULowerKernelAttributes.cpp	/^enum DispatchPackedOffsets {$/;"	g	namespace:__anon7b93ed1b0111	file:
DispatchPtr	GCNSubtarget.h	/^  bool DispatchPtr = false;$/;"	m	class:llvm::GCNUserSGPRUsageInfo	typeref:typename:bool
DispatchPtr	RVGPUArgumentUsageInfo.h	/^  ArgDescriptor DispatchPtr;$/;"	m	struct:llvm::RVGPUFunctionArgInfo	typeref:typename:ArgDescriptor
DispatchPtr	RVMachineFunctionInfo.h	/^  std::optional<SIArgument> DispatchPtr;$/;"	m	struct:llvm::yaml::SIArgumentInfo	typeref:typename:std::optional<SIArgument>
DispatchPtrID	GCNSubtarget.h	/^    DispatchPtrID = 2,$/;"	e	enum:llvm::GCNUserSGPRUsageInfo::UserSGPRID
Distance	RVGPUIGroupLP.cpp	/^    unsigned Distance = 1;$/;"	m	class:__anon61b122dc0111::MFMASmallGemmSingleWaveOpt::SharesPredWithPrevNthGroup	typeref:typename:unsigned	file:
DomTreeT	SILateBranchLowering.cpp	/^  using DomTreeT = DomTreeBase<MachineBasicBlock>;$/;"	t	function:splitBlock	typeref:typename:DomTreeBase<MachineBasicBlock>	file:
DomTreeT	SIWholeQuadMode.cpp	/^    using DomTreeT = DomTreeBase<MachineBasicBlock>;$/;"	t	function:SIWholeQuadMode::splitBlock	typeref:typename:DomTreeBase<MachineBasicBlock>	file:
DppCtrl	SIDefines.h	/^enum DppCtrl : unsigned {$/;"	g	namespace:llvm::RVGPU::DPP	typeref:typename:unsigned
DppCtrlCheck	AsmParser/RVGPUAsmParser.cpp	/^  struct DppCtrlCheck {$/;"	s	function:RVGPUAsmParser::parseDPPCtrlSel	file:
DppFiMode	SIDefines.h	/^enum DppFiMode {$/;"	g	namespace:llvm::RVGPU::DPP
DstSel	SIPeepholeSDWA.cpp	/^  SdwaSel DstSel;$/;"	m	class:__anon00bd52b30111::SDWADstOperand	typeref:typename:SdwaSel	file:
DstUn	SIPeepholeSDWA.cpp	/^  DstUnused DstUn;$/;"	m	class:__anon00bd52b30111::SDWADstOperand	typeref:typename:DstUnused	file:
DstUnused	SIDefines.h	/^enum DstUnused : unsigned {$/;"	g	namespace:llvm::RVGPU::SDWA	typeref:typename:unsigned
DumpCode	GCNSubtarget.h	/^  bool DumpCode = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
DumpCodeInstEmitter	RVGPUAsmPrinter.h	/^  MCCodeEmitter *DumpCodeInstEmitter = nullptr;$/;"	m	class:llvm::RVGPUAsmPrinter	typeref:typename:MCCodeEmitter *
DumpHSAMetadata	RVGPUHSAMetadataStreamer.cpp	/^static cl::opt<bool> DumpHSAMetadata($/;"	v	namespace:llvm	typeref:typename:cl::opt<bool>	file:
DynLDSAlign	RVGPUMachineFunction.h	/^  Align DynLDSAlign;$/;"	m	class:llvm::RVGPUMachineFunction	typeref:typename:Align
DynLDSAlign	RVMachineFunctionInfo.h	/^  Align DynLDSAlign;$/;"	m	struct:llvm::yaml::RVMachineFunctionInfo	typeref:typename:Align
Dynamic	SIModeRegisterDefaults.h	/^  Dynamic = static_cast<int8_t>(RoundingMode::Dynamic),$/;"	e	enum:llvm::RVGPU::RVGPUFltRounds
DynamicCallStack	SIProgramInfo.h	/^    bool DynamicCallStack = false;$/;"	m	struct:llvm::SIProgramInfo	typeref:typename:bool
EFuncId	RVGPULibFunc.h	/^  enum EFuncId {$/;"	g	class:llvm::RVGPULibFuncBase
EI_ABS	RVGPULibFunc.h	/^    EI_ABS,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_ABS_DIFF	RVGPULibFunc.h	/^    EI_ABS_DIFF,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_ACOS	RVGPULibFunc.h	/^    EI_ACOS,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_ACOSH	RVGPULibFunc.h	/^    EI_ACOSH,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_ACOSPI	RVGPULibFunc.h	/^    EI_ACOSPI,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_ADD_SAT	RVGPULibFunc.h	/^    EI_ADD_SAT,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_ALL	RVGPULibFunc.h	/^    EI_ALL,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_ANY	RVGPULibFunc.h	/^    EI_ANY,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_ASIN	RVGPULibFunc.h	/^    EI_ASIN,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_ASINH	RVGPULibFunc.h	/^    EI_ASINH,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_ASINPI	RVGPULibFunc.h	/^    EI_ASINPI,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_ASYNC_WORK_GROUP_COPY	RVGPULibFunc.h	/^    EI_ASYNC_WORK_GROUP_COPY,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_ASYNC_WORK_GROUP_STRIDED_COPY	RVGPULibFunc.h	/^    EI_ASYNC_WORK_GROUP_STRIDED_COPY,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_ATAN	RVGPULibFunc.h	/^    EI_ATAN,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_ATAN2	RVGPULibFunc.h	/^    EI_ATAN2,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_ATAN2PI	RVGPULibFunc.h	/^    EI_ATAN2PI,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_ATANH	RVGPULibFunc.h	/^    EI_ATANH,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_ATANPI	RVGPULibFunc.h	/^    EI_ATANPI,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_ATOMIC_ADD	RVGPULibFunc.h	/^    EI_ATOMIC_ADD,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_ATOMIC_AND	RVGPULibFunc.h	/^    EI_ATOMIC_AND,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_ATOMIC_CMPXCHG	RVGPULibFunc.h	/^    EI_ATOMIC_CMPXCHG,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_ATOMIC_DEC	RVGPULibFunc.h	/^    EI_ATOMIC_DEC,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_ATOMIC_INC	RVGPULibFunc.h	/^    EI_ATOMIC_INC,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_ATOMIC_MAX	RVGPULibFunc.h	/^    EI_ATOMIC_MAX,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_ATOMIC_MIN	RVGPULibFunc.h	/^    EI_ATOMIC_MIN,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_ATOMIC_OR	RVGPULibFunc.h	/^    EI_ATOMIC_OR,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_ATOMIC_SUB	RVGPULibFunc.h	/^    EI_ATOMIC_SUB,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_ATOMIC_XCHG	RVGPULibFunc.h	/^    EI_ATOMIC_XCHG,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_ATOMIC_XOR	RVGPULibFunc.h	/^    EI_ATOMIC_XOR,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_BITSELECT	RVGPULibFunc.h	/^    EI_BITSELECT,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_CBRT	RVGPULibFunc.h	/^    EI_CBRT,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_CEIL	RVGPULibFunc.h	/^    EI_CEIL,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_CLAMP	RVGPULibFunc.h	/^    EI_CLAMP,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_CLASS	RVGPULibFunc.h	/^    EI_CLASS,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_CLZ	RVGPULibFunc.h	/^    EI_CLZ,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_COMMIT_READ_PIPE	RVGPULibFunc.h	/^    EI_COMMIT_READ_PIPE,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_COMMIT_WRITE_PIPE	RVGPULibFunc.h	/^    EI_COMMIT_WRITE_PIPE,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_COPYSIGN	RVGPULibFunc.h	/^    EI_COPYSIGN,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_COS	RVGPULibFunc.h	/^    EI_COS,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_COSH	RVGPULibFunc.h	/^    EI_COSH,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_COSPI	RVGPULibFunc.h	/^    EI_COSPI,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_CROSS	RVGPULibFunc.h	/^    EI_CROSS,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_CTZ	RVGPULibFunc.h	/^    EI_CTZ,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_DEGREES	RVGPULibFunc.h	/^    EI_DEGREES,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_DISTANCE	RVGPULibFunc.h	/^    EI_DISTANCE,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_DIVIDE	RVGPULibFunc.h	/^    EI_DIVIDE,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_DOT	RVGPULibFunc.h	/^    EI_DOT,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_ERF	RVGPULibFunc.h	/^    EI_ERF,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_ERFC	RVGPULibFunc.h	/^    EI_ERFC,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_EXP	RVGPULibFunc.h	/^    EI_EXP,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_EXP10	RVGPULibFunc.h	/^    EI_EXP10,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_EXP2	RVGPULibFunc.h	/^    EI_EXP2,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_EXPM1	RVGPULibFunc.h	/^    EI_EXPM1,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_FABS	RVGPULibFunc.h	/^    EI_FABS,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_FAST_DISTANCE	RVGPULibFunc.h	/^    EI_FAST_DISTANCE,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_FAST_LENGTH	RVGPULibFunc.h	/^    EI_FAST_LENGTH,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_FAST_NORMALIZE	RVGPULibFunc.h	/^    EI_FAST_NORMALIZE,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_FDIM	RVGPULibFunc.h	/^    EI_FDIM,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_FLDEXP	RVGPULibFunc.h	/^    EI_FLDEXP,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_FLOOR	RVGPULibFunc.h	/^    EI_FLOOR,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_FMA	RVGPULibFunc.h	/^    EI_FMA,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_FMAX	RVGPULibFunc.h	/^    EI_FMAX,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_FMIN	RVGPULibFunc.h	/^    EI_FMIN,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_FMOD	RVGPULibFunc.h	/^    EI_FMOD,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_FRACT	RVGPULibFunc.h	/^    EI_FRACT,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_FREXP	RVGPULibFunc.h	/^    EI_FREXP,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_FTZ	RVGPULibFunc.h	/^    EI_FTZ,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_GET_IMAGE_ARRAY_SIZE	RVGPULibFunc.h	/^    EI_GET_IMAGE_ARRAY_SIZE,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_GET_IMAGE_CHANNEL_DATA_TYPE	RVGPULibFunc.h	/^    EI_GET_IMAGE_CHANNEL_DATA_TYPE,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_GET_IMAGE_CHANNEL_ORDER	RVGPULibFunc.h	/^    EI_GET_IMAGE_CHANNEL_ORDER,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_GET_IMAGE_DIM	RVGPULibFunc.h	/^    EI_GET_IMAGE_DIM,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_GET_IMAGE_HEIGHT	RVGPULibFunc.h	/^    EI_GET_IMAGE_HEIGHT,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_GET_IMAGE_WIDTH	RVGPULibFunc.h	/^    EI_GET_IMAGE_WIDTH,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_GET_PIPE_MAX_PACKETS	RVGPULibFunc.h	/^    EI_GET_PIPE_MAX_PACKETS,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_GET_PIPE_NUM_PACKETS	RVGPULibFunc.h	/^    EI_GET_PIPE_NUM_PACKETS,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_HADD	RVGPULibFunc.h	/^    EI_HADD,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_HYPOT	RVGPULibFunc.h	/^    EI_HYPOT,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_ILOGB	RVGPULibFunc.h	/^    EI_ILOGB,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_ISEQUAL	RVGPULibFunc.h	/^    EI_ISEQUAL,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_ISFINITE	RVGPULibFunc.h	/^    EI_ISFINITE,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_ISGREATER	RVGPULibFunc.h	/^    EI_ISGREATER,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_ISGREATEREQUAL	RVGPULibFunc.h	/^    EI_ISGREATEREQUAL,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_ISINF	RVGPULibFunc.h	/^    EI_ISINF,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_ISLESS	RVGPULibFunc.h	/^    EI_ISLESS,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_ISLESSEQUAL	RVGPULibFunc.h	/^    EI_ISLESSEQUAL,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_ISLESSGREATER	RVGPULibFunc.h	/^    EI_ISLESSGREATER,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_ISNAN	RVGPULibFunc.h	/^    EI_ISNAN,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_ISNORMAL	RVGPULibFunc.h	/^    EI_ISNORMAL,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_ISNOTEQUAL	RVGPULibFunc.h	/^    EI_ISNOTEQUAL,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_ISORDERED	RVGPULibFunc.h	/^    EI_ISORDERED,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_ISUNORDERED	RVGPULibFunc.h	/^    EI_ISUNORDERED,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_LAST_MANGLED	RVGPULibFunc.h	/^    EI_LAST_MANGLED =$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_LDEXP	RVGPULibFunc.h	/^    EI_LDEXP,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_LENGTH	RVGPULibFunc.h	/^    EI_LENGTH,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_LGAMMA	RVGPULibFunc.h	/^    EI_LGAMMA,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_LGAMMA_R	RVGPULibFunc.h	/^    EI_LGAMMA_R,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_LOG	RVGPULibFunc.h	/^    EI_LOG,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_LOG10	RVGPULibFunc.h	/^    EI_LOG10,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_LOG1P	RVGPULibFunc.h	/^    EI_LOG1P,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_LOG2	RVGPULibFunc.h	/^    EI_LOG2,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_LOGB	RVGPULibFunc.h	/^    EI_LOGB,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_MAD	RVGPULibFunc.h	/^    EI_MAD,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_MAD24	RVGPULibFunc.h	/^    EI_MAD24,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_MAD_HI	RVGPULibFunc.h	/^    EI_MAD_HI,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_MAD_SAT	RVGPULibFunc.h	/^    EI_MAD_SAT,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_MAX	RVGPULibFunc.h	/^    EI_MAX,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_MAXMAG	RVGPULibFunc.h	/^    EI_MAXMAG,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_MIN	RVGPULibFunc.h	/^    EI_MIN,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_MINMAG	RVGPULibFunc.h	/^    EI_MINMAG,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_MIX	RVGPULibFunc.h	/^    EI_MIX,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_MODF	RVGPULibFunc.h	/^    EI_MODF,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_MUL24	RVGPULibFunc.h	/^    EI_MUL24,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_MUL_HI	RVGPULibFunc.h	/^    EI_MUL_HI,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_NAN	RVGPULibFunc.h	/^    EI_NAN,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_NCOS	RVGPULibFunc.h	/^    EI_NCOS,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_NEXP2	RVGPULibFunc.h	/^    EI_NEXP2,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_NEXTAFTER	RVGPULibFunc.h	/^    EI_NEXTAFTER,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_NFMA	RVGPULibFunc.h	/^    EI_NFMA,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_NLOG2	RVGPULibFunc.h	/^    EI_NLOG2,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_NONE	RVGPULibFunc.h	/^    EI_NONE,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_NORMALIZE	RVGPULibFunc.h	/^    EI_NORMALIZE,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_NRCP	RVGPULibFunc.h	/^    EI_NRCP,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_NRSQRT	RVGPULibFunc.h	/^    EI_NRSQRT,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_NSIN	RVGPULibFunc.h	/^    EI_NSIN,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_NSQRT	RVGPULibFunc.h	/^    EI_NSQRT,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_POPCOUNT	RVGPULibFunc.h	/^    EI_POPCOUNT,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_POW	RVGPULibFunc.h	/^    EI_POW,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_POWN	RVGPULibFunc.h	/^    EI_POWN,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_POWR	RVGPULibFunc.h	/^    EI_POWR,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_PREFETCH	RVGPULibFunc.h	/^    EI_PREFETCH,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_RADIANS	RVGPULibFunc.h	/^    EI_RADIANS,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_RCBRT	RVGPULibFunc.h	/^    EI_RCBRT,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_READ_PIPE_2	RVGPULibFunc.h	/^    EI_READ_PIPE_2,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_READ_PIPE_4	RVGPULibFunc.h	/^    EI_READ_PIPE_4,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_RECIP	RVGPULibFunc.h	/^    EI_RECIP,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_REMAINDER	RVGPULibFunc.h	/^    EI_REMAINDER,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_REMQUO	RVGPULibFunc.h	/^    EI_REMQUO,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_RESERVE_READ_PIPE	RVGPULibFunc.h	/^    EI_RESERVE_READ_PIPE,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_RESERVE_WRITE_PIPE	RVGPULibFunc.h	/^    EI_RESERVE_WRITE_PIPE,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_RHADD	RVGPULibFunc.h	/^    EI_RHADD,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_RINT	RVGPULibFunc.h	/^    EI_RINT,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_ROOTN	RVGPULibFunc.h	/^    EI_ROOTN,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_ROTATE	RVGPULibFunc.h	/^    EI_ROTATE,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_ROUND	RVGPULibFunc.h	/^    EI_ROUND,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_RSQRT	RVGPULibFunc.h	/^    EI_RSQRT,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_SELECT	RVGPULibFunc.h	/^    EI_SELECT,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_SHUFFLE	RVGPULibFunc.h	/^    EI_SHUFFLE,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_SHUFFLE2	RVGPULibFunc.h	/^    EI_SHUFFLE2,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_SIGN	RVGPULibFunc.h	/^    EI_SIGN,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_SIGNBIT	RVGPULibFunc.h	/^    EI_SIGNBIT,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_SIN	RVGPULibFunc.h	/^    EI_SIN,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_SINCOS	RVGPULibFunc.h	/^    EI_SINCOS,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_SINH	RVGPULibFunc.h	/^    EI_SINH,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_SINPI	RVGPULibFunc.h	/^    EI_SINPI,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_SMOOTHSTEP	RVGPULibFunc.h	/^    EI_SMOOTHSTEP,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_SQRT	RVGPULibFunc.h	/^    EI_SQRT,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_STEP	RVGPULibFunc.h	/^    EI_STEP,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_SUB_GROUP_BROADCAST	RVGPULibFunc.h	/^    EI_SUB_GROUP_BROADCAST,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_SUB_GROUP_COMMIT_READ_PIPE	RVGPULibFunc.h	/^    EI_SUB_GROUP_COMMIT_READ_PIPE,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_SUB_GROUP_COMMIT_WRITE_PIPE	RVGPULibFunc.h	/^    EI_SUB_GROUP_COMMIT_WRITE_PIPE,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_SUB_GROUP_REDUCE_ADD	RVGPULibFunc.h	/^    EI_SUB_GROUP_REDUCE_ADD,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_SUB_GROUP_REDUCE_MAX	RVGPULibFunc.h	/^    EI_SUB_GROUP_REDUCE_MAX,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_SUB_GROUP_REDUCE_MIN	RVGPULibFunc.h	/^    EI_SUB_GROUP_REDUCE_MIN,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_SUB_GROUP_RESERVE_READ_PIPE	RVGPULibFunc.h	/^    EI_SUB_GROUP_RESERVE_READ_PIPE,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_SUB_GROUP_RESERVE_WRITE_PIPE	RVGPULibFunc.h	/^    EI_SUB_GROUP_RESERVE_WRITE_PIPE,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_SUB_GROUP_SCAN_EXCLUSIVE_ADD	RVGPULibFunc.h	/^    EI_SUB_GROUP_SCAN_EXCLUSIVE_ADD,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_SUB_GROUP_SCAN_EXCLUSIVE_MAX	RVGPULibFunc.h	/^    EI_SUB_GROUP_SCAN_EXCLUSIVE_MAX,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_SUB_GROUP_SCAN_EXCLUSIVE_MIN	RVGPULibFunc.h	/^    EI_SUB_GROUP_SCAN_EXCLUSIVE_MIN,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_SUB_GROUP_SCAN_INCLUSIVE_ADD	RVGPULibFunc.h	/^    EI_SUB_GROUP_SCAN_INCLUSIVE_ADD,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_SUB_GROUP_SCAN_INCLUSIVE_MAX	RVGPULibFunc.h	/^    EI_SUB_GROUP_SCAN_INCLUSIVE_MAX,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_SUB_GROUP_SCAN_INCLUSIVE_MIN	RVGPULibFunc.h	/^    EI_SUB_GROUP_SCAN_INCLUSIVE_MIN,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_SUB_SAT	RVGPULibFunc.h	/^    EI_SUB_SAT,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_TAN	RVGPULibFunc.h	/^    EI_TAN,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_TANH	RVGPULibFunc.h	/^    EI_TANH,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_TANPI	RVGPULibFunc.h	/^    EI_TANPI,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_TGAMMA	RVGPULibFunc.h	/^    EI_TGAMMA,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_TRUNC	RVGPULibFunc.h	/^    EI_TRUNC,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_UPSAMPLE	RVGPULibFunc.h	/^    EI_UPSAMPLE,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_VEC_STEP	RVGPULibFunc.h	/^    EI_VEC_STEP,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_VSTORE	RVGPULibFunc.h	/^    EI_VSTORE,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_VSTORE16	RVGPULibFunc.h	/^    EI_VSTORE16,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_VSTORE2	RVGPULibFunc.h	/^    EI_VSTORE2,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_VSTORE3	RVGPULibFunc.h	/^    EI_VSTORE3,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_VSTORE4	RVGPULibFunc.h	/^    EI_VSTORE4,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_VSTORE8	RVGPULibFunc.h	/^    EI_VSTORE8,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_WORK_GROUP_COMMIT_READ_PIPE	RVGPULibFunc.h	/^    EI_WORK_GROUP_COMMIT_READ_PIPE,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_WORK_GROUP_COMMIT_WRITE_PIPE	RVGPULibFunc.h	/^    EI_WORK_GROUP_COMMIT_WRITE_PIPE,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_WORK_GROUP_REDUCE_ADD	RVGPULibFunc.h	/^    EI_WORK_GROUP_REDUCE_ADD,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_WORK_GROUP_REDUCE_MAX	RVGPULibFunc.h	/^    EI_WORK_GROUP_REDUCE_MAX,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_WORK_GROUP_REDUCE_MIN	RVGPULibFunc.h	/^    EI_WORK_GROUP_REDUCE_MIN,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_WORK_GROUP_RESERVE_READ_PIPE	RVGPULibFunc.h	/^    EI_WORK_GROUP_RESERVE_READ_PIPE,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_WORK_GROUP_RESERVE_WRITE_PIPE	RVGPULibFunc.h	/^    EI_WORK_GROUP_RESERVE_WRITE_PIPE,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_WORK_GROUP_SCAN_EXCLUSIVE_ADD	RVGPULibFunc.h	/^    EI_WORK_GROUP_SCAN_EXCLUSIVE_ADD,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_WORK_GROUP_SCAN_EXCLUSIVE_MAX	RVGPULibFunc.h	/^    EI_WORK_GROUP_SCAN_EXCLUSIVE_MAX,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_WORK_GROUP_SCAN_EXCLUSIVE_MIN	RVGPULibFunc.h	/^    EI_WORK_GROUP_SCAN_EXCLUSIVE_MIN,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_WORK_GROUP_SCAN_INCLUSIVE_ADD	RVGPULibFunc.h	/^    EI_WORK_GROUP_SCAN_INCLUSIVE_ADD,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_WORK_GROUP_SCAN_INCLUSIVE_MAX	RVGPULibFunc.h	/^    EI_WORK_GROUP_SCAN_INCLUSIVE_MAX,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_WORK_GROUP_SCAN_INCLUSIVE_MIN	RVGPULibFunc.h	/^    EI_WORK_GROUP_SCAN_INCLUSIVE_MIN,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_WRITE_IMAGEF	RVGPULibFunc.h	/^    EI_WRITE_IMAGEF,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_WRITE_IMAGEI	RVGPULibFunc.h	/^    EI_WRITE_IMAGEI,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_WRITE_IMAGEUI	RVGPULibFunc.h	/^    EI_WRITE_IMAGEUI,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_WRITE_PIPE_2	RVGPULibFunc.h	/^    EI_WRITE_PIPE_2,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EI_WRITE_PIPE_4	RVGPULibFunc.h	/^    EI_WRITE_PIPE_4,$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
ELFRVGPUAsmBackend	MCTargetDesc/RVGPUAsmBackend.cpp	/^  ELFRVGPUAsmBackend(const Target &T, const Triple &TT, uint8_t ABIVersion) :$/;"	f	class:__anon6b905a380211::ELFRVGPUAsmBackend	file:
ELFRVGPUAsmBackend	MCTargetDesc/RVGPUAsmBackend.cpp	/^class ELFRVGPUAsmBackend : public RVGPUAsmBackend {$/;"	c	namespace:__anon6b905a380211	file:
ELF_RELOC	MCTargetDesc/RVGPUAsmBackend.cpp	/^#define ELF_RELOC(/;"	d	file:
ELSE	RVGPUISelLowering.h	/^  ELSE,$/;"	e	enum:llvm::RVGPUISD::NodeType
EManglingParam	RVGPULibFunc.cpp	/^enum EManglingParam {$/;"	g	namespace:__anona5afe38d0111	file:
ENABLE_INSTR_PREDICATE_VERIFIER	MCTargetDesc/RVGPUMCTargetDesc.cpp	/^#define ENABLE_INSTR_PREDICATE_VERIFIER$/;"	d	file:
ENABLE_MASK	SIDefines.h	/^  ENABLE_MASK = SRC0_ENABLE | SRC1_ENABLE | SRC2_ENABLE | DST_ENABLE,$/;"	e	enum:llvm::RVGPU::VGPRIndexMode::EncBits
ENDPGM	RVGPUISelLowering.h	/^  ENDPGM,$/;"	e	enum:llvm::RVGPUISD::NodeType
ENDPGM_TRAP	RVGPUISelLowering.h	/^  ENDPGM_TRAP,$/;"	e	enum:llvm::RVGPUISD::NodeType
ENamePrefix	RVGPULibFunc.h	/^  enum ENamePrefix {$/;"	g	class:llvm::RVGPULibFuncBase
EPtrKind	RVGPULibFunc.h	/^  enum EPtrKind {$/;"	g	class:llvm::RVGPULibFuncBase
ET_DUAL_SRC_BLEND0	SIDefines.h	/^  ET_DUAL_SRC_BLEND0 = 21, \/\/ GFX11+$/;"	e	enum:llvm::RVGPU::Exp::Target
ET_DUAL_SRC_BLEND1	SIDefines.h	/^  ET_DUAL_SRC_BLEND1 = 22, \/\/ GFX11+$/;"	e	enum:llvm::RVGPU::Exp::Target
ET_DUAL_SRC_BLEND_MAX_IDX	SIDefines.h	/^  ET_DUAL_SRC_BLEND_MAX_IDX = 1,$/;"	e	enum:llvm::RVGPU::Exp::Target
ET_INVALID	SIDefines.h	/^  ET_INVALID = 255,$/;"	e	enum:llvm::RVGPU::Exp::Target
ET_MRT0	SIDefines.h	/^  ET_MRT0 = 0,$/;"	e	enum:llvm::RVGPU::Exp::Target
ET_MRT7	SIDefines.h	/^  ET_MRT7 = 7,$/;"	e	enum:llvm::RVGPU::Exp::Target
ET_MRTZ	SIDefines.h	/^  ET_MRTZ = 8,$/;"	e	enum:llvm::RVGPU::Exp::Target
ET_MRTZ_MAX_IDX	SIDefines.h	/^  ET_MRTZ_MAX_IDX = 0,$/;"	e	enum:llvm::RVGPU::Exp::Target
ET_MRT_MAX_IDX	SIDefines.h	/^  ET_MRT_MAX_IDX = 7,$/;"	e	enum:llvm::RVGPU::Exp::Target
ET_NULL	SIDefines.h	/^  ET_NULL = 9,             \/\/ Pre-GFX11$/;"	e	enum:llvm::RVGPU::Exp::Target
ET_NULL_MAX_IDX	SIDefines.h	/^  ET_NULL_MAX_IDX = 0,$/;"	e	enum:llvm::RVGPU::Exp::Target
ET_PARAM0	SIDefines.h	/^  ET_PARAM0 = 32,          \/\/ Pre-GFX11$/;"	e	enum:llvm::RVGPU::Exp::Target
ET_PARAM31	SIDefines.h	/^  ET_PARAM31 = 63,         \/\/ Pre-GFX11$/;"	e	enum:llvm::RVGPU::Exp::Target
ET_PARAM_MAX_IDX	SIDefines.h	/^  ET_PARAM_MAX_IDX = 31,$/;"	e	enum:llvm::RVGPU::Exp::Target
ET_POS0	SIDefines.h	/^  ET_POS0 = 12,$/;"	e	enum:llvm::RVGPU::Exp::Target
ET_POS3	SIDefines.h	/^  ET_POS3 = 15,$/;"	e	enum:llvm::RVGPU::Exp::Target
ET_POS4	SIDefines.h	/^  ET_POS4 = 16,            \/\/ GFX10+$/;"	e	enum:llvm::RVGPU::Exp::Target
ET_POS_LAST	SIDefines.h	/^  ET_POS_LAST = ET_POS4,   \/\/ Highest pos used on any subtarget$/;"	e	enum:llvm::RVGPU::Exp::Target
ET_POS_MAX_IDX	SIDefines.h	/^  ET_POS_MAX_IDX = 4,$/;"	e	enum:llvm::RVGPU::Exp::Target
ET_PRIM	SIDefines.h	/^  ET_PRIM = 20,            \/\/ GFX10+$/;"	e	enum:llvm::RVGPU::Exp::Target
ET_PRIM_MAX_IDX	SIDefines.h	/^  ET_PRIM_MAX_IDX = 0,$/;"	e	enum:llvm::RVGPU::Exp::Target
EType	RVGPULibFunc.h	/^  enum EType {$/;"	g	class:llvm::RVGPULibFuncBase
EUsPerCU	RVGPUSubtarget.h	/^  unsigned EUsPerCU = 4;$/;"	m	class:llvm::RVGPUSubtarget	typeref:typename:unsigned
EVENT	RVGPULibFunc.h	/^    EVENT,$/;"	e	enum:llvm::RVGPULibFuncBase::EType
EVERGREEN	RVGPUSubtarget.h	/^    EVERGREEN = 3,$/;"	e	enum:llvm::RVGPUSubtarget::Generation
EXCPEnMSB	SIProgramInfo.h	/^    uint32_t EXCPEnMSB = 0;$/;"	m	struct:llvm::SIProgramInfo	typeref:typename:uint32_t
EXCPEnable	SIProgramInfo.h	/^    uint32_t EXCPEnable = 0;$/;"	m	struct:llvm::SIProgramInfo	typeref:typename:uint32_t
EXCP_EN_FLOAT_DIV0_MASK	SIDefines.h	/^  EXCP_EN_FLOAT_DIV0_MASK = 1 << 14,$/;"	e	enum:llvm::RVGPU::Hwreg::ModeRegisterMasks
EXCP_EN_INEXACT_MASK	SIDefines.h	/^  EXCP_EN_INEXACT_MASK = 1 << 17,$/;"	e	enum:llvm::RVGPU::Hwreg::ModeRegisterMasks
EXCP_EN_INPUT_DENORMAL_MASK	SIDefines.h	/^  EXCP_EN_INPUT_DENORMAL_MASK = 1 << 13,$/;"	e	enum:llvm::RVGPU::Hwreg::ModeRegisterMasks
EXCP_EN_INT_DIV0_MASK	SIDefines.h	/^  EXCP_EN_INT_DIV0_MASK = 1 << 18,$/;"	e	enum:llvm::RVGPU::Hwreg::ModeRegisterMasks
EXCP_EN_INVALID_MASK	SIDefines.h	/^  EXCP_EN_INVALID_MASK = 1 << 12,$/;"	e	enum:llvm::RVGPU::Hwreg::ModeRegisterMasks
EXCP_EN_OVERFLOW_MASK	SIDefines.h	/^  EXCP_EN_OVERFLOW_MASK = 1 << 15,$/;"	e	enum:llvm::RVGPU::Hwreg::ModeRegisterMasks
EXCP_EN_UNDERFLOW_MASK	SIDefines.h	/^  EXCP_EN_UNDERFLOW_MASK = 1 << 16,$/;"	e	enum:llvm::RVGPU::Hwreg::ModeRegisterMasks
EXECNZ	RVInstrInfo.h	/^    EXECNZ = -3,$/;"	e	enum:llvm::RVInstrInfo::BranchPredicate
EXECZ	RVInstrInfo.h	/^    EXECZ = 3$/;"	e	enum:llvm::RVInstrInfo::BranchPredicate
EXP	RVGPUISelLowering.h	/^  EXP,$/;"	e	enum:llvm::RVGPUISD::NodeType
EXP	SIDefines.h	/^  EXP = 1 << 23,$/;"	e	enum:llvm::SIInstrFlags::__anon1f24a7950203
EXP_CNT	SIDefines.h	/^  EXP_CNT = UINT64_C(1) << 33,$/;"	e	enum:llvm::SIInstrFlags::__anon1f24a7950203
EXP_CNT	SIInsertWaitcnts.cpp	/^enum InstCounterType { VM_CNT = 0, LGKM_CNT, EXP_CNT, VS_CNT, NUM_INST_CNTS };$/;"	e	enum:__anona6cbb7940111::InstCounterType	file:
EXP_GPR_LOCK	SIInsertWaitcnts.cpp	/^  EXP_GPR_LOCK,         \/\/ export holding on its data src$/;"	e	enum:__anona6cbb7940211::WaitEventType	file:
EXP_LDS_ACCESS	SIInsertWaitcnts.cpp	/^  EXP_LDS_ACCESS,       \/\/ read by ldsdir counting as export$/;"	e	enum:__anona6cbb7940211::WaitEventType	file:
EXP_PARAM_ACCESS	SIInsertWaitcnts.cpp	/^  EXP_PARAM_ACCESS,     \/\/ write to export parameter$/;"	e	enum:__anona6cbb7940211::WaitEventType	file:
EXP_POS_ACCESS	SIInsertWaitcnts.cpp	/^  EXP_POS_ACCESS,       \/\/ write to export position$/;"	e	enum:__anona6cbb7940211::WaitEventType	file:
EXTRA_VGPR_LDS	SIInsertWaitcnts.cpp	/^  EXTRA_VGPR_LDS = 0,     \/\/ An artificial register to track LDS writes.$/;"	e	enum:__anona6cbb7940211::RegisterMapping	file:
EX_EVENT	RVGPULibFunc.cpp	/^    EX_EVENT,$/;"	e	enum:__anona5afe38d0111::EManglingParam	file:
EX_FLOAT4	RVGPULibFunc.cpp	/^    EX_FLOAT4,$/;"	e	enum:__anona5afe38d0111::EManglingParam	file:
EX_INTRINSICS_COUNT	RVGPULibFunc.h	/^    EX_INTRINSICS_COUNT$/;"	e	enum:llvm::RVGPULibFuncBase::EFuncId
EX_INTV4	RVGPULibFunc.cpp	/^    EX_INTV4,$/;"	e	enum:__anona5afe38d0111::EManglingParam	file:
EX_RESERVEDID	RVGPULibFunc.cpp	/^    EX_RESERVEDID,$/;"	e	enum:__anona5afe38d0111::EManglingParam	file:
EX_SAMPLER	RVGPULibFunc.cpp	/^    EX_SAMPLER,$/;"	e	enum:__anona5afe38d0111::EManglingParam	file:
EX_SIZET	RVGPULibFunc.cpp	/^    EX_SIZET,$/;"	e	enum:__anona5afe38d0111::EManglingParam	file:
EX_UINT	RVGPULibFunc.cpp	/^    EX_UINT,$/;"	e	enum:__anona5afe38d0111::EManglingParam	file:
EX_UINTV4	RVGPULibFunc.cpp	/^    EX_UINTV4,$/;"	e	enum:__anona5afe38d0111::EManglingParam	file:
E_ANY	RVGPULibFunc.cpp	/^    E_ANY,$/;"	e	enum:__anona5afe38d0111::EManglingParam	file:
E_CONSTPTR_ANY	RVGPULibFunc.cpp	/^    E_CONSTPTR_ANY,$/;"	e	enum:__anona5afe38d0111::EManglingParam	file:
E_CONSTPTR_SWAPGL	RVGPULibFunc.cpp	/^    E_CONSTPTR_SWAPGL,$/;"	e	enum:__anona5afe38d0111::EManglingParam	file:
E_COPY	RVGPULibFunc.cpp	/^    E_COPY,$/;"	e	enum:__anona5afe38d0111::EManglingParam	file:
E_IMAGECOORDS	RVGPULibFunc.cpp	/^    E_IMAGECOORDS,$/;"	e	enum:__anona5afe38d0111::EManglingParam	file:
E_MAKEBASE_UNS	RVGPULibFunc.cpp	/^    E_MAKEBASE_UNS,$/;"	e	enum:__anona5afe38d0111::EManglingParam	file:
E_NONE	RVGPULibFunc.cpp	/^    E_NONE,$/;"	e	enum:__anona5afe38d0111::EManglingParam	file:
E_POINTEE	RVGPULibFunc.cpp	/^    E_POINTEE,$/;"	e	enum:__anona5afe38d0111::EManglingParam	file:
E_SETBASE_I32	RVGPULibFunc.cpp	/^    E_SETBASE_I32,$/;"	e	enum:__anona5afe38d0111::EManglingParam	file:
E_SETBASE_U32	RVGPULibFunc.cpp	/^    E_SETBASE_U32,$/;"	e	enum:__anona5afe38d0111::EManglingParam	file:
E_V16_OF_POINTEE	RVGPULibFunc.cpp	/^    E_V16_OF_POINTEE,$/;"	e	enum:__anona5afe38d0111::EManglingParam	file:
E_V2_OF_POINTEE	RVGPULibFunc.cpp	/^    E_V2_OF_POINTEE,$/;"	e	enum:__anona5afe38d0111::EManglingParam	file:
E_V3_OF_POINTEE	RVGPULibFunc.cpp	/^    E_V3_OF_POINTEE,$/;"	e	enum:__anona5afe38d0111::EManglingParam	file:
E_V4_OF_POINTEE	RVGPULibFunc.cpp	/^    E_V4_OF_POINTEE,$/;"	e	enum:__anona5afe38d0111::EManglingParam	file:
E_V8_OF_POINTEE	RVGPULibFunc.cpp	/^    E_V8_OF_POINTEE,$/;"	e	enum:__anona5afe38d0111::EManglingParam	file:
E_VLTLPTR_ANY	RVGPULibFunc.cpp	/^    E_VLTLPTR_ANY,$/;"	e	enum:__anona5afe38d0111::EManglingParam	file:
EarlierIssuingCycle	GCNSchedStrategy.cpp	/^struct EarlierIssuingCycle {$/;"	s	file:
EarlyInlineAll	RVGPUTargetMachine.cpp	/^static cl::opt<bool> EarlyInlineAll($/;"	v	typeref:typename:cl::opt<bool>	file:
ElfNote	RVGPUPTNote.h	/^namespace ElfNote {$/;"	n	namespace:llvm::RVGPU
Else	SIAnnotateControlFlow.cpp	/^  Function *Else;$/;"	m	class:__anond71df4850111::SIAnnotateControlFlow	typeref:typename:Function *	file:
EltSize	RVFrameLowering.cpp	/^  unsigned EltSize = 4;$/;"	m	class:llvm::PrologEpilogSGPRSpillBuilder	typeref:typename:unsigned	file:
EltSize	RVRegisterInfo.cpp	/^  unsigned EltSize = 4;$/;"	m	struct:llvm::SGPRSpillBuilder	typeref:typename:unsigned	file:
EltSize	SILoadStoreOptimizer.cpp	/^    unsigned EltSize;$/;"	m	struct:__anon677101620111::SILoadStoreOptimizer::CombineInfo	typeref:typename:unsigned	file:
EmitCodeEnd	MCTargetDesc/RVGPUTargetStreamer.cpp	/^bool RVGPUTargetAsmStreamer::EmitCodeEnd(const MCSubtargetInfo &STI) {$/;"	f	class:RVGPUTargetAsmStreamer	typeref:typename:bool
EmitCodeEnd	MCTargetDesc/RVGPUTargetStreamer.cpp	/^bool RVGPUTargetELFStreamer::EmitCodeEnd(const MCSubtargetInfo &STI) {$/;"	f	class:RVGPUTargetELFStreamer	typeref:typename:bool
EmitCodeEnd	MCTargetDesc/RVGPUTargetStreamer.h	/^  virtual bool EmitCodeEnd(const MCSubtargetInfo &STI) { return true; }$/;"	f	class:llvm::RVGPUTargetStreamer	typeref:typename:bool
EmitDirectiveHSACodeObjectISAV2	MCTargetDesc/RVGPUTargetStreamer.cpp	/^RVGPUTargetAsmStreamer::EmitDirectiveHSACodeObjectISAV2(uint32_t Major,$/;"	f	class:RVGPUTargetAsmStreamer	typeref:typename:void
EmitDirectiveHSACodeObjectISAV2	MCTargetDesc/RVGPUTargetStreamer.cpp	/^RVGPUTargetELFStreamer::EmitDirectiveHSACodeObjectISAV2(uint32_t Major,$/;"	f	class:RVGPUTargetELFStreamer	typeref:typename:void
EmitDirectiveHSACodeObjectISAV2	MCTargetDesc/RVGPUTargetStreamer.h	/^  virtual void EmitDirectiveHSACodeObjectISAV2(uint32_t Major, uint32_t Minor,$/;"	f	class:llvm::RVGPUTargetStreamer	typeref:typename:void
EmitDirectiveHSACodeObjectVersion	MCTargetDesc/RVGPUTargetStreamer.cpp	/^void RVGPUTargetAsmStreamer::EmitDirectiveHSACodeObjectVersion($/;"	f	class:RVGPUTargetAsmStreamer	typeref:typename:void
EmitDirectiveHSACodeObjectVersion	MCTargetDesc/RVGPUTargetStreamer.cpp	/^void RVGPUTargetELFStreamer::EmitDirectiveHSACodeObjectVersion($/;"	f	class:RVGPUTargetELFStreamer	typeref:typename:void
EmitDirectiveHSACodeObjectVersion	MCTargetDesc/RVGPUTargetStreamer.h	/^  virtual void EmitDirectiveHSACodeObjectVersion(uint32_t Major,$/;"	f	class:llvm::RVGPUTargetStreamer	typeref:typename:void
EmitDirectiveRVGPUTarget	MCTargetDesc/RVGPUTargetStreamer.cpp	/^void RVGPUTargetAsmStreamer::EmitDirectiveRVGPUTarget() {$/;"	f	class:RVGPUTargetAsmStreamer	typeref:typename:void
EmitDirectiveRVGPUTarget	MCTargetDesc/RVGPUTargetStreamer.cpp	/^void RVGPUTargetELFStreamer::EmitDirectiveRVGPUTarget() {}$/;"	f	class:RVGPUTargetELFStreamer	typeref:typename:void
EmitDirectiveRVGPUTarget	MCTargetDesc/RVGPUTargetStreamer.h	/^  virtual void EmitDirectiveRVGPUTarget(){};$/;"	f	class:llvm::RVGPUTargetStreamer	typeref:typename:void
EmitHSAMetadata	MCTargetDesc/RVGPUTargetStreamer.cpp	/^bool RVGPUTargetAsmStreamer::EmitHSAMetadata($/;"	f	class:RVGPUTargetAsmStreamer	typeref:typename:bool
EmitHSAMetadata	MCTargetDesc/RVGPUTargetStreamer.cpp	/^bool RVGPUTargetELFStreamer::EmitHSAMetadata($/;"	f	class:RVGPUTargetELFStreamer	typeref:typename:bool
EmitHSAMetadata	MCTargetDesc/RVGPUTargetStreamer.cpp	/^bool RVGPUTargetELFStreamer::EmitHSAMetadata(msgpack::Document &HSAMetadataDoc,$/;"	f	class:RVGPUTargetELFStreamer	typeref:typename:bool
EmitHSAMetadata	MCTargetDesc/RVGPUTargetStreamer.h	/^  virtual bool EmitHSAMetadata(const RVGPU::HSRV::Metadata &HSAMetadata) {$/;"	f	class:llvm::RVGPUTargetStreamer	typeref:typename:bool
EmitHSAMetadata	MCTargetDesc/RVGPUTargetStreamer.h	/^  virtual bool EmitHSAMetadata(msgpack::Document &HSAMetadata, bool Strict) {$/;"	f	class:llvm::RVGPUTargetStreamer	typeref:typename:bool
EmitHSAMetadataV2	MCTargetDesc/RVGPUTargetStreamer.cpp	/^bool RVGPUTargetStreamer::EmitHSAMetadataV2(StringRef HSAMetadataString) {$/;"	f	class:RVGPUTargetStreamer	typeref:typename:bool
EmitHSAMetadataV3	MCTargetDesc/RVGPUTargetStreamer.cpp	/^bool RVGPUTargetStreamer::EmitHSAMetadataV3(StringRef HSAMetadataString) {$/;"	f	class:RVGPUTargetStreamer	typeref:typename:bool
EmitISAVersion	MCTargetDesc/RVGPUTargetStreamer.cpp	/^bool RVGPUTargetAsmStreamer::EmitISAVersion() {$/;"	f	class:RVGPUTargetAsmStreamer	typeref:typename:bool
EmitISAVersion	MCTargetDesc/RVGPUTargetStreamer.cpp	/^bool RVGPUTargetELFStreamer::EmitISAVersion() {$/;"	f	class:RVGPUTargetELFStreamer	typeref:typename:bool
EmitISAVersion	MCTargetDesc/RVGPUTargetStreamer.h	/^  virtual bool EmitISAVersion() { return true; }$/;"	f	class:llvm::RVGPUTargetStreamer	typeref:typename:bool
EmitInstrWithCustomInserter	RVISelLowering.cpp	/^MachineBasicBlock *RVTargetLowering::EmitInstrWithCustomInserter($/;"	f	class:RVTargetLowering	typeref:typename:MachineBasicBlock *
EmitInstruction	GCNHazardRecognizer.cpp	/^void GCNHazardRecognizer::EmitInstruction(MachineInstr *MI) {$/;"	f	class:GCNHazardRecognizer	typeref:typename:void
EmitInstruction	GCNHazardRecognizer.cpp	/^void GCNHazardRecognizer::EmitInstruction(SUnit *SU) {$/;"	f	class:GCNHazardRecognizer	typeref:typename:void
EmitKernargPreloadHeader	MCTargetDesc/RVGPUTargetStreamer.cpp	/^bool RVGPUTargetAsmStreamer::EmitKernargPreloadHeader($/;"	f	class:RVGPUTargetAsmStreamer	typeref:typename:bool
EmitKernargPreloadHeader	MCTargetDesc/RVGPUTargetStreamer.cpp	/^bool RVGPUTargetELFStreamer::EmitKernargPreloadHeader($/;"	f	class:RVGPUTargetELFStreamer	typeref:typename:bool
EmitKernargPreloadHeader	MCTargetDesc/RVGPUTargetStreamer.h	/^  virtual bool EmitKernargPreloadHeader(const MCSubtargetInfo &STI) {$/;"	f	class:llvm::RVGPUTargetStreamer	typeref:typename:bool
EmitNoop	GCNHazardRecognizer.cpp	/^void GCNHazardRecognizer::EmitNoop() {$/;"	f	class:GCNHazardRecognizer	typeref:typename:void
EmitNote	MCTargetDesc/RVGPUTargetStreamer.cpp	/^void RVGPUTargetELFStreamer::EmitNote($/;"	f	class:RVGPUTargetELFStreamer	typeref:typename:void
EmitPALMetadata	RVGPUAsmPrinter.cpp	/^void RVGPUAsmPrinter::EmitPALMetadata(const MachineFunction &MF,$/;"	f	class:RVGPUAsmPrinter	typeref:typename:void
EmitProgramInfoSI	RVGPUAsmPrinter.cpp	/^void RVGPUAsmPrinter::EmitProgramInfoSI(const MachineFunction &MF,$/;"	f	class:RVGPUAsmPrinter	typeref:typename:void
EmitRVGPUSymbolType	MCTargetDesc/RVGPUTargetStreamer.cpp	/^void RVGPUTargetAsmStreamer::EmitRVGPUSymbolType(StringRef SymbolName,$/;"	f	class:RVGPUTargetAsmStreamer	typeref:typename:void
EmitRVGPUSymbolType	MCTargetDesc/RVGPUTargetStreamer.cpp	/^void RVGPUTargetELFStreamer::EmitRVGPUSymbolType(StringRef SymbolName,$/;"	f	class:RVGPUTargetELFStreamer	typeref:typename:void
EmitRVGPUSymbolType	MCTargetDesc/RVGPUTargetStreamer.h	/^  virtual void EmitRVGPUSymbolType(StringRef SymbolName, unsigned Type){};$/;"	f	class:llvm::RVGPUTargetStreamer	typeref:typename:void
EmitRVKernelCodeT	MCTargetDesc/RVGPUTargetStreamer.cpp	/^RVGPUTargetAsmStreamer::EmitRVKernelCodeT(const rv_kernel_code_t &Header) {$/;"	f	class:RVGPUTargetAsmStreamer	typeref:typename:void
EmitRVKernelCodeT	MCTargetDesc/RVGPUTargetStreamer.cpp	/^RVGPUTargetELFStreamer::EmitRVKernelCodeT(const rv_kernel_code_t &Header) {$/;"	f	class:RVGPUTargetELFStreamer	typeref:typename:void
EmitRVKernelCodeT	MCTargetDesc/RVGPUTargetStreamer.h	/^  virtual void EmitRVKernelCodeT(const rv_kernel_code_t &Header){};$/;"	f	class:llvm::RVGPUTargetStreamer	typeref:typename:void
EmitRvhsaKernelDescriptor	MCTargetDesc/RVGPUTargetStreamer.cpp	/^void RVGPUTargetAsmStreamer::EmitRvhsaKernelDescriptor($/;"	f	class:RVGPUTargetAsmStreamer	typeref:typename:void
EmitRvhsaKernelDescriptor	MCTargetDesc/RVGPUTargetStreamer.cpp	/^void RVGPUTargetELFStreamer::EmitRvhsaKernelDescriptor($/;"	f	class:RVGPUTargetELFStreamer	typeref:typename:void
EmitRvhsaKernelDescriptor	MCTargetDesc/RVGPUTargetStreamer.h	/^  virtual void EmitRvhsaKernelDescriptor($/;"	f	class:llvm::RVGPUTargetStreamer	typeref:typename:void
EmittedInstrs	GCNHazardRecognizer.h	/^  std::list<MachineInstr*> EmittedInstrs;$/;"	m	class:llvm::GCNHazardRecognizer	typeref:typename:std::list<MachineInstr * >
EnableCuMode	GCNSubtarget.h	/^  bool EnableCuMode = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
EnableDPPCombine	RVGPUTargetMachine.cpp	/^static cl::opt<bool> EnableDPPCombine($/;"	v	typeref:typename:cl::opt<bool>	file:
EnableDS128	GCNSubtarget.h	/^  bool EnableDS128 = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
EnableEarlyIfConversion	RVGPUTargetMachine.cpp	/^EnableEarlyIfConversion("rvgpu-early-ifcvt", cl::Hidden,$/;"	v	typeref:typename:cl::opt<bool>	file:
EnableExactSolver	RVGPUIGroupLP.cpp	/^static cl::opt<bool> EnableExactSolver($/;"	v	namespace:__anon61b122dc0111	typeref:typename:cl::opt<bool>	file:
EnableFlatScratch	GCNSubtarget.h	/^  bool EnableFlatScratch = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
EnableFunctionCalls	RVGPUTargetMachine.cpp	/^bool RVGPUTargetMachine::EnableFunctionCalls = false;$/;"	m	class:RVGPUTargetMachine	typeref:typename:bool
EnableFunctionCalls	RVGPUTargetMachine.h	/^  static bool EnableFunctionCalls;$/;"	m	class:llvm::RVGPUTargetMachine	typeref:typename:bool
EnableHipStdPar	RVGPUTargetMachine.cpp	/^static cl::opt<bool> EnableHipStdPar($/;"	v	typeref:typename:cl::opt<bool>	file:
EnableImageIntrinsicOptimizer	RVGPUTargetMachine.cpp	/^static cl::opt<bool> EnableImageIntrinsicOptimizer($/;"	v	typeref:typename:cl::opt<bool>	file:
EnableInsertDelayAlu	RVGPUTargetMachine.cpp	/^    EnableInsertDelayAlu("rvgpu-enable-delay-alu",$/;"	v	typeref:typename:cl::opt<bool>	file:
EnableInsertSingleUseVDST	RVGPUTargetMachine.cpp	/^    EnableInsertSingleUseVDST("rvgpu-enable-single-use-vdst",$/;"	v	typeref:typename:cl::opt<bool>	file:
EnableLateStructurizeCFG	RVGPUISelDAGToDAG.h	/^  bool EnableLateStructurizeCFG;$/;"	m	class:RVGPUDAGToDAGISel	typeref:typename:bool
EnableLateStructurizeCFG	RVGPUInstructionSelector.h	/^  bool EnableLateStructurizeCFG;$/;"	m	class:llvm::RVGPUInstructionSelector	typeref:typename:bool
EnableLateStructurizeCFG	RVGPUTargetMachine.cpp	/^bool RVGPUTargetMachine::EnableLateStructurizeCFG = false;$/;"	m	class:RVGPUTargetMachine	typeref:typename:bool
EnableLateStructurizeCFG	RVGPUTargetMachine.h	/^  static bool EnableLateStructurizeCFG;$/;"	m	class:llvm::RVGPUTargetMachine	typeref:typename:bool
EnableLibCallSimplify	RVGPUTargetMachine.cpp	/^static cl::opt<bool> EnableLibCallSimplify($/;"	v	typeref:typename:cl::opt<bool>	file:
EnableLoadStoreOpt	GCNSubtarget.h	/^  bool EnableLoadStoreOpt = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
EnableLoadStoreVectorizer	RVGPUTargetMachine.cpp	/^static cl::opt<bool> EnableLoadStoreVectorizer($/;"	v	typeref:typename:cl::opt<bool>	file:
EnableLoopPrefetch	RVGPUTargetMachine.cpp	/^    EnableLoopPrefetch("rvgpu-loop-prefetch",$/;"	v	typeref:typename:cl::opt<bool>	file:
EnableLowerKernelArguments	RVGPUTargetMachine.cpp	/^static cl::opt<bool> EnableLowerKernelArguments($/;"	v	typeref:typename:cl::opt<bool>	file:
EnableLowerModuleLDS	RVGPUTargetMachine.cpp	/^bool RVGPUTargetMachine::EnableLowerModuleLDS = true;$/;"	m	class:RVGPUTargetMachine	typeref:typename:bool
EnableLowerModuleLDS	RVGPUTargetMachine.cpp	/^static cl::opt<bool, true> EnableLowerModuleLDS($/;"	v	typeref:typename:cl::opt<bool,true>	file:
EnableLowerModuleLDS	RVGPUTargetMachine.h	/^  static bool EnableLowerModuleLDS;$/;"	m	class:llvm::RVGPUTargetMachine	typeref:typename:bool
EnableM0Merge	SIFixSGPRCopies.cpp	/^static cl::opt<bool> EnableM0Merge($/;"	v	typeref:typename:cl::opt<bool>	file:
EnableMaxIlpSchedStrategy	RVGPUTargetMachine.cpp	/^static cl::opt<bool> EnableMaxIlpSchedStrategy($/;"	v	typeref:typename:cl::opt<bool>	file:
EnableNewLegality	RVGPULegalizerInfo.cpp	/^static cl::opt<bool> EnableNewLegality($/;"	v	typeref:typename:cl::opt<bool>	file:
EnableOptimizeEndCf	SILowerControlFlow.cpp	/^  bool EnableOptimizeEndCf = false;$/;"	m	class:__anon0ce7c3340111::SILowerControlFlow	typeref:typename:bool	file:
EnablePRTStrictNull	GCNSubtarget.h	/^  bool EnablePRTStrictNull = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
EnablePowerSched	RVGPUSubtarget.cpp	/^static cl::opt<bool> EnablePowerSched($/;"	v	typeref:typename:cl::opt<bool>	file:
EnablePreLink	RVGPULibCalls.cpp	/^static cl::opt<bool> EnablePreLink("rvgpu-prelink",$/;"	v	typeref:typename:cl::opt<bool>	file:
EnablePreRAOptimizations	RVGPUTargetMachine.cpp	/^static cl::opt<bool> EnablePreRAOptimizations($/;"	v	typeref:typename:cl::opt<bool>	file:
EnablePromoteAlloca	RVGPUSubtarget.h	/^  bool EnablePromoteAlloca = false;$/;"	m	class:llvm::RVGPUSubtarget	typeref:typename:bool
EnablePromoteKernelArguments	RVGPUTargetMachine.cpp	/^static cl::opt<bool> EnablePromoteKernelArguments($/;"	v	typeref:typename:cl::opt<bool>	file:
EnableRVGPUAliasAnalysis	RVGPUTargetMachine.cpp	/^static cl::opt<bool> EnableRVGPUAliasAnalysis("enable-rvgpu-aa", cl::Hidden,$/;"	v	typeref:typename:cl::opt<bool>	file:
EnableRealTrue16Insts	RVGPUSubtarget.h	/^  bool EnableRealTrue16Insts = false;$/;"	m	class:llvm::RVGPUSubtarget	typeref:typename:bool
EnableRegReassign	RVGPUTargetMachine.cpp	/^static cl::opt<bool> EnableRegReassign($/;"	v	typeref:typename:cl::opt<bool>	file:
EnableRewritePartialRegUses	RVGPUTargetMachine.cpp	/^static cl::opt<bool> EnableRewritePartialRegUses($/;"	v	typeref:typename:cl::opt<bool>	file:
EnableSDWAPeephole	RVGPUTargetMachine.cpp	/^static cl::opt<bool> EnableSDWAPeephole($/;"	v	typeref:typename:cl::opt<bool>	file:
EnableSIModeRegisterPass	RVGPUTargetMachine.cpp	/^static cl::opt<bool> EnableSIModeRegisterPass($/;"	v	typeref:typename:cl::opt<bool>	file:
EnableSIScheduler	GCNSubtarget.h	/^  bool EnableSIScheduler = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
EnableSRAMECC	GCNSubtarget.h	/^  bool EnableSRAMECC = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
EnableScalarIRPasses	RVGPUTargetMachine.cpp	/^static cl::opt<bool> EnableScalarIRPasses($/;"	v	typeref:typename:cl::opt<bool>	file:
EnableSetWavePriority	RVGPUTargetMachine.cpp	/^static cl::opt<bool> EnableSetWavePriority("rvgpu-set-wave-priority",$/;"	v	typeref:typename:cl::opt<bool>	file:
EnableSpillSGPRToVGPR	RVRegisterInfo.cpp	/^static cl::opt<bool> EnableSpillSGPRToVGPR($/;"	v	typeref:typename:cl::opt<bool>	file:
EnableSpillVGPRToAGPR	RVFrameLowering.cpp	/^static cl::opt<bool> EnableSpillVGPRToAGPR($/;"	v	typeref:typename:cl::opt<bool>	file:
EnableStructurizerWorkarounds	RVGPUTargetMachine.cpp	/^static cl::opt<bool> EnableStructurizerWorkarounds($/;"	v	typeref:typename:cl::opt<bool>	file:
EnableTgSplit	GCNSubtarget.h	/^  bool EnableTgSplit = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
EnableUnsafeDSOffsetFolding	GCNSubtarget.h	/^  bool EnableUnsafeDSOffsetFolding = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
EnableVGPRIndexMode	RVGPUSubtarget.cpp	/^static cl::opt<bool> EnableVGPRIndexMode($/;"	v	typeref:typename:cl::opt<bool>	file:
EnableVOPD	RVGPUTargetMachine.cpp	/^    EnableVOPD("rvgpu-enable-vopd",$/;"	v	typeref:typename:cl::opt<bool>	file:
EnableWavefrontSize32	Disassembler/RVGPUDisassembler.h	/^  mutable std::optional<bool> EnableWavefrontSize32;$/;"	m	class:llvm::RVGPUDisassembler	typeref:typename:std::optional<bool>
EnableXNACK	GCNSubtarget.h	/^  bool EnableXNACK = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
EnablesInitialMFMA	RVGPUIGroupLP.cpp	/^    EnablesInitialMFMA(const RVInstrInfo *TII, unsigned SGID,$/;"	f	class:__anon61b122dc0111::MFMASmallGemmSingleWaveOpt::EnablesInitialMFMA	file:
EnablesInitialMFMA	RVGPUIGroupLP.cpp	/^  class EnablesInitialMFMA final : public InstructionRule {$/;"	c	class:__anon61b122dc0111::MFMASmallGemmSingleWaveOpt	file:
EncBits	SIDefines.h	/^enum EncBits : unsigned {$/;"	g	namespace:llvm::RVGPU::Swizzle	typeref:typename:unsigned
EncBits	SIDefines.h	/^enum EncBits : unsigned {$/;"	g	namespace:llvm::RVGPU::VGPRIndexMode	typeref:typename:unsigned
EncValues	SIDefines.h	/^namespace EncValues { \/\/ Encoding values of enum9\/8\/7 operands$/;"	n	namespace:llvm::RVGPU
Encoding	SIInsertWaitcnts.cpp	/^  RegisterEncoding Encoding = {};$/;"	m	class:__anona6cbb7940211::WaitcntBrackets	typeref:typename:RegisterEncoding	file:
Encoding	Utils/RVGPUAsmUtils.h	/^  int Encoding = 0;$/;"	m	struct:llvm::RVGPU::CustomOperand	typeref:typename:int
Encoding	Utils/RVGPUBaseInfo.h	/^  uint8_t Encoding;$/;"	m	struct:llvm::RVGPU::MIMGDimInfo	typeref:typename:uint8_t
End	GCNIterativeScheduler.h	/^    const MachineBasicBlock::iterator End;$/;"	m	struct:llvm::GCNIterativeScheduler::Region	typeref:typename:const MachineBasicBlock::iterator
EndCf	SIAnnotateControlFlow.cpp	/^  Function *EndCf;$/;"	m	class:__anond71df4850111::SIAnnotateControlFlow	typeref:typename:Function *	file:
EndLoc	AsmParser/RVGPUAsmParser.cpp	/^  SMLoc StartLoc, EndLoc;$/;"	m	class:__anon672fa8550111::RVGPUOperand	typeref:typename:SMLoc	file:
Entry	RVGPUMachineCFGStructurizer.cpp	/^  MachineBasicBlock *Entry;$/;"	m	class:__anon1695b1f50211::LinearizedRegion	typeref:typename:MachineBasicBlock *	file:
ErrorMargin	GCNSchedStrategy.h	/^  unsigned ErrorMargin = 3;$/;"	m	class:llvm::GCNSchedStrategy	typeref:typename:unsigned
Exec	SILowerControlFlow.cpp	/^  unsigned Exec;$/;"	m	class:__anon0ce7c3340111::SILowerControlFlow	typeref:typename:unsigned	file:
Exec	SIOptimizeExecMasking.cpp	/^  MCRegister Exec;$/;"	m	class:__anon15773df20111::SIOptimizeExecMasking	typeref:typename:MCRegister	file:
Exec	SIWholeQuadMode.cpp	/^  Register Exec;$/;"	m	class:__anon41aff2810111::SIWholeQuadMode	typeref:typename:Register	file:
ExecPos	GCNHazardRecognizer.cpp	/^    int ExecPos = std::numeric_limits<int>::max();$/;"	m	struct:GCNHazardRecognizer::fixVALUPartialForwardingHazard::StateType	typeref:typename:int	file:
ExecReg	RVRegisterInfo.cpp	/^  Register ExecReg;$/;"	m	struct:llvm::SGPRSpillBuilder	typeref:typename:Register	file:
ExecReg	SILateBranchLowering.cpp	/^  Register ExecReg;$/;"	m	class:__anon4aa55dad0111::SILateBranchLowering	typeref:typename:Register	file:
ExecReg	SILowerI1Copies.h	/^  Register ExecReg;$/;"	m	class:llvm::PhiLoweringHelper	typeref:typename:Register
ExecReg	SIOptimizeExecMaskingPreRA.cpp	/^  MCRegister ExecReg;$/;"	m	class:__anon5760078c0111::SIOptimizeExecMaskingPreRA	typeref:typename:MCRegister	file:
Exit	RVGPUMachineCFGStructurizer.cpp	/^  MachineBasicBlock *Exit;$/;"	m	class:__anon1695b1f50211::LinearizedRegion	typeref:typename:MachineBasicBlock *	file:
Exit	SIModeRegister.cpp	/^  Status Exit;$/;"	m	class:BlockData	typeref:typename:Status	file:
ExitSet	SIModeRegister.cpp	/^  bool ExitSet = false;$/;"	m	class:BlockData	typeref:typename:bool	file:
Exp	SIDefines.h	/^namespace Exp {$/;"	n	namespace:llvm::RVGPU
Exp	Utils/RVGPUBaseInfo.cpp	/^namespace Exp {$/;"	n	namespace:llvm::RVGPU	file:
Exp	Utils/RVGPUBaseInfo.h	/^namespace Exp {$/;"	n	namespace:llvm::RVGPU
ExpCnt	MCA/RVGPUCustomBehaviour.h	/^  bool ExpCnt = false;$/;"	m	struct:llvm::mca::WaitCntInfo	typeref:typename:bool
ExpCnt	Utils/RVGPUBaseInfo.h	/^  unsigned ExpCnt = ~0u;$/;"	m	struct:llvm::RVGPU::Waitcnt	typeref:typename:unsigned
ExpTgt	Utils/RVGPUBaseInfo.cpp	/^struct ExpTgt {$/;"	s	namespace:llvm::RVGPU::Exp	file:
ExpTgtInfo	Utils/RVGPUBaseInfo.cpp	/^static constexpr ExpTgt ExpTgtInfo[] = {$/;"	v	namespace:llvm::RVGPU::Exp	typeref:typename:ExpTgt[]	file:
Expand32BitAddress	RVGPUISelDAGToDAG.cpp	/^SDValue RVGPUDAGToDAGISel::Expand32BitAddress(SDValue Addr) const {$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:SDValue
ExpandDiv64InIR	RVGPUCodeGenPrepare.cpp	/^static cl::opt<bool> ExpandDiv64InIR($/;"	v	namespace:__anond35e324e0111	typeref:typename:cl::opt<bool>	file:
ExpcntMax	SIInsertWaitcnts.cpp	/^  unsigned ExpcntMax;$/;"	m	struct:__anona6cbb7940211::HardwareLimits	typeref:typename:unsigned	file:
ExplicitKernArgSize	RVGPUMachineFunction.h	/^  uint64_t ExplicitKernArgSize = 0; \/\/ Cache for this.$/;"	m	class:llvm::RVGPUMachineFunction	typeref:typename:uint64_t
ExplicitKernArgSize	RVMachineFunctionInfo.h	/^  uint64_t ExplicitKernArgSize = 0;$/;"	m	struct:llvm::yaml::RVMachineFunctionInfo	typeref:typename:uint64_t
ExportClustering	RVGPUExportClustering.cpp	/^class ExportClustering : public ScheduleDAGMutation {$/;"	c	namespace:__anonbb53b5ac0111	file:
Expr	AsmParser/RVGPUAsmParser.cpp	/^    const MCExpr *Expr;$/;"	m	union:__anon672fa8550111::RVGPUOperand::__anon672fa855020a	typeref:typename:const MCExpr *	file:
Expression	AsmParser/RVGPUAsmParser.cpp	/^    Expression$/;"	e	enum:__anon672fa8550111::RVGPUOperand::KindTy	file:
ExtendedFltRoundOffset	SIModeRegisterDefaults.h	/^static constexpr uint32_t ExtendedFltRoundOffset = 4;$/;"	v	namespace:llvm::RVGPU	typeref:typename:uint32_t
ExternFunctionInfo	RVGPUArgumentUsageInfo.h	/^  static const RVGPUFunctionArgInfo ExternFunctionInfo;$/;"	m	class:llvm::RVGPUArgumentUsageInfo	typeref:typename:const RVGPUFunctionArgInfo
F	RVGPULowerKernelArguments.cpp	/^  Function &F;$/;"	m	class:__anonf85f450a0111::PreloadKernelArgInfo	typeref:typename:Function &	file:
F16	RVGPULibFunc.h	/^    F16 = FLOAT | B16,$/;"	e	enum:llvm::RVGPULibFuncBase::EType
F32	RVGPULibFunc.h	/^    F32 = FLOAT | B32,$/;"	e	enum:llvm::RVGPULibFuncBase::EType
F32FltRoundOffset	SIModeRegisterDefaults.h	/^static constexpr uint32_t F32FltRoundOffset = 0;$/;"	v	namespace:llvm::RVGPU	typeref:typename:uint32_t
F64	RVGPULibFunc.h	/^    F64 = FLOAT | B64,$/;"	e	enum:llvm::RVGPULibFuncBase::EType
F64FltRoundOffset	SIModeRegisterDefaults.h	/^static constexpr uint32_t F64FltRoundOffset = 2;$/;"	v	namespace:llvm::RVGPU	typeref:typename:uint32_t
FDOT2	RVGPUISelLowering.h	/^  FDOT2,$/;"	e	enum:llvm::RVGPUISD::NodeType
FFBH_I32	RVGPUISelLowering.h	/^  FFBH_I32,$/;"	e	enum:llvm::RVGPUISD::NodeType
FFBH_U32	RVGPUISelLowering.h	/^  FFBH_U32, \/\/ ctlz with -1 if input is zero.$/;"	e	enum:llvm::RVGPUISD::NodeType
FFBL_B32	RVGPUISelLowering.h	/^  FFBL_B32, \/\/ cttz with -1 if input is zero.$/;"	e	enum:llvm::RVGPUISD::NodeType
FIELD	Utils/RVKernelCodeTInfo.h	/^#define FIELD(/;"	d
FIELD2	Utils/RVKernelCodeTInfo.h	/^#define FIELD2(/;"	d
FIM	RVGPUPerfHintAnalysis.cpp	/^  RVGPUPerfHintAnalysis::FuncInfoMap &FIM;$/;"	m	struct:__anon406ad74e0111::RVGPUPerfHint	typeref:typename:RVGPUPerfHintAnalysis::FuncInfoMap &	file:
FIM	RVGPUPerfHintAnalysis.h	/^  FuncInfoMap FIM;$/;"	m	struct:llvm::RVGPUPerfHintAnalysis	typeref:typename:FuncInfoMap
FIRST_IMPLICIT	RVGPUISelLowering.h	/^    FIRST_IMPLICIT,$/;"	e	enum:llvm::RVGPUTargetLowering::ImplicitParameter
FIRST_MC_SRC_IDX	Utils/RVGPUBaseInfo.h	/^  static constexpr unsigned FIRST_MC_SRC_IDX[] = {1, 2, 2 \/* + OpX.MCSrcNum *\/};$/;"	m	class:llvm::RVGPU::VOPD::ComponentLayout	typeref:typename:unsigned[]
FIRST_MEM_OPCODE_NUMBER	RVGPUISelLowering.h	/^  FIRST_MEM_OPCODE_NUMBER = ISD::FIRST_TARGET_MEMORY_OPCODE,$/;"	e	enum:llvm::RVGPUISD::NodeType
FIRST_NUMBER	RVGPUISelLowering.h	/^  FIRST_NUMBER = ISD::BUILTIN_OP_END,$/;"	e	enum:llvm::RVGPUISD::NodeType
FIRST_PARSED_SRC_IDX	Utils/RVGPUBaseInfo.h	/^  static constexpr unsigned FIRST_PARSED_SRC_IDX[] = {$/;"	m	class:llvm::RVGPU::VOPD::ComponentLayout	typeref:typename:unsigned[]
FIRST_VGPR_VALUE	RVGPUArgumentUsageInfo.h	/^    FIRST_VGPR_VALUE    = WORKITEM_ID_X$/;"	e	enum:llvm::RVGPUFunctionArgInfo::PreloadedValue
FIXED	GCNNSAReassign.cpp	/^    FIXED,          \/\/ NSA which we cannot modify$/;"	e	enum:__anon7e838c8c0111::GCNNSAReassign::__anon7e838c8c0203	file:
FIXED_NUM_SGPRS_FOR_INIT_BUG	Utils/RVGPUBaseInfo.h	/^  FIXED_NUM_SGPRS_FOR_INIT_BUG = 96,$/;"	e	enum:llvm::RVGPU::IsaInfo::__anon2734ef760203
FIXED_SIZE	SIDefines.h	/^  FIXED_SIZE = UINT64_C(1) << 40,$/;"	e	enum:llvm::SIInstrFlags::__anon1f24a7950203
FKind	RVGPULibFunc.h	/^  ENamePrefix FKind = NOPFX;$/;"	m	class:llvm::RVGPULibFuncImpl	typeref:typename:ENamePrefix
FLAT	SIDefines.h	/^  FLAT = 1 << 24,$/;"	e	enum:llvm::SIInstrFlags::__anon1f24a7950203
FLAT	SIMemoryLegalizer.cpp	/^  FLAT = GLOBAL | LDS | SCRATCH,$/;"	e	enum:__anon46517b8a0111::SIAtomicAddrSpace	file:
FLAT_LOAD	SILoadStoreOptimizer.cpp	/^  FLAT_LOAD,$/;"	e	enum:__anon677101620111::InstClassEnum	file:
FLAT_SCRATCH_INIT	RVGPUArgumentUsageInfo.h	/^    FLAT_SCRATCH_INIT   =  5,$/;"	e	enum:llvm::RVGPUFunctionArgInfo::PreloadedValue
FLAT_STORE	SILoadStoreOptimizer.cpp	/^  FLAT_STORE,$/;"	e	enum:__anon677101620111::InstClassEnum	file:
FLD_T	Utils/RVKernelCodeTInfo.h	/^#define FLD_T(/;"	d
FLOAT	RVGPULibFunc.h	/^    FLOAT = 0x10,$/;"	e	enum:llvm::RVGPULibFuncBase::EType
FMA	GCNSubtarget.h	/^  bool FMA = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
FMAD_FTZ	RVGPUISelLowering.h	/^  FMAD_FTZ,$/;"	e	enum:llvm::RVGPUISD::NodeType
FMAX3	RVGPUISelLowering.h	/^  FMAX3,$/;"	e	enum:llvm::RVGPUISD::NodeType
FMAXIMUM3	RVGPUISelLowering.h	/^  FMAXIMUM3,$/;"	e	enum:llvm::RVGPUISD::NodeType
FMAX_LEGACY	RVGPUISelLowering.h	/^  FMAX_LEGACY,$/;"	e	enum:llvm::RVGPUISD::NodeType
FMA_W_CHAIN	RVGPUISelLowering.h	/^  FMA_W_CHAIN,$/;"	e	enum:llvm::RVGPUISD::NodeType
FMED3	RVGPUISelLowering.h	/^  FMED3,$/;"	e	enum:llvm::RVGPUISD::NodeType
FMIN3	RVGPUISelLowering.h	/^  FMIN3,$/;"	e	enum:llvm::RVGPUISD::NodeType
FMINIMUM3	RVGPUISelLowering.h	/^  FMINIMUM3,$/;"	e	enum:llvm::RVGPUISD::NodeType
FMIN_LEGACY	RVGPUISelLowering.h	/^  FMIN_LEGACY,$/;"	e	enum:llvm::RVGPUISD::NodeType
FMUL_LEGACY	RVGPUISelLowering.h	/^  FMUL_LEGACY,$/;"	e	enum:llvm::RVGPUISD::NodeType
FMUL_W_CHAIN	RVGPUISelLowering.h	/^  FMUL_W_CHAIN,$/;"	e	enum:llvm::RVGPUISD::NodeType
FMinFMaxLegacyInfo	RVGPUPostLegalizerCombiner.cpp	/^  struct FMinFMaxLegacyInfo {$/;"	s	class:__anonf94dcdde0111::RVGPUPostLegalizerCombinerImpl	file:
FP32Denormals	SIModeRegisterDefaults.h	/^  DenormalMode FP32Denormals;$/;"	m	struct:llvm::SIModeRegisterDefaults	typeref:typename:DenormalMode
FP32InputDenormals	RVMachineFunctionInfo.h	/^  bool FP32InputDenormals = true;$/;"	m	struct:llvm::yaml::SIMode	typeref:typename:bool
FP32OutputDenormals	RVMachineFunctionInfo.h	/^  bool FP32OutputDenormals = true;$/;"	m	struct:llvm::yaml::SIMode	typeref:typename:bool
FP64	GCNSubtarget.h	/^  bool FP64 = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
FP64FP16Denormals	SIModeRegisterDefaults.h	/^  DenormalMode FP64FP16Denormals;$/;"	m	struct:llvm::SIModeRegisterDefaults	typeref:typename:DenormalMode
FP64FP16InputDenormals	RVMachineFunctionInfo.h	/^  bool FP64FP16InputDenormals = true;$/;"	m	struct:llvm::yaml::SIMode	typeref:typename:bool
FP64FP16OutputDenormals	RVMachineFunctionInfo.h	/^  bool FP64FP16OutputDenormals = true;$/;"	m	struct:llvm::yaml::SIMode	typeref:typename:bool
FPAtomic	SIDefines.h	/^  FPAtomic = UINT64_C(1) << 53,$/;"	e	enum:llvm::SIInstrFlags::__anon1f24a7950203
FPClamp	SIDefines.h	/^  FPClamp = UINT64_C(1) << 45,$/;"	e	enum:llvm::SIInstrFlags::__anon1f24a7950203
FPDPRounding	SIDefines.h	/^  FPDPRounding = UINT64_C(1) << 52,$/;"	e	enum:llvm::SIInstrFlags::__anon1f24a7950203
FPDiff	RVGPUCallLowering.cpp	/^  int FPDiff;$/;"	m	struct:__anonad2fb0ad0111::RVGPUOutgoingArgHandler	typeref:typename:int	file:
FPTRUNC_ROUND_DOWNWARD	RVGPUISelLowering.h	/^  FPTRUNC_ROUND_DOWNWARD,$/;"	e	enum:llvm::RVGPUISD::NodeType
FPTRUNC_ROUND_UPWARD	RVGPUISelLowering.h	/^  FPTRUNC_ROUND_UPWARD,$/;"	e	enum:llvm::RVGPUISD::NodeType
FP_CLASS	RVGPUISelLowering.h	/^  FP_CLASS,$/;"	e	enum:llvm::RVGPUISD::NodeType
FP_DENORM_FLUSH_IN	SIDefines.h	/^#define FP_DENORM_FLUSH_IN /;"	d
FP_DENORM_FLUSH_IN_FLUSH_OUT	SIDefines.h	/^#define FP_DENORM_FLUSH_IN_FLUSH_OUT /;"	d
FP_DENORM_FLUSH_NONE	SIDefines.h	/^#define FP_DENORM_FLUSH_NONE /;"	d
FP_DENORM_FLUSH_OUT	SIDefines.h	/^#define FP_DENORM_FLUSH_OUT /;"	d
FP_DENORM_MASK	SIDefines.h	/^  FP_DENORM_MASK = 0xf << 4, \/\/ Bits 4..7$/;"	e	enum:llvm::RVGPU::Hwreg::ModeRegisterMasks
FP_DENORM_MODE_DP	SIDefines.h	/^#define FP_DENORM_MODE_DP(/;"	d
FP_DENORM_MODE_SP	SIDefines.h	/^#define FP_DENORM_MODE_SP(/;"	d
FP_ROUND_MASK	SIDefines.h	/^  FP_ROUND_MASK = 0xf << 0,  \/\/ Bits 0..3$/;"	e	enum:llvm::RVGPU::Hwreg::ModeRegisterMasks
FP_ROUND_MODE_DP	SIDefines.h	/^#define FP_ROUND_MODE_DP(/;"	d
FP_ROUND_MODE_SP	SIDefines.h	/^#define FP_ROUND_MODE_SP(/;"	d
FP_ROUND_ROUND_TO_INF	SIDefines.h	/^#define FP_ROUND_ROUND_TO_INF /;"	d
FP_ROUND_ROUND_TO_NEAREST	SIDefines.h	/^#define FP_ROUND_ROUND_TO_NEAREST /;"	d
FP_ROUND_ROUND_TO_NEGINF	SIDefines.h	/^#define FP_ROUND_ROUND_TO_NEGINF /;"	d
FP_ROUND_ROUND_TO_ZERO	SIDefines.h	/^#define FP_ROUND_ROUND_TO_ZERO /;"	d
FP_TO_FP16	RVGPUISelLowering.h	/^  FP_TO_FP16,$/;"	e	enum:llvm::RVGPUISD::NodeType
FRACT	RVGPUISelLowering.h	/^  FRACT,$/;"	e	enum:llvm::RVGPUISD::NodeType
FailureOrdering	SIMemoryLegalizer.cpp	/^  AtomicOrdering FailureOrdering = AtomicOrdering::NotAtomic;$/;"	m	class:__anon46517b8a0111::SIMemOpInfo	typeref:typename:AtomicOrdering	file:
FallthroughMap	RVGPUMachineCFGStructurizer.cpp	/^  DenseMap<MachineBasicBlock *, MachineBasicBlock *> FallthroughMap;$/;"	m	class:__anon1695b1f50311::RVGPUMachineCFGStructurizer	typeref:typename:DenseMap<MachineBasicBlock *,MachineBasicBlock * >	file:
False	RVGPUPostLegalizerCombiner.cpp	/^    Register False;$/;"	m	struct:__anonf94dcdde0111::RVGPUPostLegalizerCombinerImpl::FMinFMaxLegacyInfo	typeref:typename:Register	file:
FastDenormalF32	GCNSubtarget.h	/^  bool FastDenormalF32 = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
FastFMAF32	RVGPUSubtarget.h	/^  bool FastFMAF32 = false;$/;"	m	class:llvm::RVGPUSubtarget	typeref:typename:bool
FeatureDisable	GCNSubtarget.h	/^  bool FeatureDisable = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
FeaturesToCheck	RVGPURemoveIncompatibleFunctions.cpp	/^constexpr unsigned FeaturesToCheck[] = {RVGPU::FeatureGFX11Insts,$/;"	v	namespace:__anonbd23f2080111	typeref:typename:unsigned[]
FillMFMAShadowMutation	RVGPUSubtarget.cpp	/^  FillMFMAShadowMutation(const RVInstrInfo *tii) : TII(tii) {}$/;"	f	struct:__anon4eb125fb0111::FillMFMAShadowMutation	file:
FillMFMAShadowMutation	RVGPUSubtarget.cpp	/^struct FillMFMAShadowMutation : ScheduleDAGMutation {$/;"	s	namespace:__anon4eb125fb0111	file:
First	SIInsertHardClauses.cpp	/^    MachineInstr *First = nullptr;$/;"	m	struct:__anon09538a560111::SIInsertHardClauses::ClauseInfo	typeref:typename:MachineInstr *	file:
FirstInsertionPoint	SIModeRegister.cpp	/^  MachineInstr *FirstInsertionPoint = nullptr;$/;"	m	class:BlockData	typeref:typename:MachineInstr *	file:
FirstMI	GCNCreateVOPD.cpp	/^      MachineInstr *FirstMI;$/;"	m	class:__anon7e59fb9b0111::GCNCreateVOPD::VOPDCombineInfo	typeref:typename:MachineInstr *	file:
Fix16BitCopies	RVInstrInfo.cpp	/^static cl::opt<bool> Fix16BitCopies($/;"	v	typeref:typename:cl::opt<bool>	file:
FixedABIFunctionInfo	RVGPUArgumentUsageInfo.cpp	/^const RVGPUFunctionArgInfo RVGPUArgumentUsageInfo::FixedABIFunctionInfo$/;"	m	class:RVGPUArgumentUsageInfo	typeref:typename:const RVGPUFunctionArgInfo
FixedABIFunctionInfo	RVGPUArgumentUsageInfo.h	/^  static const RVGPUFunctionArgInfo FixedABIFunctionInfo;$/;"	m	class:llvm::RVGPUArgumentUsageInfo	typeref:typename:const RVGPUFunctionArgInfo
Fixups	MCTargetDesc/RVGPUFixupKinds.h	/^enum Fixups {$/;"	g	namespace:llvm::RVGPU
FlatAddressSpace	GCNSubtarget.h	/^  bool FlatAddressSpace = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
FlatForGlobal	GCNSubtarget.h	/^  bool FlatForGlobal = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
FlatGlobal	SIDefines.h	/^  FlatGlobal = UINT64_C(1) << 51,$/;"	e	enum:llvm::SIInstrFlags::__anon1f24a7950203
FlatGlobalInsts	GCNSubtarget.h	/^  bool FlatGlobalInsts = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
FlatInstOffsets	GCNSubtarget.h	/^  bool FlatInstOffsets = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
FlatScratch	SIDefines.h	/^  FlatScratch = UINT64_C(1) << 56,$/;"	e	enum:llvm::SIInstrFlags::__anon1f24a7950203
FlatScratchInit	GCNSubtarget.h	/^  bool FlatScratchInit = false;$/;"	m	class:llvm::GCNUserSGPRUsageInfo	typeref:typename:bool
FlatScratchInit	RVGPUArgumentUsageInfo.h	/^  ArgDescriptor FlatScratchInit;$/;"	m	struct:llvm::RVGPUFunctionArgInfo	typeref:typename:ArgDescriptor
FlatScratchInit	RVMachineFunctionInfo.h	/^  std::optional<SIArgument> FlatScratchInit;$/;"	m	struct:llvm::yaml::SIArgumentInfo	typeref:typename:std::optional<SIArgument>
FlatScratchInitID	GCNSubtarget.h	/^    FlatScratchInitID = 6,$/;"	e	enum:llvm::GCNUserSGPRUsageInfo::UserSGPRID
FlatScratchInsts	GCNSubtarget.h	/^  bool FlatScratchInsts = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
FlatUsed	SIProgramInfo.h	/^    bool FlatUsed = false;$/;"	m	struct:llvm::SIProgramInfo	typeref:typename:bool
FlatWorkGroupSizes	RVMachineFunctionInfo.h	/^  std::pair<unsigned, unsigned> FlatWorkGroupSizes = {0, 0};$/;"	m	class:llvm::RVMachineFunctionInfo	typeref:typename:std::pair<unsigned,unsigned>
FloatMode	SIProgramInfo.h	/^    uint32_t FloatMode = 0;$/;"	m	struct:llvm::SIProgramInfo	typeref:typename:uint32_t
FlowChanged	RVGPUCodeGenPrepare.cpp	/^  bool FlowChanged = false;$/;"	m	class:__anond35e324e0111::RVGPUCodeGenPrepareImpl	typeref:typename:bool	file:
FltRoundConversionTable	SIModeRegisterDefaults.cpp	/^const uint64_t RVGPU::FltRoundConversionTable =$/;"	m	class:RVGPU	typeref:typename:const uint64_t
FoldCandidate	SIFoldOperands.cpp	/^  FoldCandidate(MachineInstr *MI, unsigned OpNo, MachineOperand *FoldOp,$/;"	f	struct:__anon07e514130111::FoldCandidate	file:
FoldCandidate	SIFoldOperands.cpp	/^struct FoldCandidate {$/;"	s	namespace:__anon07e514130111	file:
FoldImmediate	RVInstrInfo.cpp	/^bool RVInstrInfo::FoldImmediate(MachineInstr &UseMI, MachineInstr &DefMI,$/;"	f	class:RVInstrInfo	typeref:typename:bool
ForceBreakLargePHIs	RVGPUCodeGenPrepare.cpp	/^    ForceBreakLargePHIs("rvgpu-codegenprepare-force-break-large-phis",$/;"	v	namespace:__anond35e324e0111	typeref:typename:cl::opt<bool>	file:
ForceEmitWaitcnt	SIInsertWaitcnts.cpp	/^  bool ForceEmitWaitcnt[NUM_INST_CNTS];$/;"	m	class:__anona6cbb7940211::SIInsertWaitcnts	typeref:typename:bool[]	file:
ForceEmitZeroFlag	SIInsertWaitcnts.cpp	/^static cl::opt<bool> ForceEmitZeroFlag($/;"	v	typeref:typename:cl::opt<bool>	file:
ForceEmitZeroWaitcnts	SIInsertWaitcnts.cpp	/^  bool ForceEmitZeroWaitcnts;$/;"	m	class:__anona6cbb7940211::SIInsertWaitcnts	typeref:typename:bool	file:
ForcedDPP	AsmParser/RVGPUAsmParser.cpp	/^  bool ForcedDPP = false;$/;"	m	class:__anon672fa8550111::RVGPUAsmParser	typeref:typename:bool	file:
ForcedEncodingSize	AsmParser/RVGPUAsmParser.cpp	/^  unsigned ForcedEncodingSize = 0;$/;"	m	class:__anon672fa8550111::RVGPUAsmParser	typeref:typename:unsigned	file:
ForcedSDWA	AsmParser/RVGPUAsmParser.cpp	/^  bool ForcedSDWA = false;$/;"	m	class:__anon672fa8550111::RVGPUAsmParser	typeref:typename:bool	file:
FormalArgHandler	RVGPUCallLowering.cpp	/^  FormalArgHandler(MachineIRBuilder &B, MachineRegisterInfo &MRI)$/;"	f	struct:__anonad2fb0ad0111::FormalArgHandler	file:
FormalArgHandler	RVGPUCallLowering.cpp	/^struct FormalArgHandler : public RVGPUIncomingArgHandler {$/;"	s	namespace:__anonad2fb0ad0111	file:
Format	SILoadStoreOptimizer.cpp	/^    unsigned Format;$/;"	m	struct:__anon677101620111::SILoadStoreOptimizer::CombineInfo	typeref:typename:unsigned	file:
Format	Utils/RVGPUBaseInfo.h	/^  unsigned Format;$/;"	m	struct:llvm::RVGPU::GcnBufferFormatInfo	typeref:typename:unsigned
Formatter	RVInstrInfo.h	/^  mutable std::unique_ptr<RVGPUMIRFormatter> Formatter;$/;"	m	class:llvm::RVInstrInfo	typeref:typename:std::unique_ptr<RVGPUMIRFormatter>
FoundLoopLevel	SILowerI1Copies.cpp	/^  unsigned FoundLoopLevel = ~0u;$/;"	m	class:__anone16a92980111::LoopFinder	typeref:typename:unsigned	file:
FrameIndexToFold	SIFoldOperands.cpp	/^    int FrameIndexToFold;$/;"	m	union:__anon07e514130111::FoldCandidate::__anon07e51413020a	typeref:typename:int	file:
FrameLowering	GCNSubtarget.h	/^  RVFrameLowering FrameLowering;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:RVFrameLowering
FrameOffsetReg	RVMachineFunctionInfo.h	/^  Register FrameOffsetReg = RVGPU::FP_REG;$/;"	m	class:llvm::RVMachineFunctionInfo	typeref:typename:Register
FrameOffsetReg	RVMachineFunctionInfo.h	/^  StringValue FrameOffsetReg = "$fp_reg";$/;"	m	struct:llvm::yaml::RVMachineFunctionInfo	typeref:typename:StringValue
FrameReg	RVFrameLowering.cpp	/^  Register FrameReg;$/;"	m	class:llvm::PrologEpilogSGPRSpillBuilder	typeref:typename:Register	file:
FullRate64Ops	GCNSubtarget.h	/^  bool FullRate64Ops = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
FullyAllocated	RVMachineFunctionInfo.h	/^    bool FullyAllocated = false;$/;"	m	struct:llvm::RVMachineFunctionInfo::VGPRSpillToAGPR	typeref:typename:bool
FuncId	RVGPULibFunc.h	/^  EFuncId FuncId;$/;"	m	class:llvm::RVGPULibFuncImpl	typeref:typename:EFuncId
FuncInfo	RVFrameLowering.cpp	/^  RVMachineFunctionInfo *FuncInfo;$/;"	m	class:llvm::PrologEpilogSGPRSpillBuilder	typeref:typename:RVMachineFunctionInfo *	file:
FuncInfo	RVGPULibCalls.cpp	/^  typedef llvm::RVGPULibFunc FuncInfo;$/;"	t	class:llvm::RVGPULibCalls	typeref:typename:llvm::RVGPULibFunc	file:
FuncInfo	RVGPUPerfHintAnalysis.h	/^    FuncInfo()$/;"	f	struct:llvm::RVGPUPerfHintAnalysis::FuncInfo
FuncInfo	RVGPUPerfHintAnalysis.h	/^  struct FuncInfo {$/;"	s	struct:llvm::RVGPUPerfHintAnalysis
FuncInfoMap	RVGPUPerfHintAnalysis.h	/^  typedef ValueMap<const Function*, FuncInfo> FuncInfoMap;$/;"	t	struct:llvm::RVGPUPerfHintAnalysis	typeref:typename:ValueMap<const Function *,FuncInfo>
FuncTy	RVGPULibFunc.h	/^  FunctionType *FuncTy;$/;"	m	class:llvm::RVGPUUnmangledLibFunc	typeref:typename:FunctionType *
FunctionVariableMap	RVGPULowerModuleLDSPass.cpp	/^  using FunctionVariableMap = DenseMap<Function *, DenseSet<GlobalVariable *>>;$/;"	t	class:__anoncc7483b30111::RVGPULowerModuleLDS	typeref:typename:DenseMap<Function *,DenseSet<GlobalVariable * >>	file:
G	Utils/RVGPUBaseInfo.h	/^  MIMGBaseOpcode G;$/;"	m	struct:llvm::RVGPU::MIMGG16MappingInfo	typeref:typename:MIMGBaseOpcode
G16	Utils/RVGPUBaseInfo.h	/^  MIMGBaseOpcode G16;$/;"	m	struct:llvm::RVGPU::MIMGG16MappingInfo	typeref:typename:MIMGBaseOpcode
G16	Utils/RVGPUBaseInfo.h	/^  bool G16;$/;"	m	struct:llvm::RVGPU::MIMGBaseOpcodeInfo	typeref:typename:bool
GCN3Encoding	RVGPUSubtarget.h	/^  bool GCN3Encoding = false;$/;"	m	class:llvm::RVGPUSubtarget	typeref:typename:bool
GCNCreateVOPD	GCNCreateVOPD.cpp	/^  GCNCreateVOPD() : MachineFunctionPass(ID) {}$/;"	f	class:__anon7e59fb9b0111::GCNCreateVOPD	file:
GCNCreateVOPD	GCNCreateVOPD.cpp	/^class GCNCreateVOPD : public MachineFunctionPass {$/;"	c	namespace:__anon7e59fb9b0111	file:
GCNCreateVOPDID	GCNCreateVOPD.cpp	/^char &llvm::GCNCreateVOPDID = GCNCreateVOPD::ID;$/;"	m	class:llvm	typeref:typename:char &
GCNDPPCombine	GCNDPPCombine.cpp	/^  GCNDPPCombine() : MachineFunctionPass(ID) {$/;"	f	class:__anon46a5cf8f0111::GCNDPPCombine	file:
GCNDPPCombine	GCNDPPCombine.cpp	/^class GCNDPPCombine : public MachineFunctionPass {$/;"	c	namespace:__anon46a5cf8f0111	file:
GCNDPPCombineID	GCNDPPCombine.cpp	/^char &llvm::GCNDPPCombineID = GCNDPPCombine::ID;$/;"	m	class:llvm	typeref:typename:char &
GCNDownwardRPTracker	GCNRegPressure.h	/^  GCNDownwardRPTracker(const LiveIntervals &LIS_) : GCNRPTracker(LIS_) {}$/;"	f	class:llvm::GCNDownwardRPTracker
GCNDownwardRPTracker	GCNRegPressure.h	/^class GCNDownwardRPTracker : public GCNRPTracker {$/;"	c	namespace:llvm
GCNHazardRecognizer	GCNHazardRecognizer.cpp	/^GCNHazardRecognizer::GCNHazardRecognizer(const MachineFunction &MF) :$/;"	f	class:GCNHazardRecognizer
GCNHazardRecognizer	GCNHazardRecognizer.h	/^class GCNHazardRecognizer final : public ScheduleHazardRecognizer {$/;"	c	namespace:llvm
GCNILPSchedRegistry	RVGPUTargetMachine.cpp	/^static MachineSchedRegistry GCNILPSchedRegistry($/;"	v	typeref:typename:MachineSchedRegistry	file:
GCNILPScheduler	GCNILPSched.cpp	/^class GCNILPScheduler {$/;"	c	namespace:__anonbd2d93ba0111	file:
GCNIterativeScheduler	GCNIterativeScheduler.cpp	/^GCNIterativeScheduler::GCNIterativeScheduler(MachineSchedContext *C,$/;"	f	class:GCNIterativeScheduler
GCNIterativeScheduler	GCNIterativeScheduler.h	/^class GCNIterativeScheduler : public ScheduleDAGMILive {$/;"	c	namespace:llvm
GCNMaxILPSchedRegistry	RVGPUTargetMachine.cpp	/^    GCNMaxILPSchedRegistry("gcn-max-ilp", "Run GCN scheduler to maximize ilp",$/;"	v	typeref:typename:MachineSchedRegistry	file:
GCNMaxILPSchedStrategy	GCNSchedStrategy.cpp	/^GCNMaxILPSchedStrategy::GCNMaxILPSchedStrategy(const MachineSchedContext *C)$/;"	f	class:GCNMaxILPSchedStrategy
GCNMaxILPSchedStrategy	GCNSchedStrategy.h	/^class GCNMaxILPSchedStrategy final : public GCNSchedStrategy {$/;"	c	namespace:llvm
GCNMaxOccupancySchedRegistry	RVGPUTargetMachine.cpp	/^GCNMaxOccupancySchedRegistry("gcn-max-occupancy",$/;"	v	typeref:typename:MachineSchedRegistry	file:
GCNMaxOccupancySchedStrategy	GCNSchedStrategy.cpp	/^GCNMaxOccupancySchedStrategy::GCNMaxOccupancySchedStrategy($/;"	f	class:GCNMaxOccupancySchedStrategy
GCNMaxOccupancySchedStrategy	GCNSchedStrategy.h	/^class GCNMaxOccupancySchedStrategy final : public GCNSchedStrategy {$/;"	c	namespace:llvm
GCNMinRegSchedRegistry	RVGPUTargetMachine.cpp	/^static MachineSchedRegistry GCNMinRegSchedRegistry($/;"	v	typeref:typename:MachineSchedRegistry	file:
GCNMinRegScheduler	GCNMinRegStrategy.cpp	/^class GCNMinRegScheduler {$/;"	c	namespace:__anon807286a30111	file:
GCNNSAReassign	GCNNSAReassign.cpp	/^  GCNNSAReassign() : MachineFunctionPass(ID) {$/;"	f	class:__anon7e838c8c0111::GCNNSAReassign	file:
GCNNSAReassign	GCNNSAReassign.cpp	/^class GCNNSAReassign : public MachineFunctionPass {$/;"	c	namespace:__anon7e838c8c0111	file:
GCNNSAReassignID	GCNNSAReassign.cpp	/^char &llvm::GCNNSAReassignID = GCNNSAReassign::ID;$/;"	m	class:llvm	typeref:typename:char &
GCNPassConfig	RVGPUTargetMachine.cpp	/^  GCNPassConfig(LLVMTargetMachine &TM, PassManagerBase &PM)$/;"	f	class:__anon565c6f860a11::GCNPassConfig	file:
GCNPassConfig	RVGPUTargetMachine.cpp	/^class GCNPassConfig final : public RVGPUPassConfig {$/;"	c	namespace:__anon565c6f860a11	file:
GCNPostScheduleDAGMILive	GCNSchedStrategy.cpp	/^GCNPostScheduleDAGMILive::GCNPostScheduleDAGMILive($/;"	f	class:GCNPostScheduleDAGMILive
GCNPostScheduleDAGMILive	GCNSchedStrategy.h	/^class GCNPostScheduleDAGMILive final : public ScheduleDAGMI {$/;"	c	namespace:llvm
GCNPreRALongBranchReg	GCNPreRALongBranchReg.cpp	/^  GCNPreRALongBranchReg() : MachineFunctionPass(ID) {$/;"	f	class:__anon4605b2240111::GCNPreRALongBranchReg	file:
GCNPreRALongBranchReg	GCNPreRALongBranchReg.cpp	/^class GCNPreRALongBranchReg : public MachineFunctionPass {$/;"	c	namespace:__anon4605b2240111	file:
GCNPreRAOptimizations	GCNPreRAOptimizations.cpp	/^  GCNPreRAOptimizations() : MachineFunctionPass(ID) {$/;"	f	class:__anon3997f4420111::GCNPreRAOptimizations	file:
GCNPreRAOptimizations	GCNPreRAOptimizations.cpp	/^class GCNPreRAOptimizations : public MachineFunctionPass {$/;"	c	namespace:__anon3997f4420111	file:
GCNPreRAOptimizationsID	GCNPreRAOptimizations.cpp	/^char &llvm::GCNPreRAOptimizationsID = GCNPreRAOptimizations::ID;$/;"	m	class:llvm	typeref:typename:char &
GCNRPTracker	GCNRegPressure.h	/^  GCNRPTracker(const LiveIntervals &LIS_) : LIS(LIS_) {}$/;"	f	class:llvm::GCNRPTracker
GCNRPTracker	GCNRegPressure.h	/^class GCNRPTracker {$/;"	c	namespace:llvm
GCNRegPressure	GCNRegPressure.h	/^  GCNRegPressure() {$/;"	f	struct:llvm::GCNRegPressure
GCNRegPressure	GCNRegPressure.h	/^struct GCNRegPressure {$/;"	s	namespace:llvm
GCNRegPressurePrinter	GCNRegPressure.h	/^  GCNRegPressurePrinter() : MachineFunctionPass(ID) {}$/;"	f	struct:llvm::GCNRegPressurePrinter
GCNRegPressurePrinter	GCNRegPressure.h	/^struct GCNRegPressurePrinter : public MachineFunctionPass {$/;"	s	namespace:llvm
GCNRegPressurePrinterID	GCNRegPressure.cpp	/^char &llvm::GCNRegPressurePrinterID = GCNRegPressurePrinter::ID;$/;"	m	class:llvm	typeref:typename:char &
GCNRewritePartialRegUses	GCNRewritePartialRegUses.cpp	/^  GCNRewritePartialRegUses() : MachineFunctionPass(ID) {}$/;"	f	class:__anon37bf8c3b0111::GCNRewritePartialRegUses	file:
GCNRewritePartialRegUses	GCNRewritePartialRegUses.cpp	/^class GCNRewritePartialRegUses : public MachineFunctionPass {$/;"	c	namespace:__anon37bf8c3b0111	file:
GCNRewritePartialRegUsesID	GCNRewritePartialRegUses.cpp	/^char &llvm::GCNRewritePartialRegUsesID = GCNRewritePartialRegUses::ID;$/;"	m	class:llvm	typeref:typename:char &
GCNSchedStage	GCNSchedStrategy.cpp	/^GCNSchedStage::GCNSchedStage(GCNSchedStageID StageID, GCNScheduleDAGMILive &DAG)$/;"	f	class:GCNSchedStage
GCNSchedStage	GCNSchedStrategy.h	/^class GCNSchedStage {$/;"	c	namespace:llvm
GCNSchedStageID	GCNSchedStrategy.h	/^enum class GCNSchedStageID : unsigned {$/;"	g	namespace:llvm	typeref:typename:unsigned
GCNSchedStrategy	GCNSchedStrategy.cpp	/^GCNSchedStrategy::GCNSchedStrategy(const MachineSchedContext *C)$/;"	f	class:GCNSchedStrategy
GCNSchedStrategy	GCNSchedStrategy.h	/^class GCNSchedStrategy : public GenericScheduler {$/;"	c	namespace:llvm
GCNScheduleDAGMILive	GCNSchedStrategy.cpp	/^GCNScheduleDAGMILive::GCNScheduleDAGMILive($/;"	f	class:GCNScheduleDAGMILive
GCNScheduleDAGMILive	GCNSchedStrategy.h	/^class GCNScheduleDAGMILive final : public ScheduleDAGMILive {$/;"	c	namespace:llvm
GCNSubtarget	GCNSubtarget.h	/^class GCNSubtarget final : public RVGPUGenSubtargetInfo,$/;"	c	namespace:llvm
GCNSubtarget	RVGPUSubtarget.cpp	/^GCNSubtarget::GCNSubtarget(const Triple &TT, StringRef GPU, StringRef FS,$/;"	f	class:GCNSubtarget
GCNTTIImpl	RVGPUTargetTransformInfo.cpp	/^GCNTTIImpl::GCNTTIImpl(const RVGPUTargetMachine *TM, const Function &F)$/;"	f	class:GCNTTIImpl
GCNTTIImpl	RVGPUTargetTransformInfo.h	/^class GCNTTIImpl final : public BasicTTIImplBase<GCNTTIImpl> {$/;"	c	namespace:llvm
GCNTargetMachine	RVGPUTargetMachine.cpp	/^GCNTargetMachine::GCNTargetMachine(const Target &T, const Triple &TT,$/;"	f	class:GCNTargetMachine
GCNTargetMachine	RVGPUTargetMachine.h	/^class GCNTargetMachine final : public RVGPUTargetMachine {$/;"	c	namespace:llvm
GCNUpwardRPTracker	GCNRegPressure.h	/^  GCNUpwardRPTracker(const LiveIntervals &LIS_) : GCNRPTracker(LIS_) {}$/;"	f	class:llvm::GCNUpwardRPTracker
GCNUpwardRPTracker	GCNRegPressure.h	/^class GCNUpwardRPTracker : public GCNRPTracker {$/;"	c	namespace:llvm
GCNUserSGPRUsageInfo	GCNSubtarget.h	/^class GCNUserSGPRUsageInfo {$/;"	c	namespace:llvm
GCNUserSGPRUsageInfo	RVGPUSubtarget.cpp	/^GCNUserSGPRUsageInfo::GCNUserSGPRUsageInfo(const Function &F,$/;"	f	class:GCNUserSGPRUsageInfo
GDS	SIMemoryLegalizer.cpp	/^  GDS = 1u << 3,$/;"	e	enum:__anon46517b8a0111::SIAtomicAddrSpace	file:
GDSSize	RVGPUMachineFunction.h	/^  uint32_t GDSSize = 0;$/;"	m	class:llvm::RVGPUMachineFunction	typeref:typename:uint32_t
GDSSize	RVMachineFunctionInfo.h	/^  uint32_t GDSSize = 0;$/;"	m	struct:llvm::yaml::RVMachineFunctionInfo	typeref:typename:uint32_t
GDS_ACCESS	SIInsertWaitcnts.cpp	/^  GDS_ACCESS,           \/\/ gds read & write$/;"	e	enum:__anona6cbb7940211::WaitEventType	file:
GDS_GPR_LOCK	SIInsertWaitcnts.cpp	/^  GDS_GPR_LOCK,         \/\/ GDS holding on its data and addr src$/;"	e	enum:__anona6cbb7940211::WaitEventType	file:
GEPInfo	RVGPUInstructionSelector.h	/^  struct GEPInfo {$/;"	s	class:llvm::RVGPUInstructionSelector
GEPToVectorIndex	RVGPUPromoteAlloca.cpp	/^static Value *GEPToVectorIndex(GetElementPtrInst *GEP, AllocaInst *Alloca,$/;"	f	typeref:typename:Value *	file:
GET_ASSEMBLER_HEADER	AsmParser/RVGPUAsmParser.cpp	/^#define GET_ASSEMBLER_HEADER$/;"	d	file:
GET_D16ImageDimIntrinsics_IMPL	RVInstrInfo.cpp	/^#define GET_D16ImageDimIntrinsics_IMPL$/;"	d	file:
GET_FIELD	Disassembler/RVGPUDisassembler.cpp	/^#define GET_FIELD(/;"	d	file:
GET_GICOMBINER_CLASS_MEMBERS	RVGPUPostLegalizerCombiner.cpp	/^#define GET_GICOMBINER_CLASS_MEMBERS$/;"	d	file:
GET_GICOMBINER_CLASS_MEMBERS	RVGPUPreLegalizerCombiner.cpp	/^#define GET_GICOMBINER_CLASS_MEMBERS$/;"	d	file:
GET_GICOMBINER_CLASS_MEMBERS	RVGPURegBankCombiner.cpp	/^#define GET_GICOMBINER_CLASS_MEMBERS$/;"	d	file:
GET_GICOMBINER_CONSTRUCTOR_INITS	RVGPUPostLegalizerCombiner.cpp	/^#define GET_GICOMBINER_CONSTRUCTOR_INITS$/;"	d	file:
GET_GICOMBINER_CONSTRUCTOR_INITS	RVGPUPreLegalizerCombiner.cpp	/^#define GET_GICOMBINER_CONSTRUCTOR_INITS$/;"	d	file:
GET_GICOMBINER_CONSTRUCTOR_INITS	RVGPURegBankCombiner.cpp	/^#define GET_GICOMBINER_CONSTRUCTOR_INITS$/;"	d	file:
GET_GICOMBINER_DEPS	RVGPUPostLegalizerCombiner.cpp	/^#define GET_GICOMBINER_DEPS$/;"	d	file:
GET_GICOMBINER_DEPS	RVGPUPreLegalizerCombiner.cpp	/^#define GET_GICOMBINER_DEPS$/;"	d	file:
GET_GICOMBINER_DEPS	RVGPURegBankCombiner.cpp	/^#define GET_GICOMBINER_DEPS$/;"	d	file:
GET_GICOMBINER_IMPL	RVGPUPostLegalizerCombiner.cpp	/^#define GET_GICOMBINER_IMPL$/;"	d	file:
GET_GICOMBINER_IMPL	RVGPUPreLegalizerCombiner.cpp	/^#define GET_GICOMBINER_IMPL$/;"	d	file:
GET_GICOMBINER_IMPL	RVGPURegBankCombiner.cpp	/^#define GET_GICOMBINER_IMPL$/;"	d	file:
GET_GICOMBINER_TYPES	RVGPUPostLegalizerCombiner.cpp	/^#define GET_GICOMBINER_TYPES$/;"	d	file:
GET_GICOMBINER_TYPES	RVGPUPreLegalizerCombiner.cpp	/^#define GET_GICOMBINER_TYPES$/;"	d	file:
GET_GICOMBINER_TYPES	RVGPURegBankCombiner.cpp	/^#define GET_GICOMBINER_TYPES$/;"	d	file:
GET_GLOBALISEL_IMPL	RVGPUInstructionSelector.cpp	/^#define GET_GLOBALISEL_IMPL$/;"	d	file:
GET_GLOBALISEL_PREDICATES_DECL	RVGPUInstructionSelector.h	/^#define GET_GLOBALISEL_PREDICATES_DECL$/;"	d
GET_GLOBALISEL_PREDICATES_INIT	RVGPUInstructionSelector.cpp	/^#define GET_GLOBALISEL_PREDICATES_INIT$/;"	d	file:
GET_GLOBALISEL_PREDICATE_BITSET	RVGPUInstructionSelector.h	/^#define GET_GLOBALISEL_PREDICATE_BITSET$/;"	d
GET_GLOBALISEL_TEMPORARIES_DECL	RVGPUInstructionSelector.h	/^#define GET_GLOBALISEL_TEMPORARIES_DECL$/;"	d
GET_GLOBALISEL_TEMPORARIES_INIT	RVGPUInstructionSelector.cpp	/^#define GET_GLOBALISEL_TEMPORARIES_INIT$/;"	d	file:
GET_Gfx10BufferFormat_IMPL	Utils/RVGPUBaseInfo.cpp	/^#define GET_Gfx10BufferFormat_IMPL$/;"	d	file:
GET_Gfx11PlusBufferFormat_IMPL	Utils/RVGPUBaseInfo.cpp	/^#define GET_Gfx11PlusBufferFormat_IMPL$/;"	d	file:
GET_Gfx9BufferFormat_IMPL	Utils/RVGPUBaseInfo.cpp	/^#define GET_Gfx9BufferFormat_IMPL$/;"	d	file:
GET_INSTRINFO_CTOR_DTOR	RVInstrInfo.cpp	/^#define GET_INSTRINFO_CTOR_DTOR$/;"	d	file:
GET_INSTRINFO_ENUM	MCTargetDesc/RVGPUMCTargetDesc.h	/^#define GET_INSTRINFO_ENUM$/;"	d
GET_INSTRINFO_HEADER	RVInstrInfo.h	/^#define GET_INSTRINFO_HEADER$/;"	d
GET_INSTRINFO_MC_DESC	MCTargetDesc/RVGPUMCTargetDesc.cpp	/^#define GET_INSTRINFO_MC_DESC$/;"	d	file:
GET_INSTRINFO_MC_HELPER_DECLS	MCTargetDesc/RVGPUMCTargetDesc.h	/^#define GET_INSTRINFO_MC_HELPER_DECLS$/;"	d
GET_INSTRINFO_NAMED_OPS	Utils/RVGPUBaseInfo.cpp	/^#define GET_INSTRINFO_NAMED_OPS$/;"	d	file:
GET_INSTRINFO_OPERAND_ENUM	MCTargetDesc/RVGPUMCTargetDesc.h	/^#define GET_INSTRINFO_OPERAND_ENUM$/;"	d
GET_INSTRMAP_INFO	Utils/RVGPUBaseInfo.cpp	/^#define GET_INSTRMAP_INFO$/;"	d	file:
GET_ImageDimIntrinsicTable_IMPL	RVInstrInfo.cpp	/^#define GET_ImageDimIntrinsicTable_IMPL$/;"	d	file:
GET_MAIInstInfoTable_DECL	Utils/RVGPUBaseInfo.h	/^#define GET_MAIInstInfoTable_DECL$/;"	d
GET_MAIInstInfoTable_IMPL	Utils/RVGPUBaseInfo.cpp	/^#define GET_MAIInstInfoTable_IMPL$/;"	d	file:
GET_MATCHER_IMPLEMENTATION	AsmParser/RVGPUAsmParser.cpp	/^#define GET_MATCHER_IMPLEMENTATION$/;"	d	file:
GET_MIMGBaseOpcode_DECL	Utils/RVGPUBaseInfo.h	/^#define GET_MIMGBaseOpcode_DECL$/;"	d
GET_MIMGBaseOpcodesTable_IMPL	Utils/RVGPUBaseInfo.cpp	/^#define GET_MIMGBaseOpcodesTable_IMPL$/;"	d	file:
GET_MIMGBiASMapping_DECL	Utils/RVGPUBaseInfo.h	/^#define GET_MIMGBiASMapping_DECL$/;"	d
GET_MIMGBiasMappingTable_IMPL	Utils/RVGPUBaseInfo.cpp	/^#define GET_MIMGBiasMappingTable_IMPL$/;"	d	file:
GET_MIMGDimInfoTable_IMPL	Utils/RVGPUBaseInfo.cpp	/^#define GET_MIMGDimInfoTable_IMPL$/;"	d	file:
GET_MIMGDim_DECL	Utils/RVGPUBaseInfo.h	/^#define GET_MIMGDim_DECL$/;"	d
GET_MIMGEncoding_DECL	Utils/RVGPUBaseInfo.h	/^#define GET_MIMGEncoding_DECL$/;"	d
GET_MIMGG16MappingTable_IMPL	Utils/RVGPUBaseInfo.cpp	/^#define GET_MIMGG16MappingTable_IMPL$/;"	d	file:
GET_MIMGInfoTable_IMPL	Utils/RVGPUBaseInfo.cpp	/^#define GET_MIMGInfoTable_IMPL$/;"	d	file:
GET_MIMGLZMappingTable_IMPL	Utils/RVGPUBaseInfo.cpp	/^#define GET_MIMGLZMappingTable_IMPL$/;"	d	file:
GET_MIMGLZMapping_DECL	Utils/RVGPUBaseInfo.h	/^#define GET_MIMGLZMapping_DECL$/;"	d
GET_MIMGMIPMappingTable_IMPL	Utils/RVGPUBaseInfo.cpp	/^#define GET_MIMGMIPMappingTable_IMPL$/;"	d	file:
GET_MIMGMIPMapping_DECL	Utils/RVGPUBaseInfo.h	/^#define GET_MIMGMIPMapping_DECL$/;"	d
GET_MIMGOffsetMappingTable_IMPL	Utils/RVGPUBaseInfo.cpp	/^#define GET_MIMGOffsetMappingTable_IMPL$/;"	d	file:
GET_MNEMONIC_CHECKER	AsmParser/RVGPUAsmParser.cpp	/^#define GET_MNEMONIC_CHECKER$/;"	d	file:
GET_MNEMONIC_SPELL_CHECKER	AsmParser/RVGPUAsmParser.cpp	/^#define GET_MNEMONIC_SPELL_CHECKER$/;"	d	file:
GET_MTBUFInfoTable_DECL	Utils/RVGPUBaseInfo.cpp	/^#define GET_MTBUFInfoTable_DECL$/;"	d	file:
GET_MTBUFInfoTable_IMPL	Utils/RVGPUBaseInfo.cpp	/^#define GET_MTBUFInfoTable_IMPL$/;"	d	file:
GET_MUBUFInfoTable_DECL	Utils/RVGPUBaseInfo.cpp	/^#define GET_MUBUFInfoTable_DECL$/;"	d	file:
GET_MUBUFInfoTable_IMPL	Utils/RVGPUBaseInfo.cpp	/^#define GET_MUBUFInfoTable_IMPL$/;"	d	file:
GET_REGBANK_DECLARATIONS	RVGPURegisterBankInfo.h	/^#define GET_REGBANK_DECLARATIONS$/;"	d
GET_REGINFO_ENUM	MCTargetDesc/RVGPUMCTargetDesc.h	/^#define GET_REGINFO_ENUM$/;"	d
GET_REGINFO_HEADER	RVRegisterInfo.h	/^#define GET_REGINFO_HEADER$/;"	d
GET_REGINFO_MC_DESC	MCTargetDesc/RVGPUMCTargetDesc.cpp	/^#define GET_REGINFO_MC_DESC$/;"	d	file:
GET_REGINFO_TARGET_DESC	RVRegisterInfo.cpp	/^#define GET_REGINFO_TARGET_DESC$/;"	d	file:
GET_REGISTER_MATCHER	AsmParser/RVGPUAsmParser.cpp	/^#define GET_REGISTER_MATCHER$/;"	d	file:
GET_RVGPUImageDMaskIntrinsicTable_IMPL	RVGPUInstCombineIntrinsic.cpp	/^#define GET_RVGPUImageDMaskIntrinsicTable_IMPL$/;"	d	file:
GET_RsrcIntrinsics_IMPL	RVInstrInfo.cpp	/^#define GET_RsrcIntrinsics_IMPL$/;"	d	file:
GET_SMInfoTable_DECL	Utils/RVGPUBaseInfo.cpp	/^#define GET_SMInfoTable_DECL$/;"	d	file:
GET_SMInfoTable_IMPL	Utils/RVGPUBaseInfo.cpp	/^#define GET_SMInfoTable_IMPL$/;"	d	file:
GET_SUBTARGETINFO_CTOR	RVGPUSubtarget.cpp	/^#define GET_SUBTARGETINFO_CTOR$/;"	d	file:
GET_SUBTARGETINFO_ENUM	MCTargetDesc/RVGPUMCTargetDesc.h	/^#define GET_SUBTARGETINFO_ENUM$/;"	d
GET_SUBTARGETINFO_HEADER	GCNSubtarget.h	/^#define GET_SUBTARGETINFO_HEADER$/;"	d
GET_SUBTARGETINFO_MC_DESC	MCTargetDesc/RVGPUMCTargetDesc.cpp	/^#define GET_SUBTARGETINFO_MC_DESC$/;"	d	file:
GET_SUBTARGETINFO_TARGET_DESC	RVGPUSubtarget.cpp	/^#define GET_SUBTARGETINFO_TARGET_DESC$/;"	d	file:
GET_SourcesOfDivergence_IMPL	Utils/RVGPUBaseInfo.cpp	/^#define GET_SourcesOfDivergence_IMPL$/;"	d	file:
GET_TARGET_REGBANK_CLASS	RVGPURegisterBankInfo.h	/^#define GET_TARGET_REGBANK_CLASS$/;"	d
GET_TARGET_REGBANK_IMPL	RVGPURegisterBankInfo.cpp	/^#define GET_TARGET_REGBANK_IMPL$/;"	d	file:
GET_UniformIntrinsics_IMPL	Utils/RVGPUBaseInfo.cpp	/^#define GET_UniformIntrinsics_IMPL$/;"	d	file:
GET_VOP1InfoTable_DECL	Utils/RVGPUBaseInfo.cpp	/^#define GET_VOP1InfoTable_DECL$/;"	d	file:
GET_VOP1InfoTable_IMPL	Utils/RVGPUBaseInfo.cpp	/^#define GET_VOP1InfoTable_IMPL$/;"	d	file:
GET_VOP2InfoTable_DECL	Utils/RVGPUBaseInfo.cpp	/^#define GET_VOP2InfoTable_DECL$/;"	d	file:
GET_VOP2InfoTable_IMPL	Utils/RVGPUBaseInfo.cpp	/^#define GET_VOP2InfoTable_IMPL$/;"	d	file:
GET_VOP3InfoTable_DECL	Utils/RVGPUBaseInfo.cpp	/^#define GET_VOP3InfoTable_DECL$/;"	d	file:
GET_VOP3InfoTable_IMPL	Utils/RVGPUBaseInfo.cpp	/^#define GET_VOP3InfoTable_IMPL$/;"	d	file:
GET_VOPC64DPP8Table_DECL	Utils/RVGPUBaseInfo.cpp	/^#define GET_VOPC64DPP8Table_DECL$/;"	d	file:
GET_VOPC64DPP8Table_IMPL	Utils/RVGPUBaseInfo.cpp	/^#define GET_VOPC64DPP8Table_IMPL$/;"	d	file:
GET_VOPC64DPPTable_DECL	Utils/RVGPUBaseInfo.cpp	/^#define GET_VOPC64DPPTable_DECL$/;"	d	file:
GET_VOPC64DPPTable_IMPL	Utils/RVGPUBaseInfo.cpp	/^#define GET_VOPC64DPPTable_IMPL$/;"	d	file:
GET_VOPDComponentTable_DECL	Utils/RVGPUBaseInfo.cpp	/^#define GET_VOPDComponentTable_DECL$/;"	d	file:
GET_VOPDComponentTable_IMPL	Utils/RVGPUBaseInfo.cpp	/^#define GET_VOPDComponentTable_IMPL$/;"	d	file:
GET_VOPDPairs_DECL	Utils/RVGPUBaseInfo.cpp	/^#define GET_VOPDPairs_DECL$/;"	d	file:
GET_VOPDPairs_IMPL	Utils/RVGPUBaseInfo.cpp	/^#define GET_VOPDPairs_IMPL$/;"	d	file:
GET_VOPTrue16Table_DECL	Utils/RVGPUBaseInfo.cpp	/^#define GET_VOPTrue16Table_DECL$/;"	d	file:
GET_VOPTrue16Table_IMPL	Utils/RVGPUBaseInfo.cpp	/^#define GET_VOPTrue16Table_IMPL$/;"	d	file:
GET_WMMAOpcode2AddrMappingTable_DECL	Utils/RVGPUBaseInfo.cpp	/^#define GET_WMMAOpcode2AddrMappingTable_DECL$/;"	d	file:
GET_WMMAOpcode2AddrMappingTable_IMPL	Utils/RVGPUBaseInfo.cpp	/^#define GET_WMMAOpcode2AddrMappingTable_IMPL$/;"	d	file:
GET_WMMAOpcode3AddrMappingTable_DECL	Utils/RVGPUBaseInfo.cpp	/^#define GET_WMMAOpcode3AddrMappingTable_DECL$/;"	d	file:
GET_WMMAOpcode3AddrMappingTable_IMPL	Utils/RVGPUBaseInfo.cpp	/^#define GET_WMMAOpcode3AddrMappingTable_IMPL$/;"	d	file:
GFX10	RVGPUSubtarget.h	/^    GFX10 = 9,$/;"	e	enum:llvm::RVGPUSubtarget::Generation
GFX10	SIDefines.h	/^  GFX10 = 6,$/;"	e	enum:llvm::SIEncodingFamily::__anon1f24a7950103
GFX10Insts	GCNSubtarget.h	/^  bool GFX10Insts = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
GFX10_3Insts	GCNSubtarget.h	/^  bool GFX10_3Insts = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
GFX10_AEncoding	GCNSubtarget.h	/^  bool GFX10_AEncoding = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
GFX10_BEncoding	GCNSubtarget.h	/^  bool GFX10_BEncoding = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
GFX11	RVGPUSubtarget.h	/^    GFX11 = 10,$/;"	e	enum:llvm::RVGPUSubtarget::Generation
GFX11	SIDefines.h	/^  GFX11 = 10,$/;"	e	enum:llvm::SIEncodingFamily::__anon1f24a7950103
GFX11Insts	GCNSubtarget.h	/^  bool GFX11Insts = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
GFX12	RVGPUSubtarget.h	/^    GFX12 = 11,$/;"	e	enum:llvm::RVGPUSubtarget::Generation
GFX12	SIDefines.h	/^  GFX12 = 11,$/;"	e	enum:llvm::SIEncodingFamily::__anon1f24a7950103
GFX12Insts	GCNSubtarget.h	/^  bool GFX12Insts = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
GFX7GFX8GFX9Insts	GCNSubtarget.h	/^  bool GFX7GFX8GFX9Insts = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
GFX80	SIDefines.h	/^  GFX80 = 4,$/;"	e	enum:llvm::SIEncodingFamily::__anon1f24a7950103
GFX8Insts	GCNSubtarget.h	/^  bool GFX8Insts = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
GFX9	RVGPUSubtarget.h	/^    GFX9 = 8,$/;"	e	enum:llvm::RVGPUSubtarget::Generation
GFX9	SIDefines.h	/^  GFX9 = 5,$/;"	e	enum:llvm::SIEncodingFamily::__anon1f24a7950103
GFX90A	SIDefines.h	/^  GFX90A = 8,$/;"	e	enum:llvm::SIEncodingFamily::__anon1f24a7950103
GFX90AInsts	GCNSubtarget.h	/^  bool GFX90AInsts = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
GFX940	SIDefines.h	/^  GFX940 = 9,$/;"	e	enum:llvm::SIEncodingFamily::__anon1f24a7950103
GFX940Insts	GCNSubtarget.h	/^  bool GFX940Insts = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
GFX9Insts	GCNSubtarget.h	/^  bool GFX9Insts = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
GITPtrHigh	RVMachineFunctionInfo.h	/^  unsigned GITPtrHigh;$/;"	m	class:llvm::RVMachineFunctionInfo	typeref:typename:unsigned
GLC	SIDefines.h	/^  GLC = 1,$/;"	e	enum:llvm::RVGPU::CPol::CPol
GLOBAL	SIMemoryLegalizer.cpp	/^  GLOBAL = 1u << 0,$/;"	e	enum:__anon46517b8a0111::SIAtomicAddrSpace	file:
GLOBAL_LOAD	SILoadStoreOptimizer.cpp	/^  GLOBAL_LOAD, \/\/ GLOBAL_LOAD\/GLOBAL_STORE are never used as the InstClass of$/;"	e	enum:__anon677101620111::InstClassEnum	file:
GLOBAL_LOAD_SADDR	SILoadStoreOptimizer.cpp	/^  GLOBAL_LOAD_SADDR,$/;"	e	enum:__anon677101620111::InstClassEnum	file:
GLOBAL_SIZE_X	RVInstrInfo.h	/^  GLOBAL_SIZE_X = 12,$/;"	e	enum:llvm::SI::KernelInputOffsets::Offsets
GLOBAL_SIZE_Y	RVInstrInfo.h	/^  GLOBAL_SIZE_Y = 16,$/;"	e	enum:llvm::SI::KernelInputOffsets::Offsets
GLOBAL_SIZE_Z	RVInstrInfo.h	/^  GLOBAL_SIZE_Z = 20,$/;"	e	enum:llvm::SI::KernelInputOffsets::Offsets
GLOBAL_STORE	SILoadStoreOptimizer.cpp	/^  GLOBAL_STORE \/\/ any CombineInfo, they are only ever returned by$/;"	e	enum:__anon677101620111::InstClassEnum	file:
GLOBAL_STORE_SADDR	SILoadStoreOptimizer.cpp	/^  GLOBAL_STORE_SADDR,$/;"	e	enum:__anon677101620111::InstClassEnum	file:
GPR_IDX_EN_MASK	SIDefines.h	/^  GPR_IDX_EN_MASK = 1 << 27,$/;"	e	enum:llvm::RVGPU::Hwreg::ModeRegisterMasks
GRID_SIZE_X	RVGPULowerKernelAttributes.cpp	/^  GRID_SIZE_X = 12,$/;"	e	enum:__anon7b93ed1b0111::DispatchPackedOffsets	file:
GRID_SIZE_Y	RVGPULowerKernelAttributes.cpp	/^  GRID_SIZE_Y = 16,$/;"	e	enum:__anon7b93ed1b0111::DispatchPackedOffsets	file:
GRID_SIZE_Z	RVGPULowerKernelAttributes.cpp	/^  GRID_SIZE_Z = 20$/;"	e	enum:__anon7b93ed1b0111::DispatchPackedOffsets	file:
GV	RVGPULowerModuleLDSPass.cpp	/^      GlobalVariable *GV = nullptr;$/;"	m	struct:__anoncc7483b30111::RVGPULowerModuleLDS::chooseBestVariableForModuleStrategy::CandidateTy	typeref:typename:GlobalVariable *	file:
GWS	SIDefines.h	/^  GWS = UINT64_C(1) << 62,$/;"	e	enum:llvm::SIInstrFlags::__anon1f24a7950203
GWSResource	RVMachineFunctionInfo.h	/^    GWSResource$/;"	e	enum:llvm::RVGPUPseudoSourceValue::RVGPUPSVKind
GWSResourcePSV	RVMachineFunctionInfo.h	/^  const RVGPUGWSResourcePseudoSourceValue GWSResourcePSV;$/;"	m	class:llvm::RVMachineFunctionInfo	typeref:typename:const RVGPUGWSResourcePseudoSourceValue
G_00B028_MEM_ORDERED	SIDefines.h	/^#define   G_00B028_MEM_ORDERED(/;"	d
G_00B128_MEM_ORDERED	SIDefines.h	/^#define   G_00B128_MEM_ORDERED(/;"	d
G_00B228_MEM_ORDERED	SIDefines.h	/^#define   G_00B228_MEM_ORDERED(/;"	d
G_00B228_WGP_MODE	SIDefines.h	/^#define   G_00B228_WGP_MODE(/;"	d
G_00B428_MEM_ORDERED	SIDefines.h	/^#define   G_00B428_MEM_ORDERED(/;"	d
G_00B428_WGP_MODE	SIDefines.h	/^#define   G_00B428_WGP_MODE(/;"	d
G_00B848_DEBUG_MODE	SIDefines.h	/^#define   G_00B848_DEBUG_MODE(/;"	d
G_00B848_DX10_CLAMP	SIDefines.h	/^#define   G_00B848_DX10_CLAMP(/;"	d
G_00B848_FLOAT_MODE	SIDefines.h	/^#define   G_00B848_FLOAT_MODE(/;"	d
G_00B848_FWD_PROGRESS	SIDefines.h	/^#define   G_00B848_FWD_PROGRESS(/;"	d
G_00B848_IEEE_MODE	SIDefines.h	/^#define   G_00B848_IEEE_MODE(/;"	d
G_00B848_MEM_ORDERED	SIDefines.h	/^#define   G_00B848_MEM_ORDERED(/;"	d
G_00B848_PRIORITY	SIDefines.h	/^#define   G_00B848_PRIORITY(/;"	d
G_00B848_PRIV	SIDefines.h	/^#define   G_00B848_PRIV(/;"	d
G_00B848_RR_WG_MODE	SIDefines.h	/^#define   G_00B848_RR_WG_MODE(/;"	d
G_00B848_SGPRS	SIDefines.h	/^#define   G_00B848_SGPRS(/;"	d
G_00B848_VGPRS	SIDefines.h	/^#define   G_00B848_VGPRS(/;"	d
G_00B848_WGP_MODE	SIDefines.h	/^#define   G_00B848_WGP_MODE(/;"	d
G_00B84C_EXCP_EN	SIDefines.h	/^#define   G_00B84C_EXCP_EN(/;"	d
G_00B84C_EXCP_EN_MSB	SIDefines.h	/^#define   G_00B84C_EXCP_EN_MSB(/;"	d
G_00B84C_LDS_SIZE	SIDefines.h	/^#define   G_00B84C_LDS_SIZE(/;"	d
G_00B84C_SCRATCH_EN	SIDefines.h	/^#define   G_00B84C_SCRATCH_EN(/;"	d
G_00B84C_TGID_X_EN	SIDefines.h	/^#define   G_00B84C_TGID_X_EN(/;"	d
G_00B84C_TGID_Y_EN	SIDefines.h	/^#define   G_00B84C_TGID_Y_EN(/;"	d
G_00B84C_TGID_Z_EN	SIDefines.h	/^#define   G_00B84C_TGID_Z_EN(/;"	d
G_00B84C_TG_SIZE_EN	SIDefines.h	/^#define   G_00B84C_TG_SIZE_EN(/;"	d
G_00B84C_TIDIG_COMP_CNT	SIDefines.h	/^#define   G_00B84C_TIDIG_COMP_CNT(/;"	d
G_00B84C_TRAP_HANDLER	SIDefines.h	/^#define   G_00B84C_TRAP_HANDLER(/;"	d
G_00B84C_USER_SGPR	SIDefines.h	/^#define   G_00B84C_USER_SGPR(/;"	d
Gather4	SIDefines.h	/^  Gather4 = UINT64_C(1) << 37,$/;"	e	enum:llvm::SIInstrFlags::__anon1f24a7950203
Gather4	Utils/RVGPUBaseInfo.h	/^  bool Gather4;$/;"	m	struct:llvm::RVGPU::MIMGBaseOpcodeInfo	typeref:typename:bool
GcnBufferFormatInfo	Utils/RVGPUBaseInfo.h	/^struct GcnBufferFormatInfo {$/;"	s	namespace:llvm::RVGPU
Gen	GCNSubtarget.h	/^  unsigned Gen = INVALID;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:unsigned
Generation	RVGPURemoveIncompatibleFunctions.cpp	/^using Generation = RVGPUSubtarget::Generation;$/;"	t	namespace:__anonbd23f2080111	typeref:typename:RVGPUSubtarget::Generation	file:
Generation	RVGPUSubtarget.h	/^  enum Generation {$/;"	g	class:llvm::RVGPUSubtarget
GetNumWaitStatesFn	GCNHazardRecognizer.cpp	/^typedef function_ref<unsigned int(const MachineInstr &)> GetNumWaitStatesFn;$/;"	t	file:
GetTopo	SIMachineScheduler.h	/^  ScheduleDAGTopologicalSort *GetTopo() { return &Topo; }$/;"	f	class:llvm::SIScheduleDAGMI	typeref:typename:ScheduleDAGTopologicalSort *
GlobalOpt	RVGPU.h	/^  bool GlobalOpt;$/;"	m	struct:llvm::RVGPUAlwaysInlinePass	typeref:typename:bool
GlobalOpt	RVGPUAlwaysInlinePass.cpp	/^  bool GlobalOpt;$/;"	m	class:__anonad1ccdb10111::RVGPUAlwaysInline	typeref:typename:bool	file:
GradientStart	RVGPUInstrInfo.h	/^  uint8_t GradientStart;$/;"	m	struct:llvm::RVGPU::ImageDimIntrinsicInfo	typeref:typename:uint8_t
GradientTyArg	RVGPUInstrInfo.h	/^  uint8_t GradientTyArg;$/;"	m	struct:llvm::RVGPU::ImageDimIntrinsicInfo	typeref:typename:uint8_t
Gradients	Utils/RVGPUBaseInfo.h	/^  bool Gradients;$/;"	m	struct:llvm::RVGPU::MIMGBaseOpcodeInfo	typeref:typename:bool
GraphicsRegisters	Utils/RVGPUPALMetadata.h	/^  msgpack::DocNode GraphicsRegisters;$/;"	m	class:llvm::RVGPUPALMetadata	typeref:typename:msgpack::DocNode
HALF	RVGPULibFunc.h	/^    HALF$/;"	e	enum:llvm::RVGPULibFuncBase::ENamePrefix
HARDCLAUSE_BVH	SIInsertHardClauses.cpp	/^  HARDCLAUSE_BVH,$/;"	e	enum:__anon09538a560111::HardClauseType	file:
HARDCLAUSE_FLAT	SIInsertHardClauses.cpp	/^  HARDCLAUSE_FLAT,$/;"	e	enum:__anon09538a560111::HardClauseType	file:
HARDCLAUSE_FLAT_ATOMIC	SIInsertHardClauses.cpp	/^  HARDCLAUSE_FLAT_ATOMIC,$/;"	e	enum:__anon09538a560111::HardClauseType	file:
HARDCLAUSE_FLAT_LOAD	SIInsertHardClauses.cpp	/^  HARDCLAUSE_FLAT_LOAD,$/;"	e	enum:__anon09538a560111::HardClauseType	file:
HARDCLAUSE_FLAT_STORE	SIInsertHardClauses.cpp	/^  HARDCLAUSE_FLAT_STORE,$/;"	e	enum:__anon09538a560111::HardClauseType	file:
HARDCLAUSE_IGNORE	SIInsertHardClauses.cpp	/^  HARDCLAUSE_IGNORE,$/;"	e	enum:__anon09538a560111::HardClauseType	file:
HARDCLAUSE_ILLEGAL	SIInsertHardClauses.cpp	/^  HARDCLAUSE_ILLEGAL,$/;"	e	enum:__anon09538a560111::HardClauseType	file:
HARDCLAUSE_INTERNAL	SIInsertHardClauses.cpp	/^  HARDCLAUSE_INTERNAL,$/;"	e	enum:__anon09538a560111::HardClauseType	file:
HARDCLAUSE_LDS	SIInsertHardClauses.cpp	/^  HARDCLAUSE_LDS,$/;"	e	enum:__anon09538a560111::HardClauseType	file:
HARDCLAUSE_MIMG_ATOMIC	SIInsertHardClauses.cpp	/^  HARDCLAUSE_MIMG_ATOMIC,$/;"	e	enum:__anon09538a560111::HardClauseType	file:
HARDCLAUSE_MIMG_LOAD	SIInsertHardClauses.cpp	/^  HARDCLAUSE_MIMG_LOAD,$/;"	e	enum:__anon09538a560111::HardClauseType	file:
HARDCLAUSE_MIMG_SAMPLE	SIInsertHardClauses.cpp	/^  HARDCLAUSE_MIMG_SAMPLE,$/;"	e	enum:__anon09538a560111::HardClauseType	file:
HARDCLAUSE_MIMG_STORE	SIInsertHardClauses.cpp	/^  HARDCLAUSE_MIMG_STORE,$/;"	e	enum:__anon09538a560111::HardClauseType	file:
HARDCLAUSE_SMEM	SIInsertHardClauses.cpp	/^  HARDCLAUSE_SMEM,$/;"	e	enum:__anon09538a560111::HardClauseType	file:
HARDCLAUSE_VALU	SIInsertHardClauses.cpp	/^  HARDCLAUSE_VALU,$/;"	e	enum:__anon09538a560111::HardClauseType	file:
HARDCLAUSE_VMEM	SIInsertHardClauses.cpp	/^  HARDCLAUSE_VMEM,$/;"	e	enum:__anon09538a560111::HardClauseType	file:
HARDCLAUSE_VMEM_ATOMIC	SIInsertHardClauses.cpp	/^  HARDCLAUSE_VMEM_ATOMIC,$/;"	e	enum:__anon09538a560111::HardClauseType	file:
HARDCLAUSE_VMEM_LOAD	SIInsertHardClauses.cpp	/^  HARDCLAUSE_VMEM_LOAD,$/;"	e	enum:__anon09538a560111::HardClauseType	file:
HARDCLAUSE_VMEM_STORE	SIInsertHardClauses.cpp	/^  HARDCLAUSE_VMEM_STORE,$/;"	e	enum:__anon09538a560111::HardClauseType	file:
HEAP_PTR_OFFSET	SIDefines.h	/^  HEAP_PTR_OFFSET = 96,$/;"	e	enum:llvm::RVGPU::ImplicitArg::Offset_COV5
HIDDEN_BLOCK_COUNT_X	RVGPULowerKernelAttributes.cpp	/^  HIDDEN_BLOCK_COUNT_X = 0,$/;"	e	enum:__anon7b93ed1b0111::ImplicitArgOffsets	file:
HIDDEN_BLOCK_COUNT_Y	RVGPULowerKernelAttributes.cpp	/^  HIDDEN_BLOCK_COUNT_Y = 4,$/;"	e	enum:__anon7b93ed1b0111::ImplicitArgOffsets	file:
HIDDEN_BLOCK_COUNT_Z	RVGPULowerKernelAttributes.cpp	/^  HIDDEN_BLOCK_COUNT_Z = 8,$/;"	e	enum:__anon7b93ed1b0111::ImplicitArgOffsets	file:
HIDDEN_GROUP_SIZE_X	RVGPULowerKernelAttributes.cpp	/^  HIDDEN_GROUP_SIZE_X = 12,$/;"	e	enum:__anon7b93ed1b0111::ImplicitArgOffsets	file:
HIDDEN_GROUP_SIZE_Y	RVGPULowerKernelAttributes.cpp	/^  HIDDEN_GROUP_SIZE_Y = 14,$/;"	e	enum:__anon7b93ed1b0111::ImplicitArgOffsets	file:
HIDDEN_GROUP_SIZE_Z	RVGPULowerKernelAttributes.cpp	/^  HIDDEN_GROUP_SIZE_Z = 16,$/;"	e	enum:__anon7b93ed1b0111::ImplicitArgOffsets	file:
HIDDEN_REMAINDER_X	RVGPULowerKernelAttributes.cpp	/^  HIDDEN_REMAINDER_X = 18,$/;"	e	enum:__anon7b93ed1b0111::ImplicitArgOffsets	file:
HIDDEN_REMAINDER_Y	RVGPULowerKernelAttributes.cpp	/^  HIDDEN_REMAINDER_Y = 20,$/;"	e	enum:__anon7b93ed1b0111::ImplicitArgOffsets	file:
HIDDEN_REMAINDER_Z	RVGPULowerKernelAttributes.cpp	/^  HIDDEN_REMAINDER_Z = 22,$/;"	e	enum:__anon7b93ed1b0111::ImplicitArgOffsets	file:
HOSTCALL_PTR_OFFSET	SIDefines.h	/^  HOSTCALL_PTR_OFFSET = 80,$/;"	e	enum:llvm::RVGPU::ImplicitArg::Offset_COV5
HSAMetadataDoc	RVGPUHSAMetadataStreamer.h	/^  std::unique_ptr<msgpack::Document> HSAMetadataDoc =$/;"	m	class:llvm::RVGPU::HSRV::MetadataStreamerMsgPackV4	typeref:typename:std::unique_ptr<msgpack::Document>
HSAMetadataStream	RVGPUAsmPrinter.h	/^  std::unique_ptr<RVGPU::HSRV::MetadataStreamer> HSAMetadataStream;$/;"	m	class:llvm::RVGPUAsmPrinter	typeref:typename:std::unique_ptr<RVGPU::HSRV::MetadataStreamer>
HSRV	MCTargetDesc/RVGPUTargetStreamer.h	/^namespace HSRV {$/;"	n	namespace:llvm::RVGPU
HSRV	RVGPUAsmPrinter.h	/^namespace HSRV {$/;"	n	namespace:llvm::RVGPU
HSRV	RVGPUHSAMetadataStreamer.cpp	/^namespace HSRV {$/;"	n	namespace:llvm::RVGPU	file:
HSRV	RVGPUHSAMetadataStreamer.h	/^namespace HSRV {$/;"	n	namespace:llvm::RVGPU
HWEncoding	SIDefines.h	/^namespace HWEncoding {$/;"	n	namespace:llvm::RVGPU
HWNearestTiesToEven	SIModeRegisterDefaults.cpp	/^static constexpr uint32_t HWNearestTiesToEven = FP_ROUND_ROUND_TO_NEAREST;$/;"	v	typeref:typename:uint32_t	file:
HWTowardNegative	SIModeRegisterDefaults.cpp	/^static constexpr uint32_t HWTowardNegative = FP_ROUND_ROUND_TO_NEGINF;$/;"	v	typeref:typename:uint32_t	file:
HWTowardPositive	SIModeRegisterDefaults.cpp	/^static constexpr uint32_t HWTowardPositive = FP_ROUND_ROUND_TO_INF;$/;"	v	typeref:typename:uint32_t	file:
HWTowardZero	SIModeRegisterDefaults.cpp	/^static constexpr uint32_t HWTowardZero = FP_ROUND_ROUND_TO_ZERO;$/;"	v	typeref:typename:uint32_t	file:
HalfRate64Ops	GCNSubtarget.h	/^  bool HalfRate64Ops = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HardClauseType	SIInsertHardClauses.cpp	/^enum HardClauseType {$/;"	g	namespace:__anon09538a560111	file:
HardwareLimits	SIInsertWaitcnts.cpp	/^struct HardwareLimits {$/;"	s	namespace:__anona6cbb7940211	file:
Has16BitInsts	RVGPUSubtarget.h	/^  bool Has16BitInsts = false;$/;"	m	class:llvm::RVGPUSubtarget	typeref:typename:bool
HasA16	GCNSubtarget.h	/^  bool HasA16 = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasAGPR	SIDefines.h	/^  HasAGPR = 1 << HasAGPRBit,$/;"	e	enum:llvm::SIRCFlags
HasAGPRBit	SIDefines.h	/^  HasAGPRBit,$/;"	e	enum:llvm::SIRCFlags
HasApertureRegs	GCNSubtarget.h	/^  bool HasApertureRegs = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasArchitectedFlatScratch	GCNSubtarget.h	/^  bool HasArchitectedFlatScratch = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasArchitectedSGPRs	GCNSubtarget.h	/^  bool HasArchitectedSGPRs = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasAtomicBufferGlobalPkAddF16Insts	GCNSubtarget.h	/^  bool HasAtomicBufferGlobalPkAddF16Insts = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasAtomicBufferGlobalPkAddF16NoRtnInsts	GCNSubtarget.h	/^  bool HasAtomicBufferGlobalPkAddF16NoRtnInsts = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasAtomicCSubNoRtnInsts	GCNSubtarget.h	/^  bool HasAtomicCSubNoRtnInsts = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasAtomicDsPkAdd16Insts	GCNSubtarget.h	/^  bool HasAtomicDsPkAdd16Insts = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasAtomicFaddNoRtnInsts	GCNSubtarget.h	/^  bool HasAtomicFaddNoRtnInsts = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasAtomicFaddRtnInsts	GCNSubtarget.h	/^  bool HasAtomicFaddRtnInsts = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasAtomicFlatPkAdd16Insts	GCNSubtarget.h	/^  bool HasAtomicFlatPkAdd16Insts = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasAtomicGlobalPkAddBF16Inst	GCNSubtarget.h	/^  bool HasAtomicGlobalPkAddBF16Inst = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasD16	Utils/RVGPUBaseInfo.h	/^  bool HasD16;$/;"	m	struct:llvm::RVGPU::MIMGBaseOpcodeInfo	typeref:typename:bool
HasDLInsts	GCNSubtarget.h	/^  bool HasDLInsts = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasDPALU_DPP	GCNSubtarget.h	/^  bool HasDPALU_DPP = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasDPP	GCNSubtarget.h	/^  bool HasDPP = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasDPP8	GCNSubtarget.h	/^  bool HasDPP8 = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasDPPSrc1SGPR	GCNSubtarget.h	/^  bool HasDPPSrc1SGPR = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasDenseGlobalMemAcc	RVGPUPerfHintAnalysis.h	/^    bool HasDenseGlobalMemAcc; \/\/ Set if at least 1 basic block has relatively$/;"	m	struct:llvm::RVGPUPerfHintAnalysis::FuncInfo	typeref:typename:bool
HasDot10Insts	GCNSubtarget.h	/^  bool HasDot10Insts = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasDot1Insts	GCNSubtarget.h	/^  bool HasDot1Insts = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasDot2Insts	GCNSubtarget.h	/^  bool HasDot2Insts = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasDot3Insts	GCNSubtarget.h	/^  bool HasDot3Insts = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasDot4Insts	GCNSubtarget.h	/^  bool HasDot4Insts = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasDot5Insts	GCNSubtarget.h	/^  bool HasDot5Insts = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasDot6Insts	GCNSubtarget.h	/^  bool HasDot6Insts = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasDot7Insts	GCNSubtarget.h	/^  bool HasDot7Insts = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasDot8Insts	GCNSubtarget.h	/^  bool HasDot8Insts = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasDot9Insts	GCNSubtarget.h	/^  bool HasDot9Insts = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasDsSrc2Insts	RVGPUSubtarget.h	/^  bool HasDsSrc2Insts = false;$/;"	m	class:llvm::RVGPUSubtarget	typeref:typename:bool
HasDynamicallySizedStack	RVGPUResourceUsageAnalysis.h	/^    bool HasDynamicallySizedStack = false;$/;"	m	struct:llvm::RVGPUResourceUsageAnalysis::SIFunctionResourceInfo	typeref:typename:bool
HasExtendedImageInsts	GCNSubtarget.h	/^  bool HasExtendedImageInsts = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasFP32DenormalFlush	RVGPUCodeGenPrepare.cpp	/^  bool HasFP32DenormalFlush = false;$/;"	m	class:__anond35e324e0111::RVGPUCodeGenPrepareImpl	typeref:typename:bool	file:
HasFP32Denormals	RVGPUTargetTransformInfo.h	/^  bool HasFP32Denormals;$/;"	m	class:llvm::GCNTTIImpl	typeref:typename:bool
HasFP64FP16Denormals	RVGPUTargetTransformInfo.h	/^  bool HasFP64FP16Denormals;$/;"	m	class:llvm::GCNTTIImpl	typeref:typename:bool
HasFP8Insts	GCNSubtarget.h	/^  bool HasFP8Insts = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasFlatAtomicFaddF32Inst	GCNSubtarget.h	/^  bool HasFlatAtomicFaddF32Inst = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasFlatSegmentOffsetBug	GCNSubtarget.h	/^  bool HasFlatSegmentOffsetBug = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasFmaMixInsts	GCNSubtarget.h	/^  bool HasFmaMixInsts = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasFmacF64Inst	GCNSubtarget.h	/^  bool HasFmacF64Inst = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasFminFmaxLegacy	RVGPUSubtarget.h	/^  bool HasFminFmaxLegacy = true;$/;"	m	class:llvm::RVGPUSubtarget	typeref:typename:bool
HasForceStoreSC0SC1	GCNSubtarget.h	/^  bool HasForceStoreSC0SC1 = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasG16	GCNSubtarget.h	/^  bool HasG16 = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasGDS	GCNSubtarget.h	/^  bool HasGDS = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasGFX11FullVGPRs	GCNSubtarget.h	/^  bool HasGFX11FullVGPRs = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasGWS	GCNSubtarget.h	/^  bool HasGWS = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasGetWaveIdInst	GCNSubtarget.h	/^  bool HasGetWaveIdInst = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasHighPressure	GCNSchedStrategy.h	/^  bool HasHighPressure;$/;"	m	class:llvm::GCNSchedStrategy	typeref:typename:bool
HasIGLPInstrs	GCNSchedStrategy.h	/^  bool HasIGLPInstrs = false;$/;"	m	class:llvm::GCNPostScheduleDAGMILive	typeref:typename:bool
HasImageGather4D16Bug	GCNSubtarget.h	/^  bool HasImageGather4D16Bug = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasImageInsts	GCNSubtarget.h	/^  bool HasImageInsts = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasImageStoreD16Bug	GCNSubtarget.h	/^  bool HasImageStoreD16Bug = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasIndirectCall	RVGPUResourceUsageAnalysis.h	/^    bool HasIndirectCall = false;$/;"	m	struct:llvm::RVGPUResourceUsageAnalysis::SIFunctionResourceInfo	typeref:typename:bool
HasInstFwdPrefetchBug	GCNSubtarget.h	/^  bool HasInstFwdPrefetchBug = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasIntClamp	GCNSubtarget.h	/^  bool HasIntClamp = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasInv2PiInlineImm	RVGPUSubtarget.h	/^  bool HasInv2PiInlineImm = false;$/;"	m	class:llvm::RVGPUSubtarget	typeref:typename:bool
HasLdsBranchVmemWARHazard	GCNSubtarget.h	/^  bool HasLdsBranchVmemWARHazard = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasLiteral	Disassembler/RVGPUDisassembler.h	/^  mutable bool HasLiteral;$/;"	m	class:llvm::RVGPUDisassembler	typeref:typename:bool
HasLoop	RVGPUMachineCFGStructurizer.cpp	/^  bool HasLoop;$/;"	m	class:__anon1695b1f50211::LinearizedRegion	typeref:typename:bool	file:
HasLowLatencyNonWaitedParent	SIMachineScheduler.h	/^    bool HasLowLatencyNonWaitedParent;$/;"	m	struct:llvm::SIScheduleBlock::SISchedCandidate	typeref:typename:bool
HasLowLatencyNonWaitedParent	SIMachineScheduler.h	/^  std::vector<unsigned> HasLowLatencyNonWaitedParent;$/;"	m	class:llvm::SIScheduleBlock	typeref:typename:std::vector<unsigned>
HasMADIntraFwdBug	GCNSubtarget.h	/^  bool HasMADIntraFwdBug = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasMAIInsts	GCNSubtarget.h	/^  bool HasMAIInsts = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasMFMAInlineLiteralBug	GCNSubtarget.h	/^  bool HasMFMAInlineLiteralBug = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasMSAALoadDstSelBug	GCNSubtarget.h	/^  bool HasMSAALoadDstSelBug = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasMadMacF32Insts	RVGPUSubtarget.h	/^  bool HasMadMacF32Insts = false;$/;"	m	class:llvm::RVGPUSubtarget	typeref:typename:bool
HasMadMixInsts	RVGPUSubtarget.h	/^  bool HasMadMixInsts = false;$/;"	m	class:llvm::RVGPUSubtarget	typeref:typename:bool
HasMovrel	GCNSubtarget.h	/^  bool HasMovrel = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasMulI24	RVGPUSubtarget.h	/^  bool HasMulI24 = true;$/;"	m	class:llvm::RVGPUSubtarget	typeref:typename:bool
HasMulU24	RVGPUSubtarget.h	/^  bool HasMulU24 = true;$/;"	m	class:llvm::RVGPUSubtarget	typeref:typename:bool
HasNSAClauseBug	GCNSubtarget.h	/^  bool HasNSAClauseBug = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasNSAEncoding	GCNSubtarget.h	/^  bool HasNSAEncoding = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasNSAtoVMEMBug	GCNSubtarget.h	/^  bool HasNSAtoVMEMBug = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasNative	RVGPULibCalls.cpp	/^static bool HasNative(RVGPULibFunc::EFuncId id) {$/;"	f	typeref:typename:bool	file:
HasNoDataDepHazard	GCNSubtarget.h	/^  bool HasNoDataDepHazard = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasNoSdstCMPX	GCNSubtarget.h	/^  bool HasNoSdstCMPX = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasNonSpillStackObjects	RVMachineFunctionInfo.h	/^  bool HasNonSpillStackObjects = false;$/;"	m	class:llvm::RVMachineFunctionInfo	typeref:typename:bool
HasOffset3fBug	GCNSubtarget.h	/^  bool HasOffset3fBug = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasPackedFP32Ops	GCNSubtarget.h	/^  bool HasPackedFP32Ops = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasPackedTID	GCNSubtarget.h	/^  bool HasPackedTID = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasPartialNSAEncoding	GCNSubtarget.h	/^  bool HasPartialNSAEncoding = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasPkFmacF16Inst	GCNSubtarget.h	/^  bool HasPkFmacF16Inst = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasPseudoScalarTrans	GCNSubtarget.h	/^  bool HasPseudoScalarTrans = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasR128A16	GCNSubtarget.h	/^  bool HasR128A16 = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasRecursion	RVGPUResourceUsageAnalysis.h	/^    bool HasRecursion = false;$/;"	m	struct:llvm::RVGPUResourceUsageAnalysis::SIFunctionResourceInfo	typeref:typename:bool
HasRelocationAddend	MCTargetDesc/RVGPUAsmBackend.cpp	/^  bool HasRelocationAddend;$/;"	m	class:__anon6b905a380211::ELFRVGPUAsmBackend	typeref:typename:bool	file:
HasRestrictedSOffset	GCNSubtarget.h	/^  bool HasRestrictedSOffset = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasSALUFloatInsts	GCNSubtarget.h	/^  bool HasSALUFloatInsts = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasSDWA	RVGPUSubtarget.h	/^  bool HasSDWA = false;$/;"	m	class:llvm::RVGPUSubtarget	typeref:typename:bool
HasSDWAMac	GCNSubtarget.h	/^  bool HasSDWAMac = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasSDWAOmod	GCNSubtarget.h	/^  bool HasSDWAOmod = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasSDWAOutModsVOPC	GCNSubtarget.h	/^  bool HasSDWAOutModsVOPC = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasSDWAScalar	GCNSubtarget.h	/^  bool HasSDWAScalar = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasSDWASdst	GCNSubtarget.h	/^  bool HasSDWASdst = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasSGPR	SIDefines.h	/^  HasSGPR = 1 << HasSGPRbit,$/;"	e	enum:llvm::SIRCFlags
HasSGPRbit	SIDefines.h	/^  HasSGPRbit,$/;"	e	enum:llvm::SIRCFlags
HasSMEMtoVectorWriteHazard	GCNSubtarget.h	/^  bool HasSMEMtoVectorWriteHazard = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasSMemRealTime	GCNSubtarget.h	/^  bool HasSMemRealTime = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasSMemTimeInst	GCNSubtarget.h	/^  bool HasSMemTimeInst = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasSMulHi	RVGPUSubtarget.h	/^  bool HasSMulHi = false;$/;"	m	class:llvm::RVGPUSubtarget	typeref:typename:bool
HasScalarAtomics	GCNSubtarget.h	/^  bool HasScalarAtomics = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasScalarDwordx3Loads	GCNSubtarget.h	/^  bool HasScalarDwordx3Loads = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasScalarStores	GCNSubtarget.h	/^  bool HasScalarStores = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasShaderCyclesRegister	GCNSubtarget.h	/^  bool HasShaderCyclesRegister = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasSpilledSGPRs	RVMachineFunctionInfo.h	/^  bool HasSpilledSGPRs = false;$/;"	m	class:llvm::RVMachineFunctionInfo	typeref:typename:bool
HasSpilledSGPRs	RVMachineFunctionInfo.h	/^  bool HasSpilledSGPRs = false;$/;"	m	struct:llvm::yaml::RVMachineFunctionInfo	typeref:typename:bool
HasSpilledVGPRs	RVMachineFunctionInfo.h	/^  bool HasSpilledVGPRs = false;$/;"	m	class:llvm::RVMachineFunctionInfo	typeref:typename:bool
HasSpilledVGPRs	RVMachineFunctionInfo.h	/^  bool HasSpilledVGPRs = false;$/;"	m	struct:llvm::yaml::RVMachineFunctionInfo	typeref:typename:bool
HasSrc2Acc	Utils/RVGPUBaseInfo.h	/^  bool HasSrc2Acc = false;$/;"	m	class:llvm::RVGPU::VOPD::ComponentProps	typeref:typename:bool
HasTrigReducedRange	RVGPUSubtarget.h	/^  bool HasTrigReducedRange = false;$/;"	m	class:llvm::RVGPUSubtarget	typeref:typename:bool
HasTrue16BitInsts	RVGPUSubtarget.h	/^  bool HasTrue16BitInsts = false;$/;"	m	class:llvm::RVGPUSubtarget	typeref:typename:bool
HasUnpackedD16VMem	GCNSubtarget.h	/^  bool HasUnpackedD16VMem = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasUnsafeFPMath	RVGPUCodeGenPrepare.cpp	/^  bool HasUnsafeFPMath = false;$/;"	m	class:__anond35e324e0111::RVGPUCodeGenPrepareImpl	typeref:typename:bool	file:
HasVALUTransUseHazard	GCNSubtarget.h	/^  bool HasVALUTransUseHazard = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasVGPR	SIDefines.h	/^  HasVGPR = 1 << HasVGPRBit,$/;"	e	enum:llvm::SIRCFlags
HasVGPRBit	SIDefines.h	/^  HasVGPRBit = RegTupleAlignUnitsWidth,$/;"	e	enum:llvm::SIRCFlags
HasVGPRIndexMode	GCNSubtarget.h	/^  bool HasVGPRIndexMode = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasVGPRSingleUseHintInsts	GCNSubtarget.h	/^  bool HasVGPRSingleUseHintInsts = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasVMEMtoScalarWriteHazard	GCNSubtarget.h	/^  bool HasVMEMtoScalarWriteHazard = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasVOP3Literal	GCNSubtarget.h	/^  bool HasVOP3Literal = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasVOP3PInsts	RVGPUSubtarget.h	/^  bool HasVOP3PInsts = false;$/;"	m	class:llvm::RVGPUSubtarget	typeref:typename:bool
HasVOPDInsts	GCNSubtarget.h	/^  bool HasVOPDInsts = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasVcmpxExecWARHazard	GCNSubtarget.h	/^  bool HasVcmpxExecWARHazard = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasVcmpxPermlaneHazard	GCNSubtarget.h	/^  bool HasVcmpxPermlaneHazard = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HasVscnt	GCNSubtarget.h	/^  bool HasVscnt = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
HazardExpired	GCNHazardRecognizer.cpp	/^typedef enum { HazardFound, HazardExpired, NoHazardFound } HazardFnResult;$/;"	e	enum:__anon71cb16800203	file:
HazardFnResult	GCNHazardRecognizer.cpp	/^typedef enum { HazardFound, HazardExpired, NoHazardFound } HazardFnResult;$/;"	t	typeref:enum:__anon71cb16800203	file:
HazardFound	GCNHazardRecognizer.cpp	/^typedef enum { HazardFound, HazardExpired, NoHazardFound } HazardFnResult;$/;"	e	enum:__anon71cb16800203	file:
Height	SIMachineScheduler.h	/^    unsigned Height;$/;"	m	struct:llvm::SIScheduleBlockScheduler::SIBlockSchedCandidate	typeref:typename:unsigned
Height	SIMachineScheduler.h	/^  unsigned Height;  \/\/ Maximum topdown path length to block without outputs$/;"	m	class:llvm::SIScheduleBlock	typeref:typename:unsigned
Helper	RVGPUPostLegalizerCombiner.cpp	/^  mutable RVGPUCombinerHelper Helper;$/;"	m	class:__anonf94dcdde0111::RVGPUPostLegalizerCombinerImpl	typeref:typename:RVGPUCombinerHelper	file:
Helper	RVGPUPreLegalizerCombiner.cpp	/^  mutable RVGPUCombinerHelper Helper;$/;"	m	class:__anonb779c2ff0111::RVGPUPreLegalizerCombinerImpl	typeref:typename:RVGPUCombinerHelper	file:
Helper	RVGPURegBankCombiner.cpp	/^  mutable CombinerHelper Helper;$/;"	m	class:__anon00ae19330111::RVGPURegBankCombinerImpl	typeref:typename:CombinerHelper	file:
HexLines	RVGPUAsmPrinter.h	/^  std::vector<std::string> DisasmLines, HexLines;$/;"	m	class:llvm::RVGPUAsmPrinter	typeref:typename:std::vector<std::string>
Hi	AsmParser/RVGPUAsmParser.cpp	/^    int Hi;$/;"	m	struct:RVGPUAsmParser::parseDPPCtrlSel::DppCtrlCheck	typeref:typename:int	file:
Hi	Disassembler/RVGPUDisassembler.h	/^  uint64_t Hi = 0;$/;"	m	class:llvm::DecoderUInt128	typeref:typename:uint64_t
HiReg	SILoadStoreOptimizer.cpp	/^    Register HiReg;$/;"	m	struct:__anon677101620111::SILoadStoreOptimizer::BaseRegisters	typeref:typename:Register	file:
HiSubReg	SILoadStoreOptimizer.cpp	/^    unsigned HiSubReg = 0;$/;"	m	struct:__anon677101620111::SILoadStoreOptimizer::BaseRegisters	typeref:typename:unsigned	file:
HighBitsOf32BitAddress	RVMachineFunctionInfo.h	/^  uint32_t HighBitsOf32BitAddress = 0;$/;"	m	struct:llvm::yaml::RVMachineFunctionInfo	typeref:typename:uint32_t
HighBitsOf32BitAddress	RVMachineFunctionInfo.h	/^  unsigned HighBitsOf32BitAddress;$/;"	m	class:llvm::RVMachineFunctionInfo	typeref:typename:unsigned
HighLatencyBlock	SIMachineScheduler.h	/^  bool HighLatencyBlock = false;$/;"	m	class:llvm::SIScheduleBlock	typeref:typename:bool
HighRPSGPRBias	GCNSchedStrategy.h	/^  const unsigned HighRPSGPRBias = 7;$/;"	m	class:llvm::GCNSchedStrategy	typeref:typename:const unsigned
HighRPVGPRBias	GCNSchedStrategy.h	/^  const unsigned HighRPVGPRBias = 7;$/;"	m	class:llvm::GCNSchedStrategy	typeref:typename:const unsigned
HwStages	Utils/RVGPUPALMetadata.h	/^  msgpack::DocNode HwStages;$/;"	m	class:llvm::RVGPUPALMetadata	typeref:typename:msgpack::DocNode
Hwreg	SIDefines.h	/^namespace Hwreg { \/\/ Encoding of SIMM16 used in s_setreg\/getreg* insns.$/;"	n	namespace:llvm::RVGPU
Hwreg	Utils/RVGPUAsmUtils.cpp	/^namespace Hwreg {$/;"	n	namespace:llvm::RVGPU	file:
Hwreg	Utils/RVGPUAsmUtils.h	/^namespace Hwreg { \/\/ Symbolic names for the hwreg(...) syntax.$/;"	n	namespace:llvm::RVGPU
Hwreg	Utils/RVGPUBaseInfo.cpp	/^namespace Hwreg {$/;"	n	namespace:llvm::RVGPU	file:
Hwreg	Utils/RVGPUBaseInfo.h	/^namespace Hwreg {$/;"	n	namespace:llvm::RVGPU
I	RVGPUAtomicOptimizer.cpp	/^  Instruction *I;$/;"	m	struct:__anon7bca098a0111::ReplacementInfo	typeref:typename:Instruction *	file:
I	SILoadStoreOptimizer.cpp	/^    MachineBasicBlock::iterator I;$/;"	m	struct:__anon677101620111::SILoadStoreOptimizer::CombineInfo	typeref:typename:MachineBasicBlock::iterator	file:
I16	RVGPULibFunc.h	/^    I16 =   INT | B16,$/;"	e	enum:llvm::RVGPULibFuncBase::EType
I32	RVGPULibFunc.h	/^    I32 =   INT | B32,$/;"	e	enum:llvm::RVGPULibFuncBase::EType
I64	RVGPULibFunc.h	/^    I64 =   INT | B64,$/;"	e	enum:llvm::RVGPULibFuncBase::EType
I8	RVGPULibFunc.h	/^    I8  =   INT | B8,$/;"	e	enum:llvm::RVGPULibFuncBase::EType
IAMInstCost	RVGPUPerfHintAnalysis.h	/^    unsigned IAMInstCost; \/\/ Indirect access memory instruction count$/;"	m	struct:llvm::RVGPUPerfHintAnalysis::FuncInfo	typeref:typename:unsigned
IAWeight	RVGPUPerfHintAnalysis.cpp	/^    IAWeight("rvgpu-indirect-access-weight", cl::init(1000), cl::Hidden,$/;"	v	typeref:typename:cl::opt<unsigned>	file:
ID	GCNCreateVOPD.cpp	/^  static char ID;$/;"	m	class:__anon7e59fb9b0111::GCNCreateVOPD	typeref:typename:char	file:
ID	GCNCreateVOPD.cpp	/^char GCNCreateVOPD::ID = 0;$/;"	m	class:GCNCreateVOPD	typeref:typename:char
ID	GCNDPPCombine.cpp	/^  static char ID;$/;"	m	class:__anon46a5cf8f0111::GCNDPPCombine	typeref:typename:char	file:
ID	GCNNSAReassign.cpp	/^  static char ID;$/;"	m	class:__anon7e838c8c0111::GCNNSAReassign	typeref:typename:char	file:
ID	GCNPreRALongBranchReg.cpp	/^  static char ID;$/;"	m	class:__anon4605b2240111::GCNPreRALongBranchReg	typeref:typename:char	file:
ID	GCNPreRALongBranchReg.cpp	/^char GCNPreRALongBranchReg::ID = 0;$/;"	m	class:GCNPreRALongBranchReg	typeref:typename:char
ID	GCNPreRAOptimizations.cpp	/^  static char ID;$/;"	m	class:__anon3997f4420111::GCNPreRAOptimizations	typeref:typename:char	file:
ID	GCNRegPressure.cpp	/^char llvm::GCNRegPressurePrinter::ID = 0;$/;"	m	class:llvm::GCNRegPressurePrinter	typeref:typename:char
ID	GCNRegPressure.h	/^  static char ID;$/;"	m	struct:llvm::GCNRegPressurePrinter	typeref:typename:char
ID	GCNRewritePartialRegUses.cpp	/^  static char ID;$/;"	m	class:__anon37bf8c3b0111::GCNRewritePartialRegUses	typeref:typename:char	file:
ID	GCNRewritePartialRegUses.cpp	/^char GCNRewritePartialRegUses::ID;$/;"	m	class:GCNRewritePartialRegUses	typeref:typename:char
ID	RVGPUAliasAnalysis.cpp	/^char RVGPUAAWrapperPass::ID = 0;$/;"	m	class:RVGPUAAWrapperPass	typeref:typename:char
ID	RVGPUAliasAnalysis.cpp	/^char RVGPUExternalAAWrapper::ID = 0;$/;"	m	class:RVGPUExternalAAWrapper	typeref:typename:char
ID	RVGPUAliasAnalysis.h	/^  static char ID;$/;"	m	class:llvm::RVGPUAAWrapperPass	typeref:typename:char
ID	RVGPUAliasAnalysis.h	/^  static char ID;$/;"	m	class:llvm::RVGPUExternalAAWrapper	typeref:typename:char
ID	RVGPUAlwaysInlinePass.cpp	/^  static char ID;$/;"	m	class:__anonad1ccdb10111::RVGPUAlwaysInline	typeref:typename:char	file:
ID	RVGPUAnnotateKernelFeatures.cpp	/^  static char ID;$/;"	m	class:__anondc582c840111::RVGPUAnnotateKernelFeatures	typeref:typename:char	file:
ID	RVGPUAnnotateKernelFeatures.cpp	/^char RVGPUAnnotateKernelFeatures::ID = 0;$/;"	m	class:RVGPUAnnotateKernelFeatures	typeref:typename:char
ID	RVGPUAnnotateUniformValues.cpp	/^  static char ID;$/;"	m	class:__anon9c77d1d40111::RVGPUAnnotateUniformValues	typeref:typename:char	file:
ID	RVGPUArgumentUsageInfo.cpp	/^char RVGPUArgumentUsageInfo::ID = 0;$/;"	m	class:RVGPUArgumentUsageInfo	typeref:typename:char
ID	RVGPUArgumentUsageInfo.h	/^  static char ID;$/;"	m	class:llvm::RVGPUArgumentUsageInfo	typeref:typename:char
ID	RVGPUAtomicOptimizer.cpp	/^  static char ID;$/;"	m	class:__anon7bca098a0111::RVGPUAtomicOptimizer	typeref:typename:char	file:
ID	RVGPUAtomicOptimizer.cpp	/^char RVGPUAtomicOptimizer::ID = 0;$/;"	m	class:RVGPUAtomicOptimizer	typeref:typename:char
ID	RVGPUAttributor.cpp	/^  static char ID;$/;"	m	class:__anon512e119a0111::RVGPUAttributorLegacy	typeref:typename:char	file:
ID	RVGPUAttributor.cpp	/^  static const char ID;$/;"	m	struct:__anon512e119a0111::AARVAttributes	typeref:typename:const char	file:
ID	RVGPUAttributor.cpp	/^  static const char ID;$/;"	m	struct:__anon512e119a0111::AARVFlatWorkGroupSize	typeref:typename:const char	file:
ID	RVGPUAttributor.cpp	/^  static const char ID;$/;"	m	struct:__anon512e119a0111::AARVWavesPerEU	typeref:typename:const char	file:
ID	RVGPUAttributor.cpp	/^  static const char ID;$/;"	m	struct:__anon512e119a0111::AAUniformWorkGroupSize	typeref:typename:const char	file:
ID	RVGPUAttributor.cpp	/^char RVGPUAttributorLegacy::ID = 0;$/;"	m	class:RVGPUAttributorLegacy	typeref:typename:char
ID	RVGPUAttributor.cpp	/^const char AARVAttributes::ID = 0;$/;"	m	class:__anon512e119a0111::AARVAttributes	typeref:typename:const char
ID	RVGPUAttributor.cpp	/^const char AARVFlatWorkGroupSize::ID = 0;$/;"	m	class:__anon512e119a0111::AARVFlatWorkGroupSize	typeref:typename:const char
ID	RVGPUAttributor.cpp	/^const char AARVWavesPerEU::ID = 0;$/;"	m	class:__anon512e119a0111::AARVWavesPerEU	typeref:typename:const char
ID	RVGPUAttributor.cpp	/^const char AAUniformWorkGroupSize::ID = 0;$/;"	m	class:__anon512e119a0111::AAUniformWorkGroupSize	typeref:typename:const char
ID	RVGPUCodeGenPrepare.cpp	/^  static char ID;$/;"	m	class:__anond35e324e0111::RVGPUCodeGenPrepare	typeref:typename:char	file:
ID	RVGPUCtorDtorLowering.cpp	/^  static char ID;$/;"	m	class:__anon237d7fe20111::RVGPUCtorDtorLoweringLegacy	typeref:typename:char	file:
ID	RVGPUCtorDtorLowering.cpp	/^char RVGPUCtorDtorLoweringLegacy::ID = 0;$/;"	m	class:RVGPUCtorDtorLoweringLegacy	typeref:typename:char
ID	RVGPUGlobalISelDivergenceLowering.cpp	/^  static char ID;$/;"	m	class:__anon4d1a276b0111::RVGPUGlobalISelDivergenceLowering	typeref:typename:char	file:
ID	RVGPUISelDAGToDAG.cpp	/^char RVGPUDAGToDAGISel::ID = 0;$/;"	m	class:RVGPUDAGToDAGISel	typeref:typename:char
ID	RVGPUISelDAGToDAG.h	/^  static char ID;$/;"	m	class:RVGPUDAGToDAGISel	typeref:typename:char
ID	RVGPUImageIntrinsicOptimizer.cpp	/^  static char ID;$/;"	m	class:__anon27dfeec30111::RVGPUImageIntrinsicOptimizer	typeref:typename:char	file:
ID	RVGPUInsertDelayAlu.cpp	/^  static char ID;$/;"	m	class:__anonc7296b900111::RVGPUInsertDelayAlu	typeref:typename:char	file:
ID	RVGPUInsertDelayAlu.cpp	/^char RVGPUInsertDelayAlu::ID = 0;$/;"	m	class:RVGPUInsertDelayAlu	typeref:typename:char
ID	RVGPUInsertSingleUseVDST.cpp	/^  static char ID;$/;"	m	class:__anon6c17cf8f0111::RVGPUInsertSingleUseVDST	typeref:typename:char	file:
ID	RVGPUInsertSingleUseVDST.cpp	/^char RVGPUInsertSingleUseVDST::ID = 0;$/;"	m	class:RVGPUInsertSingleUseVDST	typeref:typename:char
ID	RVGPULateCodeGenPrepare.cpp	/^  static char ID;$/;"	m	class:__anon4d9375140111::RVGPULateCodeGenPrepare	typeref:typename:char	file:
ID	RVGPULibFunc.cpp	/^  using ID = RVGPULibFunc::EFuncId;$/;"	t	class:__anona5afe38d0111::UnmangledFuncInfo	typeref:typename:RVGPULibFunc::EFuncId	file:
ID	RVGPULowerKernelArguments.cpp	/^  static char ID;$/;"	m	class:__anonf85f450a0111::RVGPULowerKernelArguments	typeref:typename:char	file:
ID	RVGPULowerKernelAttributes.cpp	/^  static char ID;$/;"	m	class:__anon7b93ed1b0111::RVGPULowerKernelAttributes	typeref:typename:char	file:
ID	RVGPULowerModuleLDSPass.cpp	/^  static char ID;$/;"	m	class:__anoncc7483b30111::RVGPULowerModuleLDSLegacy	typeref:typename:char	file:
ID	RVGPULowerModuleLDSPass.cpp	/^char RVGPULowerModuleLDSLegacy::ID = 0;$/;"	m	class:RVGPULowerModuleLDSLegacy	typeref:typename:char
ID	RVGPUMachineCFGStructurizer.cpp	/^  static char ID;$/;"	m	class:__anon1695b1f50311::RVGPUMachineCFGStructurizer	typeref:typename:char	file:
ID	RVGPUMachineCFGStructurizer.cpp	/^char RVGPUMachineCFGStructurizer::ID = 0;$/;"	m	class:RVGPUMachineCFGStructurizer	typeref:typename:char
ID	RVGPUOpenCLEnqueuedBlockLowering.cpp	/^  static char ID;$/;"	m	class:__anon3ce248190111::RVGPUOpenCLEnqueuedBlockLowering	typeref:typename:char	file:
ID	RVGPUOpenCLEnqueuedBlockLowering.cpp	/^char RVGPUOpenCLEnqueuedBlockLowering::ID = 0;$/;"	m	class:RVGPUOpenCLEnqueuedBlockLowering	typeref:typename:char
ID	RVGPUPerfHintAnalysis.cpp	/^char llvm::RVGPUPerfHintAnalysis::ID = 0;$/;"	m	class:llvm::RVGPUPerfHintAnalysis	typeref:typename:char
ID	RVGPUPerfHintAnalysis.h	/^  static char ID;$/;"	m	struct:llvm::RVGPUPerfHintAnalysis	typeref:typename:char
ID	RVGPUPostLegalizerCombiner.cpp	/^  static char ID;$/;"	m	class:__anonf94dcdde0111::RVGPUPostLegalizerCombiner	typeref:typename:char	file:
ID	RVGPUPostLegalizerCombiner.cpp	/^char RVGPUPostLegalizerCombiner::ID = 0;$/;"	m	class:RVGPUPostLegalizerCombiner	typeref:typename:char
ID	RVGPUPreLegalizerCombiner.cpp	/^  static char ID;$/;"	m	class:__anonb779c2ff0111::RVGPUPreLegalizerCombiner	typeref:typename:char	file:
ID	RVGPUPreLegalizerCombiner.cpp	/^char RVGPUPreLegalizerCombiner::ID = 0;$/;"	m	class:RVGPUPreLegalizerCombiner	typeref:typename:char
ID	RVGPUPrintfRuntimeBinding.cpp	/^  static char ID;$/;"	m	class:__anonf5f1f1fc0111::RVGPUPrintfRuntimeBinding	typeref:typename:char	file:
ID	RVGPUPrintfRuntimeBinding.cpp	/^char RVGPUPrintfRuntimeBinding::ID = 0;$/;"	m	class:RVGPUPrintfRuntimeBinding	typeref:typename:char
ID	RVGPUPromoteAlloca.cpp	/^  static char ID;$/;"	m	class:__anonea904d1c0111::RVGPUPromoteAlloca	typeref:typename:char	file:
ID	RVGPUPromoteAlloca.cpp	/^  static char ID;$/;"	m	class:__anonea904d1c0111::RVGPUPromoteAllocaToVector	typeref:typename:char	file:
ID	RVGPUPromoteAlloca.cpp	/^char RVGPUPromoteAlloca::ID = 0;$/;"	m	class:RVGPUPromoteAlloca	typeref:typename:char
ID	RVGPUPromoteAlloca.cpp	/^char RVGPUPromoteAllocaToVector::ID = 0;$/;"	m	class:RVGPUPromoteAllocaToVector	typeref:typename:char
ID	RVGPUPromoteKernelArguments.cpp	/^  static char ID;$/;"	m	class:__anon281388e70111::RVGPUPromoteKernelArguments	typeref:typename:char	file:
ID	RVGPURegBankCombiner.cpp	/^  static char ID;$/;"	m	class:__anon00ae19330111::RVGPURegBankCombiner	typeref:typename:char	file:
ID	RVGPURegBankCombiner.cpp	/^char RVGPURegBankCombiner::ID = 0;$/;"	m	class:RVGPURegBankCombiner	typeref:typename:char
ID	RVGPURegBankSelect.cpp	/^char RVGPURegBankSelect::ID = 0;$/;"	m	class:RVGPURegBankSelect	typeref:typename:char
ID	RVGPURegBankSelect.h	/^  static char ID;$/;"	m	class:llvm::RVGPURegBankSelect	typeref:typename:char
ID	RVGPURemoveIncompatibleFunctions.cpp	/^  static char ID;$/;"	m	class:__anonbd23f2080111::RVGPURemoveIncompatibleFunctions	typeref:typename:char	file:
ID	RVGPUResourceUsageAnalysis.cpp	/^char llvm::RVGPUResourceUsageAnalysis::ID = 0;$/;"	m	class:llvm::RVGPUResourceUsageAnalysis	typeref:typename:char
ID	RVGPUResourceUsageAnalysis.h	/^  static char ID;$/;"	m	struct:llvm::RVGPUResourceUsageAnalysis	typeref:typename:char
ID	RVGPURewriteOutArguments.cpp	/^  static char ID;$/;"	m	class:__anon63899d5a0111::RVGPURewriteOutArguments	typeref:typename:char	file:
ID	RVGPURewriteUndefForPHI.cpp	/^  static char ID;$/;"	m	class:__anon56776a060111::RVGPURewriteUndefForPHILegacy	typeref:typename:char	file:
ID	RVGPURewriteUndefForPHI.cpp	/^char RVGPURewriteUndefForPHILegacy::ID = 0;$/;"	m	class:RVGPURewriteUndefForPHILegacy	typeref:typename:char
ID	RVGPUSetWavePriority.cpp	/^  static char ID;$/;"	m	class:__anonfc3f584b0111::RVGPUSetWavePriority	typeref:typename:char	file:
ID	RVGPUUnifyDivergentExitNodes.cpp	/^  static char ID;$/;"	m	class:__anonc14c2af00111::RVGPUUnifyDivergentExitNodes	typeref:typename:char	file:
ID	RVGPUUnifyDivergentExitNodes.cpp	/^char RVGPUUnifyDivergentExitNodes::ID = 0;$/;"	m	class:RVGPUUnifyDivergentExitNodes	typeref:typename:char
ID	RVGPUUnifyMetadata.cpp	/^    static char ID;$/;"	m	class:__anon26dde6960111::RVGPUUnifyMetadata	typeref:typename:char	file:
ID	RVGPUUnifyMetadata.cpp	/^  char RVGPUUnifyMetadata::ID = 0;$/;"	m	class:RVGPUUnifyMetadata	typeref:typename:char
ID	SIAnnotateControlFlow.cpp	/^  static char ID;$/;"	m	class:__anond71df4850111::SIAnnotateControlFlow	typeref:typename:char	file:
ID	SIFixSGPRCopies.cpp	/^  static char ID;$/;"	m	class:__anond27816180111::SIFixSGPRCopies	typeref:typename:char	file:
ID	SIFixSGPRCopies.cpp	/^  unsigned ID;$/;"	m	class:__anond27816180111::V2SCopyInfo	typeref:typename:unsigned	file:
ID	SIFixVGPRCopies.cpp	/^  static char ID;$/;"	m	class:__anon8438c2fb0111::SIFixVGPRCopies	typeref:typename:char	file:
ID	SIFoldOperands.cpp	/^  static char ID;$/;"	m	class:__anon07e514130111::SIFoldOperands	typeref:typename:char	file:
ID	SIFormMemoryClauses.cpp	/^  static char ID;$/;"	m	class:__anon8c5c3e4f0111::SIFormMemoryClauses	typeref:typename:char	file:
ID	SIInsertHardClauses.cpp	/^  static char ID;$/;"	m	class:__anon09538a560111::SIInsertHardClauses	typeref:typename:char	file:
ID	SIInsertHardClauses.cpp	/^char SIInsertHardClauses::ID = 0;$/;"	m	class:SIInsertHardClauses	typeref:typename:char
ID	SIInsertWaitcnts.cpp	/^  static char ID;$/;"	m	class:__anona6cbb7940211::SIInsertWaitcnts	typeref:typename:char	file:
ID	SILateBranchLowering.cpp	/^  static char ID;$/;"	m	class:__anon4aa55dad0111::SILateBranchLowering	typeref:typename:char	file:
ID	SILateBranchLowering.cpp	/^char SILateBranchLowering::ID = 0;$/;"	m	class:SILateBranchLowering	typeref:typename:char
ID	SILoadStoreOptimizer.cpp	/^  static char ID;$/;"	m	class:__anon677101620111::SILoadStoreOptimizer	typeref:typename:char	file:
ID	SILowerControlFlow.cpp	/^  static char ID;$/;"	m	class:__anon0ce7c3340111::SILowerControlFlow	typeref:typename:char	file:
ID	SILowerControlFlow.cpp	/^char SILowerControlFlow::ID = 0;$/;"	m	class:SILowerControlFlow	typeref:typename:char
ID	SILowerI1Copies.cpp	/^  static char ID;$/;"	m	class:__anone16a92980111::SILowerI1Copies	typeref:typename:char	file:
ID	SILowerSGPRSpills.cpp	/^  static char ID;$/;"	m	class:__anon4be335ae0111::SILowerSGPRSpills	typeref:typename:char	file:
ID	SILowerSGPRSpills.cpp	/^char SILowerSGPRSpills::ID = 0;$/;"	m	class:SILowerSGPRSpills	typeref:typename:char
ID	SILowerWWMCopies.cpp	/^  static char ID;$/;"	m	class:__anon4731d9190111::SILowerWWMCopies	typeref:typename:char	file:
ID	SIMachineScheduler.h	/^  unsigned ID;$/;"	m	class:llvm::SIScheduleBlock	typeref:typename:unsigned
ID	SIMemoryLegalizer.cpp	/^  static char ID;$/;"	m	class:__anon46517b8a0111::SIMemoryLegalizer	typeref:typename:char	file:
ID	SIModeRegister.cpp	/^  static char ID;$/;"	m	class:__anon070b45bc0111::SIModeRegister	typeref:typename:char	file:
ID	SIOptimizeExecMasking.cpp	/^  static char ID;$/;"	m	class:__anon15773df20111::SIOptimizeExecMasking	typeref:typename:char	file:
ID	SIOptimizeExecMaskingPreRA.cpp	/^  static char ID;$/;"	m	class:__anon5760078c0111::SIOptimizeExecMaskingPreRA	typeref:typename:char	file:
ID	SIOptimizeVGPRLiveRange.cpp	/^  static char ID;$/;"	m	class:__anon3fc4a09f0111::SIOptimizeVGPRLiveRange	typeref:typename:char	file:
ID	SIOptimizeVGPRLiveRange.cpp	/^char SIOptimizeVGPRLiveRange::ID = 0;$/;"	m	class:SIOptimizeVGPRLiveRange	typeref:typename:char
ID	SIPeepholeSDWA.cpp	/^  static char ID;$/;"	m	class:__anon00bd52b30111::SIPeepholeSDWA	typeref:typename:char	file:
ID	SIPostRABundler.cpp	/^  static char ID;$/;"	m	class:__anona97e3cd70111::SIPostRABundler	typeref:typename:char	file:
ID	SIPreAllocateWWMRegs.cpp	/^  static char ID;$/;"	m	class:__anon37f997ca0111::SIPreAllocateWWMRegs	typeref:typename:char	file:
ID	SIPreEmitPeephole.cpp	/^  static char ID;$/;"	m	class:__anon02bc421a0111::SIPreEmitPeephole	typeref:typename:char	file:
ID	SIShrinkInstructions.cpp	/^  static char ID;$/;"	m	class:__anon665027960111::SIShrinkInstructions	typeref:typename:char	file:
ID	SIWholeQuadMode.cpp	/^  static char ID;$/;"	m	class:__anon41aff2810111::SIWholeQuadMode	typeref:typename:char	file:
ID	SIWholeQuadMode.cpp	/^char SIWholeQuadMode::ID = 0;$/;"	m	class:SIWholeQuadMode	typeref:typename:char
ID_BITMASK_PERM	SIDefines.h	/^  ID_BITMASK_PERM,$/;"	e	enum:llvm::RVGPU::Swizzle::Id
ID_BROADCAST	SIDefines.h	/^  ID_BROADCAST$/;"	e	enum:llvm::RVGPU::Swizzle::Id
ID_DEALLOC_VGPRS_GFX11Plus	SIDefines.h	/^  ID_DEALLOC_VGPRS_GFX11Plus = 3, \/\/ reused in GFX11$/;"	e	enum:llvm::RVGPU::SendMsg::Id
ID_DST	SIDefines.h	/^  ID_DST,$/;"	e	enum:llvm::RVGPU::VGPRIndexMode::Id
ID_DVGPR_ALLOC_HI	SIDefines.h	/^  ID_DVGPR_ALLOC_HI = 32,$/;"	e	enum:llvm::RVGPU::Hwreg::Id
ID_DVGPR_ALLOC_LO	SIDefines.h	/^  ID_DVGPR_ALLOC_LO = 31,$/;"	e	enum:llvm::RVGPU::Hwreg::Id
ID_EARLY_PRIM_DEALLOC	SIDefines.h	/^  ID_EARLY_PRIM_DEALLOC = 8, \/\/ added in GFX9, removed in GFX10$/;"	e	enum:llvm::RVGPU::SendMsg::Id
ID_EXCP_FLAG_PRIV	SIDefines.h	/^  ID_EXCP_FLAG_PRIV = 17,$/;"	e	enum:llvm::RVGPU::Hwreg::Id
ID_EXCP_FLAG_USER	SIDefines.h	/^  ID_EXCP_FLAG_USER = 18,$/;"	e	enum:llvm::RVGPU::Hwreg::Id
ID_FLAT_SCR_HI	SIDefines.h	/^  ID_FLAT_SCR_HI = 21,$/;"	e	enum:llvm::RVGPU::Hwreg::Id
ID_FLAT_SCR_LO	SIDefines.h	/^  ID_FLAT_SCR_LO = 20,$/;"	e	enum:llvm::RVGPU::Hwreg::Id
ID_GET_DDID	SIDefines.h	/^  ID_GET_DDID = 11,          \/\/ added in GFX10, removed in GFX11$/;"	e	enum:llvm::RVGPU::SendMsg::Id
ID_GET_DOORBELL	SIDefines.h	/^  ID_GET_DOORBELL = 10,      \/\/ added in GFX9, removed in GFX11$/;"	e	enum:llvm::RVGPU::SendMsg::Id
ID_GPR_ALLOC	SIDefines.h	/^  ID_GPR_ALLOC = 5,$/;"	e	enum:llvm::RVGPU::Hwreg::Id
ID_GS_ALLOC_REQ	SIDefines.h	/^  ID_GS_ALLOC_REQ = 9,       \/\/ added in GFX9$/;"	e	enum:llvm::RVGPU::SendMsg::Id
ID_GS_DONE_PreGFX11	SIDefines.h	/^  ID_GS_DONE_PreGFX11 = 3, \/\/ replaced in GFX11$/;"	e	enum:llvm::RVGPU::SendMsg::Id
ID_GS_PreGFX11	SIDefines.h	/^  ID_GS_PreGFX11 = 2,      \/\/ replaced in GFX11$/;"	e	enum:llvm::RVGPU::SendMsg::Id
ID_HALT_WAVES	SIDefines.h	/^  ID_HALT_WAVES = 6,         \/\/ added in GFX9, removed in GFX12$/;"	e	enum:llvm::RVGPU::SendMsg::Id
ID_HS_TESSFACTOR_GFX11Plus	SIDefines.h	/^  ID_HS_TESSFACTOR_GFX11Plus = 2, \/\/ reused in GFX11$/;"	e	enum:llvm::RVGPU::SendMsg::Id
ID_HW_ID	SIDefines.h	/^  ID_HW_ID = 4,$/;"	e	enum:llvm::RVGPU::Hwreg::Id
ID_HW_ID1	SIDefines.h	/^  ID_HW_ID1 = 23,$/;"	e	enum:llvm::RVGPU::Hwreg::Id
ID_HW_ID2	SIDefines.h	/^  ID_HW_ID2 = 24,$/;"	e	enum:llvm::RVGPU::Hwreg::Id
ID_IB_STS	SIDefines.h	/^  ID_IB_STS = 7,$/;"	e	enum:llvm::RVGPU::Hwreg::Id
ID_INTERRUPT	SIDefines.h	/^  ID_INTERRUPT = 1,$/;"	e	enum:llvm::RVGPU::SendMsg::Id
ID_LDS_ALLOC	SIDefines.h	/^  ID_LDS_ALLOC = 6,$/;"	e	enum:llvm::RVGPU::Hwreg::Id
ID_MASK_	SIDefines.h	/^  ID_MASK_ = (((1 << ID_WIDTH_) - 1) << ID_SHIFT_)$/;"	e	enum:llvm::RVGPU::Hwreg::Id
ID_MASK_GFX11Plus_	SIDefines.h	/^  ID_MASK_GFX11Plus_ = 0xFF$/;"	e	enum:llvm::RVGPU::SendMsg::Id
ID_MASK_PreGFX11_	SIDefines.h	/^  ID_MASK_PreGFX11_ = 0xF,$/;"	e	enum:llvm::RVGPU::SendMsg::Id
ID_MAX	SIDefines.h	/^  ID_MAX = ID_DST$/;"	e	enum:llvm::RVGPU::VGPRIndexMode::Id
ID_MEM_BASES	SIDefines.h	/^  ID_MEM_BASES = 15,$/;"	e	enum:llvm::RVGPU::Hwreg::Id
ID_MIN	SIDefines.h	/^  ID_MIN = ID_SRC0,$/;"	e	enum:llvm::RVGPU::VGPRIndexMode::Id
ID_MODE	SIDefines.h	/^  ID_MODE = 1,$/;"	e	enum:llvm::RVGPU::Hwreg::Id
ID_ORDERED_PS_DONE	SIDefines.h	/^  ID_ORDERED_PS_DONE = 7,    \/\/ added in GFX9, removed in GFX11$/;"	e	enum:llvm::RVGPU::SendMsg::Id
ID_PERF_SNAPSHOT_DATA1	SIDefines.h	/^  ID_PERF_SNAPSHOT_DATA1 = 15,$/;"	e	enum:llvm::RVGPU::Hwreg::Id
ID_PERF_SNAPSHOT_DATA2	SIDefines.h	/^  ID_PERF_SNAPSHOT_DATA2 = 16,$/;"	e	enum:llvm::RVGPU::Hwreg::Id
ID_PERF_SNAPSHOT_DATA_gfx11	SIDefines.h	/^  ID_PERF_SNAPSHOT_DATA_gfx11 = 27,$/;"	e	enum:llvm::RVGPU::Hwreg::Id
ID_PERF_SNAPSHOT_DATA_gfx12	SIDefines.h	/^  ID_PERF_SNAPSHOT_DATA_gfx12 = 10,$/;"	e	enum:llvm::RVGPU::Hwreg::Id
ID_PERF_SNAPSHOT_PC_HI_gfx11	SIDefines.h	/^  ID_PERF_SNAPSHOT_PC_HI_gfx11 = 19,$/;"	e	enum:llvm::RVGPU::Hwreg::Id
ID_PERF_SNAPSHOT_PC_HI_gfx12	SIDefines.h	/^  ID_PERF_SNAPSHOT_PC_HI_gfx12 = 12,$/;"	e	enum:llvm::RVGPU::Hwreg::Id
ID_PERF_SNAPSHOT_PC_LO_gfx11	SIDefines.h	/^  ID_PERF_SNAPSHOT_PC_LO_gfx11 = 18,$/;"	e	enum:llvm::RVGPU::Hwreg::Id
ID_PERF_SNAPSHOT_PC_LO_gfx12	SIDefines.h	/^  ID_PERF_SNAPSHOT_PC_LO_gfx12 = 11,$/;"	e	enum:llvm::RVGPU::Hwreg::Id
ID_POPS_PACKER	SIDefines.h	/^  ID_POPS_PACKER = 25,$/;"	e	enum:llvm::RVGPU::Hwreg::Id
ID_QUAD_PERM	SIDefines.h	/^  ID_QUAD_PERM = 0,$/;"	e	enum:llvm::RVGPU::Swizzle::Id
ID_REVERSE	SIDefines.h	/^  ID_REVERSE,$/;"	e	enum:llvm::RVGPU::Swizzle::Id
ID_RTN_GET_DDID	SIDefines.h	/^  ID_RTN_GET_DDID = 129,$/;"	e	enum:llvm::RVGPU::SendMsg::Id
ID_RTN_GET_DOORBELL	SIDefines.h	/^  ID_RTN_GET_DOORBELL = 128,$/;"	e	enum:llvm::RVGPU::SendMsg::Id
ID_RTN_GET_REALTIME	SIDefines.h	/^  ID_RTN_GET_REALTIME = 131,$/;"	e	enum:llvm::RVGPU::SendMsg::Id
ID_RTN_GET_SE_AID_ID	SIDefines.h	/^  ID_RTN_GET_SE_AID_ID = 134,$/;"	e	enum:llvm::RVGPU::SendMsg::Id
ID_RTN_GET_TBA	SIDefines.h	/^  ID_RTN_GET_TBA = 133,$/;"	e	enum:llvm::RVGPU::SendMsg::Id
ID_RTN_GET_TMA	SIDefines.h	/^  ID_RTN_GET_TMA = 130,$/;"	e	enum:llvm::RVGPU::SendMsg::Id
ID_RTN_SAVE_WAVE	SIDefines.h	/^  ID_RTN_SAVE_WAVE = 132,$/;"	e	enum:llvm::RVGPU::SendMsg::Id
ID_SAVEWAVE	SIDefines.h	/^  ID_SAVEWAVE = 4,           \/\/ added in GFX8, removed in GFX11$/;"	e	enum:llvm::RVGPU::SendMsg::Id
ID_SHADER_CYCLES	SIDefines.h	/^  ID_SHADER_CYCLES = 29,$/;"	e	enum:llvm::RVGPU::Hwreg::Id
ID_SHADER_CYCLES_HI	SIDefines.h	/^  ID_SHADER_CYCLES_HI = 30,$/;"	e	enum:llvm::RVGPU::Hwreg::Id
ID_SHIFT_	SIDefines.h	/^  ID_SHIFT_ = 0,$/;"	e	enum:llvm::RVGPU::Hwreg::Id
ID_SQ_PERF_SNAPSHOT_DATA	SIDefines.h	/^  ID_SQ_PERF_SNAPSHOT_DATA = 21,$/;"	e	enum:llvm::RVGPU::Hwreg::Id
ID_SQ_PERF_SNAPSHOT_DATA1	SIDefines.h	/^  ID_SQ_PERF_SNAPSHOT_DATA1 = 22,$/;"	e	enum:llvm::RVGPU::Hwreg::Id
ID_SQ_PERF_SNAPSHOT_PC_HI	SIDefines.h	/^  ID_SQ_PERF_SNAPSHOT_PC_HI = 24,$/;"	e	enum:llvm::RVGPU::Hwreg::Id
ID_SQ_PERF_SNAPSHOT_PC_LO	SIDefines.h	/^  ID_SQ_PERF_SNAPSHOT_PC_LO = 23,$/;"	e	enum:llvm::RVGPU::Hwreg::Id
ID_SRC0	SIDefines.h	/^  ID_SRC0 = 0,$/;"	e	enum:llvm::RVGPU::VGPRIndexMode::Id
ID_SRC1	SIDefines.h	/^  ID_SRC1,$/;"	e	enum:llvm::RVGPU::VGPRIndexMode::Id
ID_SRC2	SIDefines.h	/^  ID_SRC2,$/;"	e	enum:llvm::RVGPU::VGPRIndexMode::Id
ID_STALL_WAVE_GEN	SIDefines.h	/^  ID_STALL_WAVE_GEN = 5,     \/\/ added in GFX9, removed in GFX12$/;"	e	enum:llvm::RVGPU::SendMsg::Id
ID_STATE_PRIV	SIDefines.h	/^  ID_STATE_PRIV = 4,$/;"	e	enum:llvm::RVGPU::Hwreg::Id
ID_STATUS	SIDefines.h	/^  ID_STATUS = 2,$/;"	e	enum:llvm::RVGPU::Hwreg::Id
ID_SWAP	SIDefines.h	/^  ID_SWAP,$/;"	e	enum:llvm::RVGPU::Swizzle::Id
ID_SYSMSG	SIDefines.h	/^  ID_SYSMSG = 15,$/;"	e	enum:llvm::RVGPU::SendMsg::Id
ID_TBA_HI	SIDefines.h	/^  ID_TBA_HI = 17,$/;"	e	enum:llvm::RVGPU::Hwreg::Id
ID_TBA_LO	SIDefines.h	/^  ID_TBA_LO = 16,$/;"	e	enum:llvm::RVGPU::Hwreg::Id
ID_TMA_HI	SIDefines.h	/^  ID_TMA_HI = 19,$/;"	e	enum:llvm::RVGPU::Hwreg::Id
ID_TMA_LO	SIDefines.h	/^  ID_TMA_LO = 18,$/;"	e	enum:llvm::RVGPU::Hwreg::Id
ID_TRAPSTS	SIDefines.h	/^  ID_TRAPSTS = 3,$/;"	e	enum:llvm::RVGPU::Hwreg::Id
ID_TRAP_CTRL	SIDefines.h	/^  ID_TRAP_CTRL = 19,$/;"	e	enum:llvm::RVGPU::Hwreg::Id
ID_WIDTH_	SIDefines.h	/^  ID_WIDTH_ = 6,$/;"	e	enum:llvm::RVGPU::Hwreg::Id
ID_XCC_ID	SIDefines.h	/^  ID_XCC_ID = 20,$/;"	e	enum:llvm::RVGPU::Hwreg::Id
ID_XNACK_MASK	SIDefines.h	/^  ID_XNACK_MASK = 22,$/;"	e	enum:llvm::RVGPU::Hwreg::Id
IEEE	RVMachineFunctionInfo.h	/^  bool IEEE = true;$/;"	m	struct:llvm::yaml::SIMode	typeref:typename:bool
IEEE	SIModeRegisterDefaults.h	/^  bool IEEE : 1;$/;"	m	struct:llvm::SIModeRegisterDefaults	typeref:typename:bool:1
IEEEMode	SIProgramInfo.h	/^    uint32_t IEEEMode = 0;$/;"	m	struct:llvm::SIProgramInfo	typeref:typename:uint32_t
IEEE_MODE_MASK	SIDefines.h	/^  IEEE_MODE_MASK = 1 << 9,$/;"	e	enum:llvm::RVGPU::Hwreg::ModeRegisterMasks
IF	RVGPUISelLowering.h	/^  IF,$/;"	e	enum:llvm::RVGPUISD::NodeType
IGLPStrategy	RVGPUIGroupLP.cpp	/^  IGLPStrategy(ScheduleDAGInstrs *DAG, const RVInstrInfo *TII)$/;"	f	class:__anon61b122dc0111::IGLPStrategy	file:
IGLPStrategy	RVGPUIGroupLP.cpp	/^class IGLPStrategy {$/;"	c	namespace:__anon61b122dc0111	file:
IGLPStrategyID	RVGPUIGroupLP.cpp	/^enum IGLPStrategyID : int {$/;"	g	namespace:__anon61b122dc0111	typeref:typename:int	file:
IGroupLPDAGMutation	RVGPUIGroupLP.cpp	/^  IGroupLPDAGMutation(bool IsReentry) : IsReentry(IsReentry) {}$/;"	f	class:__anon61b122dc0111::IGroupLPDAGMutation	file:
IGroupLPDAGMutation	RVGPUIGroupLP.cpp	/^class IGroupLPDAGMutation : public ScheduleDAGMutation {$/;"	c	namespace:__anon61b122dc0111	file:
ILPInitialSchedule	GCNSchedStrategy.h	/^  ILPInitialSchedule = 4$/;"	e	enum:llvm::GCNSchedStageID
ILPInitialScheduleStage	GCNSchedStrategy.h	/^  ILPInitialScheduleStage(GCNSchedStageID StageID, GCNScheduleDAGMILive &DAG)$/;"	f	class:llvm::ILPInitialScheduleStage
ILPInitialScheduleStage	GCNSchedStrategy.h	/^class ILPInitialScheduleStage : public GCNSchedStage {$/;"	c	namespace:llvm
IMG1D	RVGPULibFunc.h	/^    IMG1D,$/;"	e	enum:llvm::RVGPULibFuncBase::EType
IMG1DA	RVGPULibFunc.h	/^    IMG1DA = 0x80,$/;"	e	enum:llvm::RVGPULibFuncBase::EType
IMG1DB	RVGPULibFunc.h	/^    IMG1DB,$/;"	e	enum:llvm::RVGPULibFuncBase::EType
IMG2D	RVGPULibFunc.h	/^    IMG2D,$/;"	e	enum:llvm::RVGPULibFuncBase::EType
IMG2DA	RVGPULibFunc.h	/^    IMG2DA,$/;"	e	enum:llvm::RVGPULibFuncBase::EType
IMG3D	RVGPULibFunc.h	/^    IMG3D,$/;"	e	enum:llvm::RVGPULibFuncBase::EType
IMPLICIT_ARG_PTR	RVGPUArgumentUsageInfo.h	/^    IMPLICIT_ARG_PTR = 16,$/;"	e	enum:llvm::RVGPUFunctionArgInfo::PreloadedValue
IMPLICIT_BUFFER_PTR	RVGPUArgumentUsageInfo.h	/^    IMPLICIT_BUFFER_PTR = 15,$/;"	e	enum:llvm::RVGPUFunctionArgInfo::PreloadedValue
INITIALIZE_PASS_DEPENDENCY	RVGPUAtomicOptimizer.cpp	/^INITIALIZE_PASS_DEPENDENCY(UniformityInfoWrapperPass)$/;"	f	typeref:typename:RVGPUAtomicOptimizer,DEBUG_TYPE,"RVGPU atomic optimizations",false,false
INITIALIZE_PASS_DEPENDENCY	RVGPUISelDAGToDAG.cpp	/^INITIALIZE_PASS_DEPENDENCY(RVGPUArgumentUsageInfo)$/;"	f	typeref:typename:RVGPUDAGToDAGISel,"rvgpu-isel","RVGPU DAG->DAG Pattern Instruction Selection",false,false
INITIALIZE_PASS_DEPENDENCY	RVGPULowerModuleLDSPass.cpp	/^INITIALIZE_PASS_DEPENDENCY(TargetPassConfig)$/;"	f	typeref:typename:RVGPULowerModuleLDSLegacy,DEBUG_TYPE,"Lower uses of LDS variables from non-kernel functions",false,false
INITIALIZE_PASS_DEPENDENCY	RVGPUMachineCFGStructurizer.cpp	/^INITIALIZE_PASS_DEPENDENCY(MachineRegionInfoPass)$/;"	f	typeref:typename:RVGPUMachineCFGStructurizer,"rvgpu-machine-cfg-structurizer","RVGPU Machine CFG Structurizer",false,false
INITIALIZE_PASS_DEPENDENCY	RVGPURegBankSelect.cpp	/^INITIALIZE_PASS_DEPENDENCY(MachineCycleInfoWrapperPass)$/;"	f	typeref:typename:RVGPURegBankSelect,"rvgpu-"DEBUG_TYPE,"RVGPU Register Bank Select",false,false
INITIALIZE_PASS_DEPENDENCY	RVGPURewriteUndefForPHI.cpp	/^INITIALIZE_PASS_DEPENDENCY(UniformityInfoWrapperPass)$/;"	f	typeref:typename:RVGPURewriteUndefForPHILegacy,DEBUG_TYPE,"Rewrite undef for PHI",false,false
INITIALIZE_PASS_DEPENDENCY	RVGPUUnifyDivergentExitNodes.cpp	/^INITIALIZE_PASS_DEPENDENCY(DominatorTreeWrapperPass)$/;"	f	typeref:typename:RVGPUUnifyDivergentExitNodes,DEBUG_TYPE,"Unify divergent function exit nodes",false,false
INLINE_FLOATING_C_MAX	SIDefines.h	/^  INLINE_FLOATING_C_MAX = 248,$/;"	e	enum:llvm::RVGPU::EncValues::__anon1f24a7950603
INLINE_FLOATING_C_MIN	SIDefines.h	/^  INLINE_FLOATING_C_MIN = 240,$/;"	e	enum:llvm::RVGPU::EncValues::__anon1f24a7950603
INLINE_INTEGER_C_MAX	SIDefines.h	/^  INLINE_INTEGER_C_MAX = 208,$/;"	e	enum:llvm::RVGPU::EncValues::__anon1f24a7950603
INLINE_INTEGER_C_MIN	SIDefines.h	/^  INLINE_INTEGER_C_MIN = 128,$/;"	e	enum:llvm::RVGPU::EncValues::__anon1f24a7950603
INLINE_INTEGER_C_POSITIVE_MAX	SIDefines.h	/^  INLINE_INTEGER_C_POSITIVE_MAX = 192, \/\/ 64$/;"	e	enum:llvm::RVGPU::EncValues::__anon1f24a7950603
INT	RVGPULibFunc.h	/^    INT   = 0x20,$/;"	e	enum:llvm::RVGPULibFuncBase::EType
INVALID	RVGPUSubtarget.h	/^    INVALID = 0,$/;"	e	enum:llvm::RVGPUSubtarget::Generation
INVALID_BR	RVInstrInfo.h	/^    INVALID_BR = 0,$/;"	e	enum:llvm::RVInstrInfo::BranchPredicate
IS_AGPR	AsmParser/RVGPUAsmParser.cpp	/^enum RegisterKind { IS_UNKNOWN, IS_VGPR, IS_SGPR, IS_AGPR, IS_TTMP, IS_SPECIAL };$/;"	e	enum:__anon672fa8550111::RegisterKind	file:
IS_HI	SIDefines.h	/^  IS_HI = 1 << 9, \/\/ High 16-bit register.$/;"	e	enum:llvm::RVGPU::HWEncoding::__anon1f24a7950703
IS_SGPR	AsmParser/RVGPUAsmParser.cpp	/^enum RegisterKind { IS_UNKNOWN, IS_VGPR, IS_SGPR, IS_AGPR, IS_TTMP, IS_SPECIAL };$/;"	e	enum:__anon672fa8550111::RegisterKind	file:
IS_SPECIAL	AsmParser/RVGPUAsmParser.cpp	/^enum RegisterKind { IS_UNKNOWN, IS_VGPR, IS_SGPR, IS_AGPR, IS_TTMP, IS_SPECIAL };$/;"	e	enum:__anon672fa8550111::RegisterKind	file:
IS_TTMP	AsmParser/RVGPUAsmParser.cpp	/^enum RegisterKind { IS_UNKNOWN, IS_VGPR, IS_SGPR, IS_AGPR, IS_TTMP, IS_SPECIAL };$/;"	e	enum:__anon672fa8550111::RegisterKind	file:
IS_UNKNOWN	AsmParser/RVGPUAsmParser.cpp	/^enum RegisterKind { IS_UNKNOWN, IS_VGPR, IS_SGPR, IS_AGPR, IS_TTMP, IS_SPECIAL };$/;"	e	enum:__anon672fa8550111::RegisterKind	file:
IS_VGPR	AsmParser/RVGPUAsmParser.cpp	/^enum RegisterKind { IS_UNKNOWN, IS_VGPR, IS_SGPR, IS_AGPR, IS_TTMP, IS_SPECIAL };$/;"	e	enum:__anon672fa8550111::RegisterKind	file:
IS_VGPR	SIDefines.h	/^  IS_VGPR = 256, \/\/ Indicates VGPR or AGPR$/;"	e	enum:llvm::RVGPU::EncValues::__anon1f24a7950603
IS_VGPR_OR_AGPR	SIDefines.h	/^  IS_VGPR_OR_AGPR = 1 << 8,$/;"	e	enum:llvm::RVGPU::HWEncoding::__anon1f24a7950703
IV	SIInsertWaitcnts.cpp	/^  RVGPU::IsaVersion IV;$/;"	m	class:__anona6cbb7940211::SIInsertWaitcnts	typeref:typename:RVGPU::IsaVersion	file:
IV	SIMemoryLegalizer.cpp	/^  IsaVersion IV;$/;"	m	class:__anon46517b8a0111::SICacheControl	typeref:typename:IsaVersion	file:
Id	AsmParser/RVGPUAsmParser.cpp	/^    int64_t Id;$/;"	m	struct:__anon672fa8550111::RVGPUAsmParser::OperandInfoTy	typeref:typename:int64_t	file:
Id	SIDefines.h	/^enum Id : unsigned { \/\/ id of symbolic names$/;"	g	namespace:llvm::RVGPU::Swizzle	typeref:typename:unsigned
Id	SIDefines.h	/^enum Id : unsigned { \/\/ id of symbolic names$/;"	g	namespace:llvm::RVGPU::VGPRIndexMode	typeref:typename:unsigned
Id	SIDefines.h	/^enum Id { \/\/ HwRegCode, (6) [5:0]$/;"	g	namespace:llvm::RVGPU::Hwreg
Id	SIDefines.h	/^enum Id { \/\/ Message ID, width(4) [3:0].$/;"	g	namespace:llvm::RVGPU::SendMsg
IdSymbolic	Utils/RVGPUAsmUtils.cpp	/^const char* const IdSymbolic[] = {$/;"	v	namespace:llvm::RVGPU::Swizzle	typeref:typename:const char * const[]
IdSymbolic	Utils/RVGPUAsmUtils.cpp	/^const char* const IdSymbolic[] = {$/;"	v	namespace:llvm::RVGPU::VGPRIndexMode	typeref:typename:const char * const[]
Idx	RVGPUCodeGenPrepare.cpp	/^  unsigned Idx = 0;$/;"	m	class:VectorSlice	typeref:typename:unsigned	file:
If	SIAnnotateControlFlow.cpp	/^  Function *If;$/;"	m	class:__anond71df4850111::SIAnnotateControlFlow	typeref:typename:Function *	file:
IfBreak	SIAnnotateControlFlow.cpp	/^  Function *IfBreak;$/;"	m	class:__anond71df4850111::SIAnnotateControlFlow	typeref:typename:Function *	file:
ImageDimIntrinsicInfo	RVGPUInstrInfo.h	/^struct ImageDimIntrinsicInfo {$/;"	s	namespace:llvm::RVGPU
Imm	AsmParser/RVGPUAsmParser.cpp	/^    ImmOp Imm;$/;"	m	union:__anon672fa8550111::RVGPUOperand::__anon672fa855020a	typeref:typename:ImmOp	file:
Imm	RVGPUInstructionSelector.h	/^    int64_t Imm = 0;$/;"	m	struct:llvm::RVGPUInstructionSelector::GEPInfo	typeref:typename:int64_t
ImmKindTy	AsmParser/RVGPUAsmParser.cpp	/^  enum ImmKindTy {$/;"	g	class:__anon672fa8550111::RVGPUOperand	file:
ImmKindTyConst	AsmParser/RVGPUAsmParser.cpp	/^    ImmKindTyConst,$/;"	e	enum:__anon672fa8550111::RVGPUOperand::ImmKindTy	file:
ImmKindTyLiteral	AsmParser/RVGPUAsmParser.cpp	/^    ImmKindTyLiteral,$/;"	e	enum:__anon672fa8550111::RVGPUOperand::ImmKindTy	file:
ImmKindTyMandatoryLiteral	AsmParser/RVGPUAsmParser.cpp	/^    ImmKindTyMandatoryLiteral,$/;"	e	enum:__anon672fa8550111::RVGPUOperand::ImmKindTy	file:
ImmKindTyNone	AsmParser/RVGPUAsmParser.cpp	/^    ImmKindTyNone,$/;"	e	enum:__anon672fa8550111::RVGPUOperand::ImmKindTy	file:
ImmOp	AsmParser/RVGPUAsmParser.cpp	/^  struct ImmOp {$/;"	s	class:__anon672fa8550111::RVGPUOperand	file:
ImmToFold	SIFoldOperands.cpp	/^    uint64_t ImmToFold;$/;"	m	union:__anon07e514130111::FoldCandidate::__anon07e51413020a	typeref:typename:uint64_t	file:
ImmTy	AsmParser/RVGPUAsmParser.cpp	/^  enum ImmTy {$/;"	g	class:__anon672fa8550111::RVGPUOperand	file:
ImmTyA16	AsmParser/RVGPUAsmParser.cpp	/^    ImmTyA16,$/;"	e	enum:__anon672fa8550111::RVGPUOperand::ImmTy	file:
ImmTyABID	AsmParser/RVGPUAsmParser.cpp	/^    ImmTyABID,$/;"	e	enum:__anon672fa8550111::RVGPUOperand::ImmTy	file:
ImmTyAddr64	AsmParser/RVGPUAsmParser.cpp	/^    ImmTyAddr64,$/;"	e	enum:__anon672fa8550111::RVGPUOperand::ImmTy	file:
ImmTyBLGP	AsmParser/RVGPUAsmParser.cpp	/^    ImmTyBLGP,$/;"	e	enum:__anon672fa8550111::RVGPUOperand::ImmTy	file:
ImmTyCBSZ	AsmParser/RVGPUAsmParser.cpp	/^    ImmTyCBSZ,$/;"	e	enum:__anon672fa8550111::RVGPUOperand::ImmTy	file:
ImmTyCPol	AsmParser/RVGPUAsmParser.cpp	/^    ImmTyCPol,$/;"	e	enum:__anon672fa8550111::RVGPUOperand::ImmTy	file:
ImmTyClampSI	AsmParser/RVGPUAsmParser.cpp	/^    ImmTyClampSI,$/;"	e	enum:__anon672fa8550111::RVGPUOperand::ImmTy	file:
ImmTyD16	AsmParser/RVGPUAsmParser.cpp	/^    ImmTyD16,$/;"	e	enum:__anon672fa8550111::RVGPUOperand::ImmTy	file:
ImmTyDA	AsmParser/RVGPUAsmParser.cpp	/^    ImmTyDA,$/;"	e	enum:__anon672fa8550111::RVGPUOperand::ImmTy	file:
ImmTyDMask	AsmParser/RVGPUAsmParser.cpp	/^    ImmTyDMask,$/;"	e	enum:__anon672fa8550111::RVGPUOperand::ImmTy	file:
ImmTyDPP8	AsmParser/RVGPUAsmParser.cpp	/^    ImmTyDPP8,$/;"	e	enum:__anon672fa8550111::RVGPUOperand::ImmTy	file:
ImmTyDim	AsmParser/RVGPUAsmParser.cpp	/^    ImmTyDim,$/;"	e	enum:__anon672fa8550111::RVGPUOperand::ImmTy	file:
ImmTyDppBankMask	AsmParser/RVGPUAsmParser.cpp	/^    ImmTyDppBankMask,$/;"	e	enum:__anon672fa8550111::RVGPUOperand::ImmTy	file:
ImmTyDppBoundCtrl	AsmParser/RVGPUAsmParser.cpp	/^    ImmTyDppBoundCtrl,$/;"	e	enum:__anon672fa8550111::RVGPUOperand::ImmTy	file:
ImmTyDppCtrl	AsmParser/RVGPUAsmParser.cpp	/^    ImmTyDppCtrl,$/;"	e	enum:__anon672fa8550111::RVGPUOperand::ImmTy	file:
ImmTyDppFI	AsmParser/RVGPUAsmParser.cpp	/^    ImmTyDppFI,$/;"	e	enum:__anon672fa8550111::RVGPUOperand::ImmTy	file:
ImmTyDppRowMask	AsmParser/RVGPUAsmParser.cpp	/^    ImmTyDppRowMask,$/;"	e	enum:__anon672fa8550111::RVGPUOperand::ImmTy	file:
ImmTyEndpgm	AsmParser/RVGPUAsmParser.cpp	/^    ImmTyEndpgm,$/;"	e	enum:__anon672fa8550111::RVGPUOperand::ImmTy	file:
ImmTyExpCompr	AsmParser/RVGPUAsmParser.cpp	/^    ImmTyExpCompr,$/;"	e	enum:__anon672fa8550111::RVGPUOperand::ImmTy	file:
ImmTyExpTgt	AsmParser/RVGPUAsmParser.cpp	/^    ImmTyExpTgt,$/;"	e	enum:__anon672fa8550111::RVGPUOperand::ImmTy	file:
ImmTyExpVM	AsmParser/RVGPUAsmParser.cpp	/^    ImmTyExpVM,$/;"	e	enum:__anon672fa8550111::RVGPUOperand::ImmTy	file:
ImmTyFORMAT	AsmParser/RVGPUAsmParser.cpp	/^    ImmTyFORMAT,$/;"	e	enum:__anon672fa8550111::RVGPUOperand::ImmTy	file:
ImmTyGDS	AsmParser/RVGPUAsmParser.cpp	/^    ImmTyGDS,$/;"	e	enum:__anon672fa8550111::RVGPUOperand::ImmTy	file:
ImmTyGprIdxMode	AsmParser/RVGPUAsmParser.cpp	/^    ImmTyGprIdxMode,$/;"	e	enum:__anon672fa8550111::RVGPUOperand::ImmTy	file:
ImmTyHigh	AsmParser/RVGPUAsmParser.cpp	/^    ImmTyHigh,$/;"	e	enum:__anon672fa8550111::RVGPUOperand::ImmTy	file:
ImmTyHwreg	AsmParser/RVGPUAsmParser.cpp	/^    ImmTyHwreg,$/;"	e	enum:__anon672fa8550111::RVGPUOperand::ImmTy	file:
ImmTyIdxen	AsmParser/RVGPUAsmParser.cpp	/^    ImmTyIdxen,$/;"	e	enum:__anon672fa8550111::RVGPUOperand::ImmTy	file:
ImmTyInstOffset	AsmParser/RVGPUAsmParser.cpp	/^    ImmTyInstOffset,$/;"	e	enum:__anon672fa8550111::RVGPUOperand::ImmTy	file:
ImmTyInterpAttr	AsmParser/RVGPUAsmParser.cpp	/^    ImmTyInterpAttr,$/;"	e	enum:__anon672fa8550111::RVGPUOperand::ImmTy	file:
ImmTyInterpAttrChan	AsmParser/RVGPUAsmParser.cpp	/^    ImmTyInterpAttrChan,$/;"	e	enum:__anon672fa8550111::RVGPUOperand::ImmTy	file:
ImmTyInterpSlot	AsmParser/RVGPUAsmParser.cpp	/^    ImmTyInterpSlot,$/;"	e	enum:__anon672fa8550111::RVGPUOperand::ImmTy	file:
ImmTyLDS	AsmParser/RVGPUAsmParser.cpp	/^    ImmTyLDS,$/;"	e	enum:__anon672fa8550111::RVGPUOperand::ImmTy	file:
ImmTyLWE	AsmParser/RVGPUAsmParser.cpp	/^    ImmTyLWE,$/;"	e	enum:__anon672fa8550111::RVGPUOperand::ImmTy	file:
ImmTyNegHi	AsmParser/RVGPUAsmParser.cpp	/^    ImmTyNegHi,$/;"	e	enum:__anon672fa8550111::RVGPUOperand::ImmTy	file:
ImmTyNegLo	AsmParser/RVGPUAsmParser.cpp	/^    ImmTyNegLo,$/;"	e	enum:__anon672fa8550111::RVGPUOperand::ImmTy	file:
ImmTyNone	AsmParser/RVGPUAsmParser.cpp	/^    ImmTyNone,$/;"	e	enum:__anon672fa8550111::RVGPUOperand::ImmTy	file:
ImmTyOModSI	AsmParser/RVGPUAsmParser.cpp	/^    ImmTyOModSI,$/;"	e	enum:__anon672fa8550111::RVGPUOperand::ImmTy	file:
ImmTyOff	AsmParser/RVGPUAsmParser.cpp	/^    ImmTyOff,$/;"	e	enum:__anon672fa8550111::RVGPUOperand::ImmTy	file:
ImmTyOffen	AsmParser/RVGPUAsmParser.cpp	/^    ImmTyOffen,$/;"	e	enum:__anon672fa8550111::RVGPUOperand::ImmTy	file:
ImmTyOffset	AsmParser/RVGPUAsmParser.cpp	/^    ImmTyOffset,$/;"	e	enum:__anon672fa8550111::RVGPUOperand::ImmTy	file:
ImmTyOffset0	AsmParser/RVGPUAsmParser.cpp	/^    ImmTyOffset0,$/;"	e	enum:__anon672fa8550111::RVGPUOperand::ImmTy	file:
ImmTyOffset1	AsmParser/RVGPUAsmParser.cpp	/^    ImmTyOffset1,$/;"	e	enum:__anon672fa8550111::RVGPUOperand::ImmTy	file:
ImmTyOpSel	AsmParser/RVGPUAsmParser.cpp	/^    ImmTyOpSel,$/;"	e	enum:__anon672fa8550111::RVGPUOperand::ImmTy	file:
ImmTyOpSelHi	AsmParser/RVGPUAsmParser.cpp	/^    ImmTyOpSelHi,$/;"	e	enum:__anon672fa8550111::RVGPUOperand::ImmTy	file:
ImmTyR128A16	AsmParser/RVGPUAsmParser.cpp	/^    ImmTyR128A16,$/;"	e	enum:__anon672fa8550111::RVGPUOperand::ImmTy	file:
ImmTySDWADstSel	AsmParser/RVGPUAsmParser.cpp	/^    ImmTySDWADstSel,$/;"	e	enum:__anon672fa8550111::RVGPUOperand::ImmTy	file:
ImmTySDWADstUnused	AsmParser/RVGPUAsmParser.cpp	/^    ImmTySDWADstUnused,$/;"	e	enum:__anon672fa8550111::RVGPUOperand::ImmTy	file:
ImmTySDWASrc0Sel	AsmParser/RVGPUAsmParser.cpp	/^    ImmTySDWASrc0Sel,$/;"	e	enum:__anon672fa8550111::RVGPUOperand::ImmTy	file:
ImmTySDWASrc1Sel	AsmParser/RVGPUAsmParser.cpp	/^    ImmTySDWASrc1Sel,$/;"	e	enum:__anon672fa8550111::RVGPUOperand::ImmTy	file:
ImmTySMEMOffsetMod	AsmParser/RVGPUAsmParser.cpp	/^    ImmTySMEMOffsetMod,$/;"	e	enum:__anon672fa8550111::RVGPUOperand::ImmTy	file:
ImmTySendMsg	AsmParser/RVGPUAsmParser.cpp	/^    ImmTySendMsg,$/;"	e	enum:__anon672fa8550111::RVGPUOperand::ImmTy	file:
ImmTySwizzle	AsmParser/RVGPUAsmParser.cpp	/^    ImmTySwizzle,$/;"	e	enum:__anon672fa8550111::RVGPUOperand::ImmTy	file:
ImmTyTFE	AsmParser/RVGPUAsmParser.cpp	/^    ImmTyTFE,$/;"	e	enum:__anon672fa8550111::RVGPUOperand::ImmTy	file:
ImmTyUNorm	AsmParser/RVGPUAsmParser.cpp	/^    ImmTyUNorm,$/;"	e	enum:__anon672fa8550111::RVGPUOperand::ImmTy	file:
ImmTyWaitEXP	AsmParser/RVGPUAsmParser.cpp	/^    ImmTyWaitEXP,$/;"	e	enum:__anon672fa8550111::RVGPUOperand::ImmTy	file:
ImmTyWaitVDST	AsmParser/RVGPUAsmParser.cpp	/^    ImmTyWaitVDST,$/;"	e	enum:__anon672fa8550111::RVGPUOperand::ImmTy	file:
Immediate	AsmParser/RVGPUAsmParser.cpp	/^    Immediate,$/;"	e	enum:__anon672fa8550111::RVGPUOperand::KindTy	file:
Impl	RVGPUCodeGenPrepare.cpp	/^  RVGPUCodeGenPrepareImpl Impl;$/;"	m	class:__anond35e324e0111::RVGPUCodeGenPrepare	typeref:typename:RVGPUCodeGenPrepareImpl	file:
Impl	RVGPULibFunc.h	/^  std::unique_ptr<RVGPULibFuncImpl> Impl;$/;"	m	class:llvm::RVGPULibFunc	typeref:typename:std::unique_ptr<RVGPULibFuncImpl>
ImplicitArg	SIDefines.h	/^namespace ImplicitArg {$/;"	n	namespace:llvm::RVGPU
ImplicitArgOffsets	RVGPULowerKernelAttributes.cpp	/^enum ImplicitArgOffsets {$/;"	g	namespace:__anon7b93ed1b0111	file:
ImplicitArgPtr	RVGPUArgumentUsageInfo.h	/^  ArgDescriptor ImplicitArgPtr;$/;"	m	struct:llvm::RVGPUFunctionArgInfo	typeref:typename:ArgDescriptor
ImplicitArgPtr	RVMachineFunctionInfo.h	/^  bool ImplicitArgPtr : 1;$/;"	m	class:llvm::RVMachineFunctionInfo	typeref:typename:bool:1
ImplicitArgPtr	RVMachineFunctionInfo.h	/^  std::optional<SIArgument> ImplicitArgPtr;$/;"	m	struct:llvm::yaml::SIArgumentInfo	typeref:typename:std::optional<SIArgument>
ImplicitArgumentMask	RVGPUAttributor.cpp	/^enum ImplicitArgumentMask {$/;"	g	file:
ImplicitArgumentPositions	RVGPUAttributor.cpp	/^enum ImplicitArgumentPositions {$/;"	g	file:
ImplicitAttrs	RVGPUAttributor.cpp	/^                           StringLiteral> ImplicitAttrs[] = {$/;"	v	typeref:typename:std::pair<ImplicitArgumentMask,StringLiteral>[]	file:
ImplicitBufferPtr	GCNSubtarget.h	/^  bool ImplicitBufferPtr = false;$/;"	m	class:llvm::GCNUserSGPRUsageInfo	typeref:typename:bool
ImplicitBufferPtr	RVGPUArgumentUsageInfo.h	/^  ArgDescriptor ImplicitBufferPtr;$/;"	m	struct:llvm::RVGPUFunctionArgInfo	typeref:typename:ArgDescriptor
ImplicitBufferPtr	RVMachineFunctionInfo.h	/^  std::optional<SIArgument> ImplicitBufferPtr;$/;"	m	struct:llvm::yaml::SIArgumentInfo	typeref:typename:std::optional<SIArgument>
ImplicitBufferPtrID	GCNSubtarget.h	/^    ImplicitBufferPtrID = 0,$/;"	e	enum:llvm::GCNUserSGPRUsageInfo::UserSGPRID
ImplicitParameter	RVGPUISelLowering.h	/^  enum ImplicitParameter {$/;"	g	class:llvm::RVGPUTargetLowering
InNeeds	SIWholeQuadMode.cpp	/^  char InNeeds = 0;$/;"	m	struct:__anon41aff2810111::BlockInfo	typeref:typename:char	file:
Incoming	SIInsertWaitcnts.cpp	/^    std::unique_ptr<WaitcntBrackets> Incoming;$/;"	m	struct:__anona6cbb7940211::SIInsertWaitcnts::BlockInfo	typeref:typename:std::unique_ptr<WaitcntBrackets>	file:
Incoming	SILowerI1Copies.h	/^  Incoming(Register Reg, MachineBasicBlock *Block, Register UpdatedReg)$/;"	f	struct:llvm::Incoming
Incoming	SILowerI1Copies.h	/^struct Incoming {$/;"	s	namespace:llvm
Index	RVGPULibFunc.cpp	/^  int Index;$/;"	m	class:__anona5afe38d0111::ParamIterator	typeref:typename:int	file:
Index	RVMachineFunctionInfo.h	/^    int Index;$/;"	m	union:llvm::PrologEpilogSGPRSaveRestoreInfo::__anon7e8d0eca020a	typeref:typename:int
Index	RVRegisterInfo.cpp	/^  int Index;$/;"	m	struct:llvm::SGPRSpillBuilder	typeref:typename:int	file:
Indexes	SILowerSGPRSpills.cpp	/^  SlotIndexes *Indexes = nullptr;$/;"	m	class:__anon4be335ae0111::SILowerSGPRSpills	typeref:typename:SlotIndexes *	file:
Indexes	SILowerWWMCopies.cpp	/^  SlotIndexes *Indexes;$/;"	m	class:__anon4731d9190111::SILowerWWMCopies	typeref:typename:SlotIndexes *	file:
InitListMap	SIFixSGPRCopies.cpp	/^  using InitListMap = std::map<unsigned, std::list<MachineInstr *>>;$/;"	t	function:hoistAndMergeSGPRInits	typeref:typename:std::map<unsigned,std::list<MachineInstr * >>	file:
InitialOccupancy	GCNSchedStrategy.h	/^  unsigned InitialOccupancy;$/;"	m	class:llvm::UnclusteredHighRPStage	typeref:typename:unsigned
InitialState	SIWholeQuadMode.cpp	/^  char InitialState = 0;$/;"	m	struct:__anon41aff2810111::BlockInfo	typeref:typename:char	file:
InitializeDefaultSGPRRegisterAllocatorFlag	RVGPUTargetMachine.cpp	/^static llvm::once_flag InitializeDefaultSGPRRegisterAllocatorFlag;$/;"	v	namespace:__anon565c6f860111	typeref:typename:llvm::once_flag	file:
InitializeDefaultVGPRRegisterAllocatorFlag	RVGPUTargetMachine.cpp	/^static llvm::once_flag InitializeDefaultVGPRRegisterAllocatorFlag;$/;"	v	namespace:__anon565c6f860111	typeref:typename:llvm::once_flag	file:
InlineAsmLoweringInfo	GCNSubtarget.h	/^  std::unique_ptr<InlineAsmLowering> InlineAsmLoweringInfo;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:std::unique_ptr<InlineAsmLowering>
InlineFeatureIgnoreList	RVGPUTargetTransformInfo.cpp	/^const FeatureBitset GCNTTIImpl::InlineFeatureIgnoreList = {$/;"	m	class:GCNTTIImpl	typeref:typename:const FeatureBitset
InlineFeatureIgnoreList	RVGPUTargetTransformInfo.h	/^  static const FeatureBitset InlineFeatureIgnoreList;$/;"	m	class:llvm::GCNTTIImpl	typeref:typename:const FeatureBitset
InlineMaxBB	RVGPUTargetTransformInfo.cpp	/^static cl::opt<size_t> InlineMaxBB($/;"	v	typeref:typename:cl::opt<size_t>	file:
InlinerVectorBonusPercent	RVGPUTargetTransformInfo.h	/^  static constexpr bool InlinerVectorBonusPercent = 0;$/;"	m	class:llvm::GCNTTIImpl	typeref:typename:bool
InsertCacheInv	SIMemoryLegalizer.cpp	/^  bool InsertCacheInv;$/;"	m	class:__anon46517b8a0111::SICacheControl	typeref:typename:bool	file:
InstClass	SILoadStoreOptimizer.cpp	/^    InstClassEnum InstClass;$/;"	m	struct:__anon677101620111::SILoadStoreOptimizer::CombineInfo	typeref:typename:InstClassEnum	file:
InstClassEnum	SILoadStoreOptimizer.cpp	/^enum InstClassEnum {$/;"	g	namespace:__anon677101620111	file:
InstCost	RVGPUPerfHintAnalysis.h	/^    unsigned InstCost;$/;"	m	struct:llvm::RVGPUPerfHintAnalysis::FuncInfo	typeref:typename:unsigned
InstCounterType	SIInsertWaitcnts.cpp	/^enum InstCounterType { VM_CNT = 0, LGKM_CNT, EXP_CNT, VS_CNT, NUM_INST_CNTS };$/;"	g	namespace:__anona6cbb7940111	file:
InstInfo	Utils/RVGPUBaseInfo.h	/^  InstInfo(const ComponentInfo &OprInfoX, const ComponentInfo &OprInfoY)$/;"	f	class:llvm::RVGPU::VOPD::InstInfo
InstInfo	Utils/RVGPUBaseInfo.h	/^  InstInfo(const MCInstrDesc &OpX, const MCInstrDesc &OpY)$/;"	f	class:llvm::RVGPU::VOPD::InstInfo
InstInfo	Utils/RVGPUBaseInfo.h	/^class InstInfo {$/;"	c	namespace:llvm::RVGPU::VOPD
InstSelector	GCNSubtarget.h	/^  std::unique_ptr<InstructionSelector> InstSelector;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:std::unique_ptr<InstructionSelector>
InstrAddrSpace	SIMemoryLegalizer.cpp	/^  SIAtomicAddrSpace InstrAddrSpace = SIAtomicAddrSpace::NONE;$/;"	m	class:__anon46517b8a0111::SIMemOpInfo	typeref:typename:SIAtomicAddrSpace	file:
InstrInfo	GCNSubtarget.h	/^  RVInstrInfo InstrInfo;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:RVInstrInfo
InstrInfo	SIWholeQuadMode.cpp	/^struct InstrInfo {$/;"	s	namespace:__anon41aff2810111	file:
InstrItins	GCNSubtarget.h	/^  InstrItineraryData InstrItins;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:InstrItineraryData
InstrList	RVInstrInfo.h	/^  SetVector<MachineInstr *> InstrList;$/;"	m	struct:llvm::SIInstrWorklist	typeref:typename:SetVector<MachineInstr * >
InstrWaitCntInfo	MCA/RVGPUCustomBehaviour.h	/^  std::vector<WaitCntInfo> InstrWaitCntInfo;$/;"	m	class:llvm::mca::RVGPUCustomBehaviour	typeref:typename:std::vector<WaitCntInfo>
InstructionRule	RVGPUIGroupLP.cpp	/^  InstructionRule(const RVInstrInfo *TII, unsigned SGID,$/;"	f	class:__anon61b122dc0111::InstructionRule	file:
InstructionRule	RVGPUIGroupLP.cpp	/^class InstructionRule {$/;"	c	namespace:__anon61b122dc0111	file:
Instructions	SIWholeQuadMode.cpp	/^  DenseMap<const MachineInstr *, InstrInfo> Instructions;$/;"	m	class:__anon41aff2810111::SIWholeQuadMode	typeref:typename:DenseMap<const MachineInstr *,InstrInfo>	file:
IntClamp	SIDefines.h	/^  IntClamp = UINT64_C(1) << 46,$/;"	e	enum:llvm::SIInstrFlags::__anon1f24a7950203
IntMask	SIAnnotateControlFlow.cpp	/^  Type *IntMask;$/;"	m	class:__anond71df4850111::SIAnnotateControlFlow	typeref:typename:Type *	file:
IntMaskZero	SIAnnotateControlFlow.cpp	/^  Constant *IntMaskZero;$/;"	m	class:__anond71df4850111::SIAnnotateControlFlow	typeref:typename:Constant *	file:
InternalAdditionalPressure	SIMachineScheduler.h	/^  std::vector<unsigned> InternalAdditionalPressure;$/;"	m	class:llvm::SIScheduleBlock	typeref:typename:std::vector<unsigned>
InternalizeSymbols	RVGPUTargetMachine.cpp	/^static cl::opt<bool> InternalizeSymbols($/;"	v	typeref:typename:cl::opt<bool>	file:
Intr	RVGPUInstCombineIntrinsic.cpp	/^  unsigned Intr;$/;"	m	struct:__anon940616180111::RVGPUImageDMaskIntrinsic	typeref:typename:unsigned	file:
Intr	RVGPUInstrInfo.h	/^  unsigned Intr;$/;"	m	struct:llvm::RVGPU::D16ImageDimIntrinsic	typeref:typename:unsigned
Intr	RVGPUInstrInfo.h	/^  unsigned Intr;$/;"	m	struct:llvm::RVGPU::ImageDimIntrinsicInfo	typeref:typename:unsigned
Intr	RVGPUInstrInfo.h	/^  unsigned Intr;$/;"	m	struct:llvm::RVGPU::RsrcIntrinsic	typeref:typename:unsigned
Intr	Utils/RVGPUBaseInfo.cpp	/^  unsigned Intr;$/;"	m	struct:llvm::RVGPU::__anonc82e9e910411::AlwaysUniform	typeref:typename:unsigned	file:
Intr	Utils/RVGPUBaseInfo.cpp	/^  unsigned Intr;$/;"	m	struct:llvm::RVGPU::__anonc82e9e910411::SourceOfDivergence	typeref:typename:unsigned	file:
Invalid	SIModeRegisterDefaults.h	/^  Invalid = static_cast<int8_t>(RoundingMode::Invalid)$/;"	e	enum:llvm::RVGPU::RVGPUFltRounds
Is64Bit	MCTargetDesc/RVGPUAsmBackend.cpp	/^  bool Is64Bit;$/;"	m	class:__anon6b905a380211::ELFRVGPUAsmBackend	typeref:typename:bool	file:
IsAGPR	SILoadStoreOptimizer.cpp	/^    bool IsAGPR;$/;"	m	struct:__anon677101620111::SILoadStoreOptimizer::CombineInfo	typeref:typename:bool	file:
IsAGPROperand	AsmParser/RVGPUAsmParser.cpp	/^static int IsAGPROperand(const MCInst &Inst, uint16_t NameIdx,$/;"	f	typeref:typename:int	file:
IsAGPROperand	Disassembler/RVGPUDisassembler.cpp	/^static bool IsAGPROperand(const MCInst &Inst, int OpIdx,$/;"	f	typeref:typename:bool	file:
IsAtomicNoRet	SIDefines.h	/^  IsAtomicNoRet = UINT64_C(1) << 57,$/;"	e	enum:llvm::SIInstrFlags::__anon1f24a7950203
IsAtomicRet	SIDefines.h	/^  IsAtomicRet = UINT64_C(1) << 58,$/;"	e	enum:llvm::SIInstrFlags::__anon1f24a7950203
IsBottomUp	RVGPUIGroupLP.cpp	/^  bool IsBottomUp = 1;$/;"	m	class:__anon61b122dc0111::IGLPStrategy	typeref:typename:bool	file:
IsBottomUp	RVGPUIGroupLP.cpp	/^  bool IsBottomUp = 1;$/;"	m	class:__anon61b122dc0111::IGroupLPDAGMutation	typeref:typename:bool	file:
IsBottomUp	RVGPUIGroupLP.cpp	/^  bool IsBottomUp = 1;$/;"	m	class:__anon61b122dc0111::PipelineSolver	typeref:typename:bool	file:
IsBuffer	Utils/RVGPUBaseInfo.cpp	/^  bool IsBuffer;$/;"	m	struct:llvm::RVGPU::SMInfo	typeref:typename:bool	file:
IsBufferInv	Utils/RVGPUBaseInfo.cpp	/^  bool IsBufferInv;$/;"	m	struct:llvm::RVGPU::MUBUFInfo	typeref:typename:bool	file:
IsChainFunction	RVGPUMachineFunction.h	/^  bool IsChainFunction = false;$/;"	m	class:llvm::RVGPUMachineFunction	typeref:typename:bool
IsChainFunction	RVMachineFunctionInfo.h	/^  bool IsChainFunction = false;$/;"	m	struct:llvm::yaml::RVMachineFunctionInfo	typeref:typename:bool
IsCopyFromSGPR	RVGPUISelDAGToDAG.cpp	/^static bool IsCopyFromSGPR(const RVRegisterInfo &TRI, SDValue Val) {$/;"	f	typeref:typename:bool	file:
IsCrossAddressSpaceOrdering	SIMemoryLegalizer.cpp	/^  bool IsCrossAddressSpaceOrdering = false;$/;"	m	class:__anon46517b8a0111::SIMemOpInfo	typeref:typename:bool	file:
IsDOT	SIDefines.h	/^  IsDOT = UINT64_C(1) << 55,$/;"	e	enum:llvm::SIInstrFlags::__anon1f24a7950203
IsDead	RVMachineFunctionInfo.h	/^    bool IsDead = false;$/;"	m	struct:llvm::RVMachineFunctionInfo::VGPRSpillToAGPR	typeref:typename:bool
IsDefined	AsmParser/RVGPUAsmParser.cpp	/^    bool IsDefined = false;$/;"	m	struct:__anon672fa8550111::RVGPUAsmParser::OperandInfoTy	typeref:typename:bool	file:
IsEntryFunction	RVGPUMachineFunction.h	/^  bool IsEntryFunction = false;$/;"	m	class:llvm::RVGPUMachineFunction	typeref:typename:bool
IsEntryFunction	RVMachineFunctionInfo.h	/^  bool IsEntryFunction = false;$/;"	m	struct:llvm::yaml::RVMachineFunctionInfo	typeref:typename:bool
IsExpiredFn	GCNHazardRecognizer.cpp	/^typedef function_ref<bool(const MachineInstr &, int WaitStates)> IsExpiredFn;$/;"	t	file:
IsFPImm	AsmParser/RVGPUAsmParser.cpp	/^    bool IsFPImm;$/;"	m	struct:__anon672fa8550111::RVGPUOperand::ImmOp	typeref:typename:bool	file:
IsGraphics	RVGPUTargetTransformInfo.h	/^  bool IsGraphics;$/;"	m	class:llvm::GCNTTIImpl	typeref:typename:bool
IsHazardFn	GCNHazardRecognizer.h	/^  typedef function_ref<bool(const MachineInstr &)> IsHazardFn;$/;"	t	class:llvm::GCNHazardRecognizer
IsHazardRecognizerMode	GCNHazardRecognizer.h	/^  bool IsHazardRecognizerMode;$/;"	m	class:llvm::GCNHazardRecognizer	typeref:typename:bool
IsHighLatency	SIMachineScheduler.h	/^    bool IsHighLatency;$/;"	m	struct:llvm::SIScheduleBlockScheduler::SIBlockSchedCandidate	typeref:typename:bool
IsHighLatencySU	SIMachineScheduler.h	/^  std::vector<unsigned> IsHighLatencySU;$/;"	m	class:llvm::SIScheduleDAGMI	typeref:typename:std::vector<unsigned>
IsImage	RVGPUInstrInfo.h	/^  bool IsImage;$/;"	m	struct:llvm::RVGPU::RsrcIntrinsic	typeref:typename:bool
IsImmKindLiteral	AsmParser/RVGPUAsmParser.cpp	/^  bool IsImmKindLiteral() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
IsImmKindMandatoryLiteral	AsmParser/RVGPUAsmParser.cpp	/^  bool IsImmKindMandatoryLiteral() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
IsKill	RVRegisterInfo.cpp	/^  bool IsKill;$/;"	m	struct:llvm::SGPRSpillBuilder	typeref:typename:bool	file:
IsLowLatency	SIMachineScheduler.h	/^    bool IsLowLatency;$/;"	m	struct:llvm::SIScheduleBlock::SISchedCandidate	typeref:typename:bool
IsLowLatencySU	SIMachineScheduler.h	/^  std::vector<unsigned> IsLowLatencySU;$/;"	m	class:llvm::SIScheduleDAGMI	typeref:typename:std::vector<unsigned>
IsMAI	SIDefines.h	/^  IsMAI = UINT64_C(1) << 54,$/;"	e	enum:llvm::SIInstrFlags::__anon1f24a7950203
IsModuleEntryFunction	RVGPUMachineFunction.h	/^  bool IsModuleEntryFunction = false;$/;"	m	class:llvm::RVGPUMachineFunction	typeref:typename:bool
IsMovrelsSDWAOpcode	AsmParser/RVGPUAsmParser.cpp	/^static bool IsMovrelsSDWAOpcode(const unsigned Opcode)$/;"	f	typeref:typename:bool	file:
IsNeverUniform	SIDefines.h	/^  IsNeverUniform = UINT64_C(1) << 61,$/;"	e	enum:llvm::SIInstrFlags::__anon1f24a7950203
IsNonTemporal	SIMemoryLegalizer.cpp	/^  bool IsNonTemporal = false;$/;"	m	class:__anon46517b8a0111::SIMemOpInfo	typeref:typename:bool	file:
IsOptNone	RVGPUPostLegalizerCombiner.cpp	/^  bool IsOptNone;$/;"	m	class:__anonf94dcdde0111::RVGPUPostLegalizerCombiner	typeref:typename:bool	file:
IsOptNone	RVGPUPreLegalizerCombiner.cpp	/^  bool IsOptNone;$/;"	m	class:__anonb779c2ff0111::RVGPUPreLegalizerCombiner	typeref:typename:bool	file:
IsOptNone	RVGPURegBankCombiner.cpp	/^  bool IsOptNone;$/;"	m	class:__anon00ae19330111::RVGPURegBankCombiner	typeref:typename:bool	file:
IsPacked	SIDefines.h	/^  IsPacked = UINT64_C(1) << 49,$/;"	e	enum:llvm::SIInstrFlags::__anon1f24a7950203
IsPermForDSW	RVGPUIGroupLP.cpp	/^    IsPermForDSW(const RVInstrInfo *TII, unsigned SGID, bool NeedsCache = false)$/;"	f	class:__anon61b122dc0111::MFMASmallGemmSingleWaveOpt::IsPermForDSW	file:
IsPermForDSW	RVGPUIGroupLP.cpp	/^  class IsPermForDSW final : public InstructionRule {$/;"	c	class:__anon61b122dc0111::MFMASmallGemmSingleWaveOpt	file:
IsPixelShader	RVGPUAtomicOptimizer.cpp	/^  bool IsPixelShader;$/;"	m	class:__anon7bca098a0111::RVGPUAtomicOptimizerImpl	typeref:typename:bool	file:
IsRVGPU	RVGPUPromoteAlloca.cpp	/^  bool IsRVGPU = false;$/;"	m	class:__anonea904d1c0111::RVGPUPromoteAllocaImpl	typeref:typename:bool	file:
IsRVHSA	RVGPUPromoteAlloca.cpp	/^  bool IsRVHSA = false;$/;"	m	class:__anonea904d1c0111::RVGPUPromoteAllocaImpl	typeref:typename:bool	file:
IsReentry	RVGPUIGroupLP.cpp	/^  bool IsReentry = false;$/;"	m	class:__anon61b122dc0111::IGroupLPDAGMutation	typeref:typename:bool	file:
IsRegister	RVMachineFunctionInfo.h	/^  bool IsRegister;$/;"	m	struct:llvm::yaml::SIArgument	typeref:typename:bool
IsRevOpcode	AsmParser/RVGPUAsmParser.cpp	/^static bool IsRevOpcode(const unsigned Opcode)$/;"	f	typeref:typename:bool	file:
IsSet	RVGPUArgumentUsageInfo.h	/^  bool IsSet : 1;$/;"	m	struct:llvm::ArgDescriptor	typeref:typename:bool:1
IsSingle	Utils/RVGPUBaseInfo.cpp	/^  bool IsSingle;$/;"	m	struct:llvm::RVGPU::VOPInfo	typeref:typename:bool	file:
IsStack	RVGPUArgumentUsageInfo.h	/^  bool IsStack : 1;$/;"	m	struct:llvm::ArgDescriptor	typeref:typename:bool:1
IsStackRealigned	RVMachineFunctionInfo.h	/^  bool IsStackRealigned = false;$/;"	m	class:llvm::RVMachineFunctionInfo	typeref:typename:bool
IsSuccOfPrevGroup	RVGPUIGroupLP.cpp	/^    IsSuccOfPrevGroup(const RVInstrInfo *TII, unsigned SGID,$/;"	f	class:__anon61b122dc0111::MFMASmallGemmSingleWaveOpt::IsSuccOfPrevGroup	file:
IsSuccOfPrevGroup	RVGPUIGroupLP.cpp	/^  class IsSuccOfPrevGroup final : public InstructionRule {$/;"	c	class:__anon61b122dc0111::MFMASmallGemmSingleWaveOpt	file:
IsSymbolic	AsmParser/RVGPUAsmParser.cpp	/^    bool IsSymbolic = false;$/;"	m	struct:__anon672fa8550111::RVGPUAsmParser::OperandInfoTy	typeref:typename:bool	file:
IsTailCall	RVGPUCallLowering.cpp	/^  bool IsTailCall;$/;"	m	struct:__anonad2fb0ad0111::RVGPUOutgoingArgHandler	typeref:typename:bool	file:
IsTargetStreamerInitialized	RVGPUAsmPrinter.h	/^  bool IsTargetStreamerInitialized;$/;"	m	class:llvm::RVGPUAsmPrinter	typeref:typename:bool
IsTrue16	Utils/RVGPUBaseInfo.cpp	/^  bool IsTrue16;$/;"	m	struct:llvm::RVGPU::VOPTrue16Info	typeref:typename:bool	file:
IsVolatile	SIMemoryLegalizer.cpp	/^  bool IsVolatile = false;$/;"	m	class:__anon46517b8a0111::SIMemOpInfo	typeref:typename:bool	file:
IsWMMA	SIDefines.h	/^  IsWMMA = UINT64_C(1) << 59,$/;"	e	enum:llvm::SIInstrFlags::__anon1f24a7950203
IsWave32	RVRegisterInfo.cpp	/^  bool IsWave32;$/;"	m	struct:llvm::SGPRSpillBuilder	typeref:typename:bool	file:
IsWave32	SILowerI1Copies.h	/^  bool IsWave32 = false;$/;"	m	class:llvm::PhiLoweringHelper	typeref:typename:bool
IsaInfo	RVGPUHSAMetadataStreamer.h	/^namespace IsaInfo {$/;"	n	namespace:llvm::RVGPU
IsaInfo	Utils/RVGPUBaseInfo.cpp	/^namespace IsaInfo {$/;"	n	namespace:llvm::RVGPU	file:
IsaInfo	Utils/RVGPUBaseInfo.h	/^namespace IsaInfo {$/;"	n	namespace:llvm::RVGPU
ItaniumMangler	RVGPULibFunc.cpp	/^  ItaniumMangler(bool useAddrSpace)$/;"	f	class:__anona5afe38d0311::ItaniumMangler	file:
ItaniumMangler	RVGPULibFunc.cpp	/^class ItaniumMangler {$/;"	c	namespace:__anona5afe38d0311	file:
ItaniumParamParser	RVGPULibFunc.cpp	/^struct ItaniumParamParser {$/;"	s	namespace:__anona5afe38d0211	file:
Iter	RVGPUMachineCFGStructurizer.cpp	/^  PHILinearize::PHIInfoT::iterator Iter;$/;"	m	class:__anon1695b1f50111::PHILinearizeDestIterator	typeref:typename:PHILinearize::PHIInfoT::iterator	file:
Iterative	RVGPU.h	/^enum class ScanOptions { DPP, Iterative, None };$/;"	e	enum:llvm::ScanOptions
IterativeGCNMaxOccupancySchedRegistry	RVGPUTargetMachine.cpp	/^static MachineSchedRegistry IterativeGCNMaxOccupancySchedRegistry($/;"	v	typeref:typename:MachineSchedRegistry	file:
KERNARG_SEGMENT_PTR	RVGPUArgumentUsageInfo.h	/^    KERNARG_SEGMENT_PTR =  3,$/;"	e	enum:llvm::RVGPUFunctionArgInfo::PreloadedValue
KernArgPreloadDescriptor	RVGPUArgumentUsageInfo.h	/^  KernArgPreloadDescriptor() {}$/;"	f	struct:llvm::KernArgPreloadDescriptor
KernArgPreloadDescriptor	RVGPUArgumentUsageInfo.h	/^struct KernArgPreloadDescriptor : public ArgDescriptor {$/;"	s	namespace:llvm
KernargPreload	GCNSubtarget.h	/^  bool KernargPreload = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
KernargPreloadCount	RVGPUAttributor.cpp	/^static cl::opt<unsigned> KernargPreloadCount($/;"	v	typeref:typename:cl::opt<unsigned>	file:
KernargSegmentPtr	GCNSubtarget.h	/^  bool KernargSegmentPtr = false;$/;"	m	class:llvm::GCNUserSGPRUsageInfo	typeref:typename:bool
KernargSegmentPtr	RVGPUArgumentUsageInfo.h	/^  ArgDescriptor KernargSegmentPtr;$/;"	m	struct:llvm::RVGPUFunctionArgInfo	typeref:typename:ArgDescriptor
KernargSegmentPtr	RVMachineFunctionInfo.h	/^  std::optional<SIArgument> KernargSegmentPtr;$/;"	m	struct:llvm::yaml::SIArgumentInfo	typeref:typename:std::optional<SIArgument>
KernargSegmentPtrID	GCNSubtarget.h	/^    KernargSegmentPtrID = 4,$/;"	e	enum:llvm::GCNUserSGPRUsageInfo::UserSGPRID
KernelArgMetadata	RVGPULowerKernelArguments.cpp	/^  SmallVector<llvm::Metadata *, 8> KernelArgMetadata;$/;"	m	class:__anonf85f450a0111::PreloadKernelArgInfo	typeref:typename:SmallVector<llvm::Metadata *,8>	file:
KernelInputOffsets	RVInstrInfo.h	/^namespace KernelInputOffsets {$/;"	n	namespace:llvm::SI
KernelScope	AsmParser/RVGPUAsmParser.cpp	/^  KernelScopeInfo KernelScope;$/;"	m	class:__anon672fa8550111::RVGPUAsmParser	typeref:typename:KernelScopeInfo	file:
KernelScopeInfo	AsmParser/RVGPUAsmParser.cpp	/^class KernelScopeInfo {$/;"	c	namespace:__anon672fa8550111	file:
Key	RVGPUAliasAnalysis.cpp	/^AnalysisKey RVGPUAA::Key;$/;"	m	class:RVGPUAA	typeref:typename:AnalysisKey
Key	RVGPUAliasAnalysis.h	/^  static AnalysisKey Key;$/;"	m	class:llvm::RVGPUAA	typeref:typename:AnalysisKey
KillBlocks	SILowerControlFlow.cpp	/^  SmallSet<MachineBasicBlock *, 4> KillBlocks;$/;"	m	class:__anon0ce7c3340111::SILowerControlFlow	typeref:typename:SmallSet<MachineBasicBlock *,4>	file:
KillFlagCandidates	SIOptimizeExecMasking.cpp	/^  SmallVector<MachineOperand *, 1> KillFlagCandidates;$/;"	m	class:__anon15773df20111::SIOptimizeExecMasking	typeref:typename:SmallVector<MachineOperand *,1>	file:
KillInstrs	SIWholeQuadMode.cpp	/^  SmallVector<MachineInstr *, 4> KillInstrs;$/;"	m	class:__anon41aff2810111::SIWholeQuadMode	typeref:typename:SmallVector<MachineInstr *,4>	file:
Kind	AsmParser/RVGPUAsmParser.cpp	/^    mutable ImmKindTy Kind;$/;"	m	struct:__anon672fa8550111::RVGPUOperand::ImmOp	typeref:typename:ImmKindTy	file:
Kind	AsmParser/RVGPUAsmParser.cpp	/^  RegisterKind Kind;$/;"	m	struct:RegInfo	typeref:typename:RegisterKind	file:
Kind	AsmParser/RVGPUAsmParser.cpp	/^  } Kind;$/;"	m	class:__anon672fa8550111::RVGPUOperand	typeref:enum:__anon672fa8550111::RVGPUOperand::KindTy	file:
Kind	RVMachineFunctionInfo.h	/^  SGPRSaveKind Kind;$/;"	m	class:llvm::PrologEpilogSGPRSaveRestoreInfo	typeref:typename:SGPRSaveKind
Kind	SIFoldOperands.cpp	/^  MachineOperand::MachineOperandType Kind;$/;"	m	struct:__anon07e514130111::FoldCandidate	typeref:typename:MachineOperand::MachineOperandType	file:
Kind	Utils/RVGPUBaseInfo.h	/^  const ComponentKind Kind;$/;"	m	class:llvm::RVGPU::VOPD::ComponentLayout	typeref:typename:const ComponentKind
KindTy	AsmParser/RVGPUAsmParser.cpp	/^  enum KindTy {$/;"	g	class:__anon672fa8550111::RVGPUOperand	file:
KnownExcessRP	GCNSchedStrategy.h	/^  bool KnownExcessRP = false;$/;"	m	class:llvm::GCNSchedStrategy	typeref:typename:bool
L	Utils/RVGPUBaseInfo.h	/^  MIMGBaseOpcode L;$/;"	m	struct:llvm::RVGPU::MIMGLZMappingInfo	typeref:typename:MIMGBaseOpcode
LANE_MASK	SIDefines.h	/^  LANE_MASK             = 0x3,$/;"	e	enum:llvm::RVGPU::Swizzle::EncBits
LANE_MAX	SIDefines.h	/^  LANE_MAX              = LANE_MASK,$/;"	e	enum:llvm::RVGPU::Swizzle::EncBits
LANE_NUM	SIDefines.h	/^  LANE_NUM              = 4,$/;"	e	enum:llvm::RVGPU::Swizzle::EncBits
LANE_SHIFT	SIDefines.h	/^  LANE_SHIFT            = 2,$/;"	e	enum:llvm::RVGPU::Swizzle::EncBits
LAST_ARG_POS	RVGPUAttributor.cpp	/^  LAST_ARG_POS$/;"	e	enum:ImplicitArgumentPositions	file:
LAST_REAL_HARDCLAUSE_TYPE	SIInsertHardClauses.cpp	/^  LAST_REAL_HARDCLAUSE_TYPE = HARDCLAUSE_VALU,$/;"	e	enum:__anon09538a560111::HardClauseType	file:
LAST_RVGPU_ISD_NUMBER	RVGPUISelLowering.h	/^  LAST_RVGPU_ISD_NUMBER$/;"	e	enum:llvm::RVGPUISD::NodeType
LDS	RVGPUISelLowering.h	/^  LDS,$/;"	e	enum:llvm::RVGPUISD::NodeType
LDS	SIMemoryLegalizer.cpp	/^  LDS = 1u << 1,$/;"	e	enum:__anon46517b8a0111::SIAtomicAddrSpace	file:
LDSBankCount	GCNSubtarget.h	/^  int LDSBankCount = 0;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:int
LDSBlocks	SIProgramInfo.h	/^    uint32_t LDSBlocks = 0;$/;"	m	struct:llvm::SIProgramInfo	typeref:typename:uint32_t
LDSDIR	SIDefines.h	/^  LDSDIR = 1 << 28,$/;"	e	enum:llvm::SIInstrFlags::__anon1f24a7950203
LDSKernelId	RVGPUArgumentUsageInfo.h	/^  ArgDescriptor LDSKernelId;$/;"	m	struct:llvm::RVGPUFunctionArgInfo	typeref:typename:ArgDescriptor
LDSKernelId	RVMachineFunctionInfo.h	/^  bool LDSKernelId : 1;$/;"	m	class:llvm::RVMachineFunctionInfo	typeref:typename:bool:1
LDSKernelId	RVMachineFunctionInfo.h	/^  std::optional<SIArgument> LDSKernelId;$/;"	m	struct:llvm::yaml::SIArgumentInfo	typeref:typename:std::optional<SIArgument>
LDSMisalignedBug	GCNSubtarget.h	/^  bool LDSMisalignedBug = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
LDSSize	RVGPUMachineFunction.h	/^  uint32_t LDSSize = 0;$/;"	m	class:llvm::RVGPUMachineFunction	typeref:typename:uint32_t
LDSSize	RVMachineFunctionInfo.h	/^  uint32_t LDSSize = 0;$/;"	m	struct:llvm::yaml::RVMachineFunctionInfo	typeref:typename:uint32_t
LDSSize	SIProgramInfo.h	/^    uint32_t LDSSize = 0;$/;"	m	struct:llvm::SIProgramInfo	typeref:typename:uint32_t
LDSUsesInfoTy	RVGPULowerModuleLDSPass.cpp	/^  struct LDSUsesInfoTy {$/;"	s	class:__anoncc7483b30111::RVGPULowerModuleLDS	file:
LDSVariableReplacement	RVGPULowerModuleLDSPass.cpp	/^  struct LDSVariableReplacement {$/;"	s	class:__anoncc7483b30111::RVGPULowerModuleLDS	file:
LDSVarsToConstantGEP	RVGPULowerModuleLDSPass.cpp	/^    DenseMap<GlobalVariable *, Constant *> LDSVarsToConstantGEP;$/;"	m	struct:__anoncc7483b30111::RVGPULowerModuleLDS::LDSVariableReplacement	typeref:typename:DenseMap<GlobalVariable *,Constant * >	file:
LDS_ACCESS	SIInsertWaitcnts.cpp	/^  LDS_ACCESS,           \/\/ lds read & write$/;"	e	enum:__anona6cbb7940211::WaitEventType	file:
LDS_KERNEL_ID	RVGPUArgumentUsageInfo.h	/^    LDS_KERNEL_ID       =  6, \/\/ LLVM internal, not part of the ABI$/;"	e	enum:llvm::RVGPUFunctionArgInfo::PreloadedValue
LGKM_CNT	SIDefines.h	/^  LGKM_CNT = UINT64_C(1) << 34,$/;"	e	enum:llvm::SIInstrFlags::__anon1f24a7950203
LGKM_CNT	SIInsertWaitcnts.cpp	/^enum InstCounterType { VM_CNT = 0, LGKM_CNT, EXP_CNT, VS_CNT, NUM_INST_CNTS };$/;"	e	enum:__anona6cbb7940111::InstCounterType	file:
LHS	RVGPUPostLegalizerCombiner.cpp	/^    Register LHS;$/;"	m	struct:__anonf94dcdde0111::RVGPUPostLegalizerCombinerImpl::FMinFMaxLegacyInfo	typeref:typename:Register	file:
LI	SIAnnotateControlFlow.cpp	/^  LoopInfo *LI;$/;"	m	class:__anond71df4850111::SIAnnotateControlFlow	typeref:typename:LoopInfo *	file:
LIS	GCNNSAReassign.cpp	/^  LiveIntervals *LIS;$/;"	m	class:__anon7e838c8c0111::GCNNSAReassign	typeref:typename:LiveIntervals *	file:
LIS	GCNPreRAOptimizations.cpp	/^  LiveIntervals *LIS;$/;"	m	class:__anon3997f4420111::GCNPreRAOptimizations	typeref:typename:LiveIntervals *	file:
LIS	GCNRegPressure.h	/^  const LiveIntervals &LIS;$/;"	m	class:llvm::GCNRPTracker	typeref:typename:const LiveIntervals &
LIS	GCNRewritePartialRegUses.cpp	/^  LiveIntervals *LIS;$/;"	m	class:__anon37bf8c3b0111::GCNRewritePartialRegUses	typeref:typename:LiveIntervals *	file:
LIS	SILowerControlFlow.cpp	/^  LiveIntervals *LIS = nullptr;$/;"	m	class:__anon0ce7c3340111::SILowerControlFlow	typeref:typename:LiveIntervals *	file:
LIS	SILowerSGPRSpills.cpp	/^  LiveIntervals *LIS = nullptr;$/;"	m	class:__anon4be335ae0111::SILowerSGPRSpills	typeref:typename:LiveIntervals *	file:
LIS	SILowerWWMCopies.cpp	/^  LiveIntervals *LIS;$/;"	m	class:__anon4731d9190111::SILowerWWMCopies	typeref:typename:LiveIntervals *	file:
LIS	SIOptimizeExecMaskingPreRA.cpp	/^  LiveIntervals *LIS;$/;"	m	class:__anon5760078c0111::SIOptimizeExecMaskingPreRA	typeref:typename:LiveIntervals *	file:
LIS	SIPreAllocateWWMRegs.cpp	/^  LiveIntervals *LIS;$/;"	m	class:__anon37f997ca0111::SIPreAllocateWWMRegs	typeref:typename:LiveIntervals *	file:
LIS	SIWholeQuadMode.cpp	/^  LiveIntervals *LIS;$/;"	m	class:__anon41aff2810111::SIWholeQuadMode	typeref:typename:LiveIntervals *	file:
LITERAL_CONST	SIDefines.h	/^  LITERAL_CONST = 255,$/;"	e	enum:llvm::RVGPU::EncValues::__anon1f24a7950603
LLVMIdent	RVGPUUnifyMetadata.cpp	/^    const char LLVMIdent[]          = "llvm.ident";$/;"	v	namespace:__anon26dde6960111::kOCLMD	typeref:typename:const char[]
LLVMInitializeRVGPUAsmParser	AsmParser/RVGPUAsmParser.cpp	/^extern "C" LLVM_EXTERNAL_VISIBILITY void LLVMInitializeRVGPUAsmParser() {$/;"	f	typeref:typename:LLVM_EXTERNAL_VISIBILITY void
LLVMInitializeRVGPUAsmPrinter	RVGPUAsmPrinter.cpp	/^extern "C" LLVM_EXTERNAL_VISIBILITY void LLVMInitializeRVGPUAsmPrinter() {$/;"	f	typeref:typename:LLVM_EXTERNAL_VISIBILITY void
LLVMInitializeRVGPUDisassembler	Disassembler/RVGPUDisassembler.cpp	/^extern "C" LLVM_EXTERNAL_VISIBILITY void LLVMInitializeRVGPUDisassembler() {$/;"	f	typeref:typename:LLVM_EXTERNAL_VISIBILITY void
LLVMInitializeRVGPUTarget	RVGPUTargetMachine.cpp	/^extern "C" LLVM_EXTERNAL_VISIBILITY void LLVMInitializeRVGPUTarget() {$/;"	f	typeref:typename:LLVM_EXTERNAL_VISIBILITY void
LLVMInitializeRVGPUTargetInfo	TargetInfo/RVGPUTargetInfo.cpp	/^extern "C" LLVM_EXTERNAL_VISIBILITY void LLVMInitializeRVGPUTargetInfo() {$/;"	f	typeref:typename:LLVM_EXTERNAL_VISIBILITY void
LLVMInitializeRVGPUTargetMC	MCTargetDesc/RVGPUMCTargetDesc.cpp	/^extern "C" LLVM_EXTERNAL_VISIBILITY void LLVMInitializeRVGPUTargetMC() {$/;"	f	typeref:typename:LLVM_EXTERNAL_VISIBILITY void
LLVMInitializeRVGPUTargetMCA	MCA/RVGPUCustomBehaviour.cpp	/^extern "C" LLVM_EXTERNAL_VISIBILITY void LLVMInitializeRVGPUTargetMCA() {$/;"	f	typeref:typename:LLVM_EXTERNAL_VISIBILITY void
LLVMRVHSADebugTrap	GCNSubtarget.h	/^    LLVMRVHSADebugTrap = 0x03,$/;"	e	enum:llvm::GCNSubtarget::TrapID
LLVMRVHSATrap	GCNSubtarget.h	/^    LLVMRVHSATrap      = 0x02,$/;"	e	enum:llvm::GCNSubtarget::TrapID
LLVM_LIB_TARGET_RVGPUHAZARDRECOGNIZERS_H	GCNHazardRecognizer.h	/^#define LLVM_LIB_TARGET_RVGPUHAZARDRECOGNIZERS_H$/;"	d
LLVM_LIB_TARGET_RVGPUMIRFORMATTER_H	RVGPUMIRFormatter.h	/^#define LLVM_LIB_TARGET_RVGPUMIRFORMATTER_H$/;"	d
LLVM_LIB_TARGET_RVGPU_DISASSEMBLER_RVGPUDISASSEMBLER_H	Disassembler/RVGPUDisassembler.h	/^#define LLVM_LIB_TARGET_RVGPU_DISASSEMBLER_RVGPUDISASSEMBLER_H$/;"	d
LLVM_LIB_TARGET_RVGPU_GCNITERATIVESCHEDULER_H	GCNIterativeScheduler.h	/^#define LLVM_LIB_TARGET_RVGPU_GCNITERATIVESCHEDULER_H$/;"	d
LLVM_LIB_TARGET_RVGPU_GCNREGPRESSURE_H	GCNRegPressure.h	/^#define LLVM_LIB_TARGET_RVGPU_GCNREGPRESSURE_H$/;"	d
LLVM_LIB_TARGET_RVGPU_GCNSCHEDSTRATEGY_H	GCNSchedStrategy.h	/^#define LLVM_LIB_TARGET_RVGPU_GCNSCHEDSTRATEGY_H$/;"	d
LLVM_LIB_TARGET_RVGPU_GCNSUBTARGET_H	GCNSubtarget.h	/^#define LLVM_LIB_TARGET_RVGPU_GCNSUBTARGET_H$/;"	d
LLVM_LIB_TARGET_RVGPU_MCA_RVGPUCUSTOMBEHAVIOUR_H	MCA/RVGPUCustomBehaviour.h	/^#define LLVM_LIB_TARGET_RVGPU_MCA_RVGPUCUSTOMBEHAVIOUR_H$/;"	d
LLVM_LIB_TARGET_RVGPU_MCTARGETDESC_RVGPUELFSTREAMER_H	MCTargetDesc/RVGPUELFStreamer.h	/^#define LLVM_LIB_TARGET_RVGPU_MCTARGETDESC_RVGPUELFSTREAMER_H$/;"	d
LLVM_LIB_TARGET_RVGPU_MCTARGETDESC_RVGPUFIXUPKINDS_H	MCTargetDesc/RVGPUFixupKinds.h	/^#define LLVM_LIB_TARGET_RVGPU_MCTARGETDESC_RVGPUFIXUPKINDS_H$/;"	d
LLVM_LIB_TARGET_RVGPU_MCTARGETDESC_RVGPUHSAMETADATASTREAMER_H	RVGPUHSAMetadataStreamer.h	/^#define LLVM_LIB_TARGET_RVGPU_MCTARGETDESC_RVGPUHSAMETADATASTREAMER_H$/;"	d
LLVM_LIB_TARGET_RVGPU_MCTARGETDESC_RVGPUINSTPRINTER_H	MCTargetDesc/RVGPUInstPrinter.h	/^#define LLVM_LIB_TARGET_RVGPU_MCTARGETDESC_RVGPUINSTPRINTER_H$/;"	d
LLVM_LIB_TARGET_RVGPU_MCTARGETDESC_RVGPUMCASMINFO_H	MCTargetDesc/RVGPUMCAsmInfo.h	/^#define LLVM_LIB_TARGET_RVGPU_MCTARGETDESC_RVGPUMCASMINFO_H$/;"	d
LLVM_LIB_TARGET_RVGPU_MCTARGETDESC_RVGPUMCTARGETDESC_H	MCTargetDesc/RVGPUMCTargetDesc.h	/^#define LLVM_LIB_TARGET_RVGPU_MCTARGETDESC_RVGPUMCTARGETDESC_H$/;"	d
LLVM_LIB_TARGET_RVGPU_MCTARGETDESC_RVGPUTARGETSTREAMER_H	MCTargetDesc/RVGPUTargetStreamer.h	/^#define LLVM_LIB_TARGET_RVGPU_MCTARGETDESC_RVGPUTARGETSTREAMER_H$/;"	d
LLVM_LIB_TARGET_RVGPU_MDGPUPERFHINTANALYSIS_H	RVGPUPerfHintAnalysis.h	/^#define LLVM_LIB_TARGET_RVGPU_MDGPUPERFHINTANALYSIS_H$/;"	d
LLVM_LIB_TARGET_RVGPU_RVGPUALIASANALYSIS_H	RVGPUAliasAnalysis.h	/^#define LLVM_LIB_TARGET_RVGPU_RVGPUALIASANALYSIS_H$/;"	d
LLVM_LIB_TARGET_RVGPU_RVGPUARGUMENTUSAGEINFO_H	RVGPUArgumentUsageInfo.h	/^#define LLVM_LIB_TARGET_RVGPU_RVGPUARGUMENTUSAGEINFO_H$/;"	d
LLVM_LIB_TARGET_RVGPU_RVGPUASMPRINTER_H	RVGPUAsmPrinter.h	/^#define LLVM_LIB_TARGET_RVGPU_RVGPUASMPRINTER_H$/;"	d
LLVM_LIB_TARGET_RVGPU_RVGPUCALLLOWERING_H	RVGPUCallLowering.h	/^#define LLVM_LIB_TARGET_RVGPU_RVGPUCALLLOWERING_H$/;"	d
LLVM_LIB_TARGET_RVGPU_RVGPUCOMBINERHELPER_H	RVGPUCombinerHelper.h	/^#define LLVM_LIB_TARGET_RVGPU_RVGPUCOMBINERHELPER_H$/;"	d
LLVM_LIB_TARGET_RVGPU_RVGPUCTORDTORLOWERING_H	RVGPUCtorDtorLowering.h	/^#define LLVM_LIB_TARGET_RVGPU_RVGPUCTORDTORLOWERING_H$/;"	d
LLVM_LIB_TARGET_RVGPU_RVGPUEXPORTCLUSTERING_H	RVGPUExportClustering.h	/^#define LLVM_LIB_TARGET_RVGPU_RVGPUEXPORTCLUSTERING_H$/;"	d
LLVM_LIB_TARGET_RVGPU_RVGPUFRAMELOWERING_H	RVGPUFrameLowering.h	/^#define LLVM_LIB_TARGET_RVGPU_RVGPUFRAMELOWERING_H$/;"	d
LLVM_LIB_TARGET_RVGPU_RVGPUGLOBALISELUTILS_H	RVGPUGlobalISelUtils.h	/^#define LLVM_LIB_TARGET_RVGPU_RVGPUGLOBALISELUTILS_H$/;"	d
LLVM_LIB_TARGET_RVGPU_RVGPUINSTRINFO_H	RVGPUInstrInfo.h	/^#define LLVM_LIB_TARGET_RVGPU_RVGPUINSTRINFO_H$/;"	d
LLVM_LIB_TARGET_RVGPU_RVGPUINSTRUCTIONSELECTOR_H	RVGPUInstructionSelector.h	/^#define LLVM_LIB_TARGET_RVGPU_RVGPUINSTRUCTIONSELECTOR_H$/;"	d
LLVM_LIB_TARGET_RVGPU_RVGPUISELDAGTODAG_H	RVGPUISelDAGToDAG.h	/^#define LLVM_LIB_TARGET_RVGPU_RVGPUISELDAGTODAG_H$/;"	d
LLVM_LIB_TARGET_RVGPU_RVGPUISELLOWERING_H	RVGPUISelLowering.h	/^#define LLVM_LIB_TARGET_RVGPU_RVGPUISELLOWERING_H$/;"	d
LLVM_LIB_TARGET_RVGPU_RVGPUMACHINEFUNCTION_H	RVGPUMachineFunction.h	/^#define LLVM_LIB_TARGET_RVGPU_RVGPUMACHINEFUNCTION_H$/;"	d
LLVM_LIB_TARGET_RVGPU_RVGPUMACHINELEGALIZER_H	RVGPULegalizerInfo.h	/^#define LLVM_LIB_TARGET_RVGPU_RVGPUMACHINELEGALIZER_H$/;"	d
LLVM_LIB_TARGET_RVGPU_RVGPUMACHINEMODULEINFO_H	RVGPUMachineModuleInfo.h	/^#define LLVM_LIB_TARGET_RVGPU_RVGPUMACHINEMODULEINFO_H$/;"	d
LLVM_LIB_TARGET_RVGPU_RVGPUMACROFUSION_H	RVGPUMacroFusion.h	/^#define LLVM_LIB_TARGET_RVGPU_RVGPUMACROFUSION_H$/;"	d
LLVM_LIB_TARGET_RVGPU_RVGPUMCINSTLOWER_H	RVGPUMCInstLower.h	/^#define LLVM_LIB_TARGET_RVGPU_RVGPUMCINSTLOWER_H$/;"	d
LLVM_LIB_TARGET_RVGPU_RVGPUMFMAIGROUPLP_H	RVGPUIGroupLP.h	/^#define LLVM_LIB_TARGET_RVGPU_RVGPUMFMAIGROUPLP_H$/;"	d
LLVM_LIB_TARGET_RVGPU_RVGPUPALMETADATA_H	Utils/RVGPUPALMetadata.h	/^#define LLVM_LIB_TARGET_RVGPU_RVGPUPALMETADATA_H$/;"	d
LLVM_LIB_TARGET_RVGPU_RVGPUPTNOTE_H	RVGPUPTNote.h	/^#define LLVM_LIB_TARGET_RVGPU_RVGPUPTNOTE_H$/;"	d
LLVM_LIB_TARGET_RVGPU_RVGPUREGBANKSELECT_H	RVGPURegBankSelect.h	/^#define LLVM_LIB_TARGET_RVGPU_RVGPUREGBANKSELECT_H$/;"	d
LLVM_LIB_TARGET_RVGPU_RVGPUREGISTERBANKINFO_H	RVGPURegisterBankInfo.h	/^#define LLVM_LIB_TARGET_RVGPU_RVGPUREGISTERBANKINFO_H$/;"	d
LLVM_LIB_TARGET_RVGPU_RVGPURESOURCEUSAGEANALYSIS_H	RVGPUResourceUsageAnalysis.h	/^#define LLVM_LIB_TARGET_RVGPU_RVGPURESOURCEUSAGEANALYSIS_H$/;"	d
LLVM_LIB_TARGET_RVGPU_RVGPUSUBTARGET_H	RVGPUSubtarget.h	/^#define LLVM_LIB_TARGET_RVGPU_RVGPUSUBTARGET_H$/;"	d
LLVM_LIB_TARGET_RVGPU_RVGPUTARGETMACHINE_H	RVGPUTargetMachine.h	/^#define LLVM_LIB_TARGET_RVGPU_RVGPUTARGETMACHINE_H$/;"	d
LLVM_LIB_TARGET_RVGPU_RVGPUTARGETOBJECTFILE_H	RVGPUTargetObjectFile.h	/^#define LLVM_LIB_TARGET_RVGPU_RVGPUTARGETOBJECTFILE_H$/;"	d
LLVM_LIB_TARGET_RVGPU_RVGPUTARGETTRANSFORMINFO_H	RVGPUTargetTransformInfo.h	/^#define LLVM_LIB_TARGET_RVGPU_RVGPUTARGETTRANSFORMINFO_H$/;"	d
LLVM_LIB_TARGET_RVGPU_RVGPUUNIFYDIVERGENTEXITNODES_H	RVGPUUnifyDivergentExitNodes.h	/^#define LLVM_LIB_TARGET_RVGPU_RVGPUUNIFYDIVERGENTEXITNODES_H$/;"	d
LLVM_LIB_TARGET_RVGPU_RVGPU_H	RVGPU.h	/^#define LLVM_LIB_TARGET_RVGPU_RVGPU_H$/;"	d
LLVM_LIB_TARGET_RVGPU_SIDEFINES_H	SIDefines.h	/^#define LLVM_LIB_TARGET_RVGPU_SIDEFINES_H$/;"	d
LLVM_LIB_TARGET_RVGPU_SIFRAMELOWERING_H	RVFrameLowering.h	/^#define LLVM_LIB_TARGET_RVGPU_SIFRAMELOWERING_H$/;"	d
LLVM_LIB_TARGET_RVGPU_SIINSTRINFO_H	RVInstrInfo.h	/^#define LLVM_LIB_TARGET_RVGPU_SIINSTRINFO_H$/;"	d
LLVM_LIB_TARGET_RVGPU_SIISELLOWERING_H	RVISelLowering.h	/^#define LLVM_LIB_TARGET_RVGPU_SIISELLOWERING_H$/;"	d
LLVM_LIB_TARGET_RVGPU_SIMACHINEFUNCTIONINFO_H	RVMachineFunctionInfo.h	/^#define LLVM_LIB_TARGET_RVGPU_SIMACHINEFUNCTIONINFO_H$/;"	d
LLVM_LIB_TARGET_RVGPU_SIMACHINESCHEDULER_H	SIMachineScheduler.h	/^#define LLVM_LIB_TARGET_RVGPU_SIMACHINESCHEDULER_H$/;"	d
LLVM_LIB_TARGET_RVGPU_SIMODEREGISTERDEFAULTS_H	SIModeRegisterDefaults.h	/^#define LLVM_LIB_TARGET_RVGPU_SIMODEREGISTERDEFAULTS_H$/;"	d
LLVM_LIB_TARGET_RVGPU_SIPROGRAMINFO_H	SIProgramInfo.h	/^#define LLVM_LIB_TARGET_RVGPU_SIPROGRAMINFO_H$/;"	d
LLVM_LIB_TARGET_RVGPU_SIREGISTERINFO_H	RVRegisterInfo.h	/^#define LLVM_LIB_TARGET_RVGPU_SIREGISTERINFO_H$/;"	d
LLVM_LIB_TARGET_RVGPU_TARGETINFO_RVGPUTARGETINFO_H	TargetInfo/RVGPUTargetInfo.h	/^#define LLVM_LIB_TARGET_RVGPU_TARGETINFO_RVGPUTARGETINFO_H$/;"	d
LLVM_LIB_TARGET_RVGPU_UTILS_RVGPUASMUTILS_H	Utils/RVGPUAsmUtils.h	/^#define LLVM_LIB_TARGET_RVGPU_UTILS_RVGPUASMUTILS_H$/;"	d
LLVM_LIB_TARGET_RVGPU_UTILS_RVGPUBASEINFO_H	Utils/RVGPUBaseInfo.h	/^#define LLVM_LIB_TARGET_RVGPU_UTILS_RVGPUBASEINFO_H$/;"	d
LLVM_LIB_TARGET_RVGPU_UTILS_RVGPUMEMORYUTILS_H	Utils/RVGPUMemoryUtils.h	/^#define LLVM_LIB_TARGET_RVGPU_UTILS_RVGPUMEMORYUTILS_H$/;"	d
LLVM_LIB_TARGET_RVGPU_UTILS_RVKERNELCODETUTILS_H	Utils/RVKernelCodeTUtils.h	/^#define LLVM_LIB_TARGET_RVGPU_UTILS_RVKERNELCODETUTILS_H$/;"	d
LLVM_LIB_TARGET_RVGPU_VOPDUTILS_H	GCNVOPDUtils.h	/^#define LLVM_LIB_TARGET_RVGPU_VOPDUTILS_H$/;"	d
LLVM_MARK_AS_BITMASK_ENUM	RVGPUIGroupLP.cpp	/^  LLVM_MARK_AS_BITMASK_ENUM(\/* LargestFlag = *\/ ALL)$/;"	e	enum:__anon61b122dc0111::SchedGroupMask	file:
LLVM_MARK_AS_BITMASK_ENUM	SIMemoryLegalizer.cpp	/^  LLVM_MARK_AS_BITMASK_ENUM(\/* LargestFlag = *\/ ALL)$/;"	e	enum:__anon46517b8a0111::SIAtomicAddrSpace	file:
LLVM_MARK_AS_BITMASK_ENUM	SIMemoryLegalizer.cpp	/^  LLVM_MARK_AS_BITMASK_ENUM(\/* LargestFlag = *\/ STORE)$/;"	e	enum:__anon46517b8a0111::SIMemOp	file:
LLVM_TARGET_DEFINITIONS	CMakeLists.txt	/^set(LLVM_TARGET_DEFINITIONS RVGPU.td)$/;"	v
LLVM_TARGET_DEFINITIONS	CMakeLists.txt	/^set(LLVM_TARGET_DEFINITIONS RVGPUGISel.td)$/;"	v
LLVM_TARGET_DEFINITIONS	CMakeLists.txt	/^set(LLVM_TARGET_DEFINITIONS RVGPUInstCombineTables.td)$/;"	v
LOAD	SIMemoryLegalizer.cpp	/^  LOAD = 1u << 0,$/;"	e	enum:__anon46517b8a0111::SIMemOp	file:
LOAD_CONSTANT	RVGPUISelLowering.h	/^  LOAD_CONSTANT,$/;"	e	enum:llvm::RVGPUISD::NodeType
LOAD_D16_HI	RVGPUISelLowering.h	/^  LOAD_D16_HI,$/;"	e	enum:llvm::RVGPUISD::NodeType
LOAD_D16_HI_I8	RVGPUISelLowering.h	/^  LOAD_D16_HI_I8,$/;"	e	enum:llvm::RVGPUISD::NodeType
LOAD_D16_HI_U8	RVGPUISelLowering.h	/^  LOAD_D16_HI_U8,$/;"	e	enum:llvm::RVGPUISD::NodeType
LOAD_D16_LO	RVGPUISelLowering.h	/^  LOAD_D16_LO,$/;"	e	enum:llvm::RVGPUISD::NodeType
LOAD_D16_LO_I8	RVGPUISelLowering.h	/^  LOAD_D16_LO_I8,$/;"	e	enum:llvm::RVGPUISD::NodeType
LOAD_D16_LO_U8	RVGPUISelLowering.h	/^  LOAD_D16_LO_U8,$/;"	e	enum:llvm::RVGPUISD::NodeType
LOCAL_SIZE_X	RVInstrInfo.h	/^  LOCAL_SIZE_X = 24,$/;"	e	enum:llvm::SI::KernelInputOffsets::Offsets
LOCAL_SIZE_Y	RVInstrInfo.h	/^  LOCAL_SIZE_Y = 28,$/;"	e	enum:llvm::SI::KernelInputOffsets::Offsets
LOCAL_SIZE_Z	RVInstrInfo.h	/^  LOCAL_SIZE_Z = 32$/;"	e	enum:llvm::SI::KernelInputOffsets::Offsets
LOD_CLAMP_MASK	SIDefines.h	/^  LOD_CLAMP_MASK = 1 << 10,$/;"	e	enum:llvm::RVGPU::Hwreg::ModeRegisterMasks
LOG	RVGPUISelLowering.h	/^  LOG,$/;"	e	enum:llvm::RVGPUISD::NodeType
LOOP	RVGPUISelLowering.h	/^  LOOP,$/;"	e	enum:llvm::RVGPUISD::NodeType
LRM	GCNNSAReassign.cpp	/^  LiveRegMatrix *LRM;$/;"	m	class:__anon7e838c8c0111::GCNNSAReassign	typeref:typename:LiveRegMatrix *	file:
LRegion	RVGPUMachineCFGStructurizer.cpp	/^  LinearizedRegion *LRegion = nullptr;$/;"	m	class:__anon1695b1f50211::RegionMRT	typeref:typename:LinearizedRegion *	file:
LSMInstCost	RVGPUPerfHintAnalysis.h	/^    unsigned LSMInstCost; \/\/ Large stride memory instruction count$/;"	m	struct:llvm::RVGPUPerfHintAnalysis::FuncInfo	typeref:typename:unsigned
LSWeight	RVGPUPerfHintAnalysis.cpp	/^    LSWeight("rvgpu-large-stride-weight", cl::init(1000), cl::Hidden,$/;"	v	typeref:typename:cl::opt<unsigned>	file:
LV	SILowerControlFlow.cpp	/^  LiveVariables *LV = nullptr;$/;"	m	class:__anon0ce7c3340111::SILowerControlFlow	typeref:typename:LiveVariables *	file:
LV	SIOptimizeVGPRLiveRange.cpp	/^  LiveVariables *LV = nullptr;$/;"	m	class:__anon3fc4a09f0111::SIOptimizeVGPRLiveRange	typeref:typename:LiveVariables *	file:
LZ	Utils/RVGPUBaseInfo.h	/^  MIMGBaseOpcode LZ;$/;"	m	struct:llvm::RVGPU::MIMGLZMappingInfo	typeref:typename:MIMGBaseOpcode
Lane	RVRegisterInfo.h	/^    int Lane = -1;$/;"	m	struct:llvm::RVRegisterInfo::SpilledReg	typeref:typename:int
LaneMaskRegAttrs	SILowerI1Copies.h	/^  Register LaneMaskRegAttrs;$/;"	m	class:llvm::PhiLoweringHelper	typeref:typename:Register
Lanes	RVMachineFunctionInfo.h	/^    SmallVector<MCPhysReg, 32> Lanes;$/;"	m	struct:llvm::RVMachineFunctionInfo::VGPRSpillToAGPR	typeref:typename:SmallVector<MCPhysReg,32>
LargeStrideThresh	RVGPUPerfHintAnalysis.cpp	/^    LargeStrideThresh("rvgpu-large-stride-threshold", cl::init(64), cl::Hidden,$/;"	v	typeref:typename:cl::opt<unsigned>	file:
Last	SIInsertHardClauses.cpp	/^    MachineInstr *Last = nullptr;$/;"	m	struct:__anon09538a560111::SIInsertHardClauses::ClauseInfo	typeref:typename:MachineInstr *	file:
LastAccess	RVGPUPerfHintAnalysis.cpp	/^  MemAccessInfo LastAccess; \/\/ Last memory access info$/;"	m	struct:__anon406ad74e0111::RVGPUPerfHint	typeref:typename:MemAccessInfo	file:
LastFlat	SIInsertWaitcnts.cpp	/^  unsigned LastFlat[NUM_INST_CNTS] = {0};$/;"	m	class:__anona6cbb7940211::WaitcntBrackets	typeref:typename:unsigned[]	file:
LastPosHighLatParentScheduled	SIMachineScheduler.h	/^    unsigned LastPosHighLatParentScheduled;$/;"	m	struct:llvm::SIScheduleBlockScheduler::SIBlockSchedCandidate	typeref:typename:unsigned
LastPosHighLatencyParentScheduled	SIMachineScheduler.h	/^  std::vector<unsigned> LastPosHighLatencyParentScheduled;$/;"	m	class:llvm::SIScheduleBlockScheduler	typeref:typename:std::vector<unsigned>
LastPosWaitedHighLatency	SIMachineScheduler.h	/^  int LastPosWaitedHighLatency;$/;"	m	class:llvm::SIScheduleBlockScheduler	typeref:typename:int
LastRecordedOccupancy	SIFormMemoryClauses.cpp	/^  unsigned LastRecordedOccupancy;$/;"	m	class:__anon8c5c3e4f0111::SIFormMemoryClauses	typeref:typename:unsigned	file:
LastTargetFixupKind	MCTargetDesc/RVGPUFixupKinds.h	/^  LastTargetFixupKind,$/;"	e	enum:llvm::RVGPU::Fixups
LastTrackedMI	GCNRegPressure.h	/^  const MachineInstr *LastTrackedMI = nullptr;$/;"	m	class:llvm::GCNRPTracker	typeref:typename:const MachineInstr *
LastVMEMLoad	RVGPUSetWavePriority.cpp	/^  MachineInstr *LastVMEMLoad = nullptr;$/;"	m	struct:__anonfc3f584b0111::MBBInfo	typeref:typename:MachineInstr *	file:
LateCFGStructurize	RVGPUTargetMachine.cpp	/^static cl::opt<bool, true> LateCFGStructurize($/;"	v	typeref:typename:cl::opt<bool,true>	file:
LatenciesAlone	SIMachineScheduler.h	/^  LatenciesAlone,$/;"	e	enum:llvm::SISchedulerBlockCreatorVariant
LatenciesAlonePlusConsecutive	SIMachineScheduler.h	/^  LatenciesAlonePlusConsecutive$/;"	e	enum:llvm::SISchedulerBlockCreatorVariant
LatenciesGrouped	SIMachineScheduler.h	/^  LatenciesGrouped,$/;"	e	enum:llvm::SISchedulerBlockCreatorVariant
Latency	SIMachineScheduler.h	/^  Latency,$/;"	e	enum:llvm::SIScheduleCandReason
LdexpF32	RVGPUCodeGenPrepare.cpp	/^  mutable Function *LdexpF32 = nullptr;$/;"	m	class:__anond35e324e0111::RVGPUCodeGenPrepareImpl	typeref:typename:Function *	file:
LdsSize	SIProgramInfo.h	/^    uint32_t LdsSize = 0;$/;"	m	struct:llvm::SIProgramInfo	typeref:typename:uint32_t
Lead	RVGPULibFunc.cpp	/^   unsigned char Lead[2];$/;"	m	struct:__anona5afe38d0111::ManglingRule	typeref:typename:unsigned char[2]	file:
Leads	RVGPULibFunc.cpp	/^  const RVGPULibFunc::Param (&Leads)[2];$/;"	m	class:__anona5afe38d0111::ParamIterator	typeref:typename:const RVGPULibFunc::Param (&)[2]	file:
Leads	RVGPULibFunc.h	/^  Param Leads[2];$/;"	m	class:llvm::RVGPUMangledLibFunc	typeref:typename:Param[2]
Legalizer	GCNSubtarget.h	/^  std::unique_ptr<LegalizerInfo> Legalizer;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:std::unique_ptr<LegalizerInfo>
Length	AsmParser/RVGPUAsmParser.cpp	/^    unsigned Length;$/;"	m	struct:__anon672fa8550111::RVGPUOperand::TokOp	typeref:typename:unsigned	file:
Length	SIInsertHardClauses.cpp	/^    unsigned Length = 0;$/;"	m	struct:__anon09538a560111::SIInsertHardClauses::ClauseInfo	typeref:typename:unsigned	file:
LgkmCnt	MCA/RVGPUCustomBehaviour.h	/^  bool LgkmCnt = false;$/;"	m	struct:llvm::mca::WaitCntInfo	typeref:typename:bool
LgkmCnt	Utils/RVGPUBaseInfo.h	/^  unsigned LgkmCnt = ~0u;$/;"	m	struct:llvm::RVGPU::Waitcnt	typeref:typename:unsigned
LgkmcntMax	SIInsertWaitcnts.cpp	/^  unsigned LgkmcntMax;$/;"	m	struct:__anona6cbb7940211::HardwareLimits	typeref:typename:unsigned	file:
LimitWaveThresh	RVGPUPerfHintAnalysis.cpp	/^    LimitWaveThresh("rvgpu-limit-wave-threshold", cl::init(50), cl::Hidden,$/;"	v	typeref:typename:cl::opt<unsigned>	file:
Limits	SIInsertWaitcnts.cpp	/^  HardwareLimits Limits = {};$/;"	m	class:__anona6cbb7940211::WaitcntBrackets	typeref:typename:HardwareLimits	file:
LinearizedRegion	RVGPUMachineCFGStructurizer.cpp	/^LinearizedRegion::LinearizedRegion() {$/;"	f	class:LinearizedRegion
LinearizedRegion	RVGPUMachineCFGStructurizer.cpp	/^LinearizedRegion::LinearizedRegion(MachineBasicBlock *MBB,$/;"	f	class:LinearizedRegion
LinearizedRegion	RVGPUMachineCFGStructurizer.cpp	/^class LinearizedRegion {$/;"	c	namespace:__anon1695b1f50211	file:
Lit	AsmParser/RVGPUAsmParser.cpp	/^    bool Lit = false;$/;"	m	struct:__anon672fa8550111::RVGPUOperand::Modifiers	typeref:typename:bool	file:
Literal	Disassembler/RVGPUDisassembler.h	/^  mutable uint32_t Literal;$/;"	m	class:llvm::RVGPUDisassembler	typeref:typename:uint32_t
Literal64	Disassembler/RVGPUDisassembler.h	/^  mutable uint64_t Literal64;$/;"	m	class:llvm::RVGPUDisassembler	typeref:typename:uint64_t
LiveInPressure	SIMachineScheduler.h	/^  std::vector<unsigned> LiveInPressure;$/;"	m	class:llvm::SIScheduleBlock	typeref:typename:std::vector<unsigned>
LiveInRegs	SIMachineScheduler.h	/^  std::set<unsigned> LiveInRegs;$/;"	m	class:llvm::SIScheduleBlock	typeref:typename:std::set<unsigned>
LiveIns	GCNSchedStrategy.h	/^  SmallVector<GCNRPTracker::LiveRegSet, 32> LiveIns;$/;"	m	class:llvm::GCNScheduleDAGMILive	typeref:typename:SmallVector<GCNRPTracker::LiveRegSet,32>
LiveMaskQueries	SIWholeQuadMode.cpp	/^  SmallVector<MachineInstr *, 2> LiveMaskQueries;$/;"	m	class:__anon41aff2810111::SIWholeQuadMode	typeref:typename:SmallVector<MachineInstr *,2>	file:
LiveMaskReg	SIWholeQuadMode.cpp	/^  Register LiveMaskReg;$/;"	m	class:__anon41aff2810111::SIWholeQuadMode	typeref:typename:Register	file:
LiveOutPressure	SIMachineScheduler.h	/^  std::vector<unsigned> LiveOutPressure;$/;"	m	class:llvm::SIScheduleBlock	typeref:typename:std::vector<unsigned>
LiveOutRegs	SIMachineScheduler.h	/^  std::set<unsigned> LiveOutRegs;$/;"	m	class:llvm::SIScheduleBlock	typeref:typename:std::set<unsigned>
LiveOutRegsNumUsages	SIMachineScheduler.h	/^  std::vector<std::map<unsigned, unsigned>> LiveOutRegsNumUsages;$/;"	m	class:llvm::SIScheduleBlockScheduler	typeref:typename:std::vector<std::map<unsigned,unsigned>>
LiveOuts	RVGPUMachineCFGStructurizer.cpp	/^  DenseSet<unsigned> LiveOuts;$/;"	m	class:__anon1695b1f50211::LinearizedRegion	typeref:typename:DenseSet<unsigned>	file:
LiveRegSet	GCNRegPressure.h	/^  using LiveRegSet = DenseMap<unsigned, LaneBitmask>;$/;"	t	class:llvm::GCNRPTracker	typeref:typename:DenseMap<unsigned,LaneBitmask>
LiveRegs	GCNRegPressure.h	/^  LiveRegSet LiveRegs;$/;"	m	class:llvm::GCNRPTracker	typeref:typename:LiveRegSet
LiveRegs	SIMachineScheduler.h	/^  std::set<unsigned> LiveRegs;$/;"	m	class:llvm::SIScheduleBlockScheduler	typeref:typename:std::set<unsigned>
LiveRegsConsumers	SIMachineScheduler.h	/^  std::map<unsigned, unsigned> LiveRegsConsumers;$/;"	m	class:llvm::SIScheduleBlockScheduler	typeref:typename:std::map<unsigned,unsigned>
LiveUnits	RVFrameLowering.cpp	/^  LiveRegUnits &LiveUnits;$/;"	m	class:llvm::PrologEpilogSGPRSpillBuilder	typeref:typename:LiveRegUnits &	file:
Lo	AsmParser/RVGPUAsmParser.cpp	/^    int Lo;$/;"	m	struct:RVGPUAsmParser::parseDPPCtrlSel::DppCtrlCheck	typeref:typename:int	file:
Lo	Disassembler/RVGPUDisassembler.h	/^  uint64_t Lo = 0;$/;"	m	class:llvm::DecoderUInt128	typeref:typename:uint64_t
LoReg	SILoadStoreOptimizer.cpp	/^    Register LoReg;$/;"	m	struct:__anon677101620111::SILoadStoreOptimizer::BaseRegisters	typeref:typename:Register	file:
LoSubReg	SILoadStoreOptimizer.cpp	/^    unsigned LoSubReg = 0;$/;"	m	struct:__anon677101620111::SILoadStoreOptimizer::BaseRegisters	typeref:typename:unsigned	file:
Loc	AsmParser/RVGPUAsmParser.cpp	/^    SMLoc Loc;$/;"	m	struct:__anon672fa8550111::RVGPUAsmParser::OperandInfoTy	typeref:typename:SMLoc	file:
LocalMemLimit	RVGPUPromoteAlloca.cpp	/^  uint32_t LocalMemLimit = 0;$/;"	m	class:__anonea904d1c0111::RVGPUPromoteAllocaImpl	typeref:typename:uint32_t	file:
LocalMemoryObjects	RVGPUMachineFunction.h	/^  SmallDenseMap<const GlobalValue *, unsigned, 4> LocalMemoryObjects;$/;"	m	class:llvm::RVGPUMachineFunction	typeref:typename:SmallDenseMap<const GlobalValue *,unsigned,4>
LocalMemorySize	RVGPUSubtarget.h	/^  unsigned LocalMemorySize = 0;$/;"	m	class:llvm::RVGPUSubtarget	typeref:typename:unsigned
LodIndex	RVGPUInstrInfo.h	/^  uint8_t LodIndex;$/;"	m	struct:llvm::RVGPU::ImageDimIntrinsicInfo	typeref:typename:uint8_t
LodOrClampOrMip	Utils/RVGPUBaseInfo.h	/^  bool LodOrClampOrMip;$/;"	m	struct:llvm::RVGPU::MIMGBaseOpcodeInfo	typeref:typename:bool
LongBranchFactor	GCNPreRALongBranchReg.cpp	/^static cl::opt<double> LongBranchFactor($/;"	v	namespace:__anon4605b2240111	typeref:typename:cl::opt<double>	file:
LongBranchReservedReg	RVMachineFunctionInfo.h	/^  Register LongBranchReservedReg;$/;"	m	class:llvm::RVMachineFunctionInfo	typeref:typename:Register
LongBranchReservedReg	RVMachineFunctionInfo.h	/^  StringValue LongBranchReservedReg;$/;"	m	struct:llvm::yaml::RVMachineFunctionInfo	typeref:typename:StringValue
Loop	SIAnnotateControlFlow.cpp	/^  Function *Loop;$/;"	m	class:__anond71df4850111::SIAnnotateControlFlow	typeref:typename:Function *	file:
LoopFinder	SILowerI1Copies.cpp	/^  LoopFinder(MachineDominatorTree &DT, MachinePostDominatorTree &PDT)$/;"	f	class:__anone16a92980111::LoopFinder	file:
LoopFinder	SILowerI1Copies.cpp	/^class LoopFinder {$/;"	c	namespace:__anone16a92980111	file:
Loops	SIOptimizeVGPRLiveRange.cpp	/^  const MachineLoopInfo *Loops = nullptr;$/;"	m	class:__anon3fc4a09f0111::SIOptimizeVGPRLiveRange	typeref:typename:const MachineLoopInfo *	file:
LowLatencyOffset	SIMachineScheduler.h	/^    unsigned LowLatencyOffset;$/;"	m	struct:llvm::SIScheduleBlock::SISchedCandidate	typeref:typename:unsigned
LowLatencyOffset	SIMachineScheduler.h	/^  std::vector<unsigned> LowLatencyOffset;$/;"	m	class:llvm::SIScheduleDAGMI	typeref:typename:std::vector<unsigned>
LowerATOMIC_CMP_SWAP	RVISelLowering.cpp	/^SDValue RVTargetLowering::LowerATOMIC_CMP_SWAP(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
LowerAsmOperandForConstraint	RVISelLowering.cpp	/^void RVTargetLowering::LowerAsmOperandForConstraint(SDValue Op,$/;"	f	class:RVTargetLowering	typeref:typename:void
LowerBRCOND	RVISelLowering.cpp	/^SDValue RVTargetLowering::LowerBRCOND(SDValue BRCOND,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
LowerCONCAT_VECTORS	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::LowerCONCAT_VECTORS(SDValue Op,$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
LowerCTLZ_CTTZ	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::LowerCTLZ_CTTZ(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
LowerCall	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::LowerCall(CallLoweringInfo &CLI,$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
LowerCall	RVISelLowering.cpp	/^SDValue RVTargetLowering::LowerCall(CallLoweringInfo &CLI,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
LowerCallResult	RVISelLowering.cpp	/^SDValue RVTargetLowering::LowerCallResult($/;"	f	class:RVTargetLowering	typeref:typename:SDValue
LowerCtorDtor	RVGPUTargetMachine.cpp	/^    LowerCtorDtor("rvgpu-lower-global-ctor-dtor",$/;"	v	typeref:typename:cl::opt<bool>	file:
LowerDIVREM24	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::LowerDIVREM24(SDValue Op, SelectionDAG &DAG,$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
LowerDYNAMIC_STACKALLOC	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::LowerDYNAMIC_STACKALLOC(SDValue Op,$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
LowerDYNAMIC_STACKALLOC	RVISelLowering.cpp	/^SDValue RVTargetLowering::LowerDYNAMIC_STACKALLOC(SDValue Op,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
LowerEXTRACT_SUBVECTOR	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::LowerEXTRACT_SUBVECTOR(SDValue Op,$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
LowerFCEIL	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::LowerFCEIL(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
LowerFDIV	RVISelLowering.cpp	/^SDValue RVTargetLowering::LowerFDIV(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
LowerFDIV16	RVISelLowering.cpp	/^SDValue RVTargetLowering::LowerFDIV16(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
LowerFDIV32	RVISelLowering.cpp	/^SDValue RVTargetLowering::LowerFDIV32(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
LowerFDIV64	RVISelLowering.cpp	/^SDValue RVTargetLowering::LowerFDIV64(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
LowerFFLOOR	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::LowerFFLOOR(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
LowerFFREXP	RVISelLowering.cpp	/^SDValue RVTargetLowering::LowerFFREXP(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
LowerFLOG10	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::LowerFLOG10(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
LowerFLOG2	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::LowerFLOG2(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
LowerFLOGCommon	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::LowerFLOGCommon(SDValue Op,$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
LowerFLOGUnsafe	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::LowerFLOGUnsafe(SDValue Src, const SDLoc &SL,$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
LowerFNEARBYINT	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::LowerFNEARBYINT(SDValue Op,$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
LowerFP_TO_FP16	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::LowerFP_TO_FP16(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
LowerFP_TO_INT	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::LowerFP_TO_INT(SDValue Op,$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
LowerFP_TO_INT64	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::LowerFP_TO_INT64(SDValue Op, SelectionDAG &DAG,$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
LowerFREM	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::LowerFREM(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
LowerFRINT	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::LowerFRINT(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
LowerFROUND	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::LowerFROUND(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
LowerFROUNDEVEN	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::LowerFROUNDEVEN(SDValue Op,$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
LowerFTRUNC	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::LowerFTRUNC(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
LowerFormalArguments	RVISelLowering.cpp	/^SDValue RVTargetLowering::LowerFormalArguments($/;"	f	class:RVTargetLowering	typeref:typename:SDValue
LowerGlobalAddress	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::LowerGlobalAddress(RVGPUMachineFunction* MFI,$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
LowerGlobalAddress	RVISelLowering.cpp	/^SDValue RVTargetLowering::LowerGlobalAddress(RVGPUMachineFunction *MFI,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
LowerINTRINSIC_VOID	RVISelLowering.cpp	/^SDValue RVTargetLowering::LowerINTRINSIC_VOID(SDValue Op,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
LowerINTRINSIC_WO_CHAIN	RVISelLowering.cpp	/^SDValue RVTargetLowering::LowerINTRINSIC_WO_CHAIN(SDValue Op,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
LowerINTRINSIC_W_CHAIN	RVISelLowering.cpp	/^SDValue RVTargetLowering::LowerINTRINSIC_W_CHAIN(SDValue Op,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
LowerINT_TO_FP32	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::LowerINT_TO_FP32(SDValue Op, SelectionDAG &DAG,$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
LowerINT_TO_FP64	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::LowerINT_TO_FP64(SDValue Op, SelectionDAG &DAG,$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
LowerLOAD	RVISelLowering.cpp	/^SDValue RVTargetLowering::LowerLOAD(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
LowerOperation	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::LowerOperation(SDValue Op,$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
LowerOperation	RVISelLowering.cpp	/^SDValue RVTargetLowering::LowerOperation(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
LowerRETURNADDR	RVISelLowering.cpp	/^SDValue RVTargetLowering::LowerRETURNADDR(SDValue Op,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
LowerReturn	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::LowerReturn($/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
LowerReturn	RVISelLowering.cpp	/^RVTargetLowering::LowerReturn(SDValue Chain, CallingConv::ID CallConv,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
LowerSDIVREM	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::LowerSDIVREM(SDValue Op,$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
LowerSELECT	RVISelLowering.cpp	/^SDValue RVTargetLowering::LowerSELECT(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
LowerSIGN_EXTEND_INREG	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::LowerSIGN_EXTEND_INREG(SDValue Op,$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
LowerSINT_TO_FP	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::LowerSINT_TO_FP(SDValue Op,$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
LowerSTACKSAVE	RVISelLowering.cpp	/^SDValue RVTargetLowering::LowerSTACKSAVE(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
LowerSTORE	RVISelLowering.cpp	/^SDValue RVTargetLowering::LowerSTORE(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
LowerToCopyInstrs	SIWholeQuadMode.cpp	/^  SmallVector<MachineInstr *, 4> LowerToCopyInstrs;$/;"	m	class:__anon41aff2810111::SIWholeQuadMode	typeref:typename:SmallVector<MachineInstr *,4>	file:
LowerToMovInstrs	SIWholeQuadMode.cpp	/^  SmallVector<MachineInstr *, 4> LowerToMovInstrs;$/;"	m	class:__anon41aff2810111::SIWholeQuadMode	typeref:typename:SmallVector<MachineInstr *,4>	file:
LowerTrig	RVISelLowering.cpp	/^SDValue RVTargetLowering::LowerTrig(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
LowerUDIVREM	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::LowerUDIVREM(SDValue Op,$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
LowerUDIVREM64	RVGPUISelLowering.cpp	/^void RVGPUTargetLowering::LowerUDIVREM64(SDValue Op,$/;"	f	class:RVGPUTargetLowering	typeref:typename:void
LowerUINT_TO_FP	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::LowerUINT_TO_FP(SDValue Op,$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
LoweredEndCf	SILowerControlFlow.cpp	/^  SetVector<MachineInstr*> LoweredEndCf;$/;"	m	class:__anon0ce7c3340111::SILowerControlFlow	typeref:typename:SetVector<MachineInstr * >	file:
LoweredIf	SILowerControlFlow.cpp	/^  DenseSet<Register> LoweredIf;$/;"	m	class:__anon0ce7c3340111::SILowerControlFlow	typeref:typename:DenseSet<Register>	file:
LoweringKind	RVGPULowerModuleLDSPass.cpp	/^enum class LoweringKind { module, table, kernel, hybrid };$/;"	g	namespace:__anoncc7483b30111	file:
LoweringKindLoc	RVGPULowerModuleLDSPass.cpp	/^cl::opt<LoweringKind> LoweringKindLoc($/;"	v	namespace:__anoncc7483b30111	typeref:typename:cl::opt<LoweringKind>
MAD_I24	RVGPUISelLowering.h	/^  MAD_I24,$/;"	e	enum:llvm::RVGPUISD::NodeType
MAD_I64_I32	RVGPUISelLowering.h	/^  MAD_I64_I32,$/;"	e	enum:llvm::RVGPUISD::NodeType
MAD_U24	RVGPUISelLowering.h	/^  MAD_U24,$/;"	e	enum:llvm::RVGPUISD::NodeType
MAD_U64_U32	RVGPUISelLowering.h	/^  MAD_U64_U32,$/;"	e	enum:llvm::RVGPUISD::NodeType
MAI	Disassembler/RVGPUDisassembler.h	/^  const MCAsmInfo &MAI;$/;"	m	class:llvm::RVGPUDisassembler	typeref:typename:const MCAsmInfo &
MAIInstInfo	Utils/RVGPUBaseInfo.h	/^struct MAIInstInfo {$/;"	s	namespace:llvm::RVGPU
MAP_REG2REG	Utils/RVGPUBaseInfo.cpp	/^#define MAP_REG2REG /;"	d	file:
MATH_E	RVGPULibCalls.cpp	/^#define MATH_E /;"	d	file:
MATH_PI	RVGPULibCalls.cpp	/^#define MATH_PI /;"	d	file:
MATH_SQRT1_2	RVGPULibCalls.cpp	/^#define MATH_SQRT1_2 /;"	d	file:
MATH_SQRT2	RVGPULibCalls.cpp	/^#define MATH_SQRT2 /;"	d	file:
MAX	Utils/RVGPUBaseInfo.h	/^  MAX = COMPONENT_Y$/;"	e	enum:llvm::RVGPU::VOPD::ComponentKind
MAX_LANES	RVMachineFunctionInfo.cpp	/^#define MAX_LANES /;"	d	file:
MAX_OPR_NUM	Utils/RVGPUBaseInfo.h	/^  MAX_OPR_NUM = DST_NUM + MAX_SRC_NUM$/;"	e	enum:llvm::RVGPU::VOPD::Component
MAX_SRC_NUM	Utils/RVGPUBaseInfo.h	/^  MAX_SRC_NUM = 3,$/;"	e	enum:llvm::RVGPU::VOPD::Component
MAX_SRC_OPERANDS_NUM	AsmParser/RVGPUAsmParser.cpp	/^constexpr unsigned MAX_SRC_OPERANDS_NUM = 6;$/;"	v	typeref:typename:unsigned
MBB	RVFrameLowering.cpp	/^  MachineBasicBlock &MBB;$/;"	m	class:llvm::PrologEpilogSGPRSpillBuilder	typeref:typename:MachineBasicBlock &	file:
MBB	RVGPUMachineCFGStructurizer.cpp	/^  MachineBasicBlock *MBB;$/;"	m	class:__anon1695b1f50211::MBBMRT	typeref:typename:MachineBasicBlock *	file:
MBB	RVRegisterInfo.cpp	/^  MachineBasicBlock *MBB;$/;"	m	struct:llvm::SGPRSpillBuilder	typeref:typename:MachineBasicBlock *	file:
MBB	SIWholeQuadMode.cpp	/^  MachineBasicBlock *MBB = nullptr;$/;"	m	struct:__anon41aff2810111::WorkItem	typeref:typename:MachineBasicBlock *	file:
MBBEnd	GCNRegPressure.h	/^  MachineBasicBlock::const_iterator MBBEnd;$/;"	m	class:llvm::GCNDownwardRPTracker	typeref:typename:MachineBasicBlock::const_iterator
MBBInfo	RVGPUSetWavePriority.cpp	/^struct MBBInfo {$/;"	s	namespace:__anonfc3f584b0111	file:
MBBInfoSet	RVGPUSetWavePriority.cpp	/^using MBBInfoSet = DenseMap<const MachineBasicBlock *, MBBInfo>;$/;"	t	namespace:__anonfc3f584b0111	typeref:typename:DenseMap<const MachineBasicBlock *,MBBInfo>	file:
MBBLiveIns	GCNSchedStrategy.h	/^  DenseMap<const MachineBasicBlock *, GCNRPTracker::LiveRegSet> MBBLiveIns;$/;"	m	class:llvm::GCNScheduleDAGMILive	typeref:typename:DenseMap<const MachineBasicBlock *,GCNRPTracker::LiveRegSet>
MBBMRT	RVGPUMachineCFGStructurizer.cpp	/^  MBBMRT(MachineBasicBlock *BB) : MBB(BB) {$/;"	f	class:__anon1695b1f50211::MBBMRT	file:
MBBMRT	RVGPUMachineCFGStructurizer.cpp	/^class MBBMRT : public MRT {$/;"	c	namespace:__anon1695b1f50211	file:
MBBVector	SILowerSGPRSpills.cpp	/^using MBBVector = SmallVector<MachineBasicBlock *, 4>;$/;"	t	typeref:typename:SmallVector<MachineBasicBlock *,4>	file:
MBBs	RVGPUMachineCFGStructurizer.cpp	/^  SmallPtrSet<MachineBasicBlock *, 1> MBBs;$/;"	m	class:__anon1695b1f50211::LinearizedRegion	typeref:typename:SmallPtrSet<MachineBasicBlock *,1>	file:
MCII	Disassembler/RVGPUDisassembler.h	/^  std::unique_ptr<MCInstrInfo const> const MCII;$/;"	m	class:llvm::RVGPUDisassembler	typeref:typename:std::unique_ptr<MCInstrInfo const> const
MCII	MCTargetDesc/RVGPUMCCodeEmitter.cpp	/^  const MCInstrInfo &MCII;$/;"	m	class:__anon1f37a0740111::RVGPUMCCodeEmitter	typeref:typename:const MCInstrInfo &	file:
MC_DST_IDX	Utils/RVGPUBaseInfo.h	/^  static constexpr unsigned MC_DST_IDX[] = {0, 0, 1};$/;"	m	class:llvm::RVGPU::VOPD::ComponentLayout	typeref:typename:unsigned[]
MDA	RVGPURewriteOutArguments.cpp	/^  MemoryDependenceResults *MDA = nullptr;$/;"	m	class:__anon63899d5a0111::RVGPURewriteOutArguments	typeref:typename:MemoryDependenceResults *	file:
MDT	SIFixSGPRCopies.cpp	/^  MachineDominatorTree *MDT;$/;"	m	class:__anond27816180111::SIFixSGPRCopies	typeref:typename:MachineDominatorTree *	file:
MDT	SILateBranchLowering.cpp	/^  MachineDominatorTree *MDT = nullptr;$/;"	m	class:__anon4aa55dad0111::SILateBranchLowering	typeref:typename:MachineDominatorTree *	file:
MDT	SILowerControlFlow.cpp	/^  MachineDominatorTree *MDT = nullptr;$/;"	m	class:__anon0ce7c3340111::SILowerControlFlow	typeref:typename:MachineDominatorTree *	file:
MDT	SIOptimizeVGPRLiveRange.cpp	/^  MachineDominatorTree *MDT = nullptr;$/;"	m	class:__anon3fc4a09f0111::SIOptimizeVGPRLiveRange	typeref:typename:MachineDominatorTree *	file:
MDT	SIWholeQuadMode.cpp	/^  MachineDominatorTree *MDT;$/;"	m	class:__anon41aff2810111::SIWholeQuadMode	typeref:typename:MachineDominatorTree *	file:
MF	GCNHazardRecognizer.h	/^  const MachineFunction &MF;$/;"	m	class:llvm::GCNHazardRecognizer	typeref:typename:const MachineFunction &
MF	GCNSchedStrategy.h	/^  MachineFunction &MF;$/;"	m	class:llvm::GCNSchedStage	typeref:typename:MachineFunction &
MF	GCNSchedStrategy.h	/^  MachineFunction *MF;$/;"	m	class:llvm::GCNSchedStrategy	typeref:typename:MachineFunction *
MF	RVFrameLowering.cpp	/^  MachineFunction &MF;$/;"	m	class:llvm::PrologEpilogSGPRSpillBuilder	typeref:typename:MachineFunction &	file:
MF	RVRegisterInfo.cpp	/^  MachineFunction &MF;$/;"	m	struct:llvm::SGPRSpillBuilder	typeref:typename:MachineFunction &	file:
MF	SILowerI1Copies.h	/^  MachineFunction *MF = nullptr;$/;"	m	class:llvm::PhiLoweringHelper	typeref:typename:MachineFunction *
MF	SIOptimizeExecMasking.cpp	/^  MachineFunction *MF = nullptr;$/;"	m	class:__anon15773df20111::SIOptimizeExecMasking	typeref:typename:MachineFunction *	file:
MF	SIShrinkInstructions.cpp	/^  MachineFunction *MF;$/;"	m	class:__anon665027960111::SIShrinkInstructions	typeref:typename:MachineFunction *	file:
MFI	GCNSchedStrategy.h	/^  RVMachineFunctionInfo &MFI;$/;"	m	class:llvm::GCNSchedStage	typeref:typename:RVMachineFunctionInfo &
MFI	GCNSchedStrategy.h	/^  RVMachineFunctionInfo &MFI;$/;"	m	class:llvm::GCNScheduleDAGMILive	typeref:typename:RVMachineFunctionInfo &
MFI	RVFrameLowering.cpp	/^  MachineFrameInfo &MFI;$/;"	m	class:llvm::PrologEpilogSGPRSpillBuilder	typeref:typename:MachineFrameInfo &	file:
MFI	RVRegisterInfo.cpp	/^  RVMachineFunctionInfo &MFI;$/;"	m	struct:llvm::SGPRSpillBuilder	typeref:typename:RVMachineFunctionInfo &	file:
MFI	SIFoldOperands.cpp	/^  const RVMachineFunctionInfo *MFI;$/;"	m	class:__anon07e514130111::SIFoldOperands	typeref:typename:const RVMachineFunctionInfo *	file:
MFI	SIFormMemoryClauses.cpp	/^  RVMachineFunctionInfo *MFI;$/;"	m	class:__anon8c5c3e4f0111::SIFormMemoryClauses	typeref:typename:RVMachineFunctionInfo *	file:
MFI	SILowerWWMCopies.cpp	/^  RVMachineFunctionInfo *MFI;$/;"	m	class:__anon4731d9190111::SILowerWWMCopies	typeref:typename:RVMachineFunctionInfo *	file:
MFMA	RVGPUIGroupLP.cpp	/^  MFMA = 1u << 3,$/;"	e	enum:__anon61b122dc0111::SchedGroupMask	file:
MFMAPaddingRatio	GCNHazardRecognizer.cpp	/^    MFMAPaddingRatio("rvgpu-mfma-padding-ratio", cl::init(0), cl::Hidden,$/;"	v	typeref:typename:cl::opt<unsigned,false,MFMAPaddingRatioParser>	file:
MFMAPaddingRatioParser	GCNHazardRecognizer.cpp	/^  MFMAPaddingRatioParser(cl::Option &O) : cl::parser<unsigned>(O) {}$/;"	f	struct:__anon71cb16800111::MFMAPaddingRatioParser	file:
MFMAPaddingRatioParser	GCNHazardRecognizer.cpp	/^struct MFMAPaddingRatioParser : public cl::parser<unsigned> {$/;"	s	namespace:__anon71cb16800111	file:
MFMASmallGemmOpt	RVGPUIGroupLP.cpp	/^  MFMASmallGemmOpt(ScheduleDAGInstrs *DAG, const RVInstrInfo *TII)$/;"	f	class:__anon61b122dc0111::MFMASmallGemmOpt	file:
MFMASmallGemmOpt	RVGPUIGroupLP.cpp	/^class MFMASmallGemmOpt final : public IGLPStrategy {$/;"	c	namespace:__anon61b122dc0111	file:
MFMASmallGemmOptID	RVGPUIGroupLP.cpp	/^  MFMASmallGemmOptID = 0,$/;"	e	enum:__anon61b122dc0111::IGLPStrategyID	file:
MFMASmallGemmSingleWaveOpt	RVGPUIGroupLP.cpp	/^  MFMASmallGemmSingleWaveOpt(ScheduleDAGInstrs *DAG, const RVInstrInfo *TII)$/;"	f	class:__anon61b122dc0111::MFMASmallGemmSingleWaveOpt	file:
MFMASmallGemmSingleWaveOpt	RVGPUIGroupLP.cpp	/^class MFMASmallGemmSingleWaveOpt final : public IGLPStrategy {$/;"	c	namespace:__anon61b122dc0111	file:
MFMASmallGemmSingleWaveOptID	RVGPUIGroupLP.cpp	/^  MFMASmallGemmSingleWaveOptID = 1,$/;"	e	enum:__anon61b122dc0111::IGLPStrategyID	file:
MI	RVFrameLowering.cpp	/^  MachineBasicBlock::iterator MI;$/;"	m	class:llvm::PrologEpilogSGPRSpillBuilder	typeref:typename:MachineBasicBlock::iterator	file:
MI	RVRegisterInfo.cpp	/^  MachineBasicBlock::iterator MI;$/;"	m	struct:llvm::SGPRSpillBuilder	typeref:typename:MachineBasicBlock::iterator	file:
MI	SIWholeQuadMode.cpp	/^  MachineInstr *MI = nullptr;$/;"	m	struct:__anon41aff2810111::WorkItem	typeref:typename:MachineInstr *	file:
MIB	RVGPUCallLowering.cpp	/^  MachineInstrBuilder MIB;$/;"	m	struct:__anonad2fb0ad0111::CallReturnHandler	typeref:typename:MachineInstrBuilder	file:
MIB	RVGPUCallLowering.cpp	/^  MachineInstrBuilder MIB;$/;"	m	struct:__anonad2fb0ad0111::RVGPUOutgoingValueHandler	typeref:typename:MachineInstrBuilder	file:
MIMG	SIDefines.h	/^  MIMG = 1 << 20,$/;"	e	enum:llvm::SIInstrFlags::__anon1f24a7950203
MIMG	SILoadStoreOptimizer.cpp	/^  MIMG,$/;"	e	enum:__anon677101620111::InstClassEnum	file:
MIMGBaseOpcodeInfo	Utils/RVGPUBaseInfo.h	/^struct MIMGBaseOpcodeInfo {$/;"	s	namespace:llvm::RVGPU
MIMGBiasMappingInfo	Utils/RVGPUBaseInfo.h	/^struct MIMGBiasMappingInfo {$/;"	s	namespace:llvm::RVGPU
MIMGDimInfo	Utils/RVGPUBaseInfo.h	/^struct MIMGDimInfo {$/;"	s	namespace:llvm::RVGPU
MIMGEncoding	Utils/RVGPUBaseInfo.h	/^  uint8_t MIMGEncoding;$/;"	m	struct:llvm::RVGPU::MIMGInfo	typeref:typename:uint8_t
MIMGFlags	AsmParser/RVGPUAsmParser.cpp	/^constexpr uint64_t MIMGFlags =$/;"	v	typeref:typename:uint64_t
MIMGG16MappingInfo	Utils/RVGPUBaseInfo.h	/^struct MIMGG16MappingInfo {$/;"	s	namespace:llvm::RVGPU
MIMGInfo	Utils/RVGPUBaseInfo.h	/^struct MIMGInfo {$/;"	s	namespace:llvm::RVGPU
MIMGLZMappingInfo	Utils/RVGPUBaseInfo.h	/^struct MIMGLZMappingInfo {$/;"	s	namespace:llvm::RVGPU
MIMGMIPMappingInfo	Utils/RVGPUBaseInfo.h	/^struct MIMGMIPMappingInfo {$/;"	s	namespace:llvm::RVGPU
MIMGOffsetMappingInfo	Utils/RVGPUBaseInfo.h	/^struct MIMGOffsetMappingInfo {$/;"	s	namespace:llvm::RVGPU
MIMG_R128	GCNSubtarget.h	/^  bool MIMG_R128 = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
MIP	Utils/RVGPUBaseInfo.h	/^  MIMGBaseOpcode MIP;$/;"	m	struct:llvm::RVGPU::MIMGMIPMappingInfo	typeref:typename:MIMGBaseOpcode
MLI	SIInsertWaitcnts.cpp	/^  MachineLoopInfo *MLI;$/;"	m	class:__anona6cbb7940211::SIInsertWaitcnts	typeref:typename:MachineLoopInfo *	file:
MMI	SIMemoryLegalizer.cpp	/^  RVGPUMachineModuleInfo *MMI = nullptr;$/;"	m	class:__anon46517b8a0111::SIMemOpAccess	typeref:typename:RVGPUMachineModuleInfo *	file:
MONoClobber	RVInstrInfo.h	/^static const MachineMemOperand::Flags MONoClobber =$/;"	v	namespace:llvm	typeref:typename:const MachineMemOperand::Flags
MO_ABS32_HI	RVInstrInfo.h	/^    MO_ABS32_HI = 9,$/;"	e	enum:llvm::RVInstrInfo::TargetOperandFlags
MO_ABS32_LO	RVInstrInfo.h	/^    MO_ABS32_LO = 8,$/;"	e	enum:llvm::RVInstrInfo::TargetOperandFlags
MO_FAR_BRANCH_OFFSET	RVInstrInfo.h	/^    MO_FAR_BRANCH_OFFSET = 6,$/;"	e	enum:llvm::RVInstrInfo::TargetOperandFlags
MO_GOTPCREL	RVInstrInfo.h	/^    MO_GOTPCREL = 1,$/;"	e	enum:llvm::RVInstrInfo::TargetOperandFlags
MO_GOTPCREL32	RVInstrInfo.h	/^    MO_GOTPCREL32 = 2,$/;"	e	enum:llvm::RVInstrInfo::TargetOperandFlags
MO_GOTPCREL32_HI	RVInstrInfo.h	/^    MO_GOTPCREL32_HI = 3,$/;"	e	enum:llvm::RVInstrInfo::TargetOperandFlags
MO_GOTPCREL32_LO	RVInstrInfo.h	/^    MO_GOTPCREL32_LO = 2,$/;"	e	enum:llvm::RVInstrInfo::TargetOperandFlags
MO_MASK	RVInstrInfo.h	/^    MO_MASK = 0xf,$/;"	e	enum:llvm::RVInstrInfo::TargetOperandFlags
MO_NONE	RVInstrInfo.h	/^    MO_NONE = 0,$/;"	e	enum:llvm::RVInstrInfo::TargetOperandFlags
MO_REL32	RVInstrInfo.h	/^    MO_REL32 = 4,$/;"	e	enum:llvm::RVInstrInfo::TargetOperandFlags
MO_REL32_HI	RVInstrInfo.h	/^    MO_REL32_HI = 5,$/;"	e	enum:llvm::RVInstrInfo::TargetOperandFlags
MO_REL32_LO	RVInstrInfo.h	/^    MO_REL32_LO = 4,$/;"	e	enum:llvm::RVInstrInfo::TargetOperandFlags
MRI	Disassembler/RVGPUDisassembler.h	/^  const MCRegisterInfo &MRI;$/;"	m	class:llvm::RVGPUDisassembler	typeref:typename:const MCRegisterInfo &
MRI	GCNDPPCombine.cpp	/^  MachineRegisterInfo *MRI;$/;"	m	class:__anon46a5cf8f0111::GCNDPPCombine	typeref:typename:MachineRegisterInfo *	file:
MRI	GCNNSAReassign.cpp	/^  const MachineRegisterInfo *MRI;$/;"	m	class:__anon7e838c8c0111::GCNNSAReassign	typeref:typename:const MachineRegisterInfo *	file:
MRI	GCNPreRAOptimizations.cpp	/^  MachineRegisterInfo *MRI;$/;"	m	class:__anon3997f4420111::GCNPreRAOptimizations	typeref:typename:MachineRegisterInfo *	file:
MRI	GCNRegPressure.h	/^  mutable const MachineRegisterInfo *MRI = nullptr;$/;"	m	class:llvm::GCNRPTracker	typeref:typename:const MachineRegisterInfo *
MRI	GCNRewritePartialRegUses.cpp	/^  MachineRegisterInfo *MRI;$/;"	m	class:__anon37bf8c3b0111::GCNRewritePartialRegUses	typeref:typename:MachineRegisterInfo *	file:
MRI	MCTargetDesc/RVGPUMCCodeEmitter.cpp	/^  const MCRegisterInfo &MRI;$/;"	m	class:__anon1f37a0740111::RVGPUMCCodeEmitter	typeref:typename:const MCRegisterInfo &	file:
MRI	RVGPUInstructionSelector.h	/^  MachineRegisterInfo *MRI;$/;"	m	class:llvm::RVGPUInstructionSelector	typeref:typename:MachineRegisterInfo *
MRI	RVGPUMachineCFGStructurizer.cpp	/^  MachineRegisterInfo *MRI;$/;"	m	class:__anon1695b1f50311::RVGPUMachineCFGStructurizer	typeref:typename:MachineRegisterInfo *	file:
MRI	RVGPURegisterBankInfo.cpp	/^  MachineRegisterInfo &MRI;$/;"	m	class:__anon0a1a7df70111::ApplyRegBankMapping	typeref:typename:MachineRegisterInfo &	file:
MRI	SIFixSGPRCopies.cpp	/^  MachineRegisterInfo *MRI;$/;"	m	class:__anond27816180111::SIFixSGPRCopies	typeref:typename:MachineRegisterInfo *	file:
MRI	SIFoldOperands.cpp	/^  MachineRegisterInfo *MRI;$/;"	m	class:__anon07e514130111::SIFoldOperands	typeref:typename:MachineRegisterInfo *	file:
MRI	SIFormMemoryClauses.cpp	/^  const MachineRegisterInfo *MRI;$/;"	m	class:__anon8c5c3e4f0111::SIFormMemoryClauses	typeref:typename:const MachineRegisterInfo *	file:
MRI	SIInsertWaitcnts.cpp	/^  const MachineRegisterInfo *MRI = nullptr;$/;"	m	class:__anona6cbb7940211::SIInsertWaitcnts	typeref:typename:const MachineRegisterInfo *	file:
MRI	SILoadStoreOptimizer.cpp	/^  MachineRegisterInfo *MRI = nullptr;$/;"	m	class:__anon677101620111::SILoadStoreOptimizer	typeref:typename:MachineRegisterInfo *	file:
MRI	SILowerControlFlow.cpp	/^  MachineRegisterInfo *MRI = nullptr;$/;"	m	class:__anon0ce7c3340111::SILowerControlFlow	typeref:typename:MachineRegisterInfo *	file:
MRI	SILowerI1Copies.h	/^  MachineRegisterInfo *MRI = nullptr;$/;"	m	class:llvm::PhiLoweringHelper	typeref:typename:MachineRegisterInfo *
MRI	SILowerWWMCopies.cpp	/^  const MachineRegisterInfo *MRI;$/;"	m	class:__anon4731d9190111::SILowerWWMCopies	typeref:typename:const MachineRegisterInfo *	file:
MRI	SIOptimizeExecMasking.cpp	/^  const MachineRegisterInfo *MRI = nullptr;$/;"	m	class:__anon15773df20111::SIOptimizeExecMasking	typeref:typename:const MachineRegisterInfo *	file:
MRI	SIOptimizeExecMaskingPreRA.cpp	/^  MachineRegisterInfo *MRI;$/;"	m	class:__anon5760078c0111::SIOptimizeExecMaskingPreRA	typeref:typename:MachineRegisterInfo *	file:
MRI	SIOptimizeVGPRLiveRange.cpp	/^  MachineRegisterInfo *MRI = nullptr;$/;"	m	class:__anon3fc4a09f0111::SIOptimizeVGPRLiveRange	typeref:typename:MachineRegisterInfo *	file:
MRI	SIPeepholeSDWA.cpp	/^  MachineRegisterInfo *MRI;$/;"	m	class:__anon00bd52b30111::SIPeepholeSDWA	typeref:typename:MachineRegisterInfo *	file:
MRI	SIPreAllocateWWMRegs.cpp	/^  MachineRegisterInfo *MRI;$/;"	m	class:__anon37f997ca0111::SIPreAllocateWWMRegs	typeref:typename:MachineRegisterInfo *	file:
MRI	SIShrinkInstructions.cpp	/^  MachineRegisterInfo *MRI;$/;"	m	class:__anon665027960111::SIShrinkInstructions	typeref:typename:MachineRegisterInfo *	file:
MRI	SIWholeQuadMode.cpp	/^  MachineRegisterInfo *MRI;$/;"	m	class:__anon41aff2810111::SIWholeQuadMode	typeref:typename:MachineRegisterInfo *	file:
MRI_NoteCloneVirtualRegister	RVMachineFunctionInfo.cpp	/^void RVMachineFunctionInfo::MRI_NoteCloneVirtualRegister(Register NewReg,$/;"	f	class:RVMachineFunctionInfo	typeref:typename:void
MRI_NoteNewVirtualRegister	RVMachineFunctionInfo.cpp	/^void RVMachineFunctionInfo::MRI_NoteNewVirtualRegister(Register Reg) {$/;"	f	class:RVMachineFunctionInfo	typeref:typename:void
MRT	RVGPUMachineCFGStructurizer.cpp	/^class MRT {$/;"	c	namespace:__anon1695b1f50211	file:
MSAA	Utils/RVGPUBaseInfo.h	/^  bool MSAA;$/;"	m	struct:llvm::RVGPU::MIMGBaseOpcodeInfo	typeref:typename:bool
MSAA	Utils/RVGPUBaseInfo.h	/^  bool MSAA;$/;"	m	struct:llvm::RVGPU::MIMGDimInfo	typeref:typename:bool
MSG_SIZE	Utils/RVGPUAsmUtils.cpp	/^const int MSG_SIZE = static_cast<int>($/;"	v	namespace:llvm::RVGPU::SendMsg	typeref:typename:const int
MSSA	RVGPUAnnotateUniformValues.cpp	/^  MemorySSA *MSSA;$/;"	m	class:__anon9c77d1d40111::RVGPUAnnotateUniformValues	typeref:typename:MemorySSA *	file:
MSSA	RVGPUPromoteKernelArguments.cpp	/^  MemorySSA *MSSA;$/;"	m	class:__anon281388e70111::RVGPUPromoteKernelArguments	typeref:typename:MemorySSA *	file:
MSTI	AsmParser/RVGPUAsmParser.cpp	/^  MCSubtargetInfo const *MSTI = nullptr;$/;"	m	class:__anon672fa8550111::KernelScopeInfo	typeref:typename:MCSubtargetInfo const *	file:
MTBUF	SIDefines.h	/^  MTBUF = 1 << 18,$/;"	e	enum:llvm::SIInstrFlags::__anon1f24a7950203
MTBUFFormat	SIDefines.h	/^namespace MTBUFFormat {$/;"	n	namespace:llvm::RVGPU
MTBUFFormat	Utils/RVGPUAsmUtils.cpp	/^namespace MTBUFFormat {$/;"	n	namespace:llvm::RVGPU	file:
MTBUFFormat	Utils/RVGPUAsmUtils.h	/^namespace MTBUFFormat {$/;"	n	namespace:llvm::RVGPU
MTBUFFormat	Utils/RVGPUBaseInfo.cpp	/^namespace MTBUFFormat {$/;"	n	namespace:llvm::RVGPU	file:
MTBUFFormat	Utils/RVGPUBaseInfo.h	/^namespace MTBUFFormat {$/;"	n	namespace:llvm::RVGPU
MTBUFInfo	Utils/RVGPUBaseInfo.cpp	/^struct MTBUFInfo {$/;"	s	namespace:llvm::RVGPU	file:
MUBUF	SIDefines.h	/^  MUBUF = 1 << 17,$/;"	e	enum:llvm::SIInstrFlags::__anon1f24a7950203
MUBUFAddressData	RVGPUInstructionSelector.h	/^  struct MUBUFAddressData {$/;"	s	class:llvm::RVGPUInstructionSelector
MUBUFInfo	Utils/RVGPUBaseInfo.cpp	/^struct MUBUFInfo {$/;"	s	namespace:llvm::RVGPU	file:
MUL2	SIDefines.h	/^    MUL2 = 1,$/;"	e	enum:llvm::SIOutMods::__anon1f24a7950403
MUL4	SIDefines.h	/^    MUL4 = 2,$/;"	e	enum:llvm::SIOutMods::__anon1f24a7950403
MULHI_I24	RVGPUISelLowering.h	/^  MULHI_I24,$/;"	e	enum:llvm::RVGPUISD::NodeType
MULHI_U24	RVGPUISelLowering.h	/^  MULHI_U24,$/;"	e	enum:llvm::RVGPUISD::NodeType
MULTIGRID_SYNC_ARG_OFFSET	SIDefines.h	/^  MULTIGRID_SYNC_ARG_OFFSET = 88,$/;"	e	enum:llvm::RVGPU::ImplicitArg::Offset_COV5
MUL_I24	RVGPUISelLowering.h	/^  MUL_I24,$/;"	e	enum:llvm::RVGPUISD::NodeType
MUL_U24	RVGPUISelLowering.h	/^  MUL_U24,$/;"	e	enum:llvm::RVGPUISD::NodeType
MandatoryLiteralIdx	Utils/RVGPUBaseInfo.h	/^  unsigned MandatoryLiteralIdx = ~0u;$/;"	m	class:llvm::RVGPU::VOPD::ComponentProps	typeref:typename:unsigned
ManglingRule	RVGPULibFunc.cpp	/^struct ManglingRule {$/;"	s	namespace:__anona5afe38d0111	file:
MappingTraits	RVMachineFunctionInfo.h	/^template <> struct MappingTraits<RVMachineFunctionInfo> {$/;"	s	namespace:llvm::yaml
MappingTraits	RVMachineFunctionInfo.h	/^template <> struct MappingTraits<SIArgument> {$/;"	s	namespace:llvm::yaml
MappingTraits	RVMachineFunctionInfo.h	/^template <> struct MappingTraits<SIArgumentInfo> {$/;"	s	namespace:llvm::yaml
MappingTraits	RVMachineFunctionInfo.h	/^template <> struct MappingTraits<SIMode> {$/;"	s	namespace:llvm::yaml
Mask	RVGPUArgumentUsageInfo.h	/^  unsigned Mask;$/;"	m	struct:llvm::ArgDescriptor	typeref:typename:unsigned
Mask	RVMachineFunctionInfo.h	/^  std::optional<unsigned> Mask;$/;"	m	struct:llvm::yaml::SIArgument	typeref:typename:std::optional<unsigned>
Mask	SIModeRegister.cpp	/^  unsigned Mask = 0;$/;"	m	struct:Status	typeref:typename:unsigned	file:
Mask	Utils/RVGPUAsmUtils.h	/^  unsigned Mask = (1 << Width) - 1;$/;"	m	struct:llvm::RVGPU::CustomOperandVal	typeref:typename:unsigned
MatchAndEmitInstruction	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::MatchAndEmitInstruction(SMLoc IDLoc, unsigned &Opcode,$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
Match_PreferE32	AsmParser/RVGPUAsmParser.cpp	/^    Match_PreferE32 = FIRST_TARGET_MATCH_RESULT_TY$/;"	e	enum:__anon672fa8550111::RVGPUAsmParser::RVGPUMatchResultTy	file:
Matrix	SIPreAllocateWWMRegs.cpp	/^  LiveRegMatrix *Matrix;$/;"	m	class:__anon37f997ca0111::SIPreAllocateWWMRegs	typeref:typename:LiveRegMatrix *	file:
Max	RVGPURegBankCombiner.cpp	/^    unsigned Min, Max, Med;$/;"	m	struct:__anon00ae19330111::RVGPURegBankCombinerImpl::MinMaxMedOpc	typeref:typename:unsigned	file:
Max	Utils/RVGPUAsmUtils.h	/^  unsigned Max;$/;"	m	struct:llvm::RVGPU::CustomOperandVal	typeref:typename:unsigned
MaxAddressRegs	SILoadStoreOptimizer.cpp	/^const unsigned MaxAddressRegs = 12 + 1 + 1;$/;"	v	namespace:__anon677101620111	typeref:typename:const unsigned
MaxBranchesExplored	RVGPUIGroupLP.cpp	/^static cl::opt<uint64_t> MaxBranchesExplored($/;"	v	namespace:__anon61b122dc0111	typeref:typename:cl::opt<uint64_t>	file:
MaxClause	SIFormMemoryClauses.cpp	/^MaxClause("rvgpu-max-memory-clause", cl::Hidden, cl::init(15),$/;"	v	typeref:typename:cl::opt<unsigned>	file:
MaxIndex	Utils/RVGPUBaseInfo.cpp	/^  unsigned MaxIndex;$/;"	m	struct:llvm::RVGPU::Exp::ExpTgt	typeref:typename:unsigned	file:
MaxInstructionsInClause	SIInsertHardClauses.cpp	/^constexpr unsigned MaxInstructionsInClause = 63;$/;"	v	namespace:__anon09538a560111	typeref:typename:unsigned
MaxKernArgAlign	RVGPUMachineFunction.h	/^  Align MaxKernArgAlign;        \/\/ Cache for this.$/;"	m	class:llvm::RVGPUMachineFunction	typeref:typename:Align
MaxKernArgAlign	RVMachineFunctionInfo.h	/^  Align MaxKernArgAlign;$/;"	m	struct:llvm::yaml::RVMachineFunctionInfo	typeref:typename:Align
MaxNumRetRegs	RVGPURewriteOutArguments.cpp	/^static cl::opt<unsigned> MaxNumRetRegs($/;"	v	typeref:typename:cl::opt<unsigned>	file:
MaxNumVGPRs	GCNNSAReassign.cpp	/^  unsigned MaxNumVGPRs;$/;"	m	class:__anon7e838c8c0111::GCNNSAReassign	typeref:typename:unsigned	file:
MaxPressure	GCNIterativeScheduler.h	/^    GCNRegPressure MaxPressure;$/;"	m	struct:llvm::GCNIterativeScheduler::Region	typeref:typename:GCNRegPressure
MaxPressure	GCNIterativeScheduler.h	/^    GCNRegPressure MaxPressure;$/;"	m	struct:llvm::GCNIterativeScheduler::TentativeSchedule	typeref:typename:GCNRegPressure
MaxPressure	GCNRegPressure.h	/^  GCNRegPressure CurPressure, MaxPressure;$/;"	m	class:llvm::GCNRPTracker	typeref:typename:GCNRegPressure
MaxPressure	GCNSchedStrategy.h	/^  std::vector<unsigned> MaxPressure;$/;"	m	class:llvm::GCNSchedStrategy	typeref:typename:std::vector<unsigned>
MaxPrivateElementSize	GCNSubtarget.h	/^  unsigned MaxPrivateElementSize = 0;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:unsigned
MaxRegisterSize	RVGPULegalizerInfo.cpp	/^static constexpr unsigned MaxRegisterSize = 1024;$/;"	v	typeref:typename:unsigned	file:
MaxSGPRUsage	SIMachineScheduler.h	/^  unsigned MaxSGPRUsage;$/;"	m	struct:llvm::SIScheduleBlockResult	typeref:typename:unsigned
MaxSGPRs	SIFormMemoryClauses.cpp	/^  unsigned MaxSGPRs;$/;"	m	class:__anon8c5c3e4f0111::SIFormMemoryClauses	typeref:typename:unsigned	file:
MaxSize	RVGPUIGroupLP.cpp	/^  std::optional<unsigned> MaxSize;$/;"	m	class:__anon61b122dc0111::SchedGroup	typeref:typename:std::optional<unsigned>	file:
MaxVGPRUsage	SIMachineScheduler.h	/^  unsigned MaxVGPRUsage;$/;"	m	struct:llvm::SIScheduleBlockResult	typeref:typename:unsigned
MaxVGPRs	RVGPUPromoteAlloca.cpp	/^  unsigned MaxVGPRs;$/;"	m	class:__anonea904d1c0111::RVGPUPromoteAllocaImpl	typeref:typename:unsigned	file:
MaxVGPRs	SIFormMemoryClauses.cpp	/^  unsigned MaxVGPRs;$/;"	m	class:__anon8c5c3e4f0111::SIFormMemoryClauses	typeref:typename:unsigned	file:
MaxWavesPerEU	RVGPUSubtarget.h	/^  unsigned MaxWavesPerEU = 10;$/;"	m	class:llvm::RVGPUSubtarget	typeref:typename:unsigned
MayNeedAGPRs	RVMachineFunctionInfo.h	/^  bool MayNeedAGPRs : 1;$/;"	m	class:llvm::RVMachineFunctionInfo	typeref:typename:bool:1
MayReachVMEMLoad	RVGPUSetWavePriority.cpp	/^  bool MayReachVMEMLoad = false;$/;"	m	struct:__anonfc3f584b0111::MBBInfo	typeref:typename:bool	file:
Med	RVGPURegBankCombiner.cpp	/^    unsigned Min, Max, Med;$/;"	m	struct:__anon00ae19330111::RVGPURegBankCombinerImpl::MinMaxMedOpc	typeref:typename:unsigned	file:
Med3MatchInfo	RVGPURegBankCombiner.cpp	/^  struct Med3MatchInfo {$/;"	s	class:__anon00ae19330111::RVGPURegBankCombinerImpl	file:
MemAccessInfo	RVGPUPerfHintAnalysis.cpp	/^  struct MemAccessInfo {$/;"	s	struct:__anon406ad74e0111::RVGPUPerfHint	file:
MemAddress	SILoadStoreOptimizer.cpp	/^  struct MemAddress {$/;"	s	class:__anon677101620111::SILoadStoreOptimizer	file:
MemBoundThresh	RVGPUPerfHintAnalysis.cpp	/^    MemBoundThresh("rvgpu-membound-threshold", cl::init(50), cl::Hidden,$/;"	v	typeref:typename:cl::opt<unsigned>	file:
MemFlags	SIPostRABundler.cpp	/^constexpr uint64_t MemFlags = SIInstrFlags::MTBUF | SIInstrFlags::MUBUF |$/;"	v	namespace:__anona97e3cd70111	typeref:typename:uint64_t
MemInfoMap	SILoadStoreOptimizer.cpp	/^  using MemInfoMap = DenseMap<MachineInstr *, MemAddress>;$/;"	t	class:__anon677101620111::SILoadStoreOptimizer	typeref:typename:DenseMap<MachineInstr *,MemAddress>	file:
MemInstCost	RVGPUPerfHintAnalysis.h	/^    unsigned MemInstCost;$/;"	m	struct:llvm::RVGPUPerfHintAnalysis::FuncInfo	typeref:typename:unsigned
MemOrdered	SIProgramInfo.h	/^    uint32_t MemOrdered = 0; \/\/ GFX10+$/;"	m	struct:llvm::SIProgramInfo	typeref:typename:uint32_t
MemTransferInfo	RVGPUPromoteAlloca.cpp	/^struct MemTransferInfo {$/;"	s	file:
MemoryBound	RVGPUMachineFunction.h	/^  bool MemoryBound = false;$/;"	m	class:llvm::RVGPUMachineFunction	typeref:typename:bool
MemoryBound	RVMachineFunctionInfo.h	/^  bool MemoryBound = false;$/;"	m	struct:llvm::yaml::RVMachineFunctionInfo	typeref:typename:bool
MergeInfo	SIInsertWaitcnts.cpp	/^  struct MergeInfo {$/;"	s	class:__anona6cbb7940211::WaitcntBrackets	file:
MergedFormat	SIDefines.h	/^enum MergedFormat : int64_t {$/;"	g	namespace:llvm::RVGPU::MTBUFFormat	typeref:typename:int64_t
MetadataStreamer	RVGPUHSAMetadataStreamer.h	/^class MetadataStreamer {$/;"	c	namespace:llvm::RVGPU::HSRV
MetadataStreamerMsgPackV4	RVGPUHSAMetadataStreamer.h	/^class MetadataStreamerMsgPackV4 : public MetadataStreamer {$/;"	c	namespace:llvm::RVGPU::HSRV
MetadataStreamerMsgPackV5	RVGPUHSAMetadataStreamer.h	/^class MetadataStreamerMsgPackV5 final : public MetadataStreamerMsgPackV4 {$/;"	c	namespace:llvm::RVGPU::HSRV
Min	RVGPURegBankCombiner.cpp	/^    unsigned Min, Max, Med;$/;"	m	struct:__anon00ae19330111::RVGPURegBankCombinerImpl::MinMaxMedOpc	typeref:typename:unsigned	file:
MinMaxMedOpc	RVGPURegBankCombiner.cpp	/^  struct MinMaxMedOpc {$/;"	s	class:__anon00ae19330111::RVGPURegBankCombinerImpl	file:
MinOccupancy	GCNSchedStrategy.h	/^  unsigned MinOccupancy;$/;"	m	class:llvm::GCNScheduleDAGMILive	typeref:typename:unsigned
MipIndex	RVGPUInstrInfo.h	/^  uint8_t MipIndex;$/;"	m	struct:llvm::RVGPU::ImageDimIntrinsicInfo	typeref:typename:uint8_t
MissPenalty	RVGPUIGroupLP.cpp	/^  int MissPenalty = 0;$/;"	m	class:__anon61b122dc0111::PipelineSolver	typeref:typename:int	file:
Mod	RVGPUCodeGenPrepare.cpp	/^  Module *Mod = nullptr;$/;"	m	class:__anond35e324e0111::RVGPUCodeGenPrepareImpl	typeref:typename:Module *	file:
Mod	RVGPULateCodeGenPrepare.cpp	/^  Module *Mod = nullptr;$/;"	m	class:__anon4d9375140111::RVGPULateCodeGenPrepare	typeref:typename:Module *	file:
Mod	RVGPUPromoteAlloca.cpp	/^  Module *Mod = nullptr;$/;"	m	class:__anonea904d1c0111::RVGPUPromoteAllocaImpl	typeref:typename:Module *	file:
Mode	RVGPUISelDAGToDAG.h	/^  SIModeRegisterDefaults Mode;$/;"	m	class:RVGPUDAGToDAGISel	typeref:typename:SIModeRegisterDefaults
Mode	RVMachineFunctionInfo.h	/^  SIMode Mode;$/;"	m	struct:llvm::yaml::RVMachineFunctionInfo	typeref:typename:SIMode
Mode	RVMachineFunctionInfo.h	/^  SIModeRegisterDefaults Mode;$/;"	m	class:llvm::RVMachineFunctionInfo	typeref:typename:SIModeRegisterDefaults
Mode	SIModeRegister.cpp	/^  unsigned Mode = 0;$/;"	m	struct:Status	typeref:typename:unsigned	file:
ModeRegisterMasks	SIDefines.h	/^enum ModeRegisterMasks : uint32_t {$/;"	g	namespace:llvm::RVGPU::Hwreg	typeref:typename:uint32_t
ModifierOpNames	RVInstrInfo.cpp	/^static constexpr unsigned ModifierOpNames[] = {$/;"	v	typeref:typename:unsigned[]	file:
Modifiers	AsmParser/RVGPUAsmParser.cpp	/^  struct Modifiers {$/;"	s	class:__anon672fa8550111::RVGPUOperand	file:
Mods	AsmParser/RVGPUAsmParser.cpp	/^    Modifiers Mods;$/;"	m	struct:__anon672fa8550111::RVGPUOperand::ImmOp	typeref:typename:Modifiers	file:
Mods	AsmParser/RVGPUAsmParser.cpp	/^    Modifiers Mods;$/;"	m	struct:__anon672fa8550111::RVGPUOperand::RegOp	typeref:typename:Modifiers	file:
MovOp	SILowerI1Copies.h	/^  unsigned MovOp;$/;"	m	class:llvm::PhiLoweringHelper	typeref:typename:unsigned
MovOpc	RVRegisterInfo.cpp	/^  unsigned MovOpc;$/;"	m	struct:llvm::SGPRSpillBuilder	typeref:typename:unsigned	file:
MovOpc	SILateBranchLowering.cpp	/^  unsigned MovOpc;$/;"	m	class:__anon4aa55dad0111::SILateBranchLowering	typeref:typename:unsigned	file:
MovTermOpc	SILowerControlFlow.cpp	/^  unsigned MovTermOpc;$/;"	m	class:__anon0ce7c3340111::SILowerControlFlow	typeref:typename:unsigned	file:
Msg	Utils/RVGPUAsmUtils.cpp	/^const CustomOperand<const MCSubtargetInfo &> Msg[] = {$/;"	v	namespace:llvm::RVGPU::SendMsg	typeref:typename:const CustomOperand<const MCSubtargetInfo &>[]
MsgPackDoc	Utils/RVGPUPALMetadata.h	/^  msgpack::Document MsgPackDoc;$/;"	m	class:llvm::RVGPUPALMetadata	typeref:typename:msgpack::Document
MyShift	SIInsertWaitcnts.cpp	/^    unsigned MyShift;$/;"	m	struct:__anona6cbb7940211::WaitcntBrackets::MergeInfo	typeref:typename:unsigned	file:
N0	RVGPUInstructionSelector.h	/^    Register N0, N2, N3;$/;"	m	struct:llvm::RVGPUInstructionSelector::MUBUFAddressData	typeref:typename:Register
N2	RVGPUInstructionSelector.h	/^    Register N0, N2, N3;$/;"	m	struct:llvm::RVGPUInstructionSelector::MUBUFAddressData	typeref:typename:Register
N3	RVGPUInstructionSelector.h	/^    Register N0, N2, N3;$/;"	m	struct:llvm::RVGPUInstructionSelector::MUBUFAddressData	typeref:typename:Register
NATIVE	RVGPULibFunc.h	/^    NATIVE,$/;"	e	enum:llvm::RVGPULibFuncBase::ENamePrefix
NEG	SIDefines.h	/^   NEG = 1 << 0,   \/\/ Floating-point negate modifier$/;"	e	enum:llvm::SISrcMods::__anon1f24a7950303
NEG_HI	SIDefines.h	/^   NEG_HI = ABS,   \/\/ Floating-point negate high packed component modifier.$/;"	e	enum:llvm::SISrcMods::__anon1f24a7950303
NFMT_DEFAULT	SIDefines.h	/^  NFMT_DEFAULT = NFMT_UNORM,$/;"	e	enum:llvm::RVGPU::MTBUFFormat::NumFormat
NFMT_FLOAT	SIDefines.h	/^  NFMT_FLOAT,$/;"	e	enum:llvm::RVGPU::MTBUFFormat::NumFormat
NFMT_MASK	SIDefines.h	/^  NFMT_MASK = 7$/;"	e	enum:llvm::RVGPU::MTBUFFormat::NumFormat
NFMT_MAX	SIDefines.h	/^  NFMT_MAX = NFMT_FLOAT,$/;"	e	enum:llvm::RVGPU::MTBUFFormat::NumFormat
NFMT_MIN	SIDefines.h	/^  NFMT_MIN = NFMT_UNORM,$/;"	e	enum:llvm::RVGPU::MTBUFFormat::NumFormat
NFMT_RESERVED_6	SIDefines.h	/^  NFMT_RESERVED_6,                    \/\/ VI and GFX9$/;"	e	enum:llvm::RVGPU::MTBUFFormat::NumFormat
NFMT_SHIFT	SIDefines.h	/^  NFMT_SHIFT = 4,$/;"	e	enum:llvm::RVGPU::MTBUFFormat::NumFormat
NFMT_SINT	SIDefines.h	/^  NFMT_SINT,$/;"	e	enum:llvm::RVGPU::MTBUFFormat::NumFormat
NFMT_SNORM	SIDefines.h	/^  NFMT_SNORM,$/;"	e	enum:llvm::RVGPU::MTBUFFormat::NumFormat
NFMT_SNORM_OGL	SIDefines.h	/^  NFMT_SNORM_OGL = NFMT_RESERVED_6,   \/\/ SI and CI only$/;"	e	enum:llvm::RVGPU::MTBUFFormat::NumFormat
NFMT_SSCALED	SIDefines.h	/^  NFMT_SSCALED,$/;"	e	enum:llvm::RVGPU::MTBUFFormat::NumFormat
NFMT_UINT	SIDefines.h	/^  NFMT_UINT,$/;"	e	enum:llvm::RVGPU::MTBUFFormat::NumFormat
NFMT_UNDEF	SIDefines.h	/^  NFMT_UNDEF = -1,$/;"	e	enum:llvm::RVGPU::MTBUFFormat::NumFormat
NFMT_UNORM	SIDefines.h	/^  NFMT_UNORM = 0,$/;"	e	enum:llvm::RVGPU::MTBUFFormat::NumFormat
NFMT_USCALED	SIDefines.h	/^  NFMT_USCALED,$/;"	e	enum:llvm::RVGPU::MTBUFFormat::NumFormat
NGROUPS_X	RVInstrInfo.h	/^  NGROUPS_X = 0,$/;"	e	enum:llvm::SI::KernelInputOffsets::Offsets
NGROUPS_Y	RVInstrInfo.h	/^  NGROUPS_Y = 4,$/;"	e	enum:llvm::SI::KernelInputOffsets::Offsets
NGROUPS_Z	RVInstrInfo.h	/^  NGROUPS_Z = 8,$/;"	e	enum:llvm::SI::KernelInputOffsets::Offsets
NODE_NAME_CASE	RVGPUISelLowering.cpp	/^#define NODE_NAME_CASE(/;"	d	file:
NONE	GCNSubtarget.h	/^    NONE   = 0x00,$/;"	e	enum:llvm::GCNSubtarget::TrapHandlerAbi
NONE	RVGPUIGroupLP.cpp	/^  NONE = 0u,$/;"	e	enum:__anon61b122dc0111::SchedGroupMask	file:
NONE	SIDefines.h	/^    NONE = 0,$/;"	e	enum:llvm::SIOutMods::__anon1f24a7950403
NONE	SIDefines.h	/^   NONE = 0,$/;"	e	enum:llvm::SISrcMods::__anon1f24a7950303
NONE	SIMemoryLegalizer.cpp	/^  NONE = 0u,$/;"	e	enum:__anon46517b8a0111::SIAtomicAddrSpace	file:
NONE	SIMemoryLegalizer.cpp	/^  NONE = 0u,$/;"	e	enum:__anon46517b8a0111::SIMemOp	file:
NONE	SIMemoryLegalizer.cpp	/^  NONE,$/;"	e	enum:__anon46517b8a0111::SIAtomicScope	file:
NONMIP	Utils/RVGPUBaseInfo.h	/^  MIMGBaseOpcode NONMIP;$/;"	m	struct:llvm::RVGPU::MIMGMIPMappingInfo	typeref:typename:MIMGBaseOpcode
NON_CONTIGUOUS	GCNNSAReassign.cpp	/^    NON_CONTIGUOUS, \/\/ NSA with non-sequential address which we can try$/;"	e	enum:__anon7e838c8c0111::GCNNSAReassign::__anon7e838c8c0203	file:
NOPFX	RVGPULibFunc.h	/^    NOPFX,$/;"	e	enum:llvm::RVGPULibFuncBase::ENamePrefix
NORTHERN_ISLANDS	RVGPUSubtarget.h	/^    NORTHERN_ISLANDS = 4,$/;"	e	enum:llvm::RVGPUSubtarget::Generation
NOT_IMPLICIT_INPUT	RVGPUAttributor.cpp	/^  NOT_IMPLICIT_INPUT = 0,$/;"	e	enum:ImplicitArgumentMask	file:
NOT_NSA	GCNNSAReassign.cpp	/^    NOT_NSA,        \/\/ Not an NSA instruction$/;"	e	enum:__anon7e838c8c0111::GCNNSAReassign::__anon7e838c8c0203	file:
NSAThreshold	RVGPUSubtarget.cpp	/^static cl::opt<unsigned> NSAThreshold("rvgpu-nsa-threshold",$/;"	v	typeref:typename:cl::opt<unsigned>	file:
NSA_Status	GCNNSAReassign.cpp	/^  } NSA_Status;$/;"	t	class:__anon7e838c8c0111::GCNNSAReassign	typeref:enum:__anon7e838c8c0111::GCNNSAReassign::__anon7e838c8c0203	file:
NT	SIDefines.h	/^  NT = SLC,$/;"	e	enum:llvm::RVGPU::CPol::CPol
NUM_ALL_VGPRS	SIInsertWaitcnts.cpp	/^  NUM_ALL_VGPRS = SQ_MAX_PGM_VGPRS + NUM_EXTRA_VGPRS, \/\/ Where SGPR starts.$/;"	e	enum:__anona6cbb7940211::RegisterMapping	file:
NUM_EXTRA_VGPRS	SIInsertWaitcnts.cpp	/^  NUM_EXTRA_VGPRS = 1,    \/\/ A reserved slot for DS.$/;"	e	enum:__anona6cbb7940211::RegisterMapping	file:
NUM_INST_CNTS	SIInsertWaitcnts.cpp	/^enum InstCounterType { VM_CNT = 0, LGKM_CNT, EXP_CNT, VS_CNT, NUM_INST_CNTS };$/;"	e	enum:__anona6cbb7940111::InstCounterType	file:
NUM_WAIT_EVENTS	SIInsertWaitcnts.cpp	/^  NUM_WAIT_EVENTS,$/;"	e	enum:__anona6cbb7940211::WaitEventType	file:
N_INFINITY	SIDefines.h	/^  N_INFINITY = 1 << 2,   \/\/ Negative infinity$/;"	e	enum:llvm::SIInstrFlags::ClassFlags
N_NORMAL	SIDefines.h	/^  N_NORMAL = 1 << 3,     \/\/ Negative normal$/;"	e	enum:llvm::SIInstrFlags::ClassFlags
N_SUBNORMAL	SIDefines.h	/^  N_SUBNORMAL = 1 << 4,  \/\/ Negative subnormal$/;"	e	enum:llvm::SIInstrFlags::ClassFlags
N_ZERO	SIDefines.h	/^  N_ZERO = 1 << 5,       \/\/ Negative zero$/;"	e	enum:llvm::SIInstrFlags::ClassFlags
Name	AsmParser/RVGPUAsmParser.cpp	/^  StringLiteral Name;$/;"	m	struct:RegInfo	typeref:typename:StringLiteral	file:
Name	RVGPULibFunc.cpp	/^   const char *Name;$/;"	m	struct:__anona5afe38d0111::ManglingRule	typeref:typename:const char *	file:
Name	RVGPULibFunc.cpp	/^  const char *Name;$/;"	m	class:__anona5afe38d0111::UnmangledFuncInfo	typeref:typename:const char *	file:
Name	RVGPULibFunc.h	/^  std::string Name;$/;"	m	class:llvm::RVGPULibFuncImpl	typeref:typename:std::string
Name	Utils/RVGPUAsmUtils.h	/^  StringLiteral Name;$/;"	m	struct:llvm::RVGPU::CustomOperand	typeref:typename:StringLiteral
Name	Utils/RVGPUAsmUtils.h	/^  StringLiteral Name;$/;"	m	struct:llvm::RVGPU::CustomOperandVal	typeref:typename:StringLiteral
Name	Utils/RVGPUBaseInfo.cpp	/^  StringLiteral Name;$/;"	m	struct:llvm::RVGPU::Exp::ExpTgt	typeref:typename:StringLiteral	file:
Name	Utils/RVGPUPALMetadata.cpp	/^    const char *Name;$/;"	m	struct:getRegisterName::RegInfo	typeref:typename:const char *	file:
NearestTiesToAwayUnsupported	SIModeRegisterDefaults.h	/^  NearestTiesToAwayUnsupported =$/;"	e	enum:llvm::RVGPU::RVGPUFltRounds
NearestTiesToEven	SIModeRegisterDefaults.h	/^  NearestTiesToEven = static_cast<int8_t>(RoundingMode::NearestTiesToEven),$/;"	e	enum:llvm::RVGPU::RVGPUFltRounds
NearestTiesToEvenF32_NearestTiesToEvenF64	SIModeRegisterDefaults.h	/^  NearestTiesToEvenF32_NearestTiesToEvenF64 = NearestTiesToEven,$/;"	e	enum:llvm::RVGPU::RVGPUFltRounds
NearestTiesToEvenF32_TowardNegativeF64	SIModeRegisterDefaults.h	/^  NearestTiesToEvenF32_TowardNegativeF64 = 9,$/;"	e	enum:llvm::RVGPU::RVGPUFltRounds
NearestTiesToEvenF32_TowardPositiveF64	SIModeRegisterDefaults.h	/^  NearestTiesToEvenF32_TowardPositiveF64 = 8,$/;"	e	enum:llvm::RVGPU::RVGPUFltRounds
NearestTiesToEvenF32_TowardZeroF64	SIModeRegisterDefaults.h	/^  NearestTiesToEvenF32_TowardZeroF64 = 10,$/;"	e	enum:llvm::RVGPU::RVGPUFltRounds
NeedToBeConvertedToVALU	SIFixSGPRCopies.cpp	/^  bool NeedToBeConvertedToVALU = false;$/;"	m	class:__anond27816180111::V2SCopyInfo	typeref:typename:bool	file:
Needs	SIWholeQuadMode.cpp	/^  char Needs = 0;$/;"	m	struct:__anon41aff2810111::BlockInfo	typeref:typename:char	file:
Needs	SIWholeQuadMode.cpp	/^  char Needs = 0;$/;"	m	struct:__anon41aff2810111::InstrInfo	typeref:typename:char	file:
NeedsLowering	SIWholeQuadMode.cpp	/^  bool NeedsLowering = false;$/;"	m	struct:__anon41aff2810111::BlockInfo	typeref:typename:bool	file:
NeedsSolver	RVGPUIGroupLP.cpp	/^  bool NeedsSolver = false;$/;"	m	class:__anon61b122dc0111::PipelineSolver	typeref:typename:bool	file:
Neg	AsmParser/RVGPUAsmParser.cpp	/^    bool Neg = false;$/;"	m	struct:__anon672fa8550111::RVGPUOperand::Modifiers	typeref:typename:bool	file:
Neg	SIPeepholeSDWA.cpp	/^  bool Neg;$/;"	m	class:__anon00bd52b30111::SDWASrcOperand	typeref:typename:bool	file:
NegHi	Disassembler/RVGPUDisassembler.cpp	/^  unsigned NegHi = 0;$/;"	m	struct:VOPModifiers	typeref:typename:unsigned	file:
NegLo	Disassembler/RVGPUDisassembler.cpp	/^  unsigned NegLo = 0;$/;"	m	struct:VOPModifiers	typeref:typename:unsigned	file:
NegativeScratchOffsetBug	GCNSubtarget.h	/^  bool NegativeScratchOffsetBug = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
NegativeUnalignedScratchOffsetBug	GCNSubtarget.h	/^  bool NegativeUnalignedScratchOffsetBug = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
NewBank	RVGPURegisterBankInfo.cpp	/^  const RegisterBank *NewBank;$/;"	m	class:__anon0a1a7df70111::ApplyRegBankMapping	typeref:typename:const RegisterBank *	file:
NewInsts	RVGPURegisterBankInfo.cpp	/^  SmallVector<MachineInstr *, 4> NewInsts;$/;"	m	class:__anon0a1a7df70111::ApplyRegBankMapping	typeref:typename:SmallVector<MachineInstr *,4>	file:
NewPHI	RVGPUCodeGenPrepare.cpp	/^  PHINode *NewPHI = nullptr;$/;"	m	class:VectorSlice	typeref:typename:PHINode *	file:
NextLevel	SILowerI1Copies.cpp	/^  SmallVector<MachineBasicBlock *, 4> NextLevel;$/;"	m	class:__anone16a92980111::LoopFinder	typeref:typename:SmallVector<MachineBasicBlock *,4>	file:
NextMI	GCNRegPressure.h	/^  MachineBasicBlock::const_iterator NextMI;$/;"	m	class:llvm::GCNDownwardRPTracker	typeref:typename:MachineBasicBlock::const_iterator
NextNonReservedID	SIMachineScheduler.h	/^  int NextNonReservedID;$/;"	m	class:llvm::SIScheduleBlockCreator	typeref:typename:int
NextReservedID	SIMachineScheduler.h	/^  int NextReservedID;$/;"	m	class:llvm::SIScheduleBlockCreator	typeref:typename:int
NextVGPRToSGPRCopyID	SIFixSGPRCopies.cpp	/^  unsigned NextVGPRToSGPRCopyID;$/;"	m	class:__anond27816180111::SIFixSGPRCopies	typeref:typename:unsigned	file:
NfmtSymbolicGFX10	Utils/RVGPUAsmUtils.cpp	/^StringLiteral const NfmtSymbolicGFX10[] = {$/;"	v	namespace:llvm::RVGPU::MTBUFFormat	typeref:typename:StringLiteral const[]
NfmtSymbolicSICI	Utils/RVGPUAsmUtils.cpp	/^StringLiteral const NfmtSymbolicSICI[] = {$/;"	v	namespace:llvm::RVGPU::MTBUFFormat	typeref:typename:StringLiteral const[]
NfmtSymbolicVI	Utils/RVGPUAsmUtils.cpp	/^StringLiteral const NfmtSymbolicVI[] = {    \/\/ VI and GFX9$/;"	v	namespace:llvm::RVGPU::MTBUFFormat	typeref:typename:StringLiteral const[]
NoBias	Utils/RVGPUBaseInfo.h	/^  MIMGBaseOpcode NoBias;$/;"	m	struct:llvm::RVGPU::MIMGBiasMappingInfo	typeref:typename:MIMGBaseOpcode
NoCand	SIMachineScheduler.h	/^  NoCand,$/;"	e	enum:llvm::SIScheduleCandReason
NoData	SIMachineScheduler.h	/^  NoData,$/;"	e	enum:llvm::SIScheduleBlockLinkKind
NoHazardFound	GCNHazardRecognizer.cpp	/^typedef enum { HazardFound, HazardExpired, NoHazardFound } HazardFnResult;$/;"	e	enum:__anon71cb16800203	file:
NoOffset	Utils/RVGPUBaseInfo.h	/^  MIMGBaseOpcode NoOffset;$/;"	m	struct:llvm::RVGPU::MIMGOffsetMappingInfo	typeref:typename:MIMGBaseOpcode
NoSignedZerosFPMath	RVGPUMachineFunction.h	/^  bool NoSignedZerosFPMath = false;$/;"	m	class:llvm::RVGPUMachineFunction	typeref:typename:bool
NoSignedZerosFPMath	RVMachineFunctionInfo.h	/^  bool NoSignedZerosFPMath = false;$/;"	m	struct:llvm::yaml::RVMachineFunctionInfo	typeref:typename:bool
Node2CurrentBlock	SIMachineScheduler.h	/^  std::vector<int> Node2CurrentBlock;$/;"	m	class:llvm::SIScheduleBlockCreator	typeref:typename:std::vector<int>
NodeNum2Index	SIMachineScheduler.h	/^  std::map<unsigned, unsigned> NodeNum2Index;$/;"	m	class:llvm::SIScheduleBlock	typeref:typename:std::map<unsigned,unsigned>
NodeOrder	SIMachineScheduler.h	/^  NodeOrder$/;"	e	enum:llvm::SIScheduleCandReason
NodeType	RVGPUISelLowering.h	/^enum NodeType : unsigned {$/;"	g	namespace:llvm::RVGPUISD	typeref:typename:unsigned
NonLiteralStr	RVGPUPrintfRuntimeBinding.cpp	/^constexpr StringLiteral NonLiteralStr("???");$/;"	v	typeref:typename:StringLiteral
None	RVGPU.h	/^enum class ScanOptions { DPP, Iterative, None };$/;"	e	enum:llvm::ScanOptions
NotOpc	RVRegisterInfo.cpp	/^  unsigned NotOpc;$/;"	m	struct:llvm::SGPRSpillBuilder	typeref:typename:unsigned	file:
NoteNameV2	RVGPUPTNote.h	/^const char NoteNameV2[] = "RV";$/;"	v	namespace:llvm::RVGPU::ElfNote	typeref:typename:const char[]
NoteNameV3	RVGPUPTNote.h	/^const char NoteNameV3[] = "RVGPU";$/;"	v	namespace:llvm::RVGPU::ElfNote	typeref:typename:const char[]
Num	Utils/RVGPUPALMetadata.cpp	/^    unsigned Num;$/;"	m	struct:getRegisterName::RegInfo	typeref:typename:unsigned	file:
NumAGPR	RVGPUResourceUsageAnalysis.h	/^    int32_t NumAGPR = 0;$/;"	m	struct:llvm::RVGPUResourceUsageAnalysis::SIFunctionResourceInfo	typeref:typename:int32_t
NumAccVGPR	SIProgramInfo.h	/^    uint32_t NumAccVGPR = 0;$/;"	m	struct:llvm::SIProgramInfo	typeref:typename:uint32_t
NumAddresses	SILoadStoreOptimizer.cpp	/^    unsigned NumAddresses;$/;"	m	struct:__anon677101620111::SILoadStoreOptimizer::CombineInfo	typeref:typename:unsigned	file:
NumArchVGPR	SIProgramInfo.h	/^    uint32_t NumArchVGPR = 0;$/;"	m	struct:llvm::SIProgramInfo	typeref:typename:uint32_t
NumArgs	RVGPUInstrInfo.h	/^  uint8_t NumArgs;$/;"	m	struct:llvm::RVGPU::ImageDimIntrinsicInfo	typeref:typename:uint8_t
NumArgs	RVGPULibFunc.cpp	/^  unsigned NumArgs;$/;"	m	class:__anona5afe38d0111::UnmangledFuncInfo	typeref:typename:unsigned	file:
NumBiasArgs	RVGPUInstrInfo.h	/^  uint8_t NumBiasArgs;$/;"	m	struct:llvm::RVGPU::ImageDimIntrinsicInfo	typeref:typename:uint8_t
NumBlockScheduled	SIMachineScheduler.h	/^  unsigned NumBlockScheduled;$/;"	m	class:llvm::SIScheduleBlockScheduler	typeref:typename:unsigned
NumComponents	Utils/RVGPUBaseInfo.h	/^  unsigned NumComponents;$/;"	m	struct:llvm::RVGPU::GcnBufferFormatInfo	typeref:typename:unsigned
NumCoords	Utils/RVGPUBaseInfo.h	/^  uint8_t NumCoords;$/;"	m	struct:llvm::RVGPU::MIMGDimInfo	typeref:typename:uint8_t
NumData	RVGPUInstrInfo.h	/^  uint8_t NumData;$/;"	m	struct:llvm::RVGPU::ImageDimIntrinsicInfo	typeref:typename:uint8_t
NumDmask	RVGPUInstrInfo.h	/^  uint8_t NumDmask;$/;"	m	struct:llvm::RVGPU::ImageDimIntrinsicInfo	typeref:typename:uint8_t
NumElts	RVGPUCodeGenPrepare.cpp	/^  unsigned NumElts = 0;$/;"	m	class:VectorSlice	typeref:typename:unsigned	file:
NumExplicitSGPR	RVGPUResourceUsageAnalysis.h	/^    int32_t NumExplicitSGPR = 0;$/;"	m	struct:llvm::RVGPUResourceUsageAnalysis::SIFunctionResourceInfo	typeref:typename:int32_t
NumExtraArgs	Utils/RVGPUBaseInfo.h	/^  uint8_t NumExtraArgs;$/;"	m	struct:llvm::RVGPU::MIMGBaseOpcodeInfo	typeref:typename:uint8_t
NumFormat	SIDefines.h	/^enum NumFormat : int64_t {$/;"	g	namespace:llvm::RVGPU::MTBUFFormat	typeref:typename:int64_t
NumFormat	Utils/RVGPUBaseInfo.h	/^  unsigned NumFormat;$/;"	m	struct:llvm::RVGPU::GcnBufferFormatInfo	typeref:typename:unsigned
NumFreeUserSGPRs	RVGPULowerKernelArguments.cpp	/^  unsigned NumFreeUserSGPRs;$/;"	m	class:__anonf85f450a0111::PreloadKernelArgInfo	typeref:typename:unsigned	file:
NumGradients	RVGPUInstrInfo.h	/^  uint8_t NumGradients;$/;"	m	struct:llvm::RVGPU::ImageDimIntrinsicInfo	typeref:typename:uint8_t
NumGradients	Utils/RVGPUBaseInfo.h	/^  uint8_t NumGradients;$/;"	m	struct:llvm::RVGPU::MIMGDimInfo	typeref:typename:uint8_t
NumHighLatencySuccessors	SIMachineScheduler.h	/^    unsigned NumHighLatencySuccessors;$/;"	m	struct:llvm::SIScheduleBlockScheduler::SIBlockSchedCandidate	typeref:typename:unsigned
NumHighLatencySuccessors	SIMachineScheduler.h	/^  unsigned NumHighLatencySuccessors = 0;$/;"	m	class:llvm::SIScheduleBlock	typeref:typename:unsigned
NumKernargPreloadSGPRs	GCNSubtarget.h	/^  unsigned NumKernargPreloadSGPRs = 0;$/;"	m	class:llvm::GCNUserSGPRUsageInfo	typeref:typename:unsigned
NumOffsetArgs	RVGPUInstrInfo.h	/^  uint8_t NumOffsetArgs;$/;"	m	struct:llvm::RVGPU::ImageDimIntrinsicInfo	typeref:typename:uint8_t
NumPhysicalVGPRSpillLanes	RVMachineFunctionInfo.h	/^  unsigned NumPhysicalVGPRSpillLanes = 0;$/;"	m	class:llvm::RVMachineFunctionInfo	typeref:typename:unsigned
NumPreds	GCNMinRegStrategy.cpp	/^  std::vector<unsigned> NumPreds;$/;"	m	class:__anon807286a30111::GCNMinRegScheduler	typeref:typename:std::vector<unsigned>	file:
NumReadfirstlanes	SIFixSGPRCopies.cpp	/^  unsigned NumReadfirstlanes;$/;"	m	class:__anond27816180111::V2SCopyInfo	typeref:typename:unsigned	file:
NumRegionInstrs	GCNIterativeScheduler.h	/^    const unsigned NumRegionInstrs;$/;"	m	struct:llvm::GCNIterativeScheduler::Region	typeref:typename:const unsigned
NumSGPR	SIProgramInfo.h	/^    uint32_t NumSGPR = 0;$/;"	m	struct:llvm::SIProgramInfo	typeref:typename:uint32_t
NumSGPRsForWavesPerEU	SIProgramInfo.h	/^    uint32_t NumSGPRsForWavesPerEU = 0;$/;"	m	struct:llvm::SIProgramInfo	typeref:typename:uint32_t
NumSVCopies	SIFixSGPRCopies.cpp	/^  unsigned NumSVCopies;$/;"	m	class:__anond27816180111::V2SCopyInfo	typeref:typename:unsigned	file:
NumSchedGroups	RVGPUIGroupLP.cpp	/^  static unsigned NumSchedGroups;$/;"	m	class:__anon61b122dc0111::SchedGroup	typeref:typename:unsigned	file:
NumSchedGroups	RVGPUIGroupLP.cpp	/^unsigned SchedGroup::NumSchedGroups = 0;$/;"	m	class:__anon61b122dc0111::SchedGroup	typeref:typename:unsigned
NumSpilledSGPRs	RVMachineFunctionInfo.h	/^  unsigned NumSpilledSGPRs = 0;$/;"	m	class:llvm::RVMachineFunctionInfo	typeref:typename:unsigned
NumSpilledVGPRs	RVMachineFunctionInfo.h	/^  unsigned NumSpilledVGPRs = 0;$/;"	m	class:llvm::RVMachineFunctionInfo	typeref:typename:unsigned
NumSubRegs	RVFrameLowering.cpp	/^  unsigned NumSubRegs;$/;"	m	class:llvm::PrologEpilogSGPRSpillBuilder	typeref:typename:unsigned	file:
NumSubRegs	RVRegisterInfo.cpp	/^  unsigned NumSubRegs;$/;"	m	struct:llvm::SGPRSpillBuilder	typeref:typename:unsigned	file:
NumSuccessors	SIMachineScheduler.h	/^    unsigned NumSuccessors;$/;"	m	struct:llvm::SIScheduleBlockScheduler::SIBlockSchedCandidate	typeref:typename:unsigned
NumSystemSGPRs	RVMachineFunctionInfo.h	/^  unsigned NumSystemSGPRs = 0;$/;"	m	class:llvm::RVMachineFunctionInfo	typeref:typename:unsigned
NumTargetFixupKinds	MCTargetDesc/RVGPUFixupKinds.h	/^  NumTargetFixupKinds = LastTargetFixupKind - FirstTargetFixupKind$/;"	e	enum:llvm::RVGPU::Fixups
NumUsedUserSGPRs	GCNSubtarget.h	/^  unsigned NumUsedUserSGPRs = 0;$/;"	m	class:llvm::GCNUserSGPRUsageInfo	typeref:typename:unsigned
NumUserSGPRs	RVMachineFunctionInfo.h	/^  unsigned NumUserSGPRs = 0;$/;"	m	class:llvm::RVMachineFunctionInfo	typeref:typename:unsigned
NumVALUInstsAtStart	RVGPUSetWavePriority.cpp	/^  unsigned NumVALUInstsAtStart = 0;$/;"	m	struct:__anonfc3f584b0111::MBBInfo	typeref:typename:unsigned	file:
NumVAddrs	RVGPUInstrInfo.h	/^  uint8_t NumVAddrs;$/;"	m	struct:llvm::RVGPU::ImageDimIntrinsicInfo	typeref:typename:uint8_t
NumVAddrs	SILoadStoreOptimizer.cpp	/^  unsigned char NumVAddrs = 0;$/;"	m	struct:__anon677101620111::AddressRegs	typeref:typename:unsigned char	file:
NumVGPR	RVGPUResourceUsageAnalysis.h	/^    int32_t NumVGPR = 0;$/;"	m	struct:llvm::RVGPUResourceUsageAnalysis::SIFunctionResourceInfo	typeref:typename:int32_t
NumVGPR	SIProgramInfo.h	/^    uint32_t NumVGPR = 0;$/;"	m	struct:llvm::SIProgramInfo	typeref:typename:uint32_t
NumVGPRs	RVRegisterInfo.cpp	/^    unsigned NumVGPRs;$/;"	m	struct:llvm::SGPRSpillBuilder::PerVGPRData	typeref:typename:unsigned	file:
NumVGPRsForWavesPerEU	SIProgramInfo.h	/^    uint32_t NumVGPRsForWavesPerEU = 0;$/;"	m	struct:llvm::SIProgramInfo	typeref:typename:uint32_t
NumVirtualVGPRSpillLanes	RVMachineFunctionInfo.h	/^  unsigned NumVirtualVGPRSpillLanes = 0;$/;"	m	class:llvm::RVMachineFunctionInfo	typeref:typename:unsigned
NumZCompareArgs	RVGPUInstrInfo.h	/^  uint8_t NumZCompareArgs;$/;"	m	struct:llvm::RVGPU::ImageDimIntrinsicInfo	typeref:typename:uint8_t
OCLVer	RVGPUUnifyMetadata.cpp	/^    const char OCLVer[]             = "opencl.ocl.version";$/;"	v	namespace:__anon26dde6960111::kOCLMD	typeref:typename:const char[]
OFF	SIDefines.h	/^  OFF = 0,$/;"	e	enum:llvm::RVGPU::VGPRIndexMode::EncBits
OFFSET_DEFAULT_	SIDefines.h	/^  OFFSET_DEFAULT_ = 0,$/;"	e	enum:llvm::RVGPU::Hwreg::Offset
OFFSET_MASK_	SIDefines.h	/^  OFFSET_MASK_ = (((1 << OFFSET_WIDTH_) - 1) << OFFSET_SHIFT_),$/;"	e	enum:llvm::RVGPU::Hwreg::Offset
OFFSET_MEM_VIOL	SIDefines.h	/^  OFFSET_MEM_VIOL = 8,$/;"	e	enum:llvm::RVGPU::Hwreg::Offset
OFFSET_SHIFT_	SIDefines.h	/^  OFFSET_SHIFT_ = 6,$/;"	e	enum:llvm::RVGPU::Hwreg::Offset
OFFSET_WIDTH_	SIDefines.h	/^  OFFSET_WIDTH_ = 5,$/;"	e	enum:llvm::RVGPU::Hwreg::Offset
OPERAND_INLINE_SPLIT_BARRIER_INT32	SIDefines.h	/^  OPERAND_INLINE_SPLIT_BARRIER_INT32,$/;"	e	enum:llvm::RVGPU::OperandType
OPERAND_INPUT_MODS	SIDefines.h	/^  OPERAND_INPUT_MODS,$/;"	e	enum:llvm::RVGPU::OperandType
OPERAND_KIMM16	SIDefines.h	/^  OPERAND_KIMM16,$/;"	e	enum:llvm::RVGPU::OperandType
OPERAND_KIMM32	SIDefines.h	/^  OPERAND_KIMM32,$/;"	e	enum:llvm::RVGPU::OperandType
OPERAND_KIMM_FIRST	SIDefines.h	/^  OPERAND_KIMM_FIRST = OPERAND_KIMM32,$/;"	e	enum:llvm::RVGPU::OperandType
OPERAND_KIMM_LAST	SIDefines.h	/^  OPERAND_KIMM_LAST = OPERAND_KIMM16$/;"	e	enum:llvm::RVGPU::OperandType
OPERAND_REG_IMM_FIRST	SIDefines.h	/^  OPERAND_REG_IMM_FIRST = OPERAND_REG_IMM_INT32,$/;"	e	enum:llvm::RVGPU::OperandType
OPERAND_REG_IMM_FP16	SIDefines.h	/^  OPERAND_REG_IMM_FP16,$/;"	e	enum:llvm::RVGPU::OperandType
OPERAND_REG_IMM_FP16_DEFERRED	SIDefines.h	/^  OPERAND_REG_IMM_FP16_DEFERRED,$/;"	e	enum:llvm::RVGPU::OperandType
OPERAND_REG_IMM_FP32	SIDefines.h	/^  OPERAND_REG_IMM_FP32,$/;"	e	enum:llvm::RVGPU::OperandType
OPERAND_REG_IMM_FP32_DEFERRED	SIDefines.h	/^  OPERAND_REG_IMM_FP32_DEFERRED,$/;"	e	enum:llvm::RVGPU::OperandType
OPERAND_REG_IMM_FP64	SIDefines.h	/^  OPERAND_REG_IMM_FP64,$/;"	e	enum:llvm::RVGPU::OperandType
OPERAND_REG_IMM_INT16	SIDefines.h	/^  OPERAND_REG_IMM_INT16,$/;"	e	enum:llvm::RVGPU::OperandType
OPERAND_REG_IMM_INT32	SIDefines.h	/^  OPERAND_REG_IMM_INT32 = MCOI::OPERAND_FIRST_TARGET,$/;"	e	enum:llvm::RVGPU::OperandType
OPERAND_REG_IMM_INT64	SIDefines.h	/^  OPERAND_REG_IMM_INT64,$/;"	e	enum:llvm::RVGPU::OperandType
OPERAND_REG_IMM_LAST	SIDefines.h	/^  OPERAND_REG_IMM_LAST = OPERAND_REG_IMM_V2FP32,$/;"	e	enum:llvm::RVGPU::OperandType
OPERAND_REG_IMM_V2FP16	SIDefines.h	/^  OPERAND_REG_IMM_V2FP16,$/;"	e	enum:llvm::RVGPU::OperandType
OPERAND_REG_IMM_V2FP32	SIDefines.h	/^  OPERAND_REG_IMM_V2FP32,$/;"	e	enum:llvm::RVGPU::OperandType
OPERAND_REG_IMM_V2INT16	SIDefines.h	/^  OPERAND_REG_IMM_V2INT16,$/;"	e	enum:llvm::RVGPU::OperandType
OPERAND_REG_IMM_V2INT32	SIDefines.h	/^  OPERAND_REG_IMM_V2INT32,$/;"	e	enum:llvm::RVGPU::OperandType
OPERAND_REG_INLINE_AC_FIRST	SIDefines.h	/^  OPERAND_REG_INLINE_AC_FIRST = OPERAND_REG_INLINE_AC_INT16,$/;"	e	enum:llvm::RVGPU::OperandType
OPERAND_REG_INLINE_AC_FP16	SIDefines.h	/^  OPERAND_REG_INLINE_AC_FP16,$/;"	e	enum:llvm::RVGPU::OperandType
OPERAND_REG_INLINE_AC_FP32	SIDefines.h	/^  OPERAND_REG_INLINE_AC_FP32,$/;"	e	enum:llvm::RVGPU::OperandType
OPERAND_REG_INLINE_AC_FP64	SIDefines.h	/^  OPERAND_REG_INLINE_AC_FP64,$/;"	e	enum:llvm::RVGPU::OperandType
OPERAND_REG_INLINE_AC_INT16	SIDefines.h	/^  OPERAND_REG_INLINE_AC_INT16,$/;"	e	enum:llvm::RVGPU::OperandType
OPERAND_REG_INLINE_AC_INT32	SIDefines.h	/^  OPERAND_REG_INLINE_AC_INT32,$/;"	e	enum:llvm::RVGPU::OperandType
OPERAND_REG_INLINE_AC_LAST	SIDefines.h	/^  OPERAND_REG_INLINE_AC_LAST = OPERAND_REG_INLINE_AC_V2FP32,$/;"	e	enum:llvm::RVGPU::OperandType
OPERAND_REG_INLINE_AC_V2FP16	SIDefines.h	/^  OPERAND_REG_INLINE_AC_V2FP16,$/;"	e	enum:llvm::RVGPU::OperandType
OPERAND_REG_INLINE_AC_V2FP32	SIDefines.h	/^  OPERAND_REG_INLINE_AC_V2FP32,$/;"	e	enum:llvm::RVGPU::OperandType
OPERAND_REG_INLINE_AC_V2INT16	SIDefines.h	/^  OPERAND_REG_INLINE_AC_V2INT16,$/;"	e	enum:llvm::RVGPU::OperandType
OPERAND_REG_INLINE_AC_V2INT32	SIDefines.h	/^  OPERAND_REG_INLINE_AC_V2INT32,$/;"	e	enum:llvm::RVGPU::OperandType
OPERAND_REG_INLINE_C_FIRST	SIDefines.h	/^  OPERAND_REG_INLINE_C_FIRST = OPERAND_REG_INLINE_C_INT16,$/;"	e	enum:llvm::RVGPU::OperandType
OPERAND_REG_INLINE_C_FP16	SIDefines.h	/^  OPERAND_REG_INLINE_C_FP16,$/;"	e	enum:llvm::RVGPU::OperandType
OPERAND_REG_INLINE_C_FP32	SIDefines.h	/^  OPERAND_REG_INLINE_C_FP32,$/;"	e	enum:llvm::RVGPU::OperandType
OPERAND_REG_INLINE_C_FP64	SIDefines.h	/^  OPERAND_REG_INLINE_C_FP64,$/;"	e	enum:llvm::RVGPU::OperandType
OPERAND_REG_INLINE_C_INT16	SIDefines.h	/^  OPERAND_REG_INLINE_C_INT16,$/;"	e	enum:llvm::RVGPU::OperandType
OPERAND_REG_INLINE_C_INT32	SIDefines.h	/^  OPERAND_REG_INLINE_C_INT32,$/;"	e	enum:llvm::RVGPU::OperandType
OPERAND_REG_INLINE_C_INT64	SIDefines.h	/^  OPERAND_REG_INLINE_C_INT64,$/;"	e	enum:llvm::RVGPU::OperandType
OPERAND_REG_INLINE_C_LAST	SIDefines.h	/^  OPERAND_REG_INLINE_C_LAST = OPERAND_REG_INLINE_AC_V2FP32,$/;"	e	enum:llvm::RVGPU::OperandType
OPERAND_REG_INLINE_C_V2FP16	SIDefines.h	/^  OPERAND_REG_INLINE_C_V2FP16,$/;"	e	enum:llvm::RVGPU::OperandType
OPERAND_REG_INLINE_C_V2FP32	SIDefines.h	/^  OPERAND_REG_INLINE_C_V2FP32,$/;"	e	enum:llvm::RVGPU::OperandType
OPERAND_REG_INLINE_C_V2INT16	SIDefines.h	/^  OPERAND_REG_INLINE_C_V2INT16,$/;"	e	enum:llvm::RVGPU::OperandType
OPERAND_REG_INLINE_C_V2INT32	SIDefines.h	/^  OPERAND_REG_INLINE_C_V2INT32,$/;"	e	enum:llvm::RVGPU::OperandType
OPERAND_SDWA_VOPC_DST	SIDefines.h	/^  OPERAND_SDWA_VOPC_DST,$/;"	e	enum:llvm::RVGPU::OperandType
OPERAND_SRC_FIRST	SIDefines.h	/^  OPERAND_SRC_FIRST = OPERAND_REG_IMM_INT32,$/;"	e	enum:llvm::RVGPU::OperandType
OPERAND_SRC_LAST	SIDefines.h	/^  OPERAND_SRC_LAST = OPERAND_REG_INLINE_C_LAST,$/;"	e	enum:llvm::RVGPU::OperandType
OPR_ID_DUPLICATE	Utils/RVGPUAsmUtils.h	/^const int OPR_ID_DUPLICATE = -3;$/;"	v	namespace:llvm::RVGPU	typeref:typename:const int
OPR_ID_UNKNOWN	Utils/RVGPUAsmUtils.h	/^const int OPR_ID_UNKNOWN = -1;$/;"	v	namespace:llvm::RVGPU	typeref:typename:const int
OPR_ID_UNSUPPORTED	Utils/RVGPUAsmUtils.h	/^const int OPR_ID_UNSUPPORTED = -2;$/;"	v	namespace:llvm::RVGPU	typeref:typename:const int
OPR_SIZE	Utils/RVGPUAsmUtils.cpp	/^const int OPR_SIZE = static_cast<int>($/;"	v	namespace:llvm::RVGPU::Hwreg	typeref:typename:const int
OPR_VAL_INVALID	Utils/RVGPUAsmUtils.h	/^const int OPR_VAL_INVALID = -4;$/;"	v	namespace:llvm::RVGPU	typeref:typename:const int
OPW1024	Disassembler/RVGPUDisassembler.h	/^    OPW1024,$/;"	e	enum:llvm::RVGPUDisassembler::OpWidthTy
OPW128	Disassembler/RVGPUDisassembler.h	/^    OPW128,$/;"	e	enum:llvm::RVGPUDisassembler::OpWidthTy
OPW16	Disassembler/RVGPUDisassembler.h	/^    OPW16,$/;"	e	enum:llvm::RVGPUDisassembler::OpWidthTy
OPW160	Disassembler/RVGPUDisassembler.h	/^    OPW160,$/;"	e	enum:llvm::RVGPUDisassembler::OpWidthTy
OPW256	Disassembler/RVGPUDisassembler.h	/^    OPW256,$/;"	e	enum:llvm::RVGPUDisassembler::OpWidthTy
OPW288	Disassembler/RVGPUDisassembler.h	/^    OPW288,$/;"	e	enum:llvm::RVGPUDisassembler::OpWidthTy
OPW32	Disassembler/RVGPUDisassembler.h	/^    OPW32,$/;"	e	enum:llvm::RVGPUDisassembler::OpWidthTy
OPW320	Disassembler/RVGPUDisassembler.h	/^    OPW320,$/;"	e	enum:llvm::RVGPUDisassembler::OpWidthTy
OPW352	Disassembler/RVGPUDisassembler.h	/^    OPW352,$/;"	e	enum:llvm::RVGPUDisassembler::OpWidthTy
OPW384	Disassembler/RVGPUDisassembler.h	/^    OPW384,$/;"	e	enum:llvm::RVGPUDisassembler::OpWidthTy
OPW512	Disassembler/RVGPUDisassembler.h	/^    OPW512,$/;"	e	enum:llvm::RVGPUDisassembler::OpWidthTy
OPW64	Disassembler/RVGPUDisassembler.h	/^    OPW64,$/;"	e	enum:llvm::RVGPUDisassembler::OpWidthTy
OPW96	Disassembler/RVGPUDisassembler.h	/^    OPW96,$/;"	e	enum:llvm::RVGPUDisassembler::OpWidthTy
OPWV216	Disassembler/RVGPUDisassembler.h	/^    OPWV216,$/;"	e	enum:llvm::RVGPUDisassembler::OpWidthTy
OPWV232	Disassembler/RVGPUDisassembler.h	/^    OPWV232,$/;"	e	enum:llvm::RVGPUDisassembler::OpWidthTy
OPW_FIRST_	Disassembler/RVGPUDisassembler.h	/^    OPW_FIRST_ = OPW32$/;"	e	enum:llvm::RVGPUDisassembler::OpWidthTy
OPW_LAST_	Disassembler/RVGPUDisassembler.h	/^    OPW_LAST_,$/;"	e	enum:llvm::RVGPUDisassembler::OpWidthTy
OP_GS_CUT	SIDefines.h	/^  OP_GS_CUT = 1,$/;"	e	enum:llvm::RVGPU::SendMsg::Op
OP_GS_EMIT	SIDefines.h	/^  OP_GS_EMIT = 2,$/;"	e	enum:llvm::RVGPU::SendMsg::Op
OP_GS_EMIT_CUT	SIDefines.h	/^  OP_GS_EMIT_CUT = 3,$/;"	e	enum:llvm::RVGPU::SendMsg::Op
OP_GS_FIRST_	SIDefines.h	/^  OP_GS_FIRST_ = OP_GS_NOP,$/;"	e	enum:llvm::RVGPU::SendMsg::Op
OP_GS_LAST_	SIDefines.h	/^  OP_GS_LAST_,$/;"	e	enum:llvm::RVGPU::SendMsg::Op
OP_GS_NOP	SIDefines.h	/^  OP_GS_NOP = 0,$/;"	e	enum:llvm::RVGPU::SendMsg::Op
OP_MASK_	SIDefines.h	/^  OP_MASK_ = (((1 << OP_WIDTH_) - 1) << OP_SHIFT_),$/;"	e	enum:llvm::RVGPU::SendMsg::Op
OP_NONE_	SIDefines.h	/^  OP_NONE_ = 0,$/;"	e	enum:llvm::RVGPU::SendMsg::Op
OP_SEL_0	SIDefines.h	/^   OP_SEL_0 = 1 << 2,$/;"	e	enum:llvm::SISrcMods::__anon1f24a7950303
OP_SEL_1	SIDefines.h	/^   OP_SEL_1 = 1 << 3,$/;"	e	enum:llvm::SISrcMods::__anon1f24a7950303
OP_SEL_HI_0	SIDefines.h	/^  OP_SEL_HI_0 = UINT64_C(1) << 59,$/;"	e	enum:llvm::RVGPU::VOP3PEncoding::OpSel
OP_SEL_HI_1	SIDefines.h	/^  OP_SEL_HI_1 = UINT64_C(1) << 60,$/;"	e	enum:llvm::RVGPU::VOP3PEncoding::OpSel
OP_SEL_HI_2	SIDefines.h	/^  OP_SEL_HI_2 = UINT64_C(1) << 14,$/;"	e	enum:llvm::RVGPU::VOP3PEncoding::OpSel
OP_SHIFT_	SIDefines.h	/^  OP_SHIFT_ = 4,$/;"	e	enum:llvm::RVGPU::SendMsg::Op
OP_SYS_ECC_ERR_INTERRUPT	SIDefines.h	/^  OP_SYS_ECC_ERR_INTERRUPT = 1,$/;"	e	enum:llvm::RVGPU::SendMsg::Op
OP_SYS_FIRST_	SIDefines.h	/^  OP_SYS_FIRST_ = OP_SYS_ECC_ERR_INTERRUPT,$/;"	e	enum:llvm::RVGPU::SendMsg::Op
OP_SYS_HOST_TRAP_ACK	SIDefines.h	/^  OP_SYS_HOST_TRAP_ACK = 3,$/;"	e	enum:llvm::RVGPU::SendMsg::Op
OP_SYS_LAST_	SIDefines.h	/^  OP_SYS_LAST_,$/;"	e	enum:llvm::RVGPU::SendMsg::Op
OP_SYS_REG_RD	SIDefines.h	/^  OP_SYS_REG_RD = 2,$/;"	e	enum:llvm::RVGPU::SendMsg::Op
OP_SYS_TTRACE_PC	SIDefines.h	/^  OP_SYS_TTRACE_PC = 4,$/;"	e	enum:llvm::RVGPU::SendMsg::Op
OP_UNKNOWN_	SIDefines.h	/^  OP_UNKNOWN_ = -1,$/;"	e	enum:llvm::RVGPU::SendMsg::Op
OP_WIDTH_	SIDefines.h	/^  OP_WIDTH_ = 3,$/;"	e	enum:llvm::RVGPU::SendMsg::Op
OS	MCTargetDesc/RVGPUTargetStreamer.h	/^  formatted_raw_ostream &OS;$/;"	m	class:llvm::RVGPUTargetAsmStreamer	typeref:typename:formatted_raw_ostream &
OSABI	MCTargetDesc/RVGPUAsmBackend.cpp	/^  uint8_t OSABI = ELF::ELFOSABI_NONE;$/;"	m	class:__anon6b905a380211::ELFRVGPUAsmBackend	typeref:typename:uint8_t	file:
OTHER	RVGPUInsertDelayAlu.cpp	/^  enum DelayType { VALU, TRANS, SALU, OTHER };$/;"	e	enum:__anonc7296b900111::RVGPUInsertDelayAlu::DelayType	file:
OTHER	SIMemoryLegalizer.cpp	/^  OTHER = 1u << 4,$/;"	e	enum:__anon46517b8a0111::SIAtomicAddrSpace	file:
OccInitialSchedule	GCNSchedStrategy.h	/^  OccInitialSchedule = 0,$/;"	e	enum:llvm::GCNSchedStageID
OccInitialScheduleStage	GCNSchedStrategy.h	/^  OccInitialScheduleStage(GCNSchedStageID StageID, GCNScheduleDAGMILive &DAG)$/;"	f	class:llvm::OccInitialScheduleStage
OccInitialScheduleStage	GCNSchedStrategy.h	/^class OccInitialScheduleStage : public GCNSchedStage {$/;"	c	namespace:llvm
Occupancy	RVMachineFunctionInfo.h	/^  unsigned Occupancy = 0;$/;"	m	struct:llvm::yaml::RVMachineFunctionInfo	typeref:typename:unsigned
Occupancy	RVMachineFunctionInfo.h	/^  unsigned Occupancy;$/;"	m	class:llvm::RVMachineFunctionInfo	typeref:typename:unsigned
Occupancy	SIProgramInfo.h	/^    uint32_t Occupancy = 0;$/;"	m	struct:llvm::SIProgramInfo	typeref:typename:uint32_t
Off	Utils/RVGPUBaseInfo.h	/^  Off,$/;"	e	enum:llvm::RVGPU::IsaInfo::TargetIDSetting
Offset	GCNPreRALongBranchReg.cpp	/^    uint64_t Offset = 0;$/;"	m	struct:__anon4605b2240111::GCNPreRALongBranchReg::BasicBlockInfo	typeref:typename:uint64_t	file:
Offset	RVGPUInstructionSelector.h	/^    int64_t Offset = 0;$/;"	m	struct:llvm::RVGPUInstructionSelector::MUBUFAddressData	typeref:typename:int64_t
Offset	RVGPUPerfHintAnalysis.cpp	/^    int64_t Offset = 0;$/;"	m	struct:__anon406ad74e0111::RVGPUPerfHint::MemAccessInfo	typeref:typename:int64_t	file:
Offset	SIDefines.h	/^enum Offset : unsigned { \/\/ Offset, (5) [10:6]$/;"	g	namespace:llvm::RVGPU::Hwreg	typeref:typename:unsigned
Offset	SILoadStoreOptimizer.cpp	/^    int64_t Offset = 0;$/;"	m	struct:__anon677101620111::SILoadStoreOptimizer::MemAddress	typeref:typename:int64_t	file:
Offset	SILoadStoreOptimizer.cpp	/^    unsigned Offset;$/;"	m	struct:__anon677101620111::SILoadStoreOptimizer::CombineInfo	typeref:typename:unsigned	file:
Offset	Utils/RVGPUBaseInfo.h	/^  MIMGBaseOpcode Offset;$/;"	m	struct:llvm::RVGPU::MIMGOffsetMappingInfo	typeref:typename:MIMGBaseOpcode
OffsetIndex	RVGPUInstrInfo.h	/^  uint8_t OffsetIndex;$/;"	m	struct:llvm::RVGPU::ImageDimIntrinsicInfo	typeref:typename:uint8_t
Offset_COV5	SIDefines.h	/^enum Offset_COV5 : unsigned {$/;"	g	namespace:llvm::RVGPU::ImplicitArg	typeref:typename:unsigned
Offsets	RVInstrInfo.h	/^enum Offsets {$/;"	g	namespace:llvm::SI::KernelInputOffsets
OldLB	SIInsertWaitcnts.cpp	/^    unsigned OldLB;$/;"	m	struct:__anona6cbb7940211::WaitcntBrackets::MergeInfo	typeref:typename:unsigned	file:
On	Utils/RVGPUBaseInfo.h	/^  On$/;"	e	enum:llvm::RVGPU::IsaInfo::TargetIDSetting
Op	RVGPUAtomicOptimizer.cpp	/^  AtomicRMWInst::BinOp Op;$/;"	m	struct:__anon7bca098a0111::ReplacementInfo	typeref:typename:AtomicRMWInst::BinOp	file:
Op	SIDefines.h	/^enum Op { \/\/ Both GS and SYS operation IDs.$/;"	g	namespace:llvm::RVGPU::SendMsg
OpGsSymbolic	Utils/RVGPUAsmUtils.cpp	/^const char *const OpGsSymbolic[OP_GS_LAST_] = {$/;"	v	namespace:llvm::RVGPU::SendMsg	typeref:typename:const char * const[]
OpRegBankEntry	RVGPURegisterBankInfo.h	/^  struct OpRegBankEntry {$/;"	s	class:llvm::RVGPURegisterBankInfo
OpSel	Disassembler/RVGPUDisassembler.cpp	/^  unsigned OpSel = 0;$/;"	m	struct:VOPModifiers	typeref:typename:unsigned	file:
OpSel	SIDefines.h	/^enum OpSel : uint64_t {$/;"	g	namespace:llvm::RVGPU::VOP3PEncoding	typeref:typename:uint64_t
OpSelHi	Disassembler/RVGPUDisassembler.cpp	/^  unsigned OpSelHi = 0;$/;"	m	struct:VOPModifiers	typeref:typename:unsigned	file:
OpSysSymbolic	Utils/RVGPUAsmUtils.cpp	/^const char *const OpSysSymbolic[OP_SYS_LAST_] = {$/;"	v	namespace:llvm::RVGPU::SendMsg	typeref:typename:const char * const[]
OpToFold	SIFoldOperands.cpp	/^    MachineOperand *OpToFold;$/;"	m	union:__anon07e514130111::FoldCandidate::__anon07e51413020a	typeref:typename:MachineOperand *	file:
OpWidthTy	Disassembler/RVGPUDisassembler.h	/^  enum OpWidthTy {$/;"	g	class:llvm::RVGPUDisassembler
OpX	Utils/RVGPUBaseInfo.cpp	/^  uint16_t OpX;$/;"	m	struct:llvm::RVGPU::VOPDInfo	typeref:typename:uint16_t	file:
OpY	Utils/RVGPUBaseInfo.cpp	/^  uint16_t OpY;$/;"	m	struct:llvm::RVGPU::VOPDInfo	typeref:typename:uint16_t	file:
Opc	RVGPURegBankCombiner.cpp	/^    unsigned Opc;$/;"	m	struct:__anon00ae19330111::RVGPURegBankCombinerImpl::Med3MatchInfo	typeref:typename:unsigned	file:
Opcode	Utils/RVGPUBaseInfo.cpp	/^  uint16_t Opcode;$/;"	m	struct:llvm::RVGPU::MTBUFInfo	typeref:typename:uint16_t	file:
Opcode	Utils/RVGPUBaseInfo.cpp	/^  uint16_t Opcode;$/;"	m	struct:llvm::RVGPU::MUBUFInfo	typeref:typename:uint16_t	file:
Opcode	Utils/RVGPUBaseInfo.cpp	/^  uint16_t Opcode;$/;"	m	struct:llvm::RVGPU::SMInfo	typeref:typename:uint16_t	file:
Opcode	Utils/RVGPUBaseInfo.cpp	/^  uint16_t Opcode;$/;"	m	struct:llvm::RVGPU::VOPC64DPPInfo	typeref:typename:uint16_t	file:
Opcode	Utils/RVGPUBaseInfo.cpp	/^  uint16_t Opcode;$/;"	m	struct:llvm::RVGPU::VOPDInfo	typeref:typename:uint16_t	file:
Opcode	Utils/RVGPUBaseInfo.cpp	/^  uint16_t Opcode;$/;"	m	struct:llvm::RVGPU::VOPInfo	typeref:typename:uint16_t	file:
Opcode	Utils/RVGPUBaseInfo.cpp	/^  uint16_t Opcode;$/;"	m	struct:llvm::RVGPU::VOPTrue16Info	typeref:typename:uint16_t	file:
Opcode	Utils/RVGPUBaseInfo.h	/^  uint16_t Opcode;$/;"	m	struct:llvm::RVGPU::MAIInstInfo	typeref:typename:uint16_t
Opcode	Utils/RVGPUBaseInfo.h	/^  uint16_t Opcode;$/;"	m	struct:llvm::RVGPU::MIMGInfo	typeref:typename:uint16_t
Opcode2Addr	Utils/RVGPUBaseInfo.h	/^  unsigned Opcode2Addr;$/;"	m	struct:llvm::RVGPU::WMMAOpcodeMappingInfo	typeref:typename:unsigned
Opcode3Addr	Utils/RVGPUBaseInfo.h	/^  unsigned Opcode3Addr;$/;"	m	struct:llvm::RVGPU::WMMAOpcodeMappingInfo	typeref:typename:unsigned
OperandIndices	AsmParser/RVGPUAsmParser.cpp	/^using OperandIndices = SmallVector<int16_t, MAX_SRC_OPERANDS_NUM>;$/;"	t	typeref:typename:SmallVector<int16_t,MAX_SRC_OPERANDS_NUM>	file:
OperandInfoTy	AsmParser/RVGPUAsmParser.cpp	/^    OperandInfoTy(int64_t Id_) : Id(Id_) {}$/;"	f	struct:__anon672fa8550111::RVGPUAsmParser::OperandInfoTy	file:
OperandInfoTy	AsmParser/RVGPUAsmParser.cpp	/^  struct OperandInfoTy {$/;"	s	class:__anon672fa8550111::RVGPUAsmParser	file:
OperandMode	AsmParser/RVGPUAsmParser.cpp	/^  enum OperandMode {$/;"	g	class:__anon672fa8550111::RVGPUAsmParser	file:
OperandMode_Default	AsmParser/RVGPUAsmParser.cpp	/^    OperandMode_Default,$/;"	e	enum:__anon672fa8550111::RVGPUAsmParser::OperandMode	file:
OperandMode_NSA	AsmParser/RVGPUAsmParser.cpp	/^    OperandMode_NSA,$/;"	e	enum:__anon672fa8550111::RVGPUAsmParser::OperandMode	file:
OperandType	SIDefines.h	/^enum OperandType : unsigned {$/;"	g	namespace:llvm::RVGPU	typeref:typename:unsigned
Opr	Utils/RVGPUAsmUtils.cpp	/^const CustomOperand<const MCSubtargetInfo &> Opr[] = {$/;"	v	namespace:llvm::RVGPU::Hwreg	typeref:typename:const CustomOperand<const MCSubtargetInfo &>[]
OptExecMaskPreRA	RVGPUTargetMachine.cpp	/^OptExecMaskPreRA("rvgpu-opt-exec-mask-pre-ra", cl::Hidden,$/;"	v	typeref:typename:cl::opt<bool>	file:
OptNone	SIInsertWaitcnts.cpp	/^  bool OptNone;$/;"	m	class:__anona6cbb7940211::SIInsertWaitcnts	typeref:typename:bool	file:
OptVGPRLiveRange	RVGPUTargetMachine.cpp	/^static cl::opt<bool> OptVGPRLiveRange($/;"	v	typeref:typename:cl::opt<bool>	file:
OptimizeAgain	SILoadStoreOptimizer.cpp	/^  bool OptimizeAgain;$/;"	m	class:__anon677101620111::SILoadStoreOptimizer	typeref:typename:bool	file:
OptionalImmIndexMap	AsmParser/RVGPUAsmParser.cpp	/^  using OptionalImmIndexMap = std::map<RVGPUOperand::ImmTy, unsigned>;$/;"	t	class:__anon672fa8550111::RVGPUAsmParser	typeref:typename:std::map<RVGPUOperand::ImmTy,unsigned>	file:
OrN2Op	SILowerI1Copies.h	/^  unsigned OrN2Op;$/;"	m	class:llvm::PhiLoweringHelper	typeref:typename:unsigned
OrOp	SILowerI1Copies.h	/^  unsigned OrOp;$/;"	m	class:llvm::PhiLoweringHelper	typeref:typename:unsigned
OrOpc	SILowerControlFlow.cpp	/^  unsigned OrOpc;$/;"	m	class:__anon0ce7c3340111::SILowerControlFlow	typeref:typename:unsigned	file:
OrSaveExecOpc	SILowerControlFlow.cpp	/^  unsigned OrSaveExecOpc;$/;"	m	class:__anon0ce7c3340111::SILowerControlFlow	typeref:typename:unsigned	file:
OrSaveExecOpc	SIOptimizeExecMaskingPreRA.cpp	/^  unsigned OrSaveExecOpc;$/;"	m	class:__anon5760078c0111::SIOptimizeExecMaskingPreRA	typeref:typename:unsigned	file:
OrTermrOpc	SILowerControlFlow.cpp	/^  unsigned OrTermrOpc;$/;"	m	class:__anon0ce7c3340111::SILowerControlFlow	typeref:typename:unsigned	file:
OrXors	SIOptimizeExecMasking.cpp	/^  SmallVector<std::pair<MachineInstr *, MachineInstr *>, 1> OrXors;$/;"	m	class:__anon15773df20111::SIOptimizeExecMasking	typeref:typename:SmallVector<std::pair<MachineInstr *,MachineInstr * >,1>	file:
Order	SILoadStoreOptimizer.cpp	/^    unsigned Order;$/;"	m	struct:__anon677101620111::SILoadStoreOptimizer::CombineInfo	typeref:typename:unsigned	file:
Ordering	SIMemoryLegalizer.cpp	/^  AtomicOrdering Ordering = AtomicOrdering::NotAtomic;$/;"	m	class:__anon46517b8a0111::SIMemOpInfo	typeref:typename:AtomicOrdering	file:
OrderingAddrSpace	SIMemoryLegalizer.cpp	/^  SIAtomicAddrSpace OrderingAddrSpace = SIAtomicAddrSpace::NONE;$/;"	m	class:__anon46517b8a0111::SIMemOpInfo	typeref:typename:SIAtomicAddrSpace	file:
Origin	RVGPUPreLegalizerCombiner.cpp	/^    Register Origin;$/;"	m	struct:__anonb779c2ff0111::RVGPUPreLegalizerCombinerImpl::ClampI64ToI16MatchInfo	typeref:typename:Register	file:
OtherLB	SIInsertWaitcnts.cpp	/^    unsigned OtherLB;$/;"	m	struct:__anona6cbb7940211::WaitcntBrackets::MergeInfo	typeref:typename:unsigned	file:
OtherShift	SIInsertWaitcnts.cpp	/^    unsigned OtherShift;$/;"	m	struct:__anona6cbb7940211::WaitcntBrackets::MergeInfo	typeref:typename:unsigned	file:
OutNeeds	SIWholeQuadMode.cpp	/^  char OutNeeds = 0;$/;"	m	struct:__anon41aff2810111::BlockInfo	typeref:typename:char	file:
OutNeeds	SIWholeQuadMode.cpp	/^  char OutNeeds = 0;$/;"	m	struct:__anon41aff2810111::InstrInfo	typeref:typename:char	file:
OutOfRangeError	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::OutOfRangeError(SMRange Range) {$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
OverrideLegacyStrategy	GCNIterativeScheduler.cpp	/^  OverrideLegacyStrategy(Region &R,$/;"	f	class:GCNIterativeScheduler::OverrideLegacyStrategy	file:
OverrideLegacyStrategy	GCNIterativeScheduler.cpp	/^class GCNIterativeScheduler::OverrideLegacyStrategy {$/;"	c	class:GCNIterativeScheduler	file:
PALMetadata	MCTargetDesc/RVGPUTargetStreamer.h	/^  RVGPUPALMetadata PALMetadata;$/;"	m	class:llvm::RVGPUTargetStreamer	typeref:typename:RVGPUPALMetadata
PARSECODEPROP	Utils/RVKernelCodeTInfo.h	/^#define PARSECODEPROP(/;"	d
PARSECOMP	Utils/RVKernelCodeTInfo.h	/^#define PARSECOMP(/;"	d
PARSED_DST_IDX	Utils/RVGPUBaseInfo.h	/^  static constexpr unsigned PARSED_DST_IDX[] = {1, 1,$/;"	m	class:llvm::RVGPU::VOPD::ComponentLayout	typeref:typename:unsigned[]
PARSE_BITS_ENTRY	AsmParser/RVGPUAsmParser.cpp	/^#define PARSE_BITS_ENTRY(/;"	d	file:
PASS_NAME	SIMemoryLegalizer.cpp	/^#define PASS_NAME /;"	d	file:
PC_ADD_REL_OFFSET	RVGPUISelLowering.h	/^  PC_ADD_REL_OFFSET,$/;"	e	enum:llvm::RVGPUISD::NodeType
PDT	SIInsertWaitcnts.cpp	/^  MachinePostDominatorTree *PDT;$/;"	m	class:__anona6cbb7940211::SIInsertWaitcnts	typeref:typename:MachinePostDominatorTree *	file:
PDT	SILowerI1Copies.cpp	/^  MachinePostDominatorTree &PDT;$/;"	m	class:__anone16a92980111::LoopFinder	typeref:typename:MachinePostDominatorTree &	file:
PDT	SILowerI1Copies.cpp	/^  MachinePostDominatorTree &PDT;$/;"	m	class:__anone16a92980111::PhiIncomingAnalysis	typeref:typename:MachinePostDominatorTree &	file:
PDT	SILowerI1Copies.h	/^  MachinePostDominatorTree *PDT = nullptr;$/;"	m	class:llvm::PhiLoweringHelper	typeref:typename:MachinePostDominatorTree *
PDT	SIWholeQuadMode.cpp	/^  MachinePostDominatorTree *PDT;$/;"	m	class:__anon41aff2810111::SIWholeQuadMode	typeref:typename:MachinePostDominatorTree *	file:
PERM	RVGPUISelLowering.h	/^  PERM,$/;"	e	enum:llvm::RVGPUISD::NodeType
PFX	GCNRegPressure.cpp	/^#define PFX /;"	d	file:
PHIInfo	RVGPUMachineCFGStructurizer.cpp	/^  PHIInfoT PHIInfo;$/;"	m	class:__anon1695b1f50111::PHILinearize	typeref:typename:PHIInfoT	file:
PHIInfo	RVGPUMachineCFGStructurizer.cpp	/^  PHILinearize PHIInfo;$/;"	m	class:__anon1695b1f50311::RVGPUMachineCFGStructurizer	typeref:typename:PHILinearize	file:
PHIInfoElementT	RVGPUMachineCFGStructurizer.cpp	/^  using PHIInfoElementT = struct {$/;"	t	class:__anon1695b1f50111::PHILinearize	file:
PHIInfoT	RVGPUMachineCFGStructurizer.cpp	/^  using PHIInfoT = SmallPtrSet<PHIInfoElementT *, 2>;$/;"	t	class:__anon1695b1f50111::PHILinearize	typeref:typename:SmallPtrSet<PHIInfoElementT *,2>	file:
PHILinearize	RVGPUMachineCFGStructurizer.cpp	/^class PHILinearize {$/;"	c	namespace:__anon1695b1f50111	file:
PHILinearizeDestIterator	RVGPUMachineCFGStructurizer.cpp	/^  PHILinearizeDestIterator(PHILinearize::PHIInfoT::iterator I) : Iter(I) {}$/;"	f	class:__anon1695b1f50111::PHILinearizeDestIterator	file:
PHILinearizeDestIterator	RVGPUMachineCFGStructurizer.cpp	/^class PHILinearizeDestIterator {$/;"	c	namespace:__anon1695b1f50111	file:
PHINodes	SIFixSGPRCopies.cpp	/^  SmallVector<MachineInstr*, 4> PHINodes;$/;"	m	class:__anond27816180111::SIFixSGPRCopies	typeref:typename:SmallVector<MachineInstr *,4>	file:
PHISourceT	RVGPUMachineCFGStructurizer.cpp	/^  using PHISourceT = std::pair<unsigned, MachineBasicBlock *>;$/;"	t	class:__anon1695b1f50111::PHILinearize	typeref:typename:std::pair<unsigned,MachineBasicBlock * >	file:
PHISourcesT	RVGPUMachineCFGStructurizer.cpp	/^  using PHISourcesT = DenseSet<PHISourceT>;$/;"	t	class:__anon1695b1f50111::PHILinearize	typeref:typename:DenseSet<PHISourceT>	file:
PRINTCODEPROP	Utils/RVKernelCodeTInfo.h	/^#define PRINTCODEPROP(/;"	d
PRINTCOMP	Utils/RVKernelCodeTInfo.h	/^#define PRINTCOMP(/;"	d
PRINT_DIRECTIVE	Disassembler/RVGPUDisassembler.cpp	/^#define PRINT_DIRECTIVE(/;"	d	file:
PRINT_FIELD	MCTargetDesc/RVGPUTargetStreamer.cpp	/^#define PRINT_FIELD(/;"	d	file:
PRINT_PSEUDO_DIRECTIVE_COMMENT	Disassembler/RVGPUDisassembler.cpp	/^#define PRINT_PSEUDO_DIRECTIVE_COMMENT(/;"	d	file:
PRIVATE_BASE	RVGPUISelLowering.h	/^    PRIVATE_BASE,$/;"	e	enum:llvm::RVGPUTargetLowering::ImplicitParameter
PRIVATE_BASE_OFFSET	SIDefines.h	/^  PRIVATE_BASE_OFFSET = 192,$/;"	e	enum:llvm::RVGPU::ImplicitArg::Offset_COV5
PRIVATE_SEGMENT_BUFFER	RVGPUArgumentUsageInfo.h	/^    PRIVATE_SEGMENT_BUFFER = 0,$/;"	e	enum:llvm::RVGPUFunctionArgInfo::PreloadedValue
PRIVATE_SEGMENT_WAVE_BYTE_OFFSET	RVGPUArgumentUsageInfo.h	/^    PRIVATE_SEGMENT_WAVE_BYTE_OFFSET = 14,$/;"	e	enum:llvm::RVGPUFunctionArgInfo::PreloadedValue
PSInputAddr	RVMachineFunctionInfo.h	/^  unsigned PSInputAddr = 0;$/;"	m	class:llvm::RVMachineFunctionInfo	typeref:typename:unsigned
PSInputAddr	RVMachineFunctionInfo.h	/^  unsigned PSInputAddr = 0;$/;"	m	struct:llvm::yaml::RVMachineFunctionInfo	typeref:typename:unsigned
PSInputEnable	RVMachineFunctionInfo.h	/^  unsigned PSInputEnable = 0;$/;"	m	class:llvm::RVMachineFunctionInfo	typeref:typename:unsigned
PSInputEnable	RVMachineFunctionInfo.h	/^  unsigned PSInputEnable = 0;$/;"	m	struct:llvm::yaml::RVMachineFunctionInfo	typeref:typename:unsigned
PSVImage	RVMachineFunctionInfo.h	/^    PSVImage = PseudoSourceValue::TargetCustom,$/;"	e	enum:llvm::RVGPUPseudoSourceValue::RVGPUPSVKind
P_INFINITY	SIDefines.h	/^  P_INFINITY = 1 << 9    \/\/ Positive infinity$/;"	e	enum:llvm::SIInstrFlags::ClassFlags
P_NORMAL	SIDefines.h	/^  P_NORMAL = 1 << 8,     \/\/ Positive normal$/;"	e	enum:llvm::SIInstrFlags::ClassFlags
P_SUBNORMAL	SIDefines.h	/^  P_SUBNORMAL = 1 << 7,  \/\/ Positive subnormal$/;"	e	enum:llvm::SIInstrFlags::ClassFlags
P_ZERO	SIDefines.h	/^  P_ZERO = 1 << 6,       \/\/ Positive zero$/;"	e	enum:llvm::SIInstrFlags::ClassFlags
Param	RVGPULibFunc.cpp	/^   unsigned char Param[5];$/;"	m	struct:__anona5afe38d0111::ManglingRule	typeref:typename:unsigned char[5]	file:
Param	RVGPULibFunc.h	/^  struct Param {$/;"	s	class:llvm::RVGPULibFuncBase
ParamIterator	RVGPULibFunc.cpp	/^  ParamIterator(const RVGPULibFunc::Param (&leads)[2],$/;"	f	class:__anona5afe38d0111::ParamIterator	file:
ParamIterator	RVGPULibFunc.cpp	/^class ParamIterator {$/;"	c	namespace:__anona5afe38d0111	file:
Parent	RVGPUMachineCFGStructurizer.cpp	/^  LinearizedRegion *Parent;$/;"	m	class:__anon1695b1f50211::LinearizedRegion	typeref:typename:LinearizedRegion *	file:
Parent	RVGPUMachineCFGStructurizer.cpp	/^  RegionMRT *Parent;$/;"	m	class:__anon1695b1f50211::MRT	typeref:typename:RegionMRT *	file:
ParseAsAbsoluteExpression	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::ParseAsAbsoluteExpression(uint32_t &Ret) {$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
ParseDirective	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::ParseDirective(AsmToken DirectiveID) {$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
ParseDirectiveHSACodeObjectISA	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::ParseDirectiveHSACodeObjectISA() {$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
ParseDirectiveHSACodeObjectVersion	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::ParseDirectiveHSACodeObjectVersion() {$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
ParseDirectiveHSAMetadata	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::ParseDirectiveHSAMetadata() {$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
ParseDirectiveISAVersion	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::ParseDirectiveISAVersion() {$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
ParseDirectiveMajorMinor	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::ParseDirectiveMajorMinor(uint32_t &Major,$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
ParseDirectivePALMetadata	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::ParseDirectivePALMetadata() {$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
ParseDirectivePALMetadataBegin	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::ParseDirectivePALMetadataBegin() {$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
ParseDirectiveRVGPUHsaKernel	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::ParseDirectiveRVGPUHsaKernel() {$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
ParseDirectiveRVGPULDS	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::ParseDirectiveRVGPULDS() {$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
ParseDirectiveRVGPUTarget	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::ParseDirectiveRVGPUTarget() {$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
ParseDirectiveRVHSAKernel	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::ParseDirectiveRVHSAKernel() {$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
ParseDirectiveRVKernelCodeT	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::ParseDirectiveRVKernelCodeT() {$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
ParseFx	Utils/RVKernelCodeTUtils.cpp	/^using ParseFx = bool(*)(rv_kernel_code_t &, MCAsmParser &MCParser,$/;"	t	file:
ParseInstruction	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::ParseInstruction(ParseInstructionInfo &Info,$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
ParseRVGPURegister	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::ParseRVGPURegister(RegisterKind &RegKind, unsigned &Reg,$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
ParseRVKernelCodeTValue	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::ParseRVKernelCodeTValue(StringRef ID,$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
ParseRegList	AsmParser/RVGPUAsmParser.cpp	/^unsigned RVGPUAsmParser::ParseRegList(RegisterKind &RegKind, unsigned &RegNum,$/;"	f	class:RVGPUAsmParser	typeref:typename:unsigned
ParseRegRange	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::ParseRegRange(unsigned &Num, unsigned &RegWidth) {$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
ParseRegister	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::ParseRegister(MCRegister &RegNo, SMLoc &StartLoc,$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
ParseRegularReg	AsmParser/RVGPUAsmParser.cpp	/^unsigned RVGPUAsmParser::ParseRegularReg(RegisterKind &RegKind,$/;"	f	class:RVGPUAsmParser	typeref:typename:unsigned
ParseSpecialReg	AsmParser/RVGPUAsmParser.cpp	/^unsigned RVGPUAsmParser::ParseSpecialReg(RegisterKind &RegKind,$/;"	f	class:RVGPUAsmParser	typeref:typename:unsigned
ParseToEndDirective	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::ParseToEndDirective(const char *AssemblerDirectiveBegin,$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
Parser	AsmParser/RVGPUAsmParser.cpp	/^  MCAsmParser &Parser;$/;"	m	class:__anon672fa8550111::RVGPUAsmParser	typeref:typename:MCAsmParser &	file:
PendingEvents	SIInsertWaitcnts.cpp	/^  unsigned PendingEvents = 0;$/;"	m	class:__anona6cbb7940211::WaitcntBrackets	typeref:typename:unsigned	file:
PendingQueue	GCNILPSched.cpp	/^  Queue PendingQueue;$/;"	m	class:__anonbd2d93ba0111::GCNILPScheduler	typeref:typename:Queue	file:
PerVGPR	RVRegisterInfo.cpp	/^    unsigned PerVGPR;$/;"	m	struct:llvm::SGPRSpillBuilder::PerVGPRData	typeref:typename:unsigned	file:
PerVGPRData	RVRegisterInfo.cpp	/^  struct PerVGPRData {$/;"	s	struct:llvm::SGPRSpillBuilder	file:
PerformDAGCombine	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::PerformDAGCombine(SDNode *N,$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
PerformDAGCombine	RVISelLowering.cpp	/^SDValue RVTargetLowering::PerformDAGCombine(SDNode *N,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
Phase2List	SIModeRegister.cpp	/^  std::queue<MachineBasicBlock *> Phase2List;$/;"	m	class:__anon070b45bc0111::SIModeRegister	typeref:typename:std::queue<MachineBasicBlock * >	file:
Phi	SIWholeQuadMode.cpp	/^    const VNInfo *Phi;$/;"	m	struct:SIWholeQuadMode::markDefs::PhiEntry	typeref:typename:const VNInfo *	file:
PhiEntry	SIWholeQuadMode.cpp	/^    PhiEntry(const VNInfo *Phi, unsigned PredIdx, LaneBitmask DefinedLanes)$/;"	f	struct:SIWholeQuadMode::markDefs::PhiEntry	file:
PhiEntry	SIWholeQuadMode.cpp	/^  struct PhiEntry {$/;"	s	function:SIWholeQuadMode::markDefs	file:
PhiIncomingAnalysis	SILowerI1Copies.cpp	/^  PhiIncomingAnalysis(MachinePostDominatorTree &PDT, const RVInstrInfo *TII)$/;"	f	class:__anone16a92980111::PhiIncomingAnalysis	file:
PhiIncomingAnalysis	SILowerI1Copies.cpp	/^class PhiIncomingAnalysis {$/;"	c	namespace:__anone16a92980111	file:
PhiLoweringHelper	SILowerI1Copies.cpp	/^PhiLoweringHelper::PhiLoweringHelper(MachineFunction *MF,$/;"	f	class:PhiLoweringHelper
PhiLoweringHelper	SILowerI1Copies.h	/^class PhiLoweringHelper {$/;"	c	namespace:llvm
PhiRegisters	SILowerI1Copies.h	/^  DenseSet<Register> PhiRegisters;$/;"	m	class:llvm::PhiLoweringHelper	typeref:typename:DenseSet<Register>
PipelineInstrs	RVGPUIGroupLP.cpp	/^  SmallVector<SUsToCandSGsVec, 4> PipelineInstrs;$/;"	m	class:__anon61b122dc0111::PipelineSolver	typeref:typename:SmallVector<SUsToCandSGsVec,4>	file:
PipelineSolver	RVGPUIGroupLP.cpp	/^  PipelineSolver(DenseMap<int, SmallVector<SchedGroup, 4>> &SyncedSchedGroups,$/;"	f	class:__anon61b122dc0111::PipelineSolver	file:
PipelineSolver	RVGPUIGroupLP.cpp	/^class PipelineSolver {$/;"	c	namespace:__anon61b122dc0111	file:
Position	SIMemoryLegalizer.cpp	/^enum class Position {$/;"	g	namespace:__anon46517b8a0111	file:
PostISelFolding	RVISelLowering.cpp	/^SDNode *RVTargetLowering::PostISelFolding(MachineSDNode *Node,$/;"	f	class:RVTargetLowering	typeref:typename:SDNode *
PostprocessISelDAG	RVGPUISelDAGToDAG.cpp	/^void RVGPUDAGToDAGISel::PostprocessISelDAG() {$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:void
PotentialMatches	SIPeepholeSDWA.cpp	/^  MapVector<MachineInstr *, SDWAOperandsVector> PotentialMatches;$/;"	m	class:__anon00bd52b30111::SIPeepholeSDWA	typeref:typename:MapVector<MachineInstr *,SDWAOperandsVector>	file:
PreEmitNoops	GCNHazardRecognizer.cpp	/^unsigned GCNHazardRecognizer::PreEmitNoops(MachineInstr *MI) {$/;"	f	class:GCNHazardRecognizer	typeref:typename:unsigned
PreEmitNoopsCommon	GCNHazardRecognizer.cpp	/^unsigned GCNHazardRecognizer::PreEmitNoopsCommon(MachineInstr *MI) {$/;"	f	class:GCNHazardRecognizer	typeref:typename:unsigned
PreRARematStage	GCNSchedStrategy.h	/^  PreRARematStage(GCNSchedStageID StageID, GCNScheduleDAGMILive &DAG)$/;"	f	class:llvm::PreRARematStage
PreRARematStage	GCNSchedStrategy.h	/^class PreRARematStage : public GCNSchedStage {$/;"	c	namespace:llvm
PreRARematerialize	GCNSchedStrategy.h	/^  PreRARematerialize = 3,$/;"	e	enum:llvm::GCNSchedStageID
Pred	RVGPUPostLegalizerCombiner.cpp	/^    CmpInst::Predicate Pred;$/;"	m	struct:__anonf94dcdde0111::RVGPUPostLegalizerCombinerImpl::FMinFMaxLegacyInfo	typeref:typename:CmpInst::Predicate	file:
Pred	SIModeRegister.cpp	/^  Status Pred;$/;"	m	class:BlockData	typeref:typename:Status	file:
PredIdx	SIWholeQuadMode.cpp	/^    unsigned PredIdx;$/;"	m	struct:SIWholeQuadMode::markDefs::PhiEntry	typeref:typename:unsigned	file:
Predecessors	SILowerI1Copies.cpp	/^  SmallVector<MachineBasicBlock *, 4> Predecessors;$/;"	m	class:__anone16a92980111::PhiIncomingAnalysis	typeref:typename:SmallVector<MachineBasicBlock *,4>	file:
Preds	SIMachineScheduler.h	/^  std::vector<SIScheduleBlock*> Preds;  \/\/ All blocks predecessors.$/;"	m	class:llvm::SIScheduleBlock	typeref:typename:std::vector<SIScheduleBlock * >
PreheadersToFlush	SIInsertWaitcnts.cpp	/^  DenseMap<MachineBasicBlock *, bool> PreheadersToFlush;$/;"	m	class:__anona6cbb7940211::SIInsertWaitcnts	typeref:typename:DenseMap<MachineBasicBlock *,bool>	file:
PreloadKernArgs	RVGPUArgumentUsageInfo.h	/^  SmallDenseMap<int, KernArgPreloadDescriptor> PreloadKernArgs{};$/;"	m	struct:llvm::RVGPUFunctionArgInfo	typeref:typename:SmallDenseMap<int,KernArgPreloadDescriptor>
PreloadKernelArgInfo	RVGPULowerKernelArguments.cpp	/^  PreloadKernelArgInfo(Function &F, const GCNSubtarget &ST) : F(F), ST(ST) {$/;"	f	class:__anonf85f450a0111::PreloadKernelArgInfo	file:
PreloadKernelArgInfo	RVGPULowerKernelArguments.cpp	/^class PreloadKernelArgInfo {$/;"	c	namespace:__anonf85f450a0111	file:
PreloadedValue	RVGPUArgumentUsageInfo.h	/^  enum PreloadedValue {$/;"	g	struct:llvm::RVGPUFunctionArgInfo
PreprocessISelDAG	RVGPUISelDAGToDAG.cpp	/^void RVGPUDAGToDAGISel::PreprocessISelDAG() {$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:void
Preserve	SIPeepholeSDWA.cpp	/^  MachineOperand *Preserve;$/;"	m	class:__anon00bd52b30111::SDWADstPreserveOperand	typeref:typename:MachineOperand *	file:
Pressure	GCNSchedStrategy.h	/^  SmallVector<GCNRegPressure, 32> Pressure;$/;"	m	class:llvm::GCNScheduleDAGMILive	typeref:typename:SmallVector<GCNRegPressure,32>
Pressure	GCNSchedStrategy.h	/^  std::vector<unsigned> Pressure;$/;"	m	class:llvm::GCNSchedStrategy	typeref:typename:std::vector<unsigned>
PressureAfter	GCNSchedStrategy.h	/^  GCNRegPressure PressureAfter;$/;"	m	class:llvm::GCNSchedStage	typeref:typename:GCNRegPressure
PressureBefore	GCNSchedStrategy.h	/^  GCNRegPressure PressureBefore;$/;"	m	class:llvm::GCNSchedStage	typeref:typename:GCNRegPressure
Prev	RVGPULibFunc.cpp	/^  RVGPULibFunc::Param Prev;$/;"	m	struct:__anona5afe38d0211::ItaniumParamParser	typeref:typename:RVGPULibFunc::Param	file:
PrevComp	Utils/RVGPUBaseInfo.h	/^  const ComponentProps PrevComp;$/;"	m	class:llvm::RVGPU::VOPD::ComponentLayout	typeref:typename:const ComponentProps
PrintAsmOperand	RVGPUAsmPrinter.cpp	/^bool RVGPUAsmPrinter::PrintAsmOperand(const MachineInstr *MI, unsigned OpNo,$/;"	f	class:RVGPUAsmPrinter	typeref:typename:bool
PrintFx	Utils/RVKernelCodeTUtils.cpp	/^using PrintFx = void(*)(StringRef, const rv_kernel_code_t &, raw_ostream &);$/;"	t	file:
PrintState	SIWholeQuadMode.cpp	/^  explicit PrintState(int State) : State(State) {}$/;"	f	struct:__anon41aff2810111::PrintState	file:
PrintState	SIWholeQuadMode.cpp	/^struct PrintState {$/;"	s	namespace:__anon41aff2810111	file:
Printfs	RVGPUPrintfRuntimeBinding.cpp	/^  SmallVector<CallInst *, 32> Printfs;$/;"	m	class:__anonf5f1f1fc0111::RVGPUPrintfRuntimeBindingImpl	typeref:typename:SmallVector<CallInst *,32>	file:
Priority	GCNMinRegStrategy.cpp	/^    int Priority;$/;"	m	struct:__anon807286a30111::GCNMinRegScheduler::Candidate	typeref:typename:int	file:
Priority	SIProgramInfo.h	/^    uint32_t Priority = 0;$/;"	m	struct:llvm::SIProgramInfo	typeref:typename:uint32_t
Priv	SIProgramInfo.h	/^    uint32_t Priv = 0;$/;"	m	struct:llvm::SIProgramInfo	typeref:typename:uint32_t
PrivateSegmentBuffer	GCNSubtarget.h	/^  bool PrivateSegmentBuffer = false;$/;"	m	class:llvm::GCNUserSGPRUsageInfo	typeref:typename:bool
PrivateSegmentBuffer	RVGPUArgumentUsageInfo.h	/^  ArgDescriptor PrivateSegmentBuffer;$/;"	m	struct:llvm::RVGPUFunctionArgInfo	typeref:typename:ArgDescriptor
PrivateSegmentBuffer	RVMachineFunctionInfo.h	/^  std::optional<SIArgument> PrivateSegmentBuffer;$/;"	m	struct:llvm::yaml::SIArgumentInfo	typeref:typename:std::optional<SIArgument>
PrivateSegmentBufferID	GCNSubtarget.h	/^    PrivateSegmentBufferID = 1,$/;"	e	enum:llvm::GCNUserSGPRUsageInfo::UserSGPRID
PrivateSegmentSize	RVGPUArgumentUsageInfo.h	/^  ArgDescriptor PrivateSegmentSize;$/;"	m	struct:llvm::RVGPUFunctionArgInfo	typeref:typename:ArgDescriptor
PrivateSegmentSize	RVGPUResourceUsageAnalysis.h	/^    uint64_t PrivateSegmentSize = 0;$/;"	m	struct:llvm::RVGPUResourceUsageAnalysis::SIFunctionResourceInfo	typeref:typename:uint64_t
PrivateSegmentSize	RVMachineFunctionInfo.h	/^  std::optional<SIArgument> PrivateSegmentSize;$/;"	m	struct:llvm::yaml::SIArgumentInfo	typeref:typename:std::optional<SIArgument>
PrivateSegmentSizeID	GCNSubtarget.h	/^    PrivateSegmentSizeID = 7$/;"	e	enum:llvm::GCNUserSGPRUsageInfo::UserSGPRID
PrivateSegmentWaveByteOffset	RVGPUArgumentUsageInfo.h	/^  ArgDescriptor PrivateSegmentWaveByteOffset;$/;"	m	struct:llvm::RVGPUFunctionArgInfo	typeref:typename:ArgDescriptor
PrivateSegmentWaveByteOffset	RVMachineFunctionInfo.h	/^  bool PrivateSegmentWaveByteOffset : 1;$/;"	m	class:llvm::RVMachineFunctionInfo	typeref:typename:bool:1
PrivateSegmentWaveByteOffset	RVMachineFunctionInfo.h	/^  std::optional<SIArgument> PrivateSegmentWaveByteOffset;$/;"	m	struct:llvm::yaml::SIArgumentInfo	typeref:typename:std::optional<SIArgument>
PrologEpilogSGPRSaveRestoreInfo	RVMachineFunctionInfo.h	/^  PrologEpilogSGPRSaveRestoreInfo(SGPRSaveKind K, Register R)$/;"	f	class:llvm::PrologEpilogSGPRSaveRestoreInfo
PrologEpilogSGPRSaveRestoreInfo	RVMachineFunctionInfo.h	/^  PrologEpilogSGPRSaveRestoreInfo(SGPRSaveKind K, int I) : Kind(K), Index(I) {}$/;"	f	class:llvm::PrologEpilogSGPRSaveRestoreInfo
PrologEpilogSGPRSaveRestoreInfo	RVMachineFunctionInfo.h	/^class PrologEpilogSGPRSaveRestoreInfo {$/;"	c	namespace:llvm
PrologEpilogSGPRSpillBuilder	RVFrameLowering.cpp	/^  PrologEpilogSGPRSpillBuilder(Register Reg,$/;"	f	class:llvm::PrologEpilogSGPRSpillBuilder	file:
PrologEpilogSGPRSpillBuilder	RVFrameLowering.cpp	/^class PrologEpilogSGPRSpillBuilder {$/;"	c	namespace:llvm	file:
PrologEpilogSGPRSpills	RVMachineFunctionInfo.h	/^  PrologEpilogSGPRSpillsMap PrologEpilogSGPRSpills;$/;"	m	class:llvm::RVMachineFunctionInfo	typeref:typename:PrologEpilogSGPRSpillsMap
PrologEpilogSGPRSpillsMap	RVMachineFunctionInfo.h	/^  using PrologEpilogSGPRSpillsMap =$/;"	t	class:llvm::RVMachineFunctionInfo	typeref:typename:DenseMap<Register,PrologEpilogSGPRSaveRestoreInfo>
PromoteAllocaToVectorLimit	RVGPUPromoteAlloca.cpp	/^static cl::opt<unsigned> PromoteAllocaToVectorLimit($/;"	v	namespace:__anonea904d1c0111	typeref:typename:cl::opt<unsigned>	file:
Ptr	AsmParser/RVGPUAsmParser.cpp	/^  using Ptr = std::unique_ptr<RVGPUOperand>;$/;"	t	class:__anon672fa8550111::RVGPUOperand	typeref:typename:std::unique_ptr<RVGPUOperand>	file:
PtrKind	RVGPULibFunc.h	/^    unsigned char PtrKind = 0;$/;"	m	struct:llvm::RVGPULibFuncBase::Param	typeref:typename:unsigned char
Ptrs	RVGPUPromoteKernelArguments.cpp	/^  SmallVector<Value *> Ptrs;$/;"	m	class:__anon281388e70111::RVGPUPromoteKernelArguments	typeref:typename:SmallVector<Value * >	file:
QNAME	Utils/RVKernelCodeTInfo.h	/^#define QNAME(/;"	d
QUAD_PERM_ENC	SIDefines.h	/^  QUAD_PERM_ENC         = 0x8000,$/;"	e	enum:llvm::RVGPU::Swizzle::EncBits
QUAD_PERM_ENC_MASK	SIDefines.h	/^  QUAD_PERM_ENC_MASK    = 0xFF00,$/;"	e	enum:llvm::RVGPU::Swizzle::EncBits
QUAD_PERM_FIRST	SIDefines.h	/^  QUAD_PERM_FIRST   = 0,$/;"	e	enum:llvm::RVGPU::DPP::DppCtrl
QUAD_PERM_ID	SIDefines.h	/^  QUAD_PERM_ID      = 0xE4, \/\/ identity permutation$/;"	e	enum:llvm::RVGPU::DPP::DppCtrl
QUAD_PERM_LAST	SIDefines.h	/^  QUAD_PERM_LAST    = 0xFF,$/;"	e	enum:llvm::RVGPU::DPP::DppCtrl
QUEUE_PTR	RVGPUArgumentUsageInfo.h	/^    QUEUE_PTR           =  2,$/;"	e	enum:llvm::RVGPUFunctionArgInfo::PreloadedValue
QUEUE_PTR	RVGPUISelLowering.h	/^    QUEUE_PTR,$/;"	e	enum:llvm::RVGPUTargetLowering::ImplicitParameter
QUEUE_PTR_OFFSET	SIDefines.h	/^  QUEUE_PTR_OFFSET = 200,$/;"	e	enum:llvm::RVGPU::ImplicitArg::Offset_COV5
Q_NAN	SIDefines.h	/^  Q_NAN = 1 << 1,        \/\/ Quiet NaN$/;"	e	enum:llvm::SIInstrFlags::ClassFlags
Queue	GCNILPSched.cpp	/^  typedef simple_ilist<Candidate> Queue;$/;"	t	class:__anonbd2d93ba0111::GCNILPScheduler	typeref:typename:simple_ilist<Candidate>	file:
Queue	GCNMinRegStrategy.cpp	/^  using Queue = simple_ilist<Candidate>;$/;"	t	class:__anon807286a30111::GCNMinRegScheduler	typeref:typename:simple_ilist<Candidate>	file:
QueuePtr	GCNSubtarget.h	/^  bool QueuePtr = false;$/;"	m	class:llvm::GCNUserSGPRUsageInfo	typeref:typename:bool
QueuePtr	RVGPUArgumentUsageInfo.h	/^  ArgDescriptor QueuePtr;$/;"	m	struct:llvm::RVGPUFunctionArgInfo	typeref:typename:ArgDescriptor
QueuePtr	RVMachineFunctionInfo.h	/^  std::optional<SIArgument> QueuePtr;$/;"	m	struct:llvm::yaml::SIArgumentInfo	typeref:typename:std::optional<SIArgument>
QueuePtrID	GCNSubtarget.h	/^    QueuePtrID = 3,$/;"	e	enum:llvm::GCNUserSGPRUsageInfo::UserSGPRID
R600	RVGPUSubtarget.h	/^    R600 = 1,$/;"	e	enum:llvm::RVGPUSubtarget::Generation
R700	RVGPUSubtarget.h	/^    R700 = 2,$/;"	e	enum:llvm::RVGPUSubtarget::Generation
RBI	RVGPUInstructionSelector.h	/^  const RVGPURegisterBankInfo &RBI;$/;"	m	class:llvm::RVGPUInstructionSelector	typeref:typename:const RVGPURegisterBankInfo &
RBI	RVGPURegBankCombiner.cpp	/^  const RegisterBankInfo &RBI;$/;"	m	class:__anon00ae19330111::RVGPURegBankCombinerImpl	typeref:typename:const RegisterBankInfo &	file:
RBI	RVGPURegisterBankInfo.cpp	/^  const RVGPURegisterBankInfo &RBI;$/;"	m	class:__anon0a1a7df70111::ApplyRegBankMapping	typeref:typename:const RVGPURegisterBankInfo &	file:
RC	GCNRewritePartialRegUses.cpp	/^    const TargetRegisterClass *RC;$/;"	m	struct:__anon37bf8c3b0111::GCNRewritePartialRegUses::SubRegInfo	typeref:typename:const TargetRegisterClass *	file:
RCP	RVGPUISelLowering.h	/^  RCP,$/;"	e	enum:llvm::RVGPUISD::NodeType
RCP_IFLAG	RVGPUISelLowering.h	/^  RCP_IFLAG,$/;"	e	enum:llvm::RVGPUISD::NodeType
RCP_LEGACY	RVGPUISelLowering.h	/^  RCP_LEGACY,$/;"	e	enum:llvm::RVGPUISD::NodeType
RECORD	Utils/RVKernelCodeTUtils.cpp	/^#define RECORD(/;"	d	file:
REGISTER_LOAD	RVGPUISelLowering.h	/^  REGISTER_LOAD,$/;"	e	enum:llvm::RVGPUISD::NodeType
REGISTER_STORE	RVGPUISelLowering.h	/^  REGISTER_STORE,$/;"	e	enum:llvm::RVGPUISD::NodeType
REG_IDX_MASK	SIDefines.h	/^  REG_IDX_MASK = 0xff,$/;"	e	enum:llvm::RVGPU::HWEncoding::__anon1f24a7950703
RETURN_TO_EPILOG	RVGPUISelLowering.h	/^  RETURN_TO_EPILOG,$/;"	e	enum:llvm::RVGPUISD::NodeType
RET_GLUE	RVGPUISelLowering.h	/^  RET_GLUE,$/;"	e	enum:llvm::RVGPUISD::NodeType
RHS	RVGPUPostLegalizerCombiner.cpp	/^    Register RHS;$/;"	m	struct:__anonf94dcdde0111::RVGPUPostLegalizerCombinerImpl::FMinFMaxLegacyInfo	typeref:typename:Register	file:
RI	RVInstrInfo.h	/^  const RVRegisterInfo RI;$/;"	m	class:llvm::RVInstrInfo	typeref:typename:const RVRegisterInfo
RMRT	RVGPUMachineCFGStructurizer.cpp	/^  RegionMRT *RMRT;$/;"	m	class:__anon1695b1f50211::LinearizedRegion	typeref:typename:RegionMRT *	file:
RMRT	RVGPUMachineCFGStructurizer.cpp	/^  RegionMRT *RMRT;$/;"	m	class:__anon1695b1f50311::RVGPUMachineCFGStructurizer	typeref:typename:RegionMRT *	file:
ROW_HALF_MIRROR	SIDefines.h	/^  ROW_HALF_MIRROR   = 0x141,$/;"	e	enum:llvm::RVGPU::DPP::DppCtrl
ROW_MIRROR	SIDefines.h	/^  ROW_MIRROR        = 0x140,$/;"	e	enum:llvm::RVGPU::DPP::DppCtrl
ROW_NEWBCAST_FIRST	SIDefines.h	/^  ROW_NEWBCAST_FIRST= 0x150,$/;"	e	enum:llvm::RVGPU::DPP::DppCtrl
ROW_NEWBCAST_LAST	SIDefines.h	/^  ROW_NEWBCAST_LAST = 0x15F,$/;"	e	enum:llvm::RVGPU::DPP::DppCtrl
ROW_ROR0	SIDefines.h	/^  ROW_ROR0          = 0x120,$/;"	e	enum:llvm::RVGPU::DPP::DppCtrl
ROW_ROR_FIRST	SIDefines.h	/^  ROW_ROR_FIRST     = 0x121,$/;"	e	enum:llvm::RVGPU::DPP::DppCtrl
ROW_ROR_LAST	SIDefines.h	/^  ROW_ROR_LAST      = 0x12F,$/;"	e	enum:llvm::RVGPU::DPP::DppCtrl
ROW_SHARE0	SIDefines.h	/^  ROW_SHARE0        = 0x150,$/;"	e	enum:llvm::RVGPU::DPP::DppCtrl
ROW_SHARE_FIRST	SIDefines.h	/^  ROW_SHARE_FIRST   = 0x150,$/;"	e	enum:llvm::RVGPU::DPP::DppCtrl
ROW_SHARE_LAST	SIDefines.h	/^  ROW_SHARE_LAST    = 0x15F,$/;"	e	enum:llvm::RVGPU::DPP::DppCtrl
ROW_SHL0	SIDefines.h	/^  ROW_SHL0          = 0x100,$/;"	e	enum:llvm::RVGPU::DPP::DppCtrl
ROW_SHL_FIRST	SIDefines.h	/^  ROW_SHL_FIRST     = 0x101,$/;"	e	enum:llvm::RVGPU::DPP::DppCtrl
ROW_SHL_LAST	SIDefines.h	/^  ROW_SHL_LAST      = 0x10F,$/;"	e	enum:llvm::RVGPU::DPP::DppCtrl
ROW_SHR0	SIDefines.h	/^  ROW_SHR0          = 0x110,$/;"	e	enum:llvm::RVGPU::DPP::DppCtrl
ROW_SHR_FIRST	SIDefines.h	/^  ROW_SHR_FIRST     = 0x111,$/;"	e	enum:llvm::RVGPU::DPP::DppCtrl
ROW_SHR_LAST	SIDefines.h	/^  ROW_SHR_LAST      = 0x11F,$/;"	e	enum:llvm::RVGPU::DPP::DppCtrl
ROW_XMASK0	SIDefines.h	/^  ROW_XMASK0        = 0x160,$/;"	e	enum:llvm::RVGPU::DPP::DppCtrl
ROW_XMASK_FIRST	SIDefines.h	/^  ROW_XMASK_FIRST   = 0x160,$/;"	e	enum:llvm::RVGPU::DPP::DppCtrl
ROW_XMASK_LAST	SIDefines.h	/^  ROW_XMASK_LAST    = 0x16F,$/;"	e	enum:llvm::RVGPU::DPP::DppCtrl
RQ	GCNMinRegStrategy.cpp	/^  Queue RQ; \/\/ Ready queue$/;"	m	class:__anon807286a30111::GCNMinRegScheduler	typeref:typename:Queue	file:
RS	RVRegisterInfo.cpp	/^  RegScavenger *RS;$/;"	m	struct:llvm::SGPRSpillBuilder	typeref:typename:RegScavenger *	file:
RSQ	RVGPUISelLowering.h	/^  RSQ,$/;"	e	enum:llvm::RVGPUISD::NodeType
RSQ_CLAMP	RVGPUISelLowering.h	/^  RSQ_CLAMP,$/;"	e	enum:llvm::RVGPUISD::NodeType
RSRC_DATA_FORMAT	RVInstrInfo.h	/^  const uint64_t RSRC_DATA_FORMAT = 0xf00000000000LL;$/;"	v	namespace:llvm::RVGPU	typeref:typename:const uint64_t
RSRC_ELEMENT_SIZE_SHIFT	RVInstrInfo.h	/^  const uint64_t RSRC_ELEMENT_SIZE_SHIFT = (32 + 19);$/;"	v	namespace:llvm::RVGPU	typeref:typename:const uint64_t
RSRC_INDEX_STRIDE_SHIFT	RVInstrInfo.h	/^  const uint64_t RSRC_INDEX_STRIDE_SHIFT = (32 + 21);$/;"	v	namespace:llvm::RVGPU	typeref:typename:const uint64_t
RSRC_TID_ENABLE	RVInstrInfo.h	/^  const uint64_t RSRC_TID_ENABLE = UINT64_C(1) << (32 + 23);$/;"	v	namespace:llvm::RVGPU	typeref:typename:const uint64_t
RVFrameLowering	RVFrameLowering.h	/^  RVFrameLowering(StackDirection D, Align StackAl, int LAO,$/;"	f	class:llvm::RVFrameLowering
RVFrameLowering	RVFrameLowering.h	/^class RVFrameLowering final : public RVGPUFrameLowering {$/;"	c	namespace:llvm
RVGPU	MCTargetDesc/RVGPUFixupKinds.h	/^namespace RVGPU {$/;"	n	namespace:llvm
RVGPU	MCTargetDesc/RVGPUTargetStreamer.h	/^namespace RVGPU {$/;"	n	namespace:llvm
RVGPU	RVGPU.h	/^namespace RVGPU {$/;"	n	namespace:llvm
RVGPU	RVGPUAsmPrinter.h	/^namespace RVGPU {$/;"	n	namespace:llvm
RVGPU	RVGPUGlobalISelUtils.h	/^namespace RVGPU {$/;"	n	namespace:llvm
RVGPU	RVGPUHSAMetadataStreamer.cpp	/^namespace RVGPU {$/;"	n	namespace:llvm	file:
RVGPU	RVGPUHSAMetadataStreamer.h	/^namespace RVGPU {$/;"	n	namespace:llvm
RVGPU	RVGPUInstrInfo.h	/^namespace RVGPU {$/;"	n	namespace:llvm
RVGPU	RVGPUInstructionSelector.h	/^namespace RVGPU {$/;"	n	namespace:llvm
RVGPU	RVGPULegalizerInfo.h	/^namespace RVGPU {$/;"	n	namespace:llvm
RVGPU	RVGPUPTNote.h	/^namespace RVGPU {$/;"	n	namespace:llvm
RVGPU	RVISelLowering.h	/^namespace RVGPU {$/;"	n	namespace:llvm
RVGPU	RVInstrInfo.cpp	/^namespace RVGPU {$/;"	n	namespace:llvm	file:
RVGPU	RVInstrInfo.h	/^namespace RVGPU {$/;"	n	namespace:llvm
RVGPU	RVRegisterInfo.h	/^namespace RVGPU {$/;"	n	namespace:llvm
RVGPU	SIDefines.h	/^namespace RVGPU {$/;"	n	namespace:llvm
RVGPU	SIModeRegisterDefaults.h	/^namespace RVGPU {$/;"	n	namespace:llvm
RVGPU	Utils/RVGPUAsmUtils.cpp	/^namespace RVGPU {$/;"	n	namespace:llvm	file:
RVGPU	Utils/RVGPUAsmUtils.h	/^namespace RVGPU {$/;"	n	namespace:llvm
RVGPU	Utils/RVGPUBaseInfo.cpp	/^namespace RVGPU {$/;"	n	namespace:llvm	file:
RVGPU	Utils/RVGPUBaseInfo.h	/^namespace RVGPU {$/;"	n	namespace:llvm
RVGPU	Utils/RVGPUMemoryUtils.cpp	/^namespace RVGPU {$/;"	n	namespace:llvm	file:
RVGPU	Utils/RVGPUMemoryUtils.h	/^namespace RVGPU {$/;"	n	namespace:llvm
RVGPUAA	RVGPUAliasAnalysis.h	/^class RVGPUAA : public AnalysisInfoMixin<RVGPUAA> {$/;"	c	namespace:llvm
RVGPUAAResult	RVGPUAliasAnalysis.h	/^  RVGPUAAResult(RVGPUAAResult &&Arg)$/;"	f	class:llvm::RVGPUAAResult
RVGPUAAResult	RVGPUAliasAnalysis.h	/^  explicit RVGPUAAResult(const DataLayout &DL) : DL(DL) {}$/;"	f	class:llvm::RVGPUAAResult
RVGPUAAResult	RVGPUAliasAnalysis.h	/^class RVGPUAAResult : public AAResultBase {$/;"	c	namespace:llvm
RVGPUAAWrapperPass	RVGPUAliasAnalysis.cpp	/^RVGPUAAWrapperPass::RVGPUAAWrapperPass() : ImmutablePass(ID) {$/;"	f	class:RVGPUAAWrapperPass
RVGPUAAWrapperPass	RVGPUAliasAnalysis.h	/^class RVGPUAAWrapperPass : public ImmutablePass {$/;"	c	namespace:llvm
RVGPUAlwaysInline	RVGPUAlwaysInlinePass.cpp	/^  RVGPUAlwaysInline(bool GlobalOpt = false) :$/;"	f	class:__anonad1ccdb10111::RVGPUAlwaysInline	file:
RVGPUAlwaysInline	RVGPUAlwaysInlinePass.cpp	/^class RVGPUAlwaysInline : public ModulePass {$/;"	c	namespace:__anonad1ccdb10111	file:
RVGPUAlwaysInlinePass	RVGPU.h	/^  RVGPUAlwaysInlinePass(bool GlobalOpt = true) : GlobalOpt(GlobalOpt) {}$/;"	f	struct:llvm::RVGPUAlwaysInlinePass
RVGPUAlwaysInlinePass	RVGPU.h	/^struct RVGPUAlwaysInlinePass : PassInfoMixin<RVGPUAlwaysInlinePass> {$/;"	s	namespace:llvm
RVGPUAnnotateKernelFeatures	RVGPUAnnotateKernelFeatures.cpp	/^  RVGPUAnnotateKernelFeatures() : CallGraphSCCPass(ID) {}$/;"	f	class:__anondc582c840111::RVGPUAnnotateKernelFeatures	file:
RVGPUAnnotateKernelFeatures	RVGPUAnnotateKernelFeatures.cpp	/^class RVGPUAnnotateKernelFeatures : public CallGraphSCCPass {$/;"	c	namespace:__anondc582c840111	file:
RVGPUAnnotateKernelFeaturesID	RVGPUAnnotateKernelFeatures.cpp	/^char &llvm::RVGPUAnnotateKernelFeaturesID = RVGPUAnnotateKernelFeatures::ID;$/;"	m	class:llvm	typeref:typename:char &
RVGPUAnnotateUniformValues	RVGPUAnnotateUniformValues.cpp	/^  RVGPUAnnotateUniformValues() :$/;"	f	class:__anon9c77d1d40111::RVGPUAnnotateUniformValues	file:
RVGPUAnnotateUniformValues	RVGPUAnnotateUniformValues.cpp	/^class RVGPUAnnotateUniformValues : public FunctionPass,$/;"	c	namespace:__anon9c77d1d40111	file:
RVGPUArgumentUsageInfo	RVGPUArgumentUsageInfo.h	/^  RVGPUArgumentUsageInfo() : ImmutablePass(ID) { }$/;"	f	class:llvm::RVGPUArgumentUsageInfo
RVGPUArgumentUsageInfo	RVGPUArgumentUsageInfo.h	/^class RVGPUArgumentUsageInfo : public ImmutablePass {$/;"	c	namespace:llvm
RVGPUAsmBackend	MCTargetDesc/RVGPUAsmBackend.cpp	/^  RVGPUAsmBackend(const Target &T) : MCAsmBackend(llvm::endianness::little) {}$/;"	f	class:__anon6b905a380111::RVGPUAsmBackend	file:
RVGPUAsmBackend	MCTargetDesc/RVGPUAsmBackend.cpp	/^class RVGPUAsmBackend : public MCAsmBackend {$/;"	c	namespace:__anon6b905a380111	file:
RVGPUAsmParser	AsmParser/RVGPUAsmParser.cpp	/^  RVGPUAsmParser(const MCSubtargetInfo &STI, MCAsmParser &_Parser,$/;"	f	class:__anon672fa8550111::RVGPUAsmParser	file:
RVGPUAsmParser	AsmParser/RVGPUAsmParser.cpp	/^class RVGPUAsmParser : public MCTargetAsmParser {$/;"	c	namespace:__anon672fa8550111	file:
RVGPUAsmPrinter	RVGPUAsmPrinter.cpp	/^RVGPUAsmPrinter::RVGPUAsmPrinter(TargetMachine &TM,$/;"	f	class:RVGPUAsmPrinter
RVGPUAsmPrinter	RVGPUAsmPrinter.h	/^class RVGPUAsmPrinter final : public AsmPrinter {$/;"	c	namespace:llvm
RVGPUAsmVariants	SIDefines.h	/^namespace RVGPUAsmVariants {$/;"	n	namespace:llvm
RVGPUAtomicOptimizer	RVGPUAtomicOptimizer.cpp	/^  RVGPUAtomicOptimizer(ScanOptions ScanImpl)$/;"	f	class:__anon7bca098a0111::RVGPUAtomicOptimizer	file:
RVGPUAtomicOptimizer	RVGPUAtomicOptimizer.cpp	/^class RVGPUAtomicOptimizer : public FunctionPass {$/;"	c	namespace:__anon7bca098a0111	file:
RVGPUAtomicOptimizerID	RVGPUAtomicOptimizer.cpp	/^char &llvm::RVGPUAtomicOptimizerID = RVGPUAtomicOptimizer::ID;$/;"	m	class:llvm	typeref:typename:char &
RVGPUAtomicOptimizerImpl	RVGPUAtomicOptimizer.cpp	/^  RVGPUAtomicOptimizerImpl(const UniformityInfo *UA, const DataLayout *DL,$/;"	f	class:__anon7bca098a0111::RVGPUAtomicOptimizerImpl	file:
RVGPUAtomicOptimizerImpl	RVGPUAtomicOptimizer.cpp	/^class RVGPUAtomicOptimizerImpl$/;"	c	namespace:__anon7bca098a0111	file:
RVGPUAtomicOptimizerPass	RVGPU.h	/^  RVGPUAtomicOptimizerPass(TargetMachine &TM, ScanOptions ScanImpl)$/;"	f	struct:llvm::RVGPUAtomicOptimizerPass
RVGPUAtomicOptimizerPass	RVGPU.h	/^struct RVGPUAtomicOptimizerPass : PassInfoMixin<RVGPUAtomicOptimizerPass> {$/;"	s	namespace:llvm
RVGPUAtomicOptimizerStrategy	RVGPUTargetMachine.cpp	/^static cl::opt<ScanOptions> RVGPUAtomicOptimizerStrategy($/;"	v	typeref:typename:cl::opt<ScanOptions>	file:
RVGPUAttributorLegacy	RVGPUAttributor.cpp	/^  RVGPUAttributorLegacy() : ModulePass(ID) {}$/;"	f	class:__anon512e119a0111::RVGPUAttributorLegacy	file:
RVGPUAttributorLegacy	RVGPUAttributor.cpp	/^class RVGPUAttributorLegacy : public ModulePass {$/;"	c	namespace:__anon512e119a0111	file:
RVGPUAttributorPass	RVGPU.h	/^  RVGPUAttributorPass(TargetMachine &TM) : TM(TM){};$/;"	f	class:llvm::RVGPUAttributorPass
RVGPUAttributorPass	RVGPU.h	/^class RVGPUAttributorPass : public PassInfoMixin<RVGPUAttributorPass> {$/;"	c	namespace:llvm
RVGPUBypassSlowDiv	RVGPUISelLowering.cpp	/^static cl::opt<bool> RVGPUBypassSlowDiv($/;"	v	typeref:typename:cl::opt<bool>	file:
RVGPUCallLowering	RVGPUCallLowering.cpp	/^RVGPUCallLowering::RVGPUCallLowering(const RVGPUTargetLowering &TLI)$/;"	f	class:RVGPUCallLowering
RVGPUCallLowering	RVGPUCallLowering.h	/^class RVGPUCallLowering final : public CallLowering {$/;"	c	namespace:llvm
RVGPUCodeGenPrepare	RVGPUCodeGenPrepare.cpp	/^  RVGPUCodeGenPrepare() : FunctionPass(ID) {$/;"	f	class:__anond35e324e0111::RVGPUCodeGenPrepare	file:
RVGPUCodeGenPrepare	RVGPUCodeGenPrepare.cpp	/^class RVGPUCodeGenPrepare : public FunctionPass {$/;"	c	namespace:__anond35e324e0111	file:
RVGPUCodeGenPrepareImpl	RVGPUCodeGenPrepare.cpp	/^class RVGPUCodeGenPrepareImpl$/;"	c	namespace:__anond35e324e0111	file:
RVGPUCodeGenPreparePass	RVGPU.h	/^  RVGPUCodeGenPreparePass(TargetMachine &TM) : TM(TM){};$/;"	f	class:llvm::RVGPUCodeGenPreparePass
RVGPUCodeGenPreparePass	RVGPU.h	/^class RVGPUCodeGenPreparePass$/;"	c	namespace:llvm
RVGPUCombinerHelper	RVGPUCombinerHelper.h	/^class RVGPUCombinerHelper : public CombinerHelper {$/;"	c
RVGPUCtorDtorLoweringLegacy	RVGPUCtorDtorLowering.cpp	/^  RVGPUCtorDtorLoweringLegacy() : ModulePass(ID) {}$/;"	f	class:__anon237d7fe20111::RVGPUCtorDtorLoweringLegacy	file:
RVGPUCtorDtorLoweringLegacy	RVGPUCtorDtorLowering.cpp	/^class RVGPUCtorDtorLoweringLegacy final : public ModulePass {$/;"	c	namespace:__anon237d7fe20111	file:
RVGPUCtorDtorLoweringLegacyPassID	RVGPUCtorDtorLowering.cpp	/^char &llvm::RVGPUCtorDtorLoweringLegacyPassID =$/;"	m	class:llvm	typeref:typename:char &
RVGPUCtorDtorLoweringPass	RVGPUCtorDtorLowering.h	/^class RVGPUCtorDtorLoweringPass$/;"	c	namespace:llvm
RVGPUCustomBehaviour	MCA/RVGPUCustomBehaviour.cpp	/^RVGPUCustomBehaviour::RVGPUCustomBehaviour(const MCSubtargetInfo &STI,$/;"	f	class:llvm::mca::RVGPUCustomBehaviour
RVGPUCustomBehaviour	MCA/RVGPUCustomBehaviour.h	/^class RVGPUCustomBehaviour : public CustomBehaviour {$/;"	c	namespace:llvm::mca
RVGPUDAGToDAGISel	RVGPUISelDAGToDAG.cpp	/^RVGPUDAGToDAGISel::RVGPUDAGToDAGISel(TargetMachine &TM,$/;"	f	class:RVGPUDAGToDAGISel
RVGPUDAGToDAGISel	RVGPUISelDAGToDAG.h	/^class RVGPUDAGToDAGISel : public SelectionDAGISel {$/;"	c
RVGPUDisassembler	Disassembler/RVGPUDisassembler.cpp	/^RVGPUDisassembler::RVGPUDisassembler(const MCSubtargetInfo &STI,$/;"	f	class:RVGPUDisassembler
RVGPUDisassembler	Disassembler/RVGPUDisassembler.h	/^class RVGPUDisassembler : public MCDisassembler {$/;"	c	namespace:llvm
RVGPUDwarfFlavour	MCTargetDesc/RVGPUMCTargetDesc.h	/^enum RVGPUDwarfFlavour : unsigned { Wave64 = 0, Wave32 = 1 };$/;"	g	namespace:llvm	typeref:typename:unsigned
RVGPUELFObjectWriter	MCTargetDesc/RVGPUELFObjectWriter.cpp	/^RVGPUELFObjectWriter::RVGPUELFObjectWriter(bool Is64Bit,$/;"	f	class:RVGPUELFObjectWriter
RVGPUELFObjectWriter	MCTargetDesc/RVGPUELFObjectWriter.cpp	/^class RVGPUELFObjectWriter : public MCELFObjectTargetWriter {$/;"	c	namespace:__anone2935c3a0111	file:
RVGPUELFStreamer	MCTargetDesc/RVGPUELFStreamer.cpp	/^  RVGPUELFStreamer(const Triple &T, MCContext &Context,$/;"	f	class:__anonfd3973e90111::RVGPUELFStreamer	file:
RVGPUELFStreamer	MCTargetDesc/RVGPUELFStreamer.cpp	/^class RVGPUELFStreamer : public MCELFStreamer {$/;"	c	namespace:__anonfd3973e90111	file:
RVGPUExternalAAWrapper	RVGPUAliasAnalysis.h	/^  RVGPUExternalAAWrapper() : ExternalAAWrapperPass($/;"	f	class:llvm::RVGPUExternalAAWrapper
RVGPUExternalAAWrapper	RVGPUAliasAnalysis.h	/^class RVGPUExternalAAWrapper : public ExternalAAWrapperPass {$/;"	c	namespace:llvm
RVGPUFltRounds	SIModeRegisterDefaults.h	/^enum RVGPUFltRounds : int8_t {$/;"	g	namespace:llvm::RVGPU	typeref:typename:int8_t
RVGPUFrameLowering	RVGPUFrameLowering.cpp	/^RVGPUFrameLowering::RVGPUFrameLowering(StackDirection D, Align StackAl,$/;"	f	class:RVGPUFrameLowering
RVGPUFrameLowering	RVGPUFrameLowering.h	/^class RVGPUFrameLowering : public TargetFrameLowering {$/;"	c	namespace:llvm
RVGPUFunctionArgInfo	RVGPUArgumentUsageInfo.h	/^struct RVGPUFunctionArgInfo {$/;"	s	namespace:llvm
RVGPUGWSResourcePseudoSourceValue	RVMachineFunctionInfo.h	/^  explicit RVGPUGWSResourcePseudoSourceValue(const RVGPUTargetMachine &TM)$/;"	f	class:llvm::RVGPUGWSResourcePseudoSourceValue
RVGPUGWSResourcePseudoSourceValue	RVMachineFunctionInfo.h	/^class RVGPUGWSResourcePseudoSourceValue final : public RVGPUPseudoSourceValue {$/;"	c	namespace:llvm
RVGPUGenRegisterBankInfo	RVGPURegisterBankInfo.h	/^class RVGPUGenRegisterBankInfo : public RegisterBankInfo {$/;"	c	namespace:llvm
RVGPUGlobalISelDivergenceLowering	RVGPUGlobalISelDivergenceLowering.cpp	/^  RVGPUGlobalISelDivergenceLowering() : MachineFunctionPass(ID) {$/;"	f	class:__anon4d1a276b0111::RVGPUGlobalISelDivergenceLowering	file:
RVGPUGlobalISelDivergenceLowering	RVGPUGlobalISelDivergenceLowering.cpp	/^class RVGPUGlobalISelDivergenceLowering : public MachineFunctionPass {$/;"	c	namespace:__anon4d1a276b0111	file:
RVGPUGlobalISelDivergenceLoweringID	RVGPUGlobalISelDivergenceLowering.cpp	/^char &llvm::RVGPUGlobalISelDivergenceLoweringID =$/;"	m	class:llvm	typeref:typename:char &
RVGPUISD	RVGPUISelLowering.h	/^namespace RVGPUISD {$/;"	n	namespace:llvm
RVGPUImageDMaskIntrinsic	RVGPUInstCombineIntrinsic.cpp	/^struct RVGPUImageDMaskIntrinsic {$/;"	s	namespace:__anon940616180111	file:
RVGPUImageIntrinsicOptimizer	RVGPUImageIntrinsicOptimizer.cpp	/^  RVGPUImageIntrinsicOptimizer(const TargetMachine *TM = nullptr)$/;"	f	class:__anon27dfeec30111::RVGPUImageIntrinsicOptimizer	file:
RVGPUImageIntrinsicOptimizer	RVGPUImageIntrinsicOptimizer.cpp	/^class RVGPUImageIntrinsicOptimizer : public FunctionPass {$/;"	c	namespace:__anon27dfeec30111	file:
RVGPUImageIntrinsicOptimizerPass	RVGPU.h	/^  RVGPUImageIntrinsicOptimizerPass(TargetMachine &TM) : TM(TM) {}$/;"	f	struct:llvm::RVGPUImageIntrinsicOptimizerPass
RVGPUImageIntrinsicOptimizerPass	RVGPU.h	/^struct RVGPUImageIntrinsicOptimizerPass$/;"	s	namespace:llvm
RVGPUIncomingArgHandler	RVGPUCallLowering.cpp	/^  RVGPUIncomingArgHandler(MachineIRBuilder &B, MachineRegisterInfo &MRI)$/;"	f	struct:__anonad2fb0ad0111::RVGPUIncomingArgHandler	file:
RVGPUIncomingArgHandler	RVGPUCallLowering.cpp	/^struct RVGPUIncomingArgHandler : public CallLowering::IncomingValueHandler {$/;"	s	namespace:__anonad2fb0ad0111	file:
RVGPUInformationCache	RVGPUAttributor.cpp	/^  RVGPUInformationCache(const Module &M, AnalysisGetter &AG,$/;"	f	class:__anon512e119a0111::RVGPUInformationCache	file:
RVGPUInformationCache	RVGPUAttributor.cpp	/^class RVGPUInformationCache : public InformationCache {$/;"	c	namespace:__anon512e119a0111	file:
RVGPUInsertDelayAlu	RVGPUInsertDelayAlu.cpp	/^  RVGPUInsertDelayAlu() : MachineFunctionPass(ID) {}$/;"	f	class:__anonc7296b900111::RVGPUInsertDelayAlu	file:
RVGPUInsertDelayAlu	RVGPUInsertDelayAlu.cpp	/^class RVGPUInsertDelayAlu : public MachineFunctionPass {$/;"	c	namespace:__anonc7296b900111	file:
RVGPUInsertDelayAluID	RVGPUInsertDelayAlu.cpp	/^char &llvm::RVGPUInsertDelayAluID = RVGPUInsertDelayAlu::ID;$/;"	m	class:llvm	typeref:typename:char &
RVGPUInsertSingleUseVDST	RVGPUInsertSingleUseVDST.cpp	/^  RVGPUInsertSingleUseVDST() : MachineFunctionPass(ID) {}$/;"	f	class:__anon6c17cf8f0111::RVGPUInsertSingleUseVDST	file:
RVGPUInsertSingleUseVDST	RVGPUInsertSingleUseVDST.cpp	/^class RVGPUInsertSingleUseVDST : public MachineFunctionPass {$/;"	c	namespace:__anon6c17cf8f0111	file:
RVGPUInsertSingleUseVDSTID	RVGPUInsertSingleUseVDST.cpp	/^char &llvm::RVGPUInsertSingleUseVDSTID = RVGPUInsertSingleUseVDST::ID;$/;"	m	class:llvm	typeref:typename:char &
RVGPUInstPrinter	MCTargetDesc/RVGPUInstPrinter.h	/^  RVGPUInstPrinter(const MCAsmInfo &MAI,$/;"	f	class:llvm::RVGPUInstPrinter
RVGPUInstPrinter	MCTargetDesc/RVGPUInstPrinter.h	/^class RVGPUInstPrinter : public MCInstPrinter {$/;"	c	namespace:llvm
RVGPUInstrInfo	RVGPUInstrInfo.cpp	/^RVGPUInstrInfo::RVGPUInstrInfo(const GCNSubtarget &ST) { }$/;"	f	class:RVGPUInstrInfo
RVGPUInstrInfo	RVGPUInstrInfo.h	/^class RVGPUInstrInfo {$/;"	c	namespace:llvm
RVGPUInstrPostProcess	MCA/RVGPUCustomBehaviour.h	/^  RVGPUInstrPostProcess(const MCSubtargetInfo &STI, const MCInstrInfo &MCII)$/;"	f	class:llvm::mca::RVGPUInstrPostProcess
RVGPUInstrPostProcess	MCA/RVGPUCustomBehaviour.h	/^class RVGPUInstrPostProcess : public InstrPostProcess {$/;"	c	namespace:llvm::mca
RVGPUInstructionSelector	RVGPUInstructionSelector.cpp	/^RVGPUInstructionSelector::RVGPUInstructionSelector($/;"	f	class:RVGPUInstructionSelector
RVGPUInstructionSelector	RVGPUInstructionSelector.h	/^class RVGPUInstructionSelector final : public InstructionSelector {$/;"	c	namespace:llvm
RVGPULateCodeGenPrepare	RVGPULateCodeGenPrepare.cpp	/^  RVGPULateCodeGenPrepare() : FunctionPass(ID) {}$/;"	f	class:__anon4d9375140111::RVGPULateCodeGenPrepare	file:
RVGPULateCodeGenPrepare	RVGPULateCodeGenPrepare.cpp	/^class RVGPULateCodeGenPrepare$/;"	c	namespace:__anon4d9375140111	file:
RVGPULegalizerInfo	RVGPULegalizerInfo.cpp	/^RVGPULegalizerInfo::RVGPULegalizerInfo(const GCNSubtarget &ST_,$/;"	f	class:RVGPULegalizerInfo
RVGPULegalizerInfo	RVGPULegalizerInfo.h	/^class RVGPULegalizerInfo final : public LegalizerInfo {$/;"	c	namespace:llvm
RVGPULibCalls	RVGPULibCalls.cpp	/^  RVGPULibCalls() {}$/;"	f	class:llvm::RVGPULibCalls	file:
RVGPULibCalls	RVGPULibCalls.cpp	/^class RVGPULibCalls {$/;"	c	namespace:llvm	file:
RVGPULibFunc	RVGPULibFunc.cpp	/^RVGPULibFunc::RVGPULibFunc(EFuncId Id, FunctionType *FT, bool SignedInts) {$/;"	f	class:RVGPULibFunc
RVGPULibFunc	RVGPULibFunc.cpp	/^RVGPULibFunc::RVGPULibFunc(EFuncId Id, const RVGPULibFunc &CopyFrom) {$/;"	f	class:RVGPULibFunc
RVGPULibFunc	RVGPULibFunc.cpp	/^RVGPULibFunc::RVGPULibFunc(StringRef Name, FunctionType *FT) {$/;"	f	class:RVGPULibFunc
RVGPULibFunc	RVGPULibFunc.cpp	/^RVGPULibFunc::RVGPULibFunc(const RVGPULibFunc &F) {$/;"	f	class:RVGPULibFunc
RVGPULibFunc	RVGPULibFunc.h	/^  explicit RVGPULibFunc() : Impl(std::unique_ptr<RVGPULibFuncImpl>()) {}$/;"	f	class:llvm::RVGPULibFunc
RVGPULibFunc	RVGPULibFunc.h	/^class RVGPULibFunc : public RVGPULibFuncBase {$/;"	c	namespace:llvm
RVGPULibFuncBase	RVGPULibFunc.h	/^class RVGPULibFuncBase {$/;"	c	namespace:llvm
RVGPULibFuncImpl	RVGPULibFunc.h	/^class RVGPULibFuncImpl : public RVGPULibFuncBase {$/;"	c	namespace:llvm
RVGPULowerKernelArguments	RVGPULowerKernelArguments.cpp	/^  RVGPULowerKernelArguments() : FunctionPass(ID) {}$/;"	f	class:__anonf85f450a0111::RVGPULowerKernelArguments	file:
RVGPULowerKernelArguments	RVGPULowerKernelArguments.cpp	/^class RVGPULowerKernelArguments : public FunctionPass {$/;"	c	namespace:__anonf85f450a0111	file:
RVGPULowerKernelArgumentsPass	RVGPU.h	/^  RVGPULowerKernelArgumentsPass(TargetMachine &TM) : TM(TM){};$/;"	f	class:llvm::RVGPULowerKernelArgumentsPass
RVGPULowerKernelArgumentsPass	RVGPU.h	/^class RVGPULowerKernelArgumentsPass$/;"	c	namespace:llvm
RVGPULowerKernelAttributes	RVGPULowerKernelAttributes.cpp	/^  RVGPULowerKernelAttributes() : ModulePass(ID) {}$/;"	f	class:__anon7b93ed1b0111::RVGPULowerKernelAttributes	file:
RVGPULowerKernelAttributes	RVGPULowerKernelAttributes.cpp	/^class RVGPULowerKernelAttributes : public ModulePass {$/;"	c	namespace:__anon7b93ed1b0111	file:
RVGPULowerKernelAttributesPass	RVGPU.h	/^struct RVGPULowerKernelAttributesPass$/;"	s	namespace:llvm
RVGPULowerModuleLDS	RVGPULowerModuleLDSPass.cpp	/^  RVGPULowerModuleLDS(const RVGPUTargetMachine &TM_) : TM(TM_) {}$/;"	f	class:__anoncc7483b30111::RVGPULowerModuleLDS	file:
RVGPULowerModuleLDS	RVGPULowerModuleLDSPass.cpp	/^class RVGPULowerModuleLDS {$/;"	c	namespace:__anoncc7483b30111	file:
RVGPULowerModuleLDSLegacy	RVGPULowerModuleLDSPass.cpp	/^  RVGPULowerModuleLDSLegacy(const RVGPUTargetMachine *TM_ = nullptr)$/;"	f	class:__anoncc7483b30111::RVGPULowerModuleLDSLegacy	file:
RVGPULowerModuleLDSLegacy	RVGPULowerModuleLDSPass.cpp	/^class RVGPULowerModuleLDSLegacy : public ModulePass {$/;"	c	namespace:__anoncc7483b30111	file:
RVGPULowerModuleLDSLegacyPassID	RVGPULowerModuleLDSPass.cpp	/^char &llvm::RVGPULowerModuleLDSLegacyPassID = RVGPULowerModuleLDSLegacy::ID;$/;"	m	class:llvm	typeref:typename:char &
RVGPULowerModuleLDSPass	RVGPU.h	/^  RVGPULowerModuleLDSPass(const RVGPUTargetMachine &TM_) : TM(TM_) {}$/;"	f	struct:llvm::RVGPULowerModuleLDSPass
RVGPULowerModuleLDSPass	RVGPU.h	/^struct RVGPULowerModuleLDSPass : PassInfoMixin<RVGPULowerModuleLDSPass> {$/;"	s	namespace:llvm
RVGPUMCAsmInfo	MCTargetDesc/RVGPUMCAsmInfo.cpp	/^RVGPUMCAsmInfo::RVGPUMCAsmInfo(const Triple &TT,$/;"	f	class:RVGPUMCAsmInfo
RVGPUMCAsmInfo	MCTargetDesc/RVGPUMCAsmInfo.h	/^class RVGPUMCAsmInfo : public MCAsmInfoELF {$/;"	c	namespace:llvm
RVGPUMCCodeEmitter	MCTargetDesc/RVGPUMCCodeEmitter.cpp	/^  RVGPUMCCodeEmitter(const MCInstrInfo &MCII, const MCRegisterInfo &MRI)$/;"	f	class:__anon1f37a0740111::RVGPUMCCodeEmitter	file:
RVGPUMCCodeEmitter	MCTargetDesc/RVGPUMCCodeEmitter.cpp	/^class RVGPUMCCodeEmitter : public MCCodeEmitter {$/;"	c	namespace:__anon1f37a0740111	file:
RVGPUMCInstLower	RVGPUMCInstLower.cpp	/^RVGPUMCInstLower::RVGPUMCInstLower(MCContext &ctx,$/;"	f	class:RVGPUMCInstLower
RVGPUMCInstLower	RVGPUMCInstLower.h	/^class RVGPUMCInstLower {$/;"	c
RVGPUMCInstrAnalysis	MCTargetDesc/RVGPUMCTargetDesc.cpp	/^  explicit RVGPUMCInstrAnalysis(const MCInstrInfo *Info)$/;"	f	class:__anon9509ab050111::RVGPUMCInstrAnalysis	file:
RVGPUMCInstrAnalysis	MCTargetDesc/RVGPUMCTargetDesc.cpp	/^class RVGPUMCInstrAnalysis : public MCInstrAnalysis {$/;"	c	namespace:__anon9509ab050111	file:
RVGPUMIRFormatter	RVGPUMIRFormatter.h	/^class RVGPUMIRFormatter final : public MIRFormatter {$/;"	c	namespace:llvm
RVGPUMachineCFGStructurizer	RVGPUMachineCFGStructurizer.cpp	/^  RVGPUMachineCFGStructurizer() : MachineFunctionPass(ID) {$/;"	f	class:__anon1695b1f50311::RVGPUMachineCFGStructurizer	file:
RVGPUMachineCFGStructurizer	RVGPUMachineCFGStructurizer.cpp	/^class RVGPUMachineCFGStructurizer : public MachineFunctionPass {$/;"	c	namespace:__anon1695b1f50311	file:
RVGPUMachineCFGStructurizerID	RVGPUMachineCFGStructurizer.cpp	/^char RVGPUMachineCFGStructurizerID = RVGPUMachineCFGStructurizer::ID;$/;"	v	typeref:typename:char
RVGPUMachineFunction	RVGPUMachineFunction.cpp	/^RVGPUMachineFunction::RVGPUMachineFunction(const Function &F,$/;"	f	class:RVGPUMachineFunction
RVGPUMachineFunction	RVGPUMachineFunction.h	/^class RVGPUMachineFunction : public MachineFunctionInfo {$/;"	c	namespace:llvm
RVGPUMachineModuleInfo	RVGPUMachineModuleInfo.cpp	/^RVGPUMachineModuleInfo::RVGPUMachineModuleInfo(const MachineModuleInfo &MMI)$/;"	f	class:llvm::RVGPUMachineModuleInfo
RVGPUMachineModuleInfo	RVGPUMachineModuleInfo.h	/^class RVGPUMachineModuleInfo final : public MachineModuleInfoELF {$/;"	c	namespace:llvm
RVGPUMangledLibFunc	RVGPULibFunc.cpp	/^RVGPUMangledLibFunc::RVGPUMangledLibFunc($/;"	f	class:RVGPUMangledLibFunc
RVGPUMangledLibFunc	RVGPULibFunc.cpp	/^RVGPUMangledLibFunc::RVGPUMangledLibFunc() {$/;"	f	class:RVGPUMangledLibFunc
RVGPUMangledLibFunc	RVGPULibFunc.cpp	/^RVGPUMangledLibFunc::RVGPUMangledLibFunc(EFuncId id, FunctionType *FT,$/;"	f	class:RVGPUMangledLibFunc
RVGPUMangledLibFunc	RVGPULibFunc.h	/^class RVGPUMangledLibFunc : public RVGPULibFuncImpl {$/;"	c	namespace:llvm
RVGPUMatchResultTy	AsmParser/RVGPUAsmParser.cpp	/^  enum RVGPUMatchResultTy {$/;"	g	class:__anon672fa8550111::RVGPUAsmParser	file:
RVGPUOpenCLEnqueuedBlockLowering	RVGPUOpenCLEnqueuedBlockLowering.cpp	/^  explicit RVGPUOpenCLEnqueuedBlockLowering() : ModulePass(ID) {}$/;"	f	class:__anon3ce248190111::RVGPUOpenCLEnqueuedBlockLowering	file:
RVGPUOpenCLEnqueuedBlockLowering	RVGPUOpenCLEnqueuedBlockLowering.cpp	/^class RVGPUOpenCLEnqueuedBlockLowering : public ModulePass {$/;"	c	namespace:__anon3ce248190111	file:
RVGPUOpenCLEnqueuedBlockLoweringID	RVGPUOpenCLEnqueuedBlockLowering.cpp	/^char &llvm::RVGPUOpenCLEnqueuedBlockLoweringID =$/;"	m	class:llvm	typeref:typename:char &
RVGPUOperand	AsmParser/RVGPUAsmParser.cpp	/^  RVGPUOperand(KindTy Kind_, const RVGPUAsmParser *AsmParser_)$/;"	f	class:__anon672fa8550111::RVGPUOperand	file:
RVGPUOperand	AsmParser/RVGPUAsmParser.cpp	/^class RVGPUOperand : public MCParsedAsmOperand {$/;"	c	namespace:__anon672fa8550111	file:
RVGPUOutgoingArgHandler	RVGPUCallLowering.cpp	/^  RVGPUOutgoingArgHandler(MachineIRBuilder &MIRBuilder,$/;"	f	struct:__anonad2fb0ad0111::RVGPUOutgoingArgHandler	file:
RVGPUOutgoingArgHandler	RVGPUCallLowering.cpp	/^struct RVGPUOutgoingArgHandler : public RVGPUOutgoingValueHandler {$/;"	s	namespace:__anonad2fb0ad0111	file:
RVGPUOutgoingValueHandler	RVGPUCallLowering.cpp	/^  RVGPUOutgoingValueHandler(MachineIRBuilder &B, MachineRegisterInfo &MRI,$/;"	f	struct:__anonad2fb0ad0111::RVGPUOutgoingValueHandler	file:
RVGPUOutgoingValueHandler	RVGPUCallLowering.cpp	/^struct RVGPUOutgoingValueHandler : public CallLowering::OutgoingValueHandler {$/;"	s	namespace:__anonad2fb0ad0111	file:
RVGPUPALMetadata	Utils/RVGPUPALMetadata.h	/^class RVGPUPALMetadata {$/;"	c	namespace:llvm
RVGPUPSVKind	RVMachineFunctionInfo.h	/^  enum RVGPUPSVKind : unsigned {$/;"	g	class:llvm::RVGPUPseudoSourceValue	typeref:typename:unsigned
RVGPUPassConfig	RVGPUTargetMachine.cpp	/^RVGPUPassConfig::RVGPUPassConfig(LLVMTargetMachine &TM, PassManagerBase &PM)$/;"	f	class:RVGPUPassConfig
RVGPUPassConfig	RVGPUTargetMachine.h	/^class RVGPUPassConfig : public TargetPassConfig {$/;"	c	namespace:llvm
RVGPUPerfHint	RVGPUPerfHintAnalysis.cpp	/^  RVGPUPerfHint(RVGPUPerfHintAnalysis::FuncInfoMap &FIM_,$/;"	f	struct:__anon406ad74e0111::RVGPUPerfHint	file:
RVGPUPerfHint	RVGPUPerfHintAnalysis.cpp	/^struct RVGPUPerfHint {$/;"	s	namespace:__anon406ad74e0111	file:
RVGPUPerfHintAnalysis	RVGPUPerfHintAnalysis.h	/^  RVGPUPerfHintAnalysis() : CallGraphSCCPass(ID) {}$/;"	f	struct:llvm::RVGPUPerfHintAnalysis
RVGPUPerfHintAnalysis	RVGPUPerfHintAnalysis.h	/^struct RVGPUPerfHintAnalysis : public CallGraphSCCPass {$/;"	s	namespace:llvm
RVGPUPerfHintAnalysisID	RVGPUPerfHintAnalysis.cpp	/^char &llvm::RVGPUPerfHintAnalysisID = RVGPUPerfHintAnalysis::ID;$/;"	m	class:llvm	typeref:typename:char &
RVGPUPostLegalizerCombiner	RVGPUPostLegalizerCombiner.cpp	/^RVGPUPostLegalizerCombiner::RVGPUPostLegalizerCombiner(bool IsOptNone)$/;"	f	class:RVGPUPostLegalizerCombiner
RVGPUPostLegalizerCombiner	RVGPUPostLegalizerCombiner.cpp	/^class RVGPUPostLegalizerCombiner : public MachineFunctionPass {$/;"	c	namespace:__anonf94dcdde0111	file:
RVGPUPostLegalizerCombinerImpl	RVGPUPostLegalizerCombiner.cpp	/^RVGPUPostLegalizerCombinerImpl::RVGPUPostLegalizerCombinerImpl($/;"	f	class:__anonf94dcdde0111::RVGPUPostLegalizerCombinerImpl
RVGPUPostLegalizerCombinerImpl	RVGPUPostLegalizerCombiner.cpp	/^class RVGPUPostLegalizerCombinerImpl : public Combiner {$/;"	c	namespace:__anonf94dcdde0111	file:
RVGPUPreLegalizerCombiner	RVGPUPreLegalizerCombiner.cpp	/^RVGPUPreLegalizerCombiner::RVGPUPreLegalizerCombiner(bool IsOptNone)$/;"	f	class:RVGPUPreLegalizerCombiner
RVGPUPreLegalizerCombiner	RVGPUPreLegalizerCombiner.cpp	/^class RVGPUPreLegalizerCombiner : public MachineFunctionPass {$/;"	c	namespace:__anonb779c2ff0111	file:
RVGPUPreLegalizerCombinerImpl	RVGPUPreLegalizerCombiner.cpp	/^RVGPUPreLegalizerCombinerImpl::RVGPUPreLegalizerCombinerImpl($/;"	f	class:__anonb779c2ff0111::RVGPUPreLegalizerCombinerImpl
RVGPUPreLegalizerCombinerImpl	RVGPUPreLegalizerCombiner.cpp	/^class RVGPUPreLegalizerCombinerImpl : public Combiner {$/;"	c	namespace:__anonb779c2ff0111	file:
RVGPUPrintfRuntimeBinding	RVGPUPrintfRuntimeBinding.cpp	/^RVGPUPrintfRuntimeBinding::RVGPUPrintfRuntimeBinding() : ModulePass(ID) {$/;"	f	class:RVGPUPrintfRuntimeBinding
RVGPUPrintfRuntimeBinding	RVGPUPrintfRuntimeBinding.cpp	/^class RVGPUPrintfRuntimeBinding final : public ModulePass {$/;"	c	namespace:__anonf5f1f1fc0111	file:
RVGPUPrintfRuntimeBindingImpl	RVGPUPrintfRuntimeBinding.cpp	/^  RVGPUPrintfRuntimeBindingImpl() {}$/;"	f	class:__anonf5f1f1fc0111::RVGPUPrintfRuntimeBindingImpl	file:
RVGPUPrintfRuntimeBindingImpl	RVGPUPrintfRuntimeBinding.cpp	/^class RVGPUPrintfRuntimeBindingImpl {$/;"	c	namespace:__anonf5f1f1fc0111	file:
RVGPUPrintfRuntimeBindingPass	RVGPU.h	/^struct RVGPUPrintfRuntimeBindingPass$/;"	s	namespace:llvm
RVGPUPromoteAlloca	RVGPUPromoteAlloca.cpp	/^  RVGPUPromoteAlloca() : FunctionPass(ID) {}$/;"	f	class:__anonea904d1c0111::RVGPUPromoteAlloca	file:
RVGPUPromoteAlloca	RVGPUPromoteAlloca.cpp	/^class RVGPUPromoteAlloca : public FunctionPass {$/;"	c	namespace:__anonea904d1c0111	file:
RVGPUPromoteAllocaImpl	RVGPUPromoteAlloca.cpp	/^  RVGPUPromoteAllocaImpl(TargetMachine &TM) : TM(TM) {$/;"	f	class:__anonea904d1c0111::RVGPUPromoteAllocaImpl	file:
RVGPUPromoteAllocaImpl	RVGPUPromoteAlloca.cpp	/^class RVGPUPromoteAllocaImpl {$/;"	c	namespace:__anonea904d1c0111	file:
RVGPUPromoteAllocaPass	RVGPU.h	/^  RVGPUPromoteAllocaPass(TargetMachine &TM) : TM(TM) {}$/;"	f	struct:llvm::RVGPUPromoteAllocaPass
RVGPUPromoteAllocaPass	RVGPU.h	/^struct RVGPUPromoteAllocaPass : PassInfoMixin<RVGPUPromoteAllocaPass> {$/;"	s	namespace:llvm
RVGPUPromoteAllocaToVector	RVGPUPromoteAlloca.cpp	/^  RVGPUPromoteAllocaToVector() : FunctionPass(ID) {}$/;"	f	class:__anonea904d1c0111::RVGPUPromoteAllocaToVector	file:
RVGPUPromoteAllocaToVector	RVGPUPromoteAlloca.cpp	/^class RVGPUPromoteAllocaToVector : public FunctionPass {$/;"	c	namespace:__anonea904d1c0111	file:
RVGPUPromoteAllocaToVectorID	RVGPUPromoteAlloca.cpp	/^char &llvm::RVGPUPromoteAllocaToVectorID = RVGPUPromoteAllocaToVector::ID;$/;"	m	class:llvm	typeref:typename:char &
RVGPUPromoteAllocaToVectorPass	RVGPU.h	/^  RVGPUPromoteAllocaToVectorPass(TargetMachine &TM) : TM(TM) {}$/;"	f	struct:llvm::RVGPUPromoteAllocaToVectorPass
RVGPUPromoteAllocaToVectorPass	RVGPU.h	/^struct RVGPUPromoteAllocaToVectorPass$/;"	s	namespace:llvm
RVGPUPromoteKernelArguments	RVGPUPromoteKernelArguments.cpp	/^  RVGPUPromoteKernelArguments() : FunctionPass(ID) {}$/;"	f	class:__anon281388e70111::RVGPUPromoteKernelArguments	file:
RVGPUPromoteKernelArguments	RVGPUPromoteKernelArguments.cpp	/^class RVGPUPromoteKernelArguments : public FunctionPass {$/;"	c	namespace:__anon281388e70111	file:
RVGPUPromoteKernelArgumentsPass	RVGPU.h	/^struct RVGPUPromoteKernelArgumentsPass$/;"	s	namespace:llvm
RVGPUPseudoSourceValue	RVMachineFunctionInfo.h	/^  RVGPUPseudoSourceValue(unsigned Kind, const RVGPUTargetMachine &TM)$/;"	f	class:llvm::RVGPUPseudoSourceValue
RVGPUPseudoSourceValue	RVMachineFunctionInfo.h	/^class RVGPUPseudoSourceValue : public PseudoSourceValue {$/;"	c	namespace:llvm
RVGPURegBankCombiner	RVGPURegBankCombiner.cpp	/^RVGPURegBankCombiner::RVGPURegBankCombiner(bool IsOptNone)$/;"	f	class:RVGPURegBankCombiner
RVGPURegBankCombiner	RVGPURegBankCombiner.cpp	/^class RVGPURegBankCombiner : public MachineFunctionPass {$/;"	c	namespace:__anon00ae19330111	file:
RVGPURegBankCombinerImpl	RVGPURegBankCombiner.cpp	/^RVGPURegBankCombinerImpl::RVGPURegBankCombinerImpl($/;"	f	class:__anon00ae19330111::RVGPURegBankCombinerImpl
RVGPURegBankCombinerImpl	RVGPURegBankCombiner.cpp	/^class RVGPURegBankCombinerImpl : public Combiner {$/;"	c	namespace:__anon00ae19330111	file:
RVGPURegBankSelect	RVGPURegBankSelect.cpp	/^RVGPURegBankSelect::RVGPURegBankSelect(Mode RunningMode)$/;"	f	class:RVGPURegBankSelect
RVGPURegBankSelect	RVGPURegBankSelect.h	/^class RVGPURegBankSelect final : public RegBankSelect {$/;"	c	namespace:llvm
RVGPURegisterBankInfo	RVGPURegisterBankInfo.cpp	/^RVGPURegisterBankInfo::RVGPURegisterBankInfo(const GCNSubtarget &ST)$/;"	f	class:RVGPURegisterBankInfo
RVGPURegisterBankInfo	RVGPURegisterBankInfo.h	/^class RVGPURegisterBankInfo final : public RVGPUGenRegisterBankInfo {$/;"	c	namespace:llvm
RVGPURemoveIncompatibleFunctions	RVGPURemoveIncompatibleFunctions.cpp	/^  RVGPURemoveIncompatibleFunctions(const TargetMachine *TM = nullptr)$/;"	f	class:__anonbd23f2080111::RVGPURemoveIncompatibleFunctions	file:
RVGPURemoveIncompatibleFunctions	RVGPURemoveIncompatibleFunctions.cpp	/^class RVGPURemoveIncompatibleFunctions : public ModulePass {$/;"	c	namespace:__anonbd23f2080111	file:
RVGPUResourceUsageAnalysis	RVGPUResourceUsageAnalysis.h	/^  RVGPUResourceUsageAnalysis() : ModulePass(ID) {}$/;"	f	struct:llvm::RVGPUResourceUsageAnalysis
RVGPUResourceUsageAnalysis	RVGPUResourceUsageAnalysis.h	/^struct RVGPUResourceUsageAnalysis : public ModulePass {$/;"	s	namespace:llvm
RVGPUResourceUsageAnalysisID	RVGPUResourceUsageAnalysis.cpp	/^char &llvm::RVGPUResourceUsageAnalysisID = RVGPUResourceUsageAnalysis::ID;$/;"	m	class:llvm	typeref:typename:char &
RVGPURewriteOutArguments	RVGPURewriteOutArguments.cpp	/^  RVGPURewriteOutArguments() : FunctionPass(ID) {}$/;"	f	class:__anon63899d5a0111::RVGPURewriteOutArguments	file:
RVGPURewriteOutArguments	RVGPURewriteOutArguments.cpp	/^class RVGPURewriteOutArguments : public FunctionPass {$/;"	c	namespace:__anon63899d5a0111	file:
RVGPURewriteUndefForPHILegacy	RVGPURewriteUndefForPHI.cpp	/^  RVGPURewriteUndefForPHILegacy() : FunctionPass(ID) {$/;"	f	class:__anon56776a060111::RVGPURewriteUndefForPHILegacy	file:
RVGPURewriteUndefForPHILegacy	RVGPURewriteUndefForPHI.cpp	/^class RVGPURewriteUndefForPHILegacy : public FunctionPass {$/;"	c	namespace:__anon56776a060111	file:
RVGPURewriteUndefForPHIPass	RVGPU.h	/^class RVGPURewriteUndefForPHIPass$/;"	c	namespace:llvm
RVGPUSetWavePriority	RVGPUSetWavePriority.cpp	/^  RVGPUSetWavePriority() : MachineFunctionPass(ID) {}$/;"	f	class:__anonfc3f584b0111::RVGPUSetWavePriority	file:
RVGPUSetWavePriority	RVGPUSetWavePriority.cpp	/^class RVGPUSetWavePriority : public MachineFunctionPass {$/;"	c	namespace:__anonfc3f584b0111	file:
RVGPUSimplifyLibCallsPass	RVGPU.h	/^  RVGPUSimplifyLibCallsPass() {}$/;"	f	struct:llvm::RVGPUSimplifyLibCallsPass
RVGPUSimplifyLibCallsPass	RVGPU.h	/^struct RVGPUSimplifyLibCallsPass : PassInfoMixin<RVGPUSimplifyLibCallsPass> {$/;"	s	namespace:llvm
RVGPUSubtarget	RVGPUInstructionSelector.cpp	/^#define RVGPUSubtarget /;"	d	file:
RVGPUSubtarget	RVGPUInstructionSelector.h	/^#define RVGPUSubtarget /;"	d
RVGPUSubtarget	RVGPUPostLegalizerCombiner.cpp	/^#define RVGPUSubtarget /;"	d	file:
RVGPUSubtarget	RVGPUPreLegalizerCombiner.cpp	/^#define RVGPUSubtarget /;"	d	file:
RVGPUSubtarget	RVGPURegBankCombiner.cpp	/^#define RVGPUSubtarget /;"	d	file:
RVGPUSubtarget	RVGPUSubtarget.cpp	/^#define RVGPUSubtarget /;"	d	file:
RVGPUSubtarget	RVGPUSubtarget.cpp	/^RVGPUSubtarget::RVGPUSubtarget(const Triple &TT) : TargetTriple(TT) {}$/;"	f	class:RVGPUSubtarget
RVGPUSubtarget	RVGPUSubtarget.h	/^class RVGPUSubtarget {$/;"	c	namespace:llvm
RVGPUSymbolizer	Disassembler/RVGPUDisassembler.h	/^  RVGPUSymbolizer(MCContext &Ctx, std::unique_ptr<MCRelocationInfo> &&RelInfo,$/;"	f	class:llvm::RVGPUSymbolizer
RVGPUSymbolizer	Disassembler/RVGPUDisassembler.h	/^class RVGPUSymbolizer : public MCSymbolizer {$/;"	c	namespace:llvm
RVGPUTTIImpl	RVGPUTargetTransformInfo.cpp	/^RVGPUTTIImpl::RVGPUTTIImpl(const RVGPUTargetMachine *TM, const Function &F)$/;"	f	class:RVGPUTTIImpl
RVGPUTTIImpl	RVGPUTargetTransformInfo.h	/^class RVGPUTTIImpl final : public BasicTTIImplBase<RVGPUTTIImpl> {$/;"	c	namespace:llvm
RVGPUTargetAsmStreamer	MCTargetDesc/RVGPUTargetStreamer.cpp	/^RVGPUTargetAsmStreamer::RVGPUTargetAsmStreamer(MCStreamer &S,$/;"	f	class:RVGPUTargetAsmStreamer
RVGPUTargetAsmStreamer	MCTargetDesc/RVGPUTargetStreamer.h	/^class RVGPUTargetAsmStreamer final : public RVGPUTargetStreamer {$/;"	c	namespace:llvm
RVGPUTargetELFStreamer	MCTargetDesc/RVGPUTargetStreamer.cpp	/^RVGPUTargetELFStreamer::RVGPUTargetELFStreamer(MCStreamer &S,$/;"	f	class:RVGPUTargetELFStreamer
RVGPUTargetELFStreamer	MCTargetDesc/RVGPUTargetStreamer.h	/^class RVGPUTargetELFStreamer final : public RVGPUTargetStreamer {$/;"	c	namespace:llvm
RVGPUTargetID	Utils/RVGPUBaseInfo.cpp	/^RVGPUTargetID::RVGPUTargetID(const MCSubtargetInfo &STI)$/;"	f	class:llvm::RVGPU::IsaInfo::RVGPUTargetID
RVGPUTargetID	Utils/RVGPUBaseInfo.h	/^class RVGPUTargetID {$/;"	c	namespace:llvm::RVGPU::IsaInfo
RVGPUTargetLowering	RVGPUISelLowering.cpp	/^RVGPUTargetLowering::RVGPUTargetLowering(const TargetMachine &TM,$/;"	f	class:RVGPUTargetLowering
RVGPUTargetLowering	RVGPUISelLowering.h	/^class RVGPUTargetLowering : public TargetLowering {$/;"	c	namespace:llvm
RVGPUTargetMachine	RVGPUTargetMachine.cpp	/^RVGPUTargetMachine::RVGPUTargetMachine(const Target &T, const Triple &TT,$/;"	f	class:RVGPUTargetMachine
RVGPUTargetMachine	RVGPUTargetMachine.h	/^class RVGPUTargetMachine : public LLVMTargetMachine {$/;"	c	namespace:llvm
RVGPUTargetObjectFile	RVGPUTargetObjectFile.h	/^class RVGPUTargetObjectFile : public TargetLoweringObjectFileELF {$/;"	c	namespace:llvm
RVGPUTargetStreamer	MCTargetDesc/RVGPUTargetStreamer.h	/^  RVGPUTargetStreamer(MCStreamer &S) : MCTargetStreamer(S) {}$/;"	f	class:llvm::RVGPUTargetStreamer
RVGPUTargetStreamer	MCTargetDesc/RVGPUTargetStreamer.h	/^class RVGPUTargetStreamer : public MCTargetStreamer {$/;"	c	namespace:llvm
RVGPUUnifyDivergentExitNodes	RVGPUUnifyDivergentExitNodes.cpp	/^  RVGPUUnifyDivergentExitNodes() : FunctionPass(ID) {$/;"	f	class:__anonc14c2af00111::RVGPUUnifyDivergentExitNodes	file:
RVGPUUnifyDivergentExitNodes	RVGPUUnifyDivergentExitNodes.cpp	/^class RVGPUUnifyDivergentExitNodes : public FunctionPass {$/;"	c	namespace:__anonc14c2af00111	file:
RVGPUUnifyDivergentExitNodesID	RVGPUUnifyDivergentExitNodes.cpp	/^char &llvm::RVGPUUnifyDivergentExitNodesID = RVGPUUnifyDivergentExitNodes::ID;$/;"	m	class:llvm	typeref:typename:char &
RVGPUUnifyDivergentExitNodesImpl	RVGPUUnifyDivergentExitNodes.cpp	/^  RVGPUUnifyDivergentExitNodesImpl(const TargetTransformInfo *TTI)$/;"	f	class:__anonc14c2af00111::RVGPUUnifyDivergentExitNodesImpl	file:
RVGPUUnifyDivergentExitNodesImpl	RVGPUUnifyDivergentExitNodes.cpp	/^class RVGPUUnifyDivergentExitNodesImpl {$/;"	c	namespace:__anonc14c2af00111	file:
RVGPUUnifyDivergentExitNodesPass	RVGPUUnifyDivergentExitNodes.h	/^class RVGPUUnifyDivergentExitNodesPass$/;"	c	namespace:llvm
RVGPUUnifyMetadata	RVGPUUnifyMetadata.cpp	/^    explicit RVGPUUnifyMetadata() : ModulePass(ID) {}$/;"	f	class:__anon26dde6960111::RVGPUUnifyMetadata	file:
RVGPUUnifyMetadata	RVGPUUnifyMetadata.cpp	/^  class RVGPUUnifyMetadata : public ModulePass {$/;"	c	namespace:__anon26dde6960111	file:
RVGPUUnifyMetadataID	RVGPUUnifyMetadata.cpp	/^  char &llvm::RVGPUUnifyMetadataID = RVGPUUnifyMetadata::ID;$/;"	m	class:llvm	typeref:typename:char &
RVGPUUnifyMetadataPass	RVGPU.h	/^struct RVGPUUnifyMetadataPass : PassInfoMixin<RVGPUUnifyMetadataPass> {$/;"	s	namespace:llvm
RVGPUUnmangledLibFunc	RVGPULibFunc.cpp	/^RVGPUUnmangledLibFunc::RVGPUUnmangledLibFunc() {$/;"	f	class:RVGPUUnmangledLibFunc
RVGPUUnmangledLibFunc	RVGPULibFunc.h	/^  explicit RVGPUUnmangledLibFunc(StringRef FName, FunctionType *FT) {$/;"	f	class:llvm::RVGPUUnmangledLibFunc
RVGPUUnmangledLibFunc	RVGPULibFunc.h	/^class RVGPUUnmangledLibFunc : public RVGPULibFuncImpl {$/;"	c	namespace:llvm
RVGPUUseNativeCallsPass	RVGPU.h	/^struct RVGPUUseNativeCallsPass : PassInfoMixin<RVGPUUseNativeCallsPass> {$/;"	s	namespace:llvm
RVGPU_ATTRIBUTE	RVGPUAttributor.cpp	/^#define RVGPU_ATTRIBUTE(/;"	d	file:
RVGPU_CODE_VERSION_MAJOR	RVKernelCodeT.h	/^  RVGPU_CODE_VERSION_MAJOR = 0,$/;"	e	enum:rvgpu_code_version_t
RVGPU_CODE_VERSION_MINOR	RVKernelCodeT.h	/^  RVGPU_CODE_VERSION_MINOR = 1$/;"	e	enum:rvgpu_code_version_t
RVHSA	GCNSubtarget.h	/^    RVHSA = 0x01,$/;"	e	enum:llvm::GCNSubtarget::TrapHandlerAbi
RVHSA_COV4	Utils/RVGPUBaseInfo.h	/^enum { RVHSA_COV4 = 4, RVHSA_COV5 = 5 };$/;"	e	enum:llvm::RVGPU::__anon2734ef760103
RVHSA_COV5	Utils/RVGPUBaseInfo.h	/^enum { RVHSA_COV4 = 4, RVHSA_COV5 = 5 };$/;"	e	enum:llvm::RVGPU::__anon2734ef760103
RVInstrInfo	RVInstrInfo.cpp	/^RVInstrInfo::RVInstrInfo(const GCNSubtarget &ST)$/;"	f	class:RVInstrInfo
RVInstrInfo	RVInstrInfo.h	/^class RVInstrInfo final : public RVGPUGenInstrInfo {$/;"	c	namespace:llvm
RVKERNELCODET_H	RVKernelCodeT.h	/^#define RVKERNELCODET_H$/;"	d
RVMachineFunctionInfo	RVMachineFunctionInfo.cpp	/^RVMachineFunctionInfo::RVMachineFunctionInfo(const Function &F,$/;"	f	class:RVMachineFunctionInfo
RVMachineFunctionInfo	RVMachineFunctionInfo.cpp	/^yaml::RVMachineFunctionInfo::RVMachineFunctionInfo($/;"	f	class:yaml::RVMachineFunctionInfo
RVMachineFunctionInfo	RVMachineFunctionInfo.h	/^class RVMachineFunctionInfo final : public RVGPUMachineFunction,$/;"	c	namespace:llvm
RVMachineFunctionInfo	RVMachineFunctionInfo.h	/^struct RVMachineFunctionInfo final : public yaml::MachineFunctionInfo {$/;"	s	namespace:llvm::yaml
RVRegisterInfo	RVRegisterInfo.cpp	/^RVRegisterInfo::RVRegisterInfo(const GCNSubtarget &ST)$/;"	f	class:RVRegisterInfo
RVRegisterInfo	RVRegisterInfo.h	/^class RVRegisterInfo final : public RVGPUGenRegisterInfo {$/;"	c	namespace:llvm
RVTargetLowering	RVISelLowering.cpp	/^RVTargetLowering::RVTargetLowering(const TargetMachine &TM,$/;"	f	class:RVTargetLowering
RVTargetLowering	RVISelLowering.h	/^class RVTargetLowering final : public RVGPUTargetLowering {$/;"	c	namespace:llvm
RV_CODE_PROPERTY_ENABLE_ORDERED_APPEND_GDS	RVKernelCodeT.h	/^  RV_CODE_PROPERTY_ENABLE_ORDERED_APPEND_GDS = ((1 << RV_CODE_PROPERTY_ENABLE_ORDERED_APPEND_GDS/;"	e	enum:rv_code_property_mask_t
RV_CODE_PROPERTY_ENABLE_ORDERED_APPEND_GDS_SHIFT	RVKernelCodeT.h	/^  RV_CODE_PROPERTY_ENABLE_ORDERED_APPEND_GDS_SHIFT = 16,$/;"	e	enum:rv_code_property_mask_t
RV_CODE_PROPERTY_ENABLE_ORDERED_APPEND_GDS_WIDTH	RVKernelCodeT.h	/^  RV_CODE_PROPERTY_ENABLE_ORDERED_APPEND_GDS_WIDTH = 1,$/;"	e	enum:rv_code_property_mask_t
RV_CODE_PROPERTY_ENABLE_SGPR_DISPATCH_ID	RVKernelCodeT.h	/^  RV_CODE_PROPERTY_ENABLE_SGPR_DISPATCH_ID = ((1 << RV_CODE_PROPERTY_ENABLE_SGPR_DISPATCH_ID_WID/;"	e	enum:rv_code_property_mask_t
RV_CODE_PROPERTY_ENABLE_SGPR_DISPATCH_ID_SHIFT	RVKernelCodeT.h	/^  RV_CODE_PROPERTY_ENABLE_SGPR_DISPATCH_ID_SHIFT = 4,$/;"	e	enum:rv_code_property_mask_t
RV_CODE_PROPERTY_ENABLE_SGPR_DISPATCH_ID_WIDTH	RVKernelCodeT.h	/^  RV_CODE_PROPERTY_ENABLE_SGPR_DISPATCH_ID_WIDTH = 1,$/;"	e	enum:rv_code_property_mask_t
RV_CODE_PROPERTY_ENABLE_SGPR_DISPATCH_PTR	RVKernelCodeT.h	/^  RV_CODE_PROPERTY_ENABLE_SGPR_DISPATCH_PTR = ((1 << RV_CODE_PROPERTY_ENABLE_SGPR_DISPATCH_PTR_W/;"	e	enum:rv_code_property_mask_t
RV_CODE_PROPERTY_ENABLE_SGPR_DISPATCH_PTR_SHIFT	RVKernelCodeT.h	/^  RV_CODE_PROPERTY_ENABLE_SGPR_DISPATCH_PTR_SHIFT = 1,$/;"	e	enum:rv_code_property_mask_t
RV_CODE_PROPERTY_ENABLE_SGPR_DISPATCH_PTR_WIDTH	RVKernelCodeT.h	/^  RV_CODE_PROPERTY_ENABLE_SGPR_DISPATCH_PTR_WIDTH = 1,$/;"	e	enum:rv_code_property_mask_t
RV_CODE_PROPERTY_ENABLE_SGPR_FLAT_SCRATCH_INIT	RVKernelCodeT.h	/^  RV_CODE_PROPERTY_ENABLE_SGPR_FLAT_SCRATCH_INIT = ((1 << RV_CODE_PROPERTY_ENABLE_SGPR_FLAT_SCRA/;"	e	enum:rv_code_property_mask_t
RV_CODE_PROPERTY_ENABLE_SGPR_FLAT_SCRATCH_INIT_SHIFT	RVKernelCodeT.h	/^  RV_CODE_PROPERTY_ENABLE_SGPR_FLAT_SCRATCH_INIT_SHIFT = 5,$/;"	e	enum:rv_code_property_mask_t
RV_CODE_PROPERTY_ENABLE_SGPR_FLAT_SCRATCH_INIT_WIDTH	RVKernelCodeT.h	/^  RV_CODE_PROPERTY_ENABLE_SGPR_FLAT_SCRATCH_INIT_WIDTH = 1,$/;"	e	enum:rv_code_property_mask_t
RV_CODE_PROPERTY_ENABLE_SGPR_GRID_WORKGROUP_COUNT_X	RVKernelCodeT.h	/^  RV_CODE_PROPERTY_ENABLE_SGPR_GRID_WORKGROUP_COUNT_X = ((1 << RV_CODE_PROPERTY_ENABLE_SGPR_GRID/;"	e	enum:rv_code_property_mask_t
RV_CODE_PROPERTY_ENABLE_SGPR_GRID_WORKGROUP_COUNT_X_SHIFT	RVKernelCodeT.h	/^  RV_CODE_PROPERTY_ENABLE_SGPR_GRID_WORKGROUP_COUNT_X_SHIFT = 7,$/;"	e	enum:rv_code_property_mask_t
RV_CODE_PROPERTY_ENABLE_SGPR_GRID_WORKGROUP_COUNT_X_WIDTH	RVKernelCodeT.h	/^  RV_CODE_PROPERTY_ENABLE_SGPR_GRID_WORKGROUP_COUNT_X_WIDTH = 1,$/;"	e	enum:rv_code_property_mask_t
RV_CODE_PROPERTY_ENABLE_SGPR_GRID_WORKGROUP_COUNT_Y	RVKernelCodeT.h	/^  RV_CODE_PROPERTY_ENABLE_SGPR_GRID_WORKGROUP_COUNT_Y = ((1 << RV_CODE_PROPERTY_ENABLE_SGPR_GRID/;"	e	enum:rv_code_property_mask_t
RV_CODE_PROPERTY_ENABLE_SGPR_GRID_WORKGROUP_COUNT_Y_SHIFT	RVKernelCodeT.h	/^  RV_CODE_PROPERTY_ENABLE_SGPR_GRID_WORKGROUP_COUNT_Y_SHIFT = 8,$/;"	e	enum:rv_code_property_mask_t
RV_CODE_PROPERTY_ENABLE_SGPR_GRID_WORKGROUP_COUNT_Y_WIDTH	RVKernelCodeT.h	/^  RV_CODE_PROPERTY_ENABLE_SGPR_GRID_WORKGROUP_COUNT_Y_WIDTH = 1,$/;"	e	enum:rv_code_property_mask_t
RV_CODE_PROPERTY_ENABLE_SGPR_GRID_WORKGROUP_COUNT_Z	RVKernelCodeT.h	/^  RV_CODE_PROPERTY_ENABLE_SGPR_GRID_WORKGROUP_COUNT_Z = ((1 << RV_CODE_PROPERTY_ENABLE_SGPR_GRID/;"	e	enum:rv_code_property_mask_t
RV_CODE_PROPERTY_ENABLE_SGPR_GRID_WORKGROUP_COUNT_Z_SHIFT	RVKernelCodeT.h	/^  RV_CODE_PROPERTY_ENABLE_SGPR_GRID_WORKGROUP_COUNT_Z_SHIFT = 9,$/;"	e	enum:rv_code_property_mask_t
RV_CODE_PROPERTY_ENABLE_SGPR_GRID_WORKGROUP_COUNT_Z_WIDTH	RVKernelCodeT.h	/^  RV_CODE_PROPERTY_ENABLE_SGPR_GRID_WORKGROUP_COUNT_Z_WIDTH = 1,$/;"	e	enum:rv_code_property_mask_t
RV_CODE_PROPERTY_ENABLE_SGPR_KERNARG_SEGMENT_PTR	RVKernelCodeT.h	/^  RV_CODE_PROPERTY_ENABLE_SGPR_KERNARG_SEGMENT_PTR = ((1 << RV_CODE_PROPERTY_ENABLE_SGPR_KERNARG/;"	e	enum:rv_code_property_mask_t
RV_CODE_PROPERTY_ENABLE_SGPR_KERNARG_SEGMENT_PTR_SHIFT	RVKernelCodeT.h	/^  RV_CODE_PROPERTY_ENABLE_SGPR_KERNARG_SEGMENT_PTR_SHIFT = 3,$/;"	e	enum:rv_code_property_mask_t
RV_CODE_PROPERTY_ENABLE_SGPR_KERNARG_SEGMENT_PTR_WIDTH	RVKernelCodeT.h	/^  RV_CODE_PROPERTY_ENABLE_SGPR_KERNARG_SEGMENT_PTR_WIDTH = 1,$/;"	e	enum:rv_code_property_mask_t
RV_CODE_PROPERTY_ENABLE_SGPR_PRIVATE_SEGMENT_BUFFER	RVKernelCodeT.h	/^  RV_CODE_PROPERTY_ENABLE_SGPR_PRIVATE_SEGMENT_BUFFER = ((1 << RV_CODE_PROPERTY_ENABLE_SGPR_PRIV/;"	e	enum:rv_code_property_mask_t
RV_CODE_PROPERTY_ENABLE_SGPR_PRIVATE_SEGMENT_BUFFER_SHIFT	RVKernelCodeT.h	/^  RV_CODE_PROPERTY_ENABLE_SGPR_PRIVATE_SEGMENT_BUFFER_SHIFT = 0,$/;"	e	enum:rv_code_property_mask_t
RV_CODE_PROPERTY_ENABLE_SGPR_PRIVATE_SEGMENT_BUFFER_WIDTH	RVKernelCodeT.h	/^  RV_CODE_PROPERTY_ENABLE_SGPR_PRIVATE_SEGMENT_BUFFER_WIDTH = 1,$/;"	e	enum:rv_code_property_mask_t
RV_CODE_PROPERTY_ENABLE_SGPR_PRIVATE_SEGMENT_SIZE	RVKernelCodeT.h	/^  RV_CODE_PROPERTY_ENABLE_SGPR_PRIVATE_SEGMENT_SIZE = ((1 << RV_CODE_PROPERTY_ENABLE_SGPR_PRIVAT/;"	e	enum:rv_code_property_mask_t
RV_CODE_PROPERTY_ENABLE_SGPR_PRIVATE_SEGMENT_SIZE_SHIFT	RVKernelCodeT.h	/^  RV_CODE_PROPERTY_ENABLE_SGPR_PRIVATE_SEGMENT_SIZE_SHIFT = 6,$/;"	e	enum:rv_code_property_mask_t
RV_CODE_PROPERTY_ENABLE_SGPR_PRIVATE_SEGMENT_SIZE_WIDTH	RVKernelCodeT.h	/^  RV_CODE_PROPERTY_ENABLE_SGPR_PRIVATE_SEGMENT_SIZE_WIDTH = 1,$/;"	e	enum:rv_code_property_mask_t
RV_CODE_PROPERTY_ENABLE_SGPR_QUEUE_PTR	RVKernelCodeT.h	/^  RV_CODE_PROPERTY_ENABLE_SGPR_QUEUE_PTR = ((1 << RV_CODE_PROPERTY_ENABLE_SGPR_QUEUE_PTR_WIDTH) /;"	e	enum:rv_code_property_mask_t
RV_CODE_PROPERTY_ENABLE_SGPR_QUEUE_PTR_SHIFT	RVKernelCodeT.h	/^  RV_CODE_PROPERTY_ENABLE_SGPR_QUEUE_PTR_SHIFT = 2,$/;"	e	enum:rv_code_property_mask_t
RV_CODE_PROPERTY_ENABLE_SGPR_QUEUE_PTR_WIDTH	RVKernelCodeT.h	/^  RV_CODE_PROPERTY_ENABLE_SGPR_QUEUE_PTR_WIDTH = 1,$/;"	e	enum:rv_code_property_mask_t
RV_CODE_PROPERTY_ENABLE_WAVEFRONT_SIZE32	RVKernelCodeT.h	/^  RV_CODE_PROPERTY_ENABLE_WAVEFRONT_SIZE32 = ((1 << RV_CODE_PROPERTY_ENABLE_WAVEFRONT_SIZE32_WID/;"	e	enum:rv_code_property_mask_t
RV_CODE_PROPERTY_ENABLE_WAVEFRONT_SIZE32_SHIFT	RVKernelCodeT.h	/^  RV_CODE_PROPERTY_ENABLE_WAVEFRONT_SIZE32_SHIFT = 10,$/;"	e	enum:rv_code_property_mask_t
RV_CODE_PROPERTY_ENABLE_WAVEFRONT_SIZE32_WIDTH	RVKernelCodeT.h	/^  RV_CODE_PROPERTY_ENABLE_WAVEFRONT_SIZE32_WIDTH = 1,$/;"	e	enum:rv_code_property_mask_t
RV_CODE_PROPERTY_IS_DEBUG_SUPPORTED	RVKernelCodeT.h	/^  RV_CODE_PROPERTY_IS_DEBUG_SUPPORTED = ((1 << RV_CODE_PROPERTY_IS_DEBUG_SUPPORTED_WIDTH) - 1) </;"	e	enum:rv_code_property_mask_t
RV_CODE_PROPERTY_IS_DEBUG_SUPPORTED_SHIFT	RVKernelCodeT.h	/^  RV_CODE_PROPERTY_IS_DEBUG_SUPPORTED_SHIFT = 21,$/;"	e	enum:rv_code_property_mask_t
RV_CODE_PROPERTY_IS_DEBUG_SUPPORTED_WIDTH	RVKernelCodeT.h	/^  RV_CODE_PROPERTY_IS_DEBUG_SUPPORTED_WIDTH = 1,$/;"	e	enum:rv_code_property_mask_t
RV_CODE_PROPERTY_IS_DYNAMIC_CALLSTACK	RVKernelCodeT.h	/^  RV_CODE_PROPERTY_IS_DYNAMIC_CALLSTACK = ((1 << RV_CODE_PROPERTY_IS_DYNAMIC_CALLSTACK_WIDTH) - /;"	e	enum:rv_code_property_mask_t
RV_CODE_PROPERTY_IS_DYNAMIC_CALLSTACK_SHIFT	RVKernelCodeT.h	/^  RV_CODE_PROPERTY_IS_DYNAMIC_CALLSTACK_SHIFT = 20,$/;"	e	enum:rv_code_property_mask_t
RV_CODE_PROPERTY_IS_DYNAMIC_CALLSTACK_WIDTH	RVKernelCodeT.h	/^  RV_CODE_PROPERTY_IS_DYNAMIC_CALLSTACK_WIDTH = 1,$/;"	e	enum:rv_code_property_mask_t
RV_CODE_PROPERTY_IS_PTR64	RVKernelCodeT.h	/^  RV_CODE_PROPERTY_IS_PTR64 = ((1 << RV_CODE_PROPERTY_IS_PTR64_WIDTH) - 1) << RV_CODE_PROPERTY_I/;"	e	enum:rv_code_property_mask_t
RV_CODE_PROPERTY_IS_PTR64_SHIFT	RVKernelCodeT.h	/^  RV_CODE_PROPERTY_IS_PTR64_SHIFT = 19,$/;"	e	enum:rv_code_property_mask_t
RV_CODE_PROPERTY_IS_PTR64_WIDTH	RVKernelCodeT.h	/^  RV_CODE_PROPERTY_IS_PTR64_WIDTH = 1,$/;"	e	enum:rv_code_property_mask_t
RV_CODE_PROPERTY_IS_XNACK_SUPPORTED	RVKernelCodeT.h	/^  RV_CODE_PROPERTY_IS_XNACK_SUPPORTED = ((1 << RV_CODE_PROPERTY_IS_XNACK_SUPPORTED_WIDTH) - 1) </;"	e	enum:rv_code_property_mask_t
RV_CODE_PROPERTY_IS_XNACK_SUPPORTED_SHIFT	RVKernelCodeT.h	/^  RV_CODE_PROPERTY_IS_XNACK_SUPPORTED_SHIFT = 22,$/;"	e	enum:rv_code_property_mask_t
RV_CODE_PROPERTY_IS_XNACK_SUPPORTED_WIDTH	RVKernelCodeT.h	/^  RV_CODE_PROPERTY_IS_XNACK_SUPPORTED_WIDTH = 1,$/;"	e	enum:rv_code_property_mask_t
RV_CODE_PROPERTY_PRIVATE_ELEMENT_SIZE	RVKernelCodeT.h	/^  RV_CODE_PROPERTY_PRIVATE_ELEMENT_SIZE = ((1 << RV_CODE_PROPERTY_PRIVATE_ELEMENT_SIZE_WIDTH) - /;"	e	enum:rv_code_property_mask_t
RV_CODE_PROPERTY_PRIVATE_ELEMENT_SIZE_SHIFT	RVKernelCodeT.h	/^  RV_CODE_PROPERTY_PRIVATE_ELEMENT_SIZE_SHIFT = 17,$/;"	e	enum:rv_code_property_mask_t
RV_CODE_PROPERTY_PRIVATE_ELEMENT_SIZE_WIDTH	RVKernelCodeT.h	/^  RV_CODE_PROPERTY_PRIVATE_ELEMENT_SIZE_WIDTH = 2,$/;"	e	enum:rv_code_property_mask_t
RV_CODE_PROPERTY_RESERVED1	RVKernelCodeT.h	/^  RV_CODE_PROPERTY_RESERVED1 = ((1 << RV_CODE_PROPERTY_RESERVED1_WIDTH) - 1) << RV_CODE_PROPERTY/;"	e	enum:rv_code_property_mask_t
RV_CODE_PROPERTY_RESERVED1_SHIFT	RVKernelCodeT.h	/^  RV_CODE_PROPERTY_RESERVED1_SHIFT = 11,$/;"	e	enum:rv_code_property_mask_t
RV_CODE_PROPERTY_RESERVED1_WIDTH	RVKernelCodeT.h	/^  RV_CODE_PROPERTY_RESERVED1_WIDTH = 5,$/;"	e	enum:rv_code_property_mask_t
RV_CODE_PROPERTY_RESERVED2	RVKernelCodeT.h	/^  RV_CODE_PROPERTY_RESERVED2 = ((1 << RV_CODE_PROPERTY_RESERVED2_WIDTH) - 1) << RV_CODE_PROPERTY/;"	e	enum:rv_code_property_mask_t
RV_CODE_PROPERTY_RESERVED2_SHIFT	RVKernelCodeT.h	/^  RV_CODE_PROPERTY_RESERVED2_SHIFT = 23,$/;"	e	enum:rv_code_property_mask_t
RV_CODE_PROPERTY_RESERVED2_WIDTH	RVKernelCodeT.h	/^  RV_CODE_PROPERTY_RESERVED2_WIDTH = 9,$/;"	e	enum:rv_code_property_mask_t
RV_ELEMENT_16_BYTES	RVKernelCodeT.h	/^  RV_ELEMENT_16_BYTES = 3$/;"	e	enum:rv_element_byte_size_t
RV_ELEMENT_2_BYTES	RVKernelCodeT.h	/^  RV_ELEMENT_2_BYTES = 0,$/;"	e	enum:rv_element_byte_size_t
RV_ELEMENT_4_BYTES	RVKernelCodeT.h	/^  RV_ELEMENT_4_BYTES = 1,$/;"	e	enum:rv_element_byte_size_t
RV_ELEMENT_8_BYTES	RVKernelCodeT.h	/^  RV_ELEMENT_8_BYTES = 2,$/;"	e	enum:rv_element_byte_size_t
RV_HSA_BITS_GET	RVKernelCodeT.h	/^#define RV_HSA_BITS_GET(/;"	d
RV_HSA_BITS_SET	RVKernelCodeT.h	/^#define RV_HSA_BITS_SET(/;"	d
R_00B028_SPI_SHADER_PGM_RSRC1_PS	SIDefines.h	/^#define R_00B028_SPI_SHADER_PGM_RSRC1_PS /;"	d
R_00B02C_SPI_SHADER_PGM_RSRC2_PS	SIDefines.h	/^#define R_00B02C_SPI_SHADER_PGM_RSRC2_PS /;"	d
R_00B128_SPI_SHADER_PGM_RSRC1_VS	SIDefines.h	/^#define R_00B128_SPI_SHADER_PGM_RSRC1_VS /;"	d
R_00B228_SPI_SHADER_PGM_RSRC1_GS	SIDefines.h	/^#define R_00B228_SPI_SHADER_PGM_RSRC1_GS /;"	d
R_00B328_SPI_SHADER_PGM_RSRC1_ES	SIDefines.h	/^#define R_00B328_SPI_SHADER_PGM_RSRC1_ES /;"	d
R_00B428_SPI_SHADER_PGM_RSRC1_HS	SIDefines.h	/^#define R_00B428_SPI_SHADER_PGM_RSRC1_HS /;"	d
R_00B528_SPI_SHADER_PGM_RSRC1_LS	SIDefines.h	/^#define R_00B528_SPI_SHADER_PGM_RSRC1_LS /;"	d
R_00B800_COMPUTE_DISPATCH_INITIATOR	SIDefines.h	/^#define R_00B800_COMPUTE_DISPATCH_INITIATOR /;"	d
R_00B848_COMPUTE_PGM_RSRC1	SIDefines.h	/^#define R_00B848_COMPUTE_PGM_RSRC1 /;"	d
R_00B84C_COMPUTE_PGM_RSRC2	SIDefines.h	/^#define R_00B84C_COMPUTE_PGM_RSRC2 /;"	d
R_00B860_COMPUTE_TMPRING_SIZE	SIDefines.h	/^#define R_00B860_COMPUTE_TMPRING_SIZE /;"	d
R_0286CC_SPI_PS_INPUT_ENA	SIDefines.h	/^#define R_0286CC_SPI_PS_INPUT_ENA /;"	d
R_0286D0_SPI_PS_INPUT_ADDR	SIDefines.h	/^#define R_0286D0_SPI_PS_INPUT_ADDR /;"	d
R_0286D8_SPI_PS_IN_CONTROL	SIDefines.h	/^#define R_0286D8_SPI_PS_IN_CONTROL /;"	d
R_0286E8_SPI_TMPRING_SIZE	SIDefines.h	/^#define R_0286E8_SPI_TMPRING_SIZE /;"	d
R_028B54_VGT_SHADER_STAGES_EN	SIDefines.h	/^#define R_028B54_VGT_SHADER_STAGES_EN /;"	d
R_SPILLED_SGPRS	SIDefines.h	/^#define R_SPILLED_SGPRS /;"	d
R_SPILLED_VGPRS	SIDefines.h	/^#define R_SPILLED_VGPRS /;"	d
ReachableMap	SILowerI1Copies.cpp	/^  DenseMap<MachineBasicBlock *, bool> ReachableMap;$/;"	m	class:__anone16a92980111::PhiIncomingAnalysis	typeref:typename:DenseMap<MachineBasicBlock *,bool>	file:
ReachableOrdered	SILowerI1Copies.cpp	/^  SmallVector<MachineBasicBlock *, 4> ReachableOrdered;$/;"	m	class:__anone16a92980111::PhiIncomingAnalysis	typeref:typename:SmallVector<MachineBasicBlock *,4>	file:
ReadyBlocks	SIMachineScheduler.h	/^  std::vector<SIScheduleBlock*> ReadyBlocks;$/;"	m	class:llvm::SIScheduleBlockScheduler	typeref:typename:std::vector<SIScheduleBlock * >
Reason	SIMachineScheduler.h	/^  SIScheduleCandReason Reason = NoCand;$/;"	m	struct:llvm::SISchedulerCandidate	typeref:typename:SIScheduleCandReason
RecedeCycle	GCNHazardRecognizer.cpp	/^void GCNHazardRecognizer::RecedeCycle() {$/;"	f	class:GCNHazardRecognizer	typeref:typename:void
RecomputeRegs	SILowerControlFlow.cpp	/^  SmallSet<Register, 8> RecomputeRegs;$/;"	m	class:__anon0ce7c3340111::SILowerControlFlow	typeref:typename:SmallSet<Register,8>	file:
ReferencedAddresses	Disassembler/RVGPUDisassembler.h	/^  std::vector<uint64_t> ReferencedAddresses;$/;"	m	class:llvm::RVGPUSymbolizer	typeref:typename:std::vector<uint64_t>
Reg	AsmParser/RVGPUAsmParser.cpp	/^    RegOp Reg;$/;"	m	union:__anon672fa8550111::RVGPUOperand::__anon672fa855020a	typeref:typename:RegOp	file:
Reg	RVGPUArgumentUsageInfo.h	/^    MCRegister Reg;$/;"	m	union:llvm::ArgDescriptor::__anonf03b7d93010a	typeref:typename:MCRegister
Reg	RVMachineFunctionInfo.h	/^    Register Reg;$/;"	m	union:llvm::PrologEpilogSGPRSaveRestoreInfo::__anon7e8d0eca020a	typeref:typename:Register
Reg	SILowerI1Copies.h	/^  Register Reg;$/;"	m	struct:llvm::Incoming	typeref:typename:Register
RegAllocOptNotSupportedMessage	RVGPUTargetMachine.cpp	/^static const char RegAllocOptNotSupportedMessage[] =$/;"	v	typeref:typename:const char[]	file:
RegBankInfo	GCNSubtarget.h	/^  std::unique_ptr<RVGPURegisterBankInfo> RegBankInfo;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:std::unique_ptr<RVGPURegisterBankInfo>
RegBanks	RVGPURegisterBankInfo.h	/^    int8_t RegBanks[NumOps];$/;"	m	struct:llvm::RVGPURegisterBankInfo::OpRegBankEntry	typeref:typename:int8_t[]
RegClassInfo	SIPreAllocateWWMRegs.cpp	/^  RegisterClassInfo RegClassInfo;$/;"	m	class:__anon37f997ca0111::SIPreAllocateWWMRegs	typeref:typename:RegisterClassInfo	file:
RegIndices	Utils/RVGPUBaseInfo.h	/^  using RegIndices = std::array<unsigned, Component::MAX_OPR_NUM>;$/;"	t	class:llvm::RVGPU::VOPD::InstInfo	typeref:typename:std::array<unsigned,Component::MAX_OPR_NUM>
RegInfo	AsmParser/RVGPUAsmParser.cpp	/^struct RegInfo {$/;"	s	file:
RegInfo	Utils/RVGPUPALMetadata.cpp	/^  static const struct RegInfo {$/;"	s	function:getRegisterName	file:
RegInterval	SIInsertWaitcnts.cpp	/^using RegInterval = std::pair<int, int>;$/;"	t	namespace:__anona6cbb7940211	typeref:typename:std::pair<int,int>	file:
RegKind	GCNRegPressure.h	/^  enum RegKind {$/;"	g	struct:llvm::GCNRegPressure
RegKindMask	SIDefines.h	/^  RegKindMask = (HasVGPR | HasAGPR | HasSGPR)$/;"	e	enum:llvm::SIRCFlags
RegNo	AsmParser/RVGPUAsmParser.cpp	/^    unsigned RegNo;$/;"	m	struct:__anon672fa8550111::RVGPUOperand::RegOp	typeref:typename:unsigned	file:
RegOp	AsmParser/RVGPUAsmParser.cpp	/^  struct RegOp {$/;"	s	class:__anon672fa8550111::RVGPUOperand	file:
RegPressureIgnoredUnits	RVRegisterInfo.h	/^  BitVector RegPressureIgnoredUnits;$/;"	m	class:llvm::RVRegisterInfo	typeref:typename:BitVector
RegSequences	SIFixSGPRCopies.cpp	/^  SmallVector<MachineInstr*, 4> RegSequences;$/;"	m	class:__anond27816180111::SIFixSGPRCopies	typeref:typename:SmallVector<MachineInstr *,4>	file:
RegSplitParts	RVRegisterInfo.cpp	/^std::array<std::vector<int16_t>, 16> RVRegisterInfo::RegSplitParts;$/;"	m	class:RVRegisterInfo	typeref:typename:std::array<std::vector<int16_t>,16>
RegSplitParts	RVRegisterInfo.h	/^  static std::array<std::vector<int16_t>, 16> RegSplitParts;$/;"	m	class:llvm::RVRegisterInfo	typeref:typename:std::array<std::vector<int16_t>,16>
RegSubRegPair	GCNDPPCombine.cpp	/^  using RegSubRegPair = TargetInstrInfo::RegSubRegPair;$/;"	t	class:__anon46a5cf8f0111::GCNDPPCombine	typeref:typename:TargetInstrInfo::RegSubRegPair	file:
RegTupleAlignUnitsMask	SIDefines.h	/^  RegTupleAlignUnitsMask = (1 << RegTupleAlignUnitsWidth) - 1,$/;"	e	enum:llvm::SIRCFlags
RegTupleAlignUnitsWidth	SIDefines.h	/^  RegTupleAlignUnitsWidth = 2,$/;"	e	enum:llvm::SIRCFlags
RegUsage	SIMachineScheduler.h	/^  RegUsage,$/;"	e	enum:llvm::SIScheduleCandReason
RegUse	SIFormMemoryClauses.cpp	/^  typedef DenseMap<unsigned, std::pair<unsigned, LaneBitmask>> RegUse;$/;"	t	class:__anon8c5c3e4f0111::SIFormMemoryClauses	typeref:typename:DenseMap<unsigned,std::pair<unsigned,LaneBitmask>>	file:
Region	GCNIterativeScheduler.h	/^  struct Region {$/;"	s	class:llvm::GCNIterativeScheduler
Region	RVGPUMachineCFGStructurizer.cpp	/^  MachineRegion *Region;$/;"	m	class:__anon1695b1f50211::RegionMRT	typeref:typename:MachineRegion *	file:
RegionIdx	GCNSchedStrategy.h	/^  unsigned RegionIdx = 0;$/;"	m	class:llvm::GCNSchedStage	typeref:typename:unsigned
RegionMRT	RVGPUMachineCFGStructurizer.cpp	/^  RegionMRT(MachineRegion *MachineRegion) : Region(MachineRegion) {$/;"	f	class:__anon1695b1f50211::RegionMRT	file:
RegionMRT	RVGPUMachineCFGStructurizer.cpp	/^class RegionMRT : public MRT {$/;"	c	namespace:__anon1695b1f50211	file:
Regions	GCNIterativeScheduler.h	/^  std::vector<Region*> Regions;$/;"	m	class:llvm::GCNIterativeScheduler	typeref:typename:std::vector<Region * >
Regions	GCNSchedStrategy.h	/^                        MachineBasicBlock::iterator>, 32> Regions;$/;"	m	class:llvm::GCNScheduleDAGMILive	typeref:typename:SmallVector<std::pair<MachineBasicBlock::iterator,MachineBasicBlock::iterator>,32>
Regions	RVGPUMachineCFGStructurizer.cpp	/^  const MachineRegionInfo *Regions;$/;"	m	class:__anon1695b1f50311::RVGPUMachineCFGStructurizer	typeref:typename:const MachineRegionInfo *	file:
RegionsWithExcessRP	GCNSchedStrategy.h	/^  BitVector RegionsWithExcessRP;$/;"	m	class:llvm::GCNScheduleDAGMILive	typeref:typename:BitVector
RegionsWithHighRP	GCNSchedStrategy.h	/^  BitVector RegionsWithHighRP;$/;"	m	class:llvm::GCNScheduleDAGMILive	typeref:typename:BitVector
RegionsWithIGLPInstrs	GCNSchedStrategy.h	/^  BitVector RegionsWithIGLPInstrs;$/;"	m	class:llvm::GCNScheduleDAGMILive	typeref:typename:BitVector
RegionsWithMinOcc	GCNSchedStrategy.h	/^  BitVector RegionsWithMinOcc;$/;"	m	class:llvm::GCNScheduleDAGMILive	typeref:typename:BitVector
Register	AsmParser/RVGPUAsmParser.cpp	/^    Register,$/;"	e	enum:__anon672fa8550111::RVGPUOperand::KindTy	file:
RegisterEncoding	SIInsertWaitcnts.cpp	/^struct RegisterEncoding {$/;"	s	namespace:__anona6cbb7940211	file:
RegisterKind	AsmParser/RVGPUAsmParser.cpp	/^enum RegisterKind { IS_UNKNOWN, IS_VGPR, IS_SGPR, IS_AGPR, IS_TTMP, IS_SPECIAL };$/;"	g	namespace:__anon672fa8550111	file:
RegisterMapping	SIInsertWaitcnts.cpp	/^enum RegisterMapping {$/;"	g	namespace:__anona6cbb7940211	file:
RegisterName	RVMachineFunctionInfo.h	/^    StringValue RegisterName;$/;"	m	union:llvm::yaml::SIArgument::__anon7e8d0eca010a	typeref:typename:StringValue
Register_Flag	SIDefines.h	/^enum Register_Flag : uint8_t {$/;"	g	namespace:llvm::RVGPU::VirtRegFlag	typeref:typename:uint8_t
Registers	Utils/RVGPUPALMetadata.h	/^  msgpack::DocNode Registers;$/;"	m	class:llvm::RVGPUPALMetadata	typeref:typename:msgpack::DocNode
Regs	RVGPUArgumentUsageInfo.h	/^  SmallVector<MCRegister> Regs;$/;"	m	struct:llvm::KernArgPreloadDescriptor	typeref:typename:SmallVector<MCRegister>
RegsToRewrite	SIPreAllocateWWMRegs.cpp	/^  std::vector<unsigned> RegsToRewrite;$/;"	m	class:__anon37f997ca0111::SIPreAllocateWWMRegs	typeref:typename:std::vector<unsigned>	file:
RegularRegisters	AsmParser/RVGPUAsmParser.cpp	/^static constexpr RegInfo RegularRegisters[] = {$/;"	v	typeref:typename:RegInfo[]	file:
RelaxedOcc	GCNSchedStrategy.cpp	/^    RelaxedOcc("rvgpu-schedule-relaxed-occupancy", cl::Hidden,$/;"	v	typeref:typename:cl::opt<bool>	file:
ReleaseVGPRInsts	SIInsertWaitcnts.cpp	/^  DenseSet<MachineInstr *> ReleaseVGPRInsts;$/;"	m	class:__anona6cbb7940211::SIInsertWaitcnts	typeref:typename:DenseSet<MachineInstr * >	file:
RematDefToLiveInRegions	GCNSchedStrategy.h	/^  DenseMap<MachineInstr *, SmallVector<unsigned, 4>> RematDefToLiveInRegions;$/;"	m	class:llvm::PreRARematStage	typeref:typename:DenseMap<MachineInstr *,SmallVector<unsigned,4>>
RematerializableInsts	GCNSchedStrategy.h	/^      RematerializableInsts;$/;"	m	class:llvm::PreRARematStage	typeref:typename:MapVector<unsigned,MapVector<MachineInstr *,MachineInstr * >>
RemoveIncompatibleFunctions	RVGPUTargetMachine.cpp	/^static cl::opt<bool> RemoveIncompatibleFunctions($/;"	v	typeref:typename:cl::opt<bool>	file:
RepeatReasonSet	SIMachineScheduler.h	/^  uint32_t RepeatReasonSet = 0;$/;"	m	struct:llvm::SISchedulerCandidate	typeref:typename:uint32_t
ReplaceNodeResults	RVGPUISelLowering.cpp	/^void RVGPUTargetLowering::ReplaceNodeResults(SDNode *N,$/;"	f	class:RVGPUTargetLowering	typeref:typename:void
ReplaceNodeResults	RVISelLowering.cpp	/^void RVTargetLowering::ReplaceNodeResults(SDNode *N,$/;"	f	class:RVTargetLowering	typeref:typename:void
Replaced	SIPeepholeSDWA.cpp	/^  MachineOperand *Replaced; \/\/ Operand that would be replace by Target$/;"	m	class:__anon00bd52b30111::SDWAOperand	typeref:typename:MachineOperand *	file:
ReplacementInfo	RVGPUAtomicOptimizer.cpp	/^struct ReplacementInfo {$/;"	s	namespace:__anon7bca098a0111	file:
ReplacementVec	RVGPURewriteOutArguments.cpp	/^  using ReplacementVec = SmallVector<std::pair<Argument *, Value *>, 4>;$/;"	t	function:RVGPURewriteOutArguments::runOnFunction	typeref:typename:SmallVector<std::pair<Argument *,Value * >,4>	file:
Require	SIModeRegister.cpp	/^  Status Require;$/;"	m	class:BlockData	typeref:typename:Status	file:
RescheduleRegions	GCNSchedStrategy.h	/^  BitVector RescheduleRegions;$/;"	m	class:llvm::GCNScheduleDAGMILive	typeref:typename:BitVector
Reserved	RVGPULibFunc.h	/^    unsigned char Reserved = 0;$/;"	m	struct:llvm::RVGPULibFuncBase::Param	typeref:typename:unsigned char
ReservedRegSet	RVMachineFunctionInfo.h	/^  using ReservedRegSet = SmallSetVector<Register, 8>;$/;"	t	class:llvm::RVMachineFunctionInfo	typeref:typename:SmallSetVector<Register,8>
Reset	GCNHazardRecognizer.cpp	/^void GCNHazardRecognizer::Reset() {$/;"	f	class:GCNHazardRecognizer	typeref:typename:void
ResourceUsage	RVGPUAsmPrinter.h	/^  RVGPUResourceUsageAnalysis *ResourceUsage;$/;"	m	class:llvm::RVGPUAsmPrinter	typeref:typename:RVGPUResourceUsageAnalysis *
RestoreBlocks	SILowerSGPRSpills.cpp	/^  MBBVector RestoreBlocks;$/;"	m	class:__anon4be335ae0111::SILowerSGPRSpills	typeref:typename:MBBVector	file:
Result	RVGPUAliasAnalysis.h	/^  std::unique_ptr<RVGPUAAResult> Result;$/;"	m	class:llvm::RVGPUAAWrapperPass	typeref:typename:std::unique_ptr<RVGPUAAResult>
Result	RVGPUAliasAnalysis.h	/^  using Result = RVGPUAAResult;$/;"	t	class:llvm::RVGPUAA	typeref:typename:RVGPUAAResult
ReturnStruct	SIAnnotateControlFlow.cpp	/^  Type *ReturnStruct;$/;"	m	class:__anond71df4850111::SIAnnotateControlFlow	typeref:typename:Type *	file:
ReturnsVoid	RVMachineFunctionInfo.h	/^  bool ReturnsVoid = true;$/;"	m	class:llvm::RVMachineFunctionInfo	typeref:typename:bool
ReturnsVoid	RVMachineFunctionInfo.h	/^  bool ReturnsVoid = true;$/;"	m	struct:llvm::yaml::RVMachineFunctionInfo	typeref:typename:bool
Rgn	GCNIterativeScheduler.cpp	/^  Region &Rgn;$/;"	m	class:GCNIterativeScheduler::OverrideLegacyStrategy	typeref:typename:Region &	file:
RrWgMode	SIProgramInfo.h	/^    uint32_t RrWgMode = 0;   \/\/ GFX12+$/;"	m	struct:llvm::SIProgramInfo	typeref:typename:uint32_t
RsrcArg	RVGPUInstrInfo.h	/^  uint8_t RsrcArg;$/;"	m	struct:llvm::RVGPU::RsrcIntrinsic	typeref:typename:uint8_t
RsrcIndex	RVGPUInstrInfo.h	/^  uint8_t RsrcIndex;$/;"	m	struct:llvm::RVGPU::ImageDimIntrinsicInfo	typeref:typename:uint8_t
RsrcIntrinsic	RVGPUInstrInfo.h	/^struct RsrcIntrinsic {$/;"	s	namespace:llvm::RVGPU
Rule	RVGPULibFunc.cpp	/^  const ManglingRule& Rule;$/;"	m	class:__anona5afe38d0111::ParamIterator	typeref:typename:const ManglingRule &	file:
RuleConfig	RVGPUPostLegalizerCombiner.cpp	/^  RVGPUPostLegalizerCombinerImplRuleConfig RuleConfig;$/;"	m	class:__anonf94dcdde0111::RVGPUPostLegalizerCombiner	typeref:typename:RVGPUPostLegalizerCombinerImplRuleConfig	file:
RuleConfig	RVGPUPostLegalizerCombiner.cpp	/^  const RVGPUPostLegalizerCombinerImplRuleConfig &RuleConfig;$/;"	m	class:__anonf94dcdde0111::RVGPUPostLegalizerCombinerImpl	typeref:typename:const RVGPUPostLegalizerCombinerImplRuleConfig &	file:
RuleConfig	RVGPUPreLegalizerCombiner.cpp	/^  RVGPUPreLegalizerCombinerImplRuleConfig RuleConfig;$/;"	m	class:__anonb779c2ff0111::RVGPUPreLegalizerCombiner	typeref:typename:RVGPUPreLegalizerCombinerImplRuleConfig	file:
RuleConfig	RVGPUPreLegalizerCombiner.cpp	/^  const RVGPUPreLegalizerCombinerImplRuleConfig &RuleConfig;$/;"	m	class:__anonb779c2ff0111::RVGPUPreLegalizerCombinerImpl	typeref:typename:const RVGPUPreLegalizerCombinerImplRuleConfig &	file:
RuleConfig	RVGPURegBankCombiner.cpp	/^  RVGPURegBankCombinerImplRuleConfig RuleConfig;$/;"	m	class:__anon00ae19330111::RVGPURegBankCombiner	typeref:typename:RVGPURegBankCombinerImplRuleConfig	file:
RuleConfig	RVGPURegBankCombiner.cpp	/^  const RVGPURegBankCombinerImplRuleConfig &RuleConfig;$/;"	m	class:__anon00ae19330111::RVGPURegBankCombinerImpl	typeref:typename:const RVGPURegBankCombinerImplRuleConfig &	file:
Rules	RVGPUIGroupLP.cpp	/^  SmallVector<std::shared_ptr<InstructionRule>, 4> Rules;$/;"	m	class:__anon61b122dc0111::SchedGroup	typeref:typename:SmallVector<std::shared_ptr<InstructionRule>,4>	file:
RunLdsBranchVmemWARHazardFixup	GCNHazardRecognizer.h	/^  bool RunLdsBranchVmemWARHazardFixup;$/;"	m	class:llvm::GCNHazardRecognizer	typeref:typename:bool
RvcvtVOP3DstOpSelOnly	AsmParser/RVGPUAsmParser.cpp	/^void RvcvtVOP3DstOpSelOnly(MCInst &Inst) {$/;"	f	typeref:typename:void
RvhsaCodeObjectVersion	Utils/RVGPUBaseInfo.cpp	/^    RvhsaCodeObjectVersion("rvhsa-code-object-version", llvm::cl::Hidden,$/;"	v	typeref:typename:llvm::cl::opt<unsigned>	file:
S	GCNSchedStrategy.h	/^  GCNSchedStrategy &S;$/;"	m	class:llvm::GCNSchedStage	typeref:typename:GCNSchedStrategy &
S2VCopies	SIFixSGPRCopies.cpp	/^  SmallVector<MachineInstr*, 4> S2VCopies;$/;"	m	class:__anond27816180111::SIFixSGPRCopies	typeref:typename:SmallVector<MachineInstr *,4>	file:
SALU	RVGPUIGroupLP.cpp	/^  SALU = 1u << 2,$/;"	e	enum:__anon61b122dc0111::SchedGroupMask	file:
SALU	RVGPUInsertDelayAlu.cpp	/^  enum DelayType { VALU, TRANS, SALU, OTHER };$/;"	e	enum:__anonc7296b900111::RVGPUInsertDelayAlu::DelayType	file:
SALU	SIDefines.h	/^  SALU = 1 << 0,$/;"	e	enum:llvm::SIInstrFlags::__anon1f24a7950203
SALUCycles	RVGPUInsertDelayAlu.cpp	/^    uint8_t SALUCycles = 0;$/;"	m	struct:__anonc7296b900111::RVGPUInsertDelayAlu::DelayInfo	typeref:typename:uint8_t	file:
SALU_CYCLES_MAX	RVGPUInsertDelayAlu.cpp	/^    static constexpr unsigned SALU_CYCLES_MAX = 4;$/;"	m	struct:__anonc7296b900111::RVGPUInsertDelayAlu::DelayInfo	typeref:typename:unsigned	file:
SAMPLE	RVGPUISelLowering.h	/^  SAMPLE,$/;"	e	enum:llvm::RVGPUISD::NodeType
SAMPLEB	RVGPUISelLowering.h	/^  SAMPLEB,$/;"	e	enum:llvm::RVGPUISD::NodeType
SAMPLED	RVGPUISelLowering.h	/^  SAMPLED,$/;"	e	enum:llvm::RVGPUISD::NodeType
SAMPLEL	RVGPUISelLowering.h	/^  SAMPLEL,$/;"	e	enum:llvm::RVGPUISD::NodeType
SAMPLER	RVGPULibFunc.h	/^    SAMPLER,$/;"	e	enum:llvm::RVGPULibFuncBase::EType
SAddr	SILoadStoreOptimizer.cpp	/^  bool SAddr = false;$/;"	m	struct:__anon677101620111::AddressRegs	typeref:typename:bool	file:
SBUFFER_LOAD	RVGPUISelLowering.h	/^  SBUFFER_LOAD,$/;"	e	enum:llvm::RVGPUISD::NodeType
SBase	SILoadStoreOptimizer.cpp	/^  bool SBase = false;$/;"	m	struct:__anon677101620111::AddressRegs	typeref:typename:bool	file:
SC0	SIDefines.h	/^  SC0 = GLC,$/;"	e	enum:llvm::RVGPU::CPol::CPol
SC1	SIDefines.h	/^  SC1 = SCC,$/;"	e	enum:llvm::RVGPU::CPol::CPol
SCALAR_STORE	SIDefines.h	/^  SCALAR_STORE = UINT64_C(1) << 39,$/;"	e	enum:llvm::SIInstrFlags::__anon1f24a7950203
SCC	SIDefines.h	/^  SCC = 16,$/;"	e	enum:llvm::RVGPU::CPol::CPol
SCCCopies	SIFixSGPRCopies.cpp	/^  SmallVector<MachineInstr*, 4> SCCCopies;$/;"	m	class:__anond27816180111::SIFixSGPRCopies	typeref:typename:SmallVector<MachineInstr *,4>	file:
SCC_FALSE	RVInstrInfo.h	/^    SCC_FALSE = -1,$/;"	e	enum:llvm::RVInstrInfo::BranchPredicate
SCC_TRUE	RVInstrInfo.h	/^    SCC_TRUE = 1,$/;"	e	enum:llvm::RVInstrInfo::BranchPredicate
SCHEDULE_ILP	GCNIterativeScheduler.h	/^    SCHEDULE_ILP$/;"	e	enum:llvm::GCNIterativeScheduler::StrategyKind
SCHEDULE_LEGACYMAXOCCUPANCY	GCNIterativeScheduler.h	/^    SCHEDULE_LEGACYMAXOCCUPANCY,$/;"	e	enum:llvm::GCNIterativeScheduler::StrategyKind
SCHEDULE_MINREGFORCED	GCNIterativeScheduler.h	/^    SCHEDULE_MINREGFORCED,$/;"	e	enum:llvm::GCNIterativeScheduler::StrategyKind
SCHEDULE_MINREGONLY	GCNIterativeScheduler.h	/^    SCHEDULE_MINREGONLY,$/;"	e	enum:llvm::GCNIterativeScheduler::StrategyKind
SCOPE	SIDefines.h	/^  SCOPE = 0x3 << 3, \/\/ All Scope bits$/;"	e	enum:llvm::RVGPU::CPol::CPol
SCOPE_CU	SIDefines.h	/^  SCOPE_CU = 0 << 3,$/;"	e	enum:llvm::RVGPU::CPol::CPol
SCOPE_DEV	SIDefines.h	/^  SCOPE_DEV = 2 << 3,$/;"	e	enum:llvm::RVGPU::CPol::CPol
SCOPE_SE	SIDefines.h	/^  SCOPE_SE = 1 << 3,$/;"	e	enum:llvm::RVGPU::CPol::CPol
SCOPE_SYS	SIDefines.h	/^  SCOPE_SYS = 3 << 3,$/;"	e	enum:llvm::RVGPU::CPol::CPol
SCRATCH	SIMemoryLegalizer.cpp	/^  SCRATCH = 1u << 2,$/;"	e	enum:__anon46517b8a0111::SIAtomicAddrSpace	file:
SCRATCH_WRITE_ACCESS	SIInsertWaitcnts.cpp	/^  SCRATCH_WRITE_ACCESS, \/\/ vector-memory write that may be scratch$/;"	e	enum:__anona6cbb7940211::WaitEventType	file:
SChain	SIFixSGPRCopies.cpp	/^  SetVector<MachineInstr *> SChain;$/;"	m	class:__anond27816180111::V2SCopyInfo	typeref:typename:SetVector<MachineInstr * >	file:
SDWA	SIDefines.h	/^    SDWA = 2,$/;"	e	enum:llvm::RVGPUAsmVariants::__anon1f24a7950503
SDWA	SIDefines.h	/^  SDWA = 1 << 14,$/;"	e	enum:llvm::SIInstrFlags::__anon1f24a7950203
SDWA	SIDefines.h	/^  SDWA = 2,$/;"	e	enum:llvm::SIEncodingFamily::__anon1f24a7950103
SDWA	SIDefines.h	/^namespace SDWA {$/;"	n	namespace:llvm::RVGPU
SDWA10	SIDefines.h	/^  SDWA10 = 7,$/;"	e	enum:llvm::SIEncodingFamily::__anon1f24a7950103
SDWA9	SIDefines.h	/^    SDWA9 = 3,$/;"	e	enum:llvm::RVGPUAsmVariants::__anon1f24a7950503
SDWA9	SIDefines.h	/^  SDWA9 = 3,$/;"	e	enum:llvm::SIEncodingFamily::__anon1f24a7950103
SDWA9EncValues	SIDefines.h	/^enum SDWA9EncValues : unsigned {$/;"	g	namespace:llvm::RVGPU::SDWA	typeref:typename:unsigned
SDWADstOperand	SIPeepholeSDWA.cpp	/^  SDWADstOperand(MachineOperand *TargetOp, MachineOperand *ReplacedOp,$/;"	f	class:__anon00bd52b30111::SDWADstOperand	file:
SDWADstOperand	SIPeepholeSDWA.cpp	/^class SDWADstOperand : public SDWAOperand {$/;"	c	namespace:__anon00bd52b30111	file:
SDWADstPreserveOperand	SIPeepholeSDWA.cpp	/^  SDWADstPreserveOperand(MachineOperand *TargetOp, MachineOperand *ReplacedOp,$/;"	f	class:__anon00bd52b30111::SDWADstPreserveOperand	file:
SDWADstPreserveOperand	SIPeepholeSDWA.cpp	/^class SDWADstPreserveOperand : public SDWADstOperand {$/;"	c	namespace:__anon00bd52b30111	file:
SDWAOperand	SIPeepholeSDWA.cpp	/^  SDWAOperand(MachineOperand *TargetOp, MachineOperand *ReplacedOp)$/;"	f	class:__anon00bd52b30111::SDWAOperand	file:
SDWAOperand	SIPeepholeSDWA.cpp	/^class SDWAOperand {$/;"	c	namespace:__anon00bd52b30111	file:
SDWAOperands	SIPeepholeSDWA.cpp	/^  MapVector<MachineInstr *, std::unique_ptr<SDWAOperand>> SDWAOperands;$/;"	m	class:__anon00bd52b30111::SIPeepholeSDWA	typeref:typename:MapVector<MachineInstr *,std::unique_ptr<SDWAOperand>>	file:
SDWAOperandsVector	SIPeepholeSDWA.cpp	/^  using SDWAOperandsVector = SmallVector<SDWAOperand *, 4>;$/;"	t	class:__anon00bd52b30111::SIPeepholeSDWA	typeref:typename:SmallVector<SDWAOperand *,4>	file:
SDWASrcOperand	SIPeepholeSDWA.cpp	/^  SDWASrcOperand(MachineOperand *TargetOp, MachineOperand *ReplacedOp,$/;"	f	class:__anon00bd52b30111::SDWASrcOperand	file:
SDWASrcOperand	SIPeepholeSDWA.cpp	/^class SDWASrcOperand : public SDWAOperand {$/;"	c	namespace:__anon00bd52b30111	file:
SEA_ISLANDS	RVGPUSubtarget.h	/^    SEA_ISLANDS = 6,$/;"	e	enum:llvm::RVGPUSubtarget::Generation
SETCC	RVGPUISelLowering.h	/^  SETCC,$/;"	e	enum:llvm::RVGPUISD::NodeType
SETREG	RVGPUISelLowering.h	/^  SETREG,$/;"	e	enum:llvm::RVGPUISD::NodeType
SEXT	SIDefines.h	/^   SEXT = 1 << 0,  \/\/ Integer sign-extend modifier$/;"	e	enum:llvm::SISrcMods::__anon1f24a7950303
SGID	RVGPUIGroupLP.cpp	/^  unsigned SGID;$/;"	m	class:__anon61b122dc0111::InstructionRule	typeref:typename:unsigned	file:
SGID	RVGPUIGroupLP.cpp	/^  unsigned SGID;$/;"	m	class:__anon61b122dc0111::SchedGroup	typeref:typename:unsigned	file:
SGMask	RVGPUIGroupLP.cpp	/^  SchedGroupMask SGMask;$/;"	m	class:__anon61b122dc0111::SchedGroup	typeref:typename:SchedGroupMask	file:
SGPR0	SIInsertWaitcnts.cpp	/^  unsigned SGPR0;$/;"	m	struct:__anona6cbb7940211::RegisterEncoding	typeref:typename:unsigned	file:
SGPR32	GCNRegPressure.h	/^    SGPR32,$/;"	e	enum:llvm::GCNRegPressure::RegKind
SGPRBlocks	SIProgramInfo.h	/^    uint32_t SGPRBlocks = 0;$/;"	m	struct:llvm::SIProgramInfo	typeref:typename:uint32_t
SGPRCriticalLimit	GCNSchedStrategy.h	/^  unsigned SGPRCriticalLimit;$/;"	m	class:llvm::GCNSchedStrategy	typeref:typename:unsigned
SGPRExcessLimit	GCNSchedStrategy.h	/^  unsigned SGPRExcessLimit;$/;"	m	class:llvm::GCNSchedStrategy	typeref:typename:unsigned
SGPRForEXECCopy	RVMachineFunctionInfo.h	/^  Register SGPRForEXECCopy;$/;"	m	class:llvm::RVMachineFunctionInfo	typeref:typename:Register
SGPRForEXECCopy	RVMachineFunctionInfo.h	/^  StringValue SGPRForEXECCopy;$/;"	m	struct:llvm::yaml::RVMachineFunctionInfo	typeref:typename:StringValue
SGPRInitBug	GCNSubtarget.h	/^  bool SGPRInitBug = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
SGPRL	SIInsertWaitcnts.cpp	/^  unsigned SGPRL;$/;"	m	struct:__anona6cbb7940211::RegisterEncoding	typeref:typename:unsigned	file:
SGPRLimitBias	GCNSchedStrategy.h	/^  unsigned SGPRLimitBias = 0;$/;"	m	class:llvm::GCNSchedStrategy	typeref:typename:unsigned
SGPRRegAlloc	RVGPUTargetMachine.cpp	/^SGPRRegAlloc("sgpr-regalloc", cl::Hidden, cl::init(&useDefaultRegisterAllocator),$/;"	v	namespace:__anon565c6f860111	typeref:typename:cl::opt<SGPRRegisterRegAlloc::FunctionPassCtor,false,RegisterPassParser<SGPRRegisterRegAlloc>>	file:
SGPRRegisterRegAlloc	RVGPUTargetMachine.cpp	/^  SGPRRegisterRegAlloc(const char *N, const char *D, FunctionPassCtor C)$/;"	f	class:__anon565c6f860111::SGPRRegisterRegAlloc	file:
SGPRRegisterRegAlloc	RVGPUTargetMachine.cpp	/^class SGPRRegisterRegAlloc : public RegisterRegAllocBase<SGPRRegisterRegAlloc> {$/;"	c	namespace:__anon565c6f860111	file:
SGPRSaveKind	RVMachineFunctionInfo.h	/^enum class SGPRSaveKind : uint8_t {$/;"	g	namespace:llvm	typeref:typename:uint8_t
SGPRSpill	SIDefines.h	/^  SGPRSpill = 1 << 27,$/;"	e	enum:llvm::SIInstrFlags::__anon1f24a7950203
SGPRSpill	SIProgramInfo.h	/^    unsigned SGPRSpill = 0;$/;"	m	struct:llvm::SIProgramInfo	typeref:typename:unsigned
SGPRSpillBuilder	RVRegisterInfo.cpp	/^  SGPRSpillBuilder(const RVRegisterInfo &TRI, const RVInstrInfo &TII,$/;"	f	struct:llvm::SGPRSpillBuilder	file:
SGPRSpillBuilder	RVRegisterInfo.cpp	/^struct SGPRSpillBuilder {$/;"	s	namespace:llvm	file:
SGPRSpillsToPhysicalVGPRLanes	RVMachineFunctionInfo.h	/^      SGPRSpillsToPhysicalVGPRLanes;$/;"	m	class:llvm::RVMachineFunctionInfo	typeref:typename:DenseMap<int,std::vector<RVRegisterInfo::SpilledReg>>
SGPRSpillsToVirtualVGPRLanes	RVMachineFunctionInfo.h	/^      SGPRSpillsToVirtualVGPRLanes;$/;"	m	class:llvm::RVMachineFunctionInfo	typeref:typename:DenseMap<int,std::vector<RVRegisterInfo::SpilledReg>>
SGPRUsage	SIMachineScheduler.h	/^    unsigned SGPRUsage;$/;"	m	struct:llvm::SIScheduleBlock::SISchedCandidate	typeref:typename:unsigned
SGPR_MAX	Disassembler/RVGPUDisassembler.cpp	/^#define SGPR_MAX /;"	d	file:
SGPR_MAX_GFX10	SIDefines.h	/^  SGPR_MAX_GFX10 = 105,$/;"	e	enum:llvm::RVGPU::EncValues::__anon1f24a7950603
SGPR_MAX_SI	SIDefines.h	/^  SGPR_MAX_SI = 101,$/;"	e	enum:llvm::RVGPU::EncValues::__anon1f24a7950603
SGPR_MIN	SIDefines.h	/^  SGPR_MIN = 0,$/;"	e	enum:llvm::RVGPU::EncValues::__anon1f24a7950603
SGPR_SPILL	RVInstrInfo.h	/^  SGPR_SPILL = MachineInstr::TAsmComments$/;"	e	enum:llvm::RVGPU::AsmComments
SGPR_TUPLE	GCNRegPressure.h	/^    SGPR_TUPLE,$/;"	e	enum:llvm::GCNRegPressure::RegKind
SGV	RVGPULowerModuleLDSPass.cpp	/^    GlobalVariable *SGV = nullptr;$/;"	m	struct:__anoncc7483b30111::RVGPULowerModuleLDS::LDSVariableReplacement	typeref:typename:GlobalVariable *	file:
SHARED_BASE	RVGPUISelLowering.h	/^    SHARED_BASE,$/;"	e	enum:llvm::RVGPUTargetLowering::ImplicitParameter
SHARED_BASE_OFFSET	SIDefines.h	/^  SHARED_BASE_OFFSET = 196,$/;"	e	enum:llvm::RVGPU::ImplicitArg::Offset_COV5
SI	RVFrameLowering.cpp	/^  const PrologEpilogSGPRSaveRestoreInfo SI;$/;"	m	class:llvm::PrologEpilogSGPRSpillBuilder	typeref:typename:const PrologEpilogSGPRSaveRestoreInfo	file:
SI	RVInstrInfo.h	/^namespace SI {$/;"	n	namespace:llvm
SI	SIDefines.h	/^  SI = 0,$/;"	e	enum:llvm::SIEncodingFamily::__anon1f24a7950103
SIAnnotateControlFlow	SIAnnotateControlFlow.cpp	/^  SIAnnotateControlFlow() : FunctionPass(ID) {}$/;"	f	class:__anond71df4850111::SIAnnotateControlFlow	file:
SIAnnotateControlFlow	SIAnnotateControlFlow.cpp	/^class SIAnnotateControlFlow : public FunctionPass {$/;"	c	namespace:__anond71df4850111	file:
SIArgument	RVMachineFunctionInfo.h	/^  SIArgument() : IsRegister(false), StackOffset(0) {}$/;"	f	struct:llvm::yaml::SIArgument
SIArgument	RVMachineFunctionInfo.h	/^  SIArgument(bool) : IsRegister(true), RegisterName() {}$/;"	f	struct:llvm::yaml::SIArgument
SIArgument	RVMachineFunctionInfo.h	/^  SIArgument(const SIArgument &Other) {$/;"	f	struct:llvm::yaml::SIArgument
SIArgument	RVMachineFunctionInfo.h	/^struct SIArgument {$/;"	s	namespace:llvm::yaml
SIArgumentInfo	RVMachineFunctionInfo.h	/^struct SIArgumentInfo {$/;"	s	namespace:llvm::yaml
SIAtomicAddrSpace	SIMemoryLegalizer.cpp	/^enum class SIAtomicAddrSpace {$/;"	g	namespace:__anon46517b8a0111	file:
SIAtomicScope	SIMemoryLegalizer.cpp	/^enum class SIAtomicScope {$/;"	g	namespace:__anon46517b8a0111	file:
SIBlockSchedCandidate	SIMachineScheduler.h	/^  struct SIBlockSchedCandidate : SISchedulerCandidate {$/;"	s	class:llvm::SIScheduleBlockScheduler
SICacheControl	SIMemoryLegalizer.cpp	/^SICacheControl::SICacheControl(const GCNSubtarget &ST) : ST(ST) {$/;"	f	class:SICacheControl
SICacheControl	SIMemoryLegalizer.cpp	/^class SICacheControl {$/;"	c	namespace:__anon46517b8a0111	file:
SIEncodingFamily	SIDefines.h	/^namespace SIEncodingFamily {$/;"	n	namespace:llvm
SIFixSGPRCopies	SIFixSGPRCopies.cpp	/^  SIFixSGPRCopies() : MachineFunctionPass(ID), NextVGPRToSGPRCopyID(0) {}$/;"	f	class:__anond27816180111::SIFixSGPRCopies	file:
SIFixSGPRCopies	SIFixSGPRCopies.cpp	/^class SIFixSGPRCopies : public MachineFunctionPass {$/;"	c	namespace:__anond27816180111	file:
SIFixSGPRCopiesID	SIFixSGPRCopies.cpp	/^char &llvm::SIFixSGPRCopiesID = SIFixSGPRCopies::ID;$/;"	m	class:llvm	typeref:typename:char &
SIFixVGPRCopies	SIFixVGPRCopies.cpp	/^  SIFixVGPRCopies() : MachineFunctionPass(ID) {$/;"	f	class:__anon8438c2fb0111::SIFixVGPRCopies	file:
SIFixVGPRCopies	SIFixVGPRCopies.cpp	/^class SIFixVGPRCopies : public MachineFunctionPass {$/;"	c	namespace:__anon8438c2fb0111	file:
SIFixVGPRCopiesID	SIFixVGPRCopies.cpp	/^char &llvm::SIFixVGPRCopiesID = SIFixVGPRCopies::ID;$/;"	m	class:llvm	typeref:typename:char &
SIFoldOperands	SIFoldOperands.cpp	/^  SIFoldOperands() : MachineFunctionPass(ID) {$/;"	f	class:__anon07e514130111::SIFoldOperands	file:
SIFoldOperands	SIFoldOperands.cpp	/^class SIFoldOperands : public MachineFunctionPass {$/;"	c	namespace:__anon07e514130111	file:
SIFoldOperandsID	SIFoldOperands.cpp	/^char &llvm::SIFoldOperandsID = SIFoldOperands::ID;$/;"	m	class:llvm	typeref:typename:char &
SIFormMemoryClauses	SIFormMemoryClauses.cpp	/^  SIFormMemoryClauses() : MachineFunctionPass(ID) {$/;"	f	class:__anon8c5c3e4f0111::SIFormMemoryClauses	file:
SIFormMemoryClauses	SIFormMemoryClauses.cpp	/^class SIFormMemoryClauses : public MachineFunctionPass {$/;"	c	namespace:__anon8c5c3e4f0111	file:
SIFormMemoryClausesID	SIFormMemoryClauses.cpp	/^char &llvm::SIFormMemoryClausesID = SIFormMemoryClauses::ID;$/;"	m	class:llvm	typeref:typename:char &
SIFunctionResourceInfo	RVGPUResourceUsageAnalysis.h	/^  struct SIFunctionResourceInfo {$/;"	s	struct:llvm::RVGPUResourceUsageAnalysis
SIGfx10CacheControl	SIMemoryLegalizer.cpp	/^  SIGfx10CacheControl(const GCNSubtarget &ST) : SIGfx7CacheControl(ST) {}$/;"	f	class:__anon46517b8a0111::SIGfx10CacheControl	file:
SIGfx10CacheControl	SIMemoryLegalizer.cpp	/^class SIGfx10CacheControl : public SIGfx7CacheControl {$/;"	c	namespace:__anon46517b8a0111	file:
SIGfx11CacheControl	SIMemoryLegalizer.cpp	/^  SIGfx11CacheControl(const GCNSubtarget &ST) : SIGfx10CacheControl(ST) {}$/;"	f	class:__anon46517b8a0111::SIGfx11CacheControl	file:
SIGfx11CacheControl	SIMemoryLegalizer.cpp	/^class SIGfx11CacheControl : public SIGfx10CacheControl {$/;"	c	namespace:__anon46517b8a0111	file:
SIGfx6CacheControl	SIMemoryLegalizer.cpp	/^  SIGfx6CacheControl(const GCNSubtarget &ST) : SICacheControl(ST) {}$/;"	f	class:__anon46517b8a0111::SIGfx6CacheControl	file:
SIGfx6CacheControl	SIMemoryLegalizer.cpp	/^class SIGfx6CacheControl : public SICacheControl {$/;"	c	namespace:__anon46517b8a0111	file:
SIGfx7CacheControl	SIMemoryLegalizer.cpp	/^  SIGfx7CacheControl(const GCNSubtarget &ST) : SIGfx6CacheControl(ST) {}$/;"	f	class:__anon46517b8a0111::SIGfx7CacheControl	file:
SIGfx7CacheControl	SIMemoryLegalizer.cpp	/^class SIGfx7CacheControl : public SIGfx6CacheControl {$/;"	c	namespace:__anon46517b8a0111	file:
SIGfx90ACacheControl	SIMemoryLegalizer.cpp	/^  SIGfx90ACacheControl(const GCNSubtarget &ST) : SIGfx7CacheControl(ST) {}$/;"	f	class:__anon46517b8a0111::SIGfx90ACacheControl	file:
SIGfx90ACacheControl	SIMemoryLegalizer.cpp	/^class SIGfx90ACacheControl : public SIGfx7CacheControl {$/;"	c	namespace:__anon46517b8a0111	file:
SIGfx940CacheControl	SIMemoryLegalizer.cpp	/^  SIGfx940CacheControl(const GCNSubtarget &ST) : SIGfx90ACacheControl(ST) {};$/;"	f	class:__anon46517b8a0111::SIGfx940CacheControl	file:
SIGfx940CacheControl	SIMemoryLegalizer.cpp	/^class SIGfx940CacheControl : public SIGfx90ACacheControl {$/;"	c	namespace:__anon46517b8a0111	file:
SII	RVGPUInsertDelayAlu.cpp	/^  const RVInstrInfo *SII;$/;"	m	class:__anonc7296b900111::RVGPUInsertDelayAlu	typeref:typename:const RVInstrInfo *	file:
SII	RVGPUInsertSingleUseVDST.cpp	/^  const RVInstrInfo *SII;$/;"	m	class:__anon6c17cf8f0111::RVGPUInsertSingleUseVDST	typeref:typename:const RVInstrInfo *	file:
SIInsertHardClauses	SIInsertHardClauses.cpp	/^  SIInsertHardClauses() : MachineFunctionPass(ID) {}$/;"	f	class:__anon09538a560111::SIInsertHardClauses	file:
SIInsertHardClauses	SIInsertHardClauses.cpp	/^class SIInsertHardClauses : public MachineFunctionPass {$/;"	c	namespace:__anon09538a560111	file:
SIInsertHardClausesID	SIInsertHardClauses.cpp	/^char &llvm::SIInsertHardClausesID = SIInsertHardClauses::ID;$/;"	m	class:llvm	typeref:typename:char &
SIInsertWaitcnts	SIInsertWaitcnts.cpp	/^  SIInsertWaitcnts() : MachineFunctionPass(ID) {$/;"	f	class:__anona6cbb7940211::SIInsertWaitcnts	file:
SIInsertWaitcnts	SIInsertWaitcnts.cpp	/^class SIInsertWaitcnts : public MachineFunctionPass {$/;"	c	namespace:__anona6cbb7940211	file:
SIInsertWaitcntsID	SIInsertWaitcnts.cpp	/^char &llvm::SIInsertWaitcntsID = SIInsertWaitcnts::ID;$/;"	m	class:llvm	typeref:typename:char &
SIInstrFlags	SIDefines.h	/^namespace SIInstrFlags {$/;"	n	namespace:llvm
SIInstrWorklist	RVInstrInfo.h	/^struct SIInstrWorklist {$/;"	s	namespace:llvm
SILateBranchLowering	SILateBranchLowering.cpp	/^  SILateBranchLowering() : MachineFunctionPass(ID) {}$/;"	f	class:__anon4aa55dad0111::SILateBranchLowering	file:
SILateBranchLowering	SILateBranchLowering.cpp	/^class SILateBranchLowering : public MachineFunctionPass {$/;"	c	namespace:__anon4aa55dad0111	file:
SILoadStoreOptimizer	SILoadStoreOptimizer.cpp	/^  SILoadStoreOptimizer() : MachineFunctionPass(ID) {$/;"	f	class:__anon677101620111::SILoadStoreOptimizer	file:
SILoadStoreOptimizer	SILoadStoreOptimizer.cpp	/^class SILoadStoreOptimizer : public MachineFunctionPass {$/;"	c	namespace:__anon677101620111	file:
SILoadStoreOptimizerID	SILoadStoreOptimizer.cpp	/^char &llvm::SILoadStoreOptimizerID = SILoadStoreOptimizer::ID;$/;"	m	class:llvm	typeref:typename:char &
SILowerControlFlow	SILowerControlFlow.cpp	/^  SILowerControlFlow() : MachineFunctionPass(ID) {}$/;"	f	class:__anon0ce7c3340111::SILowerControlFlow	file:
SILowerControlFlow	SILowerControlFlow.cpp	/^class SILowerControlFlow : public MachineFunctionPass {$/;"	c	namespace:__anon0ce7c3340111	file:
SILowerControlFlowID	SILowerControlFlow.cpp	/^char &llvm::SILowerControlFlowID = SILowerControlFlow::ID;$/;"	m	class:llvm	typeref:typename:char &
SILowerI1Copies	SILowerI1Copies.cpp	/^  SILowerI1Copies() : MachineFunctionPass(ID) {$/;"	f	class:__anone16a92980111::SILowerI1Copies	file:
SILowerI1Copies	SILowerI1Copies.cpp	/^class SILowerI1Copies : public MachineFunctionPass {$/;"	c	namespace:__anone16a92980111	file:
SILowerI1CopiesID	SILowerI1Copies.cpp	/^char &llvm::SILowerI1CopiesID = SILowerI1Copies::ID;$/;"	m	class:llvm	typeref:typename:char &
SILowerSGPRSpills	SILowerSGPRSpills.cpp	/^  SILowerSGPRSpills() : MachineFunctionPass(ID) {}$/;"	f	class:__anon4be335ae0111::SILowerSGPRSpills	file:
SILowerSGPRSpills	SILowerSGPRSpills.cpp	/^class SILowerSGPRSpills : public MachineFunctionPass {$/;"	c	namespace:__anon4be335ae0111	file:
SILowerWWMCopies	SILowerWWMCopies.cpp	/^  SILowerWWMCopies() : MachineFunctionPass(ID) {$/;"	f	class:__anon4731d9190111::SILowerWWMCopies	file:
SILowerWWMCopies	SILowerWWMCopies.cpp	/^class SILowerWWMCopies : public MachineFunctionPass {$/;"	c	namespace:__anon4731d9190111	file:
SILowerWWMCopiesID	SILowerWWMCopies.cpp	/^char &llvm::SILowerWWMCopiesID = SILowerWWMCopies::ID;$/;"	m	class:llvm	typeref:typename:char &
SIMemOp	SIMemoryLegalizer.cpp	/^enum class SIMemOp {$/;"	g	namespace:__anon46517b8a0111	file:
SIMemOpAccess	SIMemoryLegalizer.cpp	/^SIMemOpAccess::SIMemOpAccess(MachineFunction &MF) {$/;"	f	class:SIMemOpAccess
SIMemOpAccess	SIMemoryLegalizer.cpp	/^class SIMemOpAccess final {$/;"	c	namespace:__anon46517b8a0111	file:
SIMemOpInfo	SIMemoryLegalizer.cpp	/^  SIMemOpInfo(AtomicOrdering Ordering = AtomicOrdering::SequentiallyConsistent,$/;"	f	class:__anon46517b8a0111::SIMemOpInfo	file:
SIMemOpInfo	SIMemoryLegalizer.cpp	/^class SIMemOpInfo final {$/;"	c	namespace:__anon46517b8a0111	file:
SIMemoryLegalizer	SIMemoryLegalizer.cpp	/^  SIMemoryLegalizer() : MachineFunctionPass(ID) {}$/;"	f	class:__anon46517b8a0111::SIMemoryLegalizer	file:
SIMemoryLegalizer	SIMemoryLegalizer.cpp	/^class SIMemoryLegalizer final : public MachineFunctionPass {$/;"	c	namespace:__anon46517b8a0111	file:
SIMemoryLegalizerID	SIMemoryLegalizer.cpp	/^char &llvm::SIMemoryLegalizerID = SIMemoryLegalizer::ID;$/;"	m	class:llvm	typeref:typename:char &
SIMode	RVMachineFunctionInfo.h	/^  SIMode(const SIModeRegisterDefaults &Mode) {$/;"	f	struct:llvm::yaml::SIMode
SIMode	RVMachineFunctionInfo.h	/^struct SIMode {$/;"	s	namespace:llvm::yaml
SIModeRegister	SIModeRegister.cpp	/^  SIModeRegister() : MachineFunctionPass(ID) {}$/;"	f	class:__anon070b45bc0111::SIModeRegister	file:
SIModeRegister	SIModeRegister.cpp	/^class SIModeRegister : public MachineFunctionPass {$/;"	c	namespace:__anon070b45bc0111	file:
SIModeRegisterDefaults	SIModeRegisterDefaults.cpp	/^SIModeRegisterDefaults::SIModeRegisterDefaults(const Function &F,$/;"	f	class:SIModeRegisterDefaults
SIModeRegisterDefaults	SIModeRegisterDefaults.h	/^  SIModeRegisterDefaults() :$/;"	f	struct:llvm::SIModeRegisterDefaults
SIModeRegisterDefaults	SIModeRegisterDefaults.h	/^struct SIModeRegisterDefaults {$/;"	s	namespace:llvm
SIModeRegisterID	SIModeRegister.cpp	/^char &llvm::SIModeRegisterID = SIModeRegister::ID;$/;"	m	class:llvm	typeref:typename:char &
SINGLE	Utils/RVGPUBaseInfo.h	/^  SINGLE = 0,  \/\/ A single VOP1 or VOP2 instruction which may be used in VOPD.$/;"	e	enum:llvm::RVGPU::VOPD::ComponentKind
SINGLETHREAD	SIMemoryLegalizer.cpp	/^  SINGLETHREAD,$/;"	e	enum:__anon46517b8a0111::SIAtomicScope	file:
SIN_HW	RVGPUISelLowering.h	/^  SIN_HW,$/;"	e	enum:llvm::RVGPUISD::NodeType
SIOptimizeExecMasking	SIOptimizeExecMasking.cpp	/^  SIOptimizeExecMasking() : MachineFunctionPass(ID) {$/;"	f	class:__anon15773df20111::SIOptimizeExecMasking	file:
SIOptimizeExecMasking	SIOptimizeExecMasking.cpp	/^class SIOptimizeExecMasking : public MachineFunctionPass {$/;"	c	namespace:__anon15773df20111	file:
SIOptimizeExecMaskingID	SIOptimizeExecMasking.cpp	/^char &llvm::SIOptimizeExecMaskingID = SIOptimizeExecMasking::ID;$/;"	m	class:llvm	typeref:typename:char &
SIOptimizeExecMaskingPreRA	SIOptimizeExecMaskingPreRA.cpp	/^  SIOptimizeExecMaskingPreRA() : MachineFunctionPass(ID) {$/;"	f	class:__anon5760078c0111::SIOptimizeExecMaskingPreRA	file:
SIOptimizeExecMaskingPreRA	SIOptimizeExecMaskingPreRA.cpp	/^class SIOptimizeExecMaskingPreRA : public MachineFunctionPass {$/;"	c	namespace:__anon5760078c0111	file:
SIOptimizeExecMaskingPreRAID	SIOptimizeExecMaskingPreRA.cpp	/^char &llvm::SIOptimizeExecMaskingPreRAID = SIOptimizeExecMaskingPreRA::ID;$/;"	m	class:llvm	typeref:typename:char &
SIOptimizeVGPRLiveRange	SIOptimizeVGPRLiveRange.cpp	/^  SIOptimizeVGPRLiveRange() : MachineFunctionPass(ID) {}$/;"	f	class:__anon3fc4a09f0111::SIOptimizeVGPRLiveRange	file:
SIOptimizeVGPRLiveRange	SIOptimizeVGPRLiveRange.cpp	/^class SIOptimizeVGPRLiveRange : public MachineFunctionPass {$/;"	c	namespace:__anon3fc4a09f0111	file:
SIOutMods	SIDefines.h	/^namespace SIOutMods {$/;"	n	namespace:llvm
SIPeepholeSDWA	SIPeepholeSDWA.cpp	/^  SIPeepholeSDWA() : MachineFunctionPass(ID) {$/;"	f	class:__anon00bd52b30111::SIPeepholeSDWA	file:
SIPeepholeSDWA	SIPeepholeSDWA.cpp	/^class SIPeepholeSDWA : public MachineFunctionPass {$/;"	c	namespace:__anon00bd52b30111	file:
SIPeepholeSDWAID	SIPeepholeSDWA.cpp	/^char &llvm::SIPeepholeSDWAID = SIPeepholeSDWA::ID;$/;"	m	class:llvm	typeref:typename:char &
SIPostRABundler	SIPostRABundler.cpp	/^  SIPostRABundler() : MachineFunctionPass(ID) {$/;"	f	class:__anona97e3cd70111::SIPostRABundler	file:
SIPostRABundler	SIPostRABundler.cpp	/^class SIPostRABundler : public MachineFunctionPass {$/;"	c	namespace:__anona97e3cd70111	file:
SIPostRABundlerID	SIPostRABundler.cpp	/^char &llvm::SIPostRABundlerID = SIPostRABundler::ID;$/;"	m	class:llvm	typeref:typename:char &
SIPreAllocateWWMRegs	SIPreAllocateWWMRegs.cpp	/^  SIPreAllocateWWMRegs() : MachineFunctionPass(ID) {$/;"	f	class:__anon37f997ca0111::SIPreAllocateWWMRegs	file:
SIPreAllocateWWMRegs	SIPreAllocateWWMRegs.cpp	/^class SIPreAllocateWWMRegs : public MachineFunctionPass {$/;"	c	namespace:__anon37f997ca0111	file:
SIPreAllocateWWMRegsID	SIPreAllocateWWMRegs.cpp	/^char &llvm::SIPreAllocateWWMRegsID = SIPreAllocateWWMRegs::ID;$/;"	m	class:llvm	typeref:typename:char &
SIPreEmitPeephole	SIPreEmitPeephole.cpp	/^  SIPreEmitPeephole() : MachineFunctionPass(ID) {$/;"	f	class:__anon02bc421a0111::SIPreEmitPeephole	file:
SIPreEmitPeephole	SIPreEmitPeephole.cpp	/^class SIPreEmitPeephole : public MachineFunctionPass {$/;"	c	namespace:__anon02bc421a0111	file:
SIPreEmitPeepholeID	SIPreEmitPeephole.cpp	/^char &llvm::SIPreEmitPeepholeID = SIPreEmitPeephole::ID;$/;"	m	class:llvm	typeref:typename:char &
SIProgramInfo	SIProgramInfo.h	/^struct SIProgramInfo {$/;"	s	namespace:llvm
SIRCFlags	SIDefines.h	/^enum SIRCFlags : uint8_t {$/;"	g	namespace:llvm	typeref:typename:uint8_t
SISched	SIMachineScheduler.cpp	/^namespace SISched {$/;"	n	namespace:llvm	file:
SISchedCandidate	SIMachineScheduler.h	/^  struct SISchedCandidate : SISchedulerCandidate {$/;"	s	class:llvm::SIScheduleBlock
SISchedRegistry	RVGPUTargetMachine.cpp	/^SISchedRegistry("si", "Run SI's custom scheduler",$/;"	v	typeref:typename:MachineSchedRegistry	file:
SIScheduleBlock	SIMachineScheduler.h	/^  SIScheduleBlock(SIScheduleDAGMI *DAG, SIScheduleBlockCreator *BC,$/;"	f	class:llvm::SIScheduleBlock
SIScheduleBlock	SIMachineScheduler.h	/^class SIScheduleBlock {$/;"	c	namespace:llvm
SIScheduleBlockCreator	SIMachineScheduler.cpp	/^SIScheduleBlockCreator::SIScheduleBlockCreator(SIScheduleDAGMI *DAG)$/;"	f	class:SIScheduleBlockCreator
SIScheduleBlockCreator	SIMachineScheduler.h	/^class SIScheduleBlockCreator {$/;"	c	namespace:llvm
SIScheduleBlockLinkKind	SIMachineScheduler.h	/^enum SIScheduleBlockLinkKind {$/;"	g	namespace:llvm
SIScheduleBlockResult	SIMachineScheduler.h	/^struct SIScheduleBlockResult {$/;"	s	namespace:llvm
SIScheduleBlockScheduler	SIMachineScheduler.cpp	/^SIScheduleBlockScheduler::SIScheduleBlockScheduler(SIScheduleDAGMI *DAG,$/;"	f	class:SIScheduleBlockScheduler
SIScheduleBlockScheduler	SIMachineScheduler.h	/^class SIScheduleBlockScheduler {$/;"	c	namespace:llvm
SIScheduleBlocks	SIMachineScheduler.h	/^struct SIScheduleBlocks {$/;"	s	namespace:llvm
SIScheduleCandReason	SIMachineScheduler.h	/^enum SIScheduleCandReason {$/;"	g	namespace:llvm
SIScheduleDAGMI	SIMachineScheduler.cpp	/^SIScheduleDAGMI::SIScheduleDAGMI(MachineSchedContext *C) :$/;"	f	class:SIScheduleDAGMI
SIScheduleDAGMI	SIMachineScheduler.h	/^class SIScheduleDAGMI final : public ScheduleDAGMILive {$/;"	c	namespace:llvm
SIScheduler	SIMachineScheduler.h	/^  SIScheduler(SIScheduleDAGMI *DAG) : DAG(DAG), BlockCreator(DAG) {}$/;"	f	class:llvm::SIScheduler
SIScheduler	SIMachineScheduler.h	/^class SIScheduler {$/;"	c	namespace:llvm
SISchedulerBlockCreatorVariant	SIMachineScheduler.h	/^enum SISchedulerBlockCreatorVariant {$/;"	g	namespace:llvm
SISchedulerBlockSchedulerVariant	SIMachineScheduler.h	/^enum SISchedulerBlockSchedulerVariant {$/;"	g	namespace:llvm
SISchedulerCandidate	SIMachineScheduler.h	/^struct SISchedulerCandidate {$/;"	s	namespace:llvm
SIShrinkInstructions	SIShrinkInstructions.cpp	/^  SIShrinkInstructions() : MachineFunctionPass(ID) {$/;"	f	class:__anon665027960111::SIShrinkInstructions	file:
SIShrinkInstructions	SIShrinkInstructions.cpp	/^class SIShrinkInstructions : public MachineFunctionPass {$/;"	c	namespace:__anon665027960111	file:
SISrcMods	SIDefines.h	/^namespace SISrcMods {$/;"	n	namespace:llvm
SITII	SIMachineScheduler.h	/^  const RVInstrInfo *SITII;$/;"	m	class:llvm::SIScheduleDAGMI	typeref:typename:const RVInstrInfo *
SITRI	SIMachineScheduler.h	/^  const RVRegisterInfo *SITRI;$/;"	m	class:llvm::SIScheduleDAGMI	typeref:typename:const RVRegisterInfo *
SIWholeQuadMode	SIWholeQuadMode.cpp	/^  SIWholeQuadMode() :$/;"	f	class:__anon41aff2810111::SIWholeQuadMode	file:
SIWholeQuadMode	SIWholeQuadMode.cpp	/^class SIWholeQuadMode : public MachineFunctionPass {$/;"	c	namespace:__anon41aff2810111	file:
SIZE_MASK	RVGPULibFunc.h	/^    SIZE_MASK = 7,$/;"	e	enum:llvm::RVGPULibFuncBase::EType
SLC	SIDefines.h	/^  SLC = 2,$/;"	e	enum:llvm::RVGPU::CPol::CPol
SLoadAddresses	SIInsertWaitcnts.cpp	/^  DenseMap<const Value *, MachineBasicBlock *> SLoadAddresses;$/;"	m	class:__anona6cbb7940211::SIInsertWaitcnts	typeref:typename:DenseMap<const Value *,MachineBasicBlock * >	file:
SMAX3	RVGPUISelLowering.h	/^  SMAX3,$/;"	e	enum:llvm::RVGPUISD::NodeType
SMED3	RVGPUISelLowering.h	/^  SMED3,$/;"	e	enum:llvm::RVGPUISD::NodeType
SMEM_ACCESS	SIInsertWaitcnts.cpp	/^  SMEM_ACCESS,          \/\/ scalar-memory read & write$/;"	e	enum:__anona6cbb7940211::WaitEventType	file:
SMIN3	RVGPUISelLowering.h	/^  SMIN3,$/;"	e	enum:llvm::RVGPUISD::NodeType
SMInfo	Utils/RVGPUBaseInfo.cpp	/^struct SMInfo {$/;"	s	namespace:llvm::RVGPU	file:
SMRD	SIDefines.h	/^  SMRD = 1 << 19,$/;"	e	enum:llvm::SIInstrFlags::__anon1f24a7950203
SOP1	SIDefines.h	/^  SOP1 = 1 << 2,$/;"	e	enum:llvm::SIInstrFlags::__anon1f24a7950203
SOP2	SIDefines.h	/^  SOP2 = 1 << 3,$/;"	e	enum:llvm::SIInstrFlags::__anon1f24a7950203
SOPC	SIDefines.h	/^  SOPC = 1 << 4,$/;"	e	enum:llvm::SIInstrFlags::__anon1f24a7950203
SOPK	SIDefines.h	/^  SOPK = 1 << 5,$/;"	e	enum:llvm::SIInstrFlags::__anon1f24a7950203
SOPK_ZEXT	SIDefines.h	/^  SOPK_ZEXT = UINT64_C(1) << 38,$/;"	e	enum:llvm::SIInstrFlags::__anon1f24a7950203
SOPP	SIDefines.h	/^  SOPP = 1 << 6,$/;"	e	enum:llvm::SIInstrFlags::__anon1f24a7950203
SOUTHERN_ISLANDS	RVGPUSubtarget.h	/^    SOUTHERN_ISLANDS = 5,$/;"	e	enum:llvm::RVGPUSubtarget::Generation
SOffset	SILoadStoreOptimizer.cpp	/^  bool SOffset = false;$/;"	m	struct:__anon677101620111::AddressRegs	typeref:typename:bool	file:
SPDenormModeBitField	RVGPULegalizerInfo.cpp	/^static const unsigned SPDenormModeBitField =$/;"	v	typeref:typename:const unsigned	file:
SPILL_TO_MEM	RVMachineFunctionInfo.h	/^  SPILL_TO_MEM$/;"	e	enum:llvm::SGPRSaveKind
SPILL_TO_VGPR_LANE	RVMachineFunctionInfo.h	/^  SPILL_TO_VGPR_LANE,$/;"	e	enum:llvm::SGPRSaveKind
SPReg	RVGPUCallLowering.cpp	/^  Register SPReg;$/;"	m	struct:__anonad2fb0ad0111::RVGPUOutgoingArgHandler	typeref:typename:Register	file:
SQ_MAX_PGM_SGPRS	SIInsertWaitcnts.cpp	/^  SQ_MAX_PGM_SGPRS = 256, \/\/ Maximum programmable SGPRs across all targets.$/;"	e	enum:__anona6cbb7940211::RegisterMapping	file:
SQ_MAX_PGM_VGPRS	SIInsertWaitcnts.cpp	/^  SQ_MAX_PGM_VGPRS = 512, \/\/ Maximum programmable VGPRs across all targets.$/;"	e	enum:__anona6cbb7940211::RegisterMapping	file:
SQ_MESSAGE	SIInsertWaitcnts.cpp	/^  SQ_MESSAGE,           \/\/ send message$/;"	e	enum:__anona6cbb7940211::WaitEventType	file:
SRC0	Utils/RVGPUBaseInfo.h	/^  SRC0,$/;"	e	enum:llvm::RVGPU::VOPD::Component
SRC0_ENABLE	SIDefines.h	/^  SRC0_ENABLE = 1 << ID_SRC0,$/;"	e	enum:llvm::RVGPU::VGPRIndexMode::EncBits
SRC1	Utils/RVGPUBaseInfo.h	/^  SRC1,$/;"	e	enum:llvm::RVGPU::VOPD::Component
SRC1_ENABLE	SIDefines.h	/^  SRC1_ENABLE = 1 << ID_SRC1,$/;"	e	enum:llvm::RVGPU::VGPRIndexMode::EncBits
SRC2	Utils/RVGPUBaseInfo.h	/^  SRC2,$/;"	e	enum:llvm::RVGPU::VOPD::Component
SRC2_ENABLE	SIDefines.h	/^  SRC2_ENABLE = 1 << ID_SRC2,$/;"	e	enum:llvm::RVGPU::VGPRIndexMode::EncBits
SRC_SGPR_MASK	SIDefines.h	/^  SRC_SGPR_MASK = 0x100,$/;"	e	enum:llvm::RVGPU::SDWA::SDWA9EncValues
SRC_SGPR_MAX_GFX10	SIDefines.h	/^  SRC_SGPR_MAX_GFX10 = 361,$/;"	e	enum:llvm::RVGPU::SDWA::SDWA9EncValues
SRC_SGPR_MAX_SI	SIDefines.h	/^  SRC_SGPR_MAX_SI = 357,$/;"	e	enum:llvm::RVGPU::SDWA::SDWA9EncValues
SRC_SGPR_MIN	SIDefines.h	/^  SRC_SGPR_MIN = 256,$/;"	e	enum:llvm::RVGPU::SDWA::SDWA9EncValues
SRC_TTMP_MAX	SIDefines.h	/^  SRC_TTMP_MAX = 379,$/;"	e	enum:llvm::RVGPU::SDWA::SDWA9EncValues
SRC_TTMP_MIN	SIDefines.h	/^  SRC_TTMP_MIN = 364,$/;"	e	enum:llvm::RVGPU::SDWA::SDWA9EncValues
SRC_VGPR_MASK	SIDefines.h	/^  SRC_VGPR_MASK = 0xFF,$/;"	e	enum:llvm::RVGPU::SDWA::SDWA9EncValues
SRC_VGPR_MAX	SIDefines.h	/^  SRC_VGPR_MAX = 255,$/;"	e	enum:llvm::RVGPU::SDWA::SDWA9EncValues
SRC_VGPR_MIN	SIDefines.h	/^  SRC_VGPR_MIN = 0,$/;"	e	enum:llvm::RVGPU::SDWA::SDWA9EncValues
SRsrc	SILoadStoreOptimizer.cpp	/^  bool SRsrc = false;$/;"	m	struct:__anon677101620111::AddressRegs	typeref:typename:bool	file:
SSamp	SILoadStoreOptimizer.cpp	/^  bool SSamp = false;$/;"	m	struct:__anon677101620111::AddressRegs	typeref:typename:bool	file:
ST	GCNCreateVOPD.cpp	/^  const GCNSubtarget *ST = nullptr;$/;"	m	class:__anon7e59fb9b0111::GCNCreateVOPD	typeref:typename:const GCNSubtarget *	file:
ST	GCNDPPCombine.cpp	/^  const GCNSubtarget *ST;$/;"	m	class:__anon46a5cf8f0111::GCNDPPCombine	typeref:typename:const GCNSubtarget *	file:
ST	GCNHazardRecognizer.h	/^  const GCNSubtarget &ST;$/;"	m	class:llvm::GCNHazardRecognizer	typeref:typename:const GCNSubtarget &
ST	GCNNSAReassign.cpp	/^  const GCNSubtarget *ST;$/;"	m	class:__anon7e838c8c0111::GCNNSAReassign	typeref:typename:const GCNSubtarget *	file:
ST	GCNSchedStrategy.h	/^  const GCNSubtarget &ST;$/;"	m	class:llvm::GCNSchedStage	typeref:typename:const GCNSubtarget &
ST	GCNSchedStrategy.h	/^  const GCNSubtarget &ST;$/;"	m	class:llvm::GCNScheduleDAGMILive	typeref:typename:const GCNSubtarget &
ST	GCNSubtarget.h	/^  const GCNSubtarget &ST;$/;"	m	class:llvm::GCNUserSGPRUsageInfo	typeref:typename:const GCNSubtarget &
ST	RVFrameLowering.cpp	/^  const GCNSubtarget &ST;$/;"	m	class:llvm::PrologEpilogSGPRSpillBuilder	typeref:typename:const GCNSubtarget &	file:
ST	RVGPUAtomicOptimizer.cpp	/^  const GCNSubtarget *ST;$/;"	m	class:__anon7bca098a0111::RVGPUAtomicOptimizerImpl	typeref:typename:const GCNSubtarget *	file:
ST	RVGPUCodeGenPrepare.cpp	/^  const GCNSubtarget *ST = nullptr;$/;"	m	class:__anond35e324e0111::RVGPUCodeGenPrepareImpl	typeref:typename:const GCNSubtarget *	file:
ST	RVGPULegalizerInfo.h	/^  const GCNSubtarget &ST;$/;"	m	class:llvm::RVGPULegalizerInfo	typeref:typename:const GCNSubtarget &
ST	RVGPULowerKernelArguments.cpp	/^  const GCNSubtarget &ST;$/;"	m	class:__anonf85f450a0111::PreloadKernelArgInfo	typeref:typename:const GCNSubtarget &	file:
ST	RVGPUMCInstLower.h	/^  const TargetSubtargetInfo &ST;$/;"	m	class:RVGPUMCInstLower	typeref:typename:const TargetSubtargetInfo &
ST	RVGPUTargetTransformInfo.h	/^  const GCNSubtarget *ST;$/;"	m	class:llvm::GCNTTIImpl	typeref:typename:const GCNSubtarget *
ST	RVGPUTargetTransformInfo.h	/^  const TargetSubtargetInfo *ST;$/;"	m	class:llvm::RVGPUTTIImpl	typeref:typename:const TargetSubtargetInfo *
ST	RVInstrInfo.h	/^  const GCNSubtarget &ST;$/;"	m	class:llvm::RVInstrInfo	typeref:typename:const GCNSubtarget &
ST	RVRegisterInfo.h	/^  const GCNSubtarget &ST;$/;"	m	class:llvm::RVRegisterInfo	typeref:typename:const GCNSubtarget &
ST	SIFoldOperands.cpp	/^  const GCNSubtarget *ST;$/;"	m	class:__anon07e514130111::SIFoldOperands	typeref:typename:const GCNSubtarget *	file:
ST	SIFormMemoryClauses.cpp	/^  const GCNSubtarget *ST;$/;"	m	class:__anon8c5c3e4f0111::SIFormMemoryClauses	typeref:typename:const GCNSubtarget *	file:
ST	SIInsertHardClauses.cpp	/^  const GCNSubtarget *ST = nullptr;$/;"	m	class:__anon09538a560111::SIInsertHardClauses	typeref:typename:const GCNSubtarget *	file:
ST	SIInsertWaitcnts.cpp	/^  const GCNSubtarget *ST = nullptr;$/;"	m	class:__anona6cbb7940211::SIInsertWaitcnts	typeref:typename:const GCNSubtarget *	file:
ST	SIInsertWaitcnts.cpp	/^  const GCNSubtarget *ST = nullptr;$/;"	m	class:__anona6cbb7940211::WaitcntBrackets	typeref:typename:const GCNSubtarget *	file:
ST	SILowerI1Copies.h	/^  const GCNSubtarget *ST = nullptr;$/;"	m	class:llvm::PhiLoweringHelper	typeref:typename:const GCNSubtarget *
ST	SIMemoryLegalizer.cpp	/^  const GCNSubtarget &ST;$/;"	m	class:__anon46517b8a0111::SICacheControl	typeref:typename:const GCNSubtarget &	file:
ST	SIOptimizeExecMasking.cpp	/^  const GCNSubtarget *ST = nullptr;$/;"	m	class:__anon15773df20111::SIOptimizeExecMasking	typeref:typename:const GCNSubtarget *	file:
ST	SIShrinkInstructions.cpp	/^  const GCNSubtarget *ST;$/;"	m	class:__anon665027960111::SIShrinkInstructions	typeref:typename:const GCNSubtarget *	file:
ST	SIWholeQuadMode.cpp	/^  const GCNSubtarget *ST;$/;"	m	class:__anon41aff2810111::SIWholeQuadMode	typeref:typename:const GCNSubtarget *	file:
STI	MCTargetDesc/RVGPUTargetStreamer.h	/^  const MCSubtargetInfo &STI;$/;"	m	class:llvm::RVGPUTargetELFStreamer	typeref:typename:const MCSubtargetInfo &
STI	RVGPUInstructionSelector.h	/^  const GCNSubtarget &STI;$/;"	m	class:llvm::RVGPUInstructionSelector	typeref:typename:const GCNSubtarget &
STI	RVGPUPostLegalizerCombiner.cpp	/^  const GCNSubtarget &STI;$/;"	m	class:__anonf94dcdde0111::RVGPUPostLegalizerCombinerImpl	typeref:typename:const GCNSubtarget &	file:
STI	RVGPUPreLegalizerCombiner.cpp	/^  const GCNSubtarget &STI;$/;"	m	class:__anonb779c2ff0111::RVGPUPreLegalizerCombinerImpl	typeref:typename:const GCNSubtarget &	file:
STI	RVGPURegBankCombiner.cpp	/^  const GCNSubtarget &STI;$/;"	m	class:__anon00ae19330111::RVGPURegBankCombinerImpl	typeref:typename:const GCNSubtarget &	file:
STI	Utils/RVGPUBaseInfo.h	/^  const MCSubtargetInfo &STI;$/;"	m	class:llvm::RVGPU::IsaInfo::RVGPUTargetID	typeref:typename:const MCSubtargetInfo &
STM	SILoadStoreOptimizer.cpp	/^  const GCNSubtarget *STM = nullptr;$/;"	m	class:__anon677101620111::SILoadStoreOptimizer	typeref:typename:const GCNSubtarget *	file:
STORE	SIMemoryLegalizer.cpp	/^  STORE = 1u << 1,$/;"	e	enum:__anon46517b8a0111::SIMemOp	file:
STORE_MSKOR	RVGPUISelLowering.h	/^  STORE_MSKOR,$/;"	e	enum:llvm::RVGPUISD::NodeType
STREAM_ID_DEFAULT_	SIDefines.h	/^  STREAM_ID_DEFAULT_ = 0,$/;"	e	enum:llvm::RVGPU::SendMsg::StreamId
STREAM_ID_FIRST_	SIDefines.h	/^  STREAM_ID_FIRST_ = STREAM_ID_DEFAULT_,$/;"	e	enum:llvm::RVGPU::SendMsg::StreamId
STREAM_ID_LAST_	SIDefines.h	/^  STREAM_ID_LAST_ = 4,$/;"	e	enum:llvm::RVGPU::SendMsg::StreamId
STREAM_ID_MASK_	SIDefines.h	/^  STREAM_ID_MASK_ = (((1 << STREAM_ID_WIDTH_) - 1) << STREAM_ID_SHIFT_)$/;"	e	enum:llvm::RVGPU::SendMsg::StreamId
STREAM_ID_NONE_	SIDefines.h	/^  STREAM_ID_NONE_ = 0,$/;"	e	enum:llvm::RVGPU::SendMsg::StreamId
STREAM_ID_SHIFT_	SIDefines.h	/^  STREAM_ID_SHIFT_ = 8,$/;"	e	enum:llvm::RVGPU::SendMsg::StreamId
STREAM_ID_WIDTH_	SIDefines.h	/^  STREAM_ID_WIDTH_=  2,$/;"	e	enum:llvm::RVGPU::SendMsg::StreamId
SU	GCNILPSched.cpp	/^    SUnit *SU;$/;"	m	struct:__anonbd2d93ba0111::GCNILPScheduler::Candidate	typeref:typename:SUnit *	file:
SU	GCNMinRegStrategy.cpp	/^    const SUnit *SU;$/;"	m	struct:__anon807286a30111::GCNMinRegScheduler::Candidate	typeref:typename:const SUnit *	file:
SU	SIMachineScheduler.h	/^    SUnit *SU = nullptr;$/;"	m	struct:llvm::SIScheduleBlock::SISchedCandidate	typeref:typename:SUnit *
SUNumbers	GCNILPSched.cpp	/^  std::vector<unsigned> SUNumbers;$/;"	m	class:__anonbd2d93ba0111::GCNILPScheduler	typeref:typename:std::vector<unsigned>	file:
SUToCandSGsPair	RVGPUIGroupLP.cpp	/^typedef std::pair<SUnit *, SmallVector<int, 4>> SUToCandSGsPair;$/;"	t	namespace:__anon61b122dc0111	typeref:typename:std::pair<SUnit *,SmallVector<int,4>>	file:
SUnits	SIMachineScheduler.h	/^  std::vector<SUnit*> SUnits;$/;"	m	class:llvm::SIScheduleBlock	typeref:typename:std::vector<SUnit * >
SUnitsLinksBackup	SIMachineScheduler.h	/^  std::vector<SUnit> SUnitsLinksBackup;$/;"	m	class:llvm::SIScheduleDAGMI	typeref:typename:std::vector<SUnit>
SUnitsToCandidateSGsMap	RVGPUIGroupLP.cpp	/^typedef DenseMap<SUnit *, SmallVector<int, 4>> SUnitsToCandidateSGsMap;$/;"	t	namespace:__anon61b122dc0111	typeref:typename:DenseMap<SUnit *,SmallVector<int,4>>	file:
SUs	SIMachineScheduler.h	/^  std::vector<unsigned> SUs;$/;"	m	struct:llvm::SIScheduleBlockResult	typeref:typename:std::vector<unsigned>
SUsToCandSGsVec	RVGPUIGroupLP.cpp	/^typedef SmallVector<SUToCandSGsPair, 4> SUsToCandSGsVec;$/;"	t	namespace:__anon61b122dc0111	typeref:typename:SmallVector<SUToCandSGsPair,4>	file:
SWZ	SIDefines.h	/^  SWZ = 1 << 6, \/\/ Swizzle bit$/;"	e	enum:llvm::RVGPU::CPol::CPol
SWZ_pregfx12	SIDefines.h	/^  SWZ_pregfx12 = 8,$/;"	e	enum:llvm::RVGPU::CPol::CPol
SYSTEM	SIMemoryLegalizer.cpp	/^  SYSTEM$/;"	e	enum:__anon46517b8a0111::SIAtomicScope	file:
S_00B028_MEM_ORDERED	SIDefines.h	/^#define   S_00B028_MEM_ORDERED(/;"	d
S_00B028_SGPRS	SIDefines.h	/^#define   S_00B028_SGPRS(/;"	d
S_00B028_VGPRS	SIDefines.h	/^#define   S_00B028_VGPRS(/;"	d
S_00B02C_EXTRA_LDS_SIZE	SIDefines.h	/^#define   S_00B02C_EXTRA_LDS_SIZE(/;"	d
S_00B128_MEM_ORDERED	SIDefines.h	/^#define   S_00B128_MEM_ORDERED(/;"	d
S_00B228_MEM_ORDERED	SIDefines.h	/^#define   S_00B228_MEM_ORDERED(/;"	d
S_00B228_WGP_MODE	SIDefines.h	/^#define   S_00B228_WGP_MODE(/;"	d
S_00B428_MEM_ORDERED	SIDefines.h	/^#define   S_00B428_MEM_ORDERED(/;"	d
S_00B428_WGP_MODE	SIDefines.h	/^#define   S_00B428_WGP_MODE(/;"	d
S_00B800_CS_W32_EN	SIDefines.h	/^#define   S_00B800_CS_W32_EN(/;"	d
S_00B848_DEBUG_MODE	SIDefines.h	/^#define   S_00B848_DEBUG_MODE(/;"	d
S_00B848_DX10_CLAMP	SIDefines.h	/^#define   S_00B848_DX10_CLAMP(/;"	d
S_00B848_FLOAT_MODE	SIDefines.h	/^#define   S_00B848_FLOAT_MODE(/;"	d
S_00B848_FWD_PROGRESS	SIDefines.h	/^#define   S_00B848_FWD_PROGRESS(/;"	d
S_00B848_IEEE_MODE	SIDefines.h	/^#define   S_00B848_IEEE_MODE(/;"	d
S_00B848_MEM_ORDERED	SIDefines.h	/^#define   S_00B848_MEM_ORDERED(/;"	d
S_00B848_PRIORITY	SIDefines.h	/^#define   S_00B848_PRIORITY(/;"	d
S_00B848_PRIV	SIDefines.h	/^#define   S_00B848_PRIV(/;"	d
S_00B848_RR_WG_MODE	SIDefines.h	/^#define   S_00B848_RR_WG_MODE(/;"	d
S_00B848_SGPRS	SIDefines.h	/^#define   S_00B848_SGPRS(/;"	d
S_00B848_VGPRS	SIDefines.h	/^#define   S_00B848_VGPRS(/;"	d
S_00B848_WGP_MODE	SIDefines.h	/^#define   S_00B848_WGP_MODE(/;"	d
S_00B84C_EXCP_EN	SIDefines.h	/^#define   S_00B84C_EXCP_EN(/;"	d
S_00B84C_EXCP_EN_MSB	SIDefines.h	/^#define   S_00B84C_EXCP_EN_MSB(/;"	d
S_00B84C_LDS_SIZE	SIDefines.h	/^#define   S_00B84C_LDS_SIZE(/;"	d
S_00B84C_SCRATCH_EN	SIDefines.h	/^#define   S_00B84C_SCRATCH_EN(/;"	d
S_00B84C_TGID_X_EN	SIDefines.h	/^#define   S_00B84C_TGID_X_EN(/;"	d
S_00B84C_TGID_Y_EN	SIDefines.h	/^#define   S_00B84C_TGID_Y_EN(/;"	d
S_00B84C_TGID_Z_EN	SIDefines.h	/^#define   S_00B84C_TGID_Z_EN(/;"	d
S_00B84C_TG_SIZE_EN	SIDefines.h	/^#define   S_00B84C_TG_SIZE_EN(/;"	d
S_00B84C_TIDIG_COMP_CNT	SIDefines.h	/^#define   S_00B84C_TIDIG_COMP_CNT(/;"	d
S_00B84C_TRAP_HANDLER	SIDefines.h	/^#define   S_00B84C_TRAP_HANDLER(/;"	d
S_00B84C_USER_SGPR	SIDefines.h	/^#define   S_00B84C_USER_SGPR(/;"	d
S_00B860_WAVESIZE_GFX11Plus	SIDefines.h	/^#define   S_00B860_WAVESIZE_GFX11Plus(/;"	d
S_00B860_WAVESIZE_PreGFX11	SIDefines.h	/^#define   S_00B860_WAVESIZE_PreGFX11(/;"	d
S_0286D8_PS_W32_EN	SIDefines.h	/^#define   S_0286D8_PS_W32_EN(/;"	d
S_0286E8_WAVESIZE_GFX11Plus	SIDefines.h	/^#define   S_0286E8_WAVESIZE_GFX11Plus(/;"	d
S_0286E8_WAVESIZE_PreGFX11	SIDefines.h	/^#define   S_0286E8_WAVESIZE_PreGFX11(/;"	d
S_028B54_GS_W32_EN	SIDefines.h	/^#define   S_028B54_GS_W32_EN(/;"	d
S_028B54_HS_W32_EN	SIDefines.h	/^#define   S_028B54_HS_W32_EN(/;"	d
S_028B54_VS_W32_EN	SIDefines.h	/^#define   S_028B54_VS_W32_EN(/;"	d
S_BUFFER_LOAD_IMM	SILoadStoreOptimizer.cpp	/^  S_BUFFER_LOAD_IMM,$/;"	e	enum:__anon677101620111::InstClassEnum	file:
S_BUFFER_LOAD_SGPR_IMM	SILoadStoreOptimizer.cpp	/^  S_BUFFER_LOAD_SGPR_IMM,$/;"	e	enum:__anon677101620111::InstClassEnum	file:
S_LOAD_IMM	SILoadStoreOptimizer.cpp	/^  S_LOAD_IMM,$/;"	e	enum:__anon677101620111::InstClassEnum	file:
S_NAN	SIDefines.h	/^  S_NAN = 1 << 0,        \/\/ Signaling NaN$/;"	e	enum:llvm::SIInstrFlags::ClassFlags
SampIndex	RVGPUInstrInfo.h	/^  uint8_t SampIndex;$/;"	m	struct:llvm::RVGPU::ImageDimIntrinsicInfo	typeref:typename:uint8_t
Sampler	Utils/RVGPUBaseInfo.h	/^  bool Sampler;$/;"	m	struct:llvm::RVGPU::MIMGBaseOpcodeInfo	typeref:typename:bool
SaveBlocks	SILowerSGPRSpills.cpp	/^  MBBVector SaveBlocks;$/;"	m	class:__anon4be335ae0111::SILowerSGPRSpills	typeref:typename:MBBVector	file:
SaveExecVCmpMapping	SIOptimizeExecMasking.cpp	/^  DenseMap<MachineInstr *, MachineInstr *> SaveExecVCmpMapping;$/;"	m	class:__anon15773df20111::SIOptimizeExecMasking	typeref:typename:DenseMap<MachineInstr *,MachineInstr * >	file:
SaveMaxRP	GCNIterativeScheduler.cpp	/^  GCNRegPressure SaveMaxRP;$/;"	m	class:GCNIterativeScheduler::OverrideLegacyStrategy	typeref:typename:GCNRegPressure	file:
SaveSchedImpl	GCNIterativeScheduler.cpp	/^  std::unique_ptr<MachineSchedStrategy> SaveSchedImpl;$/;"	m	class:GCNIterativeScheduler::OverrideLegacyStrategy	typeref:typename:std::unique_ptr<MachineSchedStrategy>	file:
SavedExecReg	RVRegisterInfo.cpp	/^  Register SavedExecReg = RVGPU::NoRegister;$/;"	m	struct:llvm::SGPRSpillBuilder	typeref:typename:Register	file:
SavedMutations	GCNSchedStrategy.h	/^  std::vector<std::unique_ptr<ScheduleDAGMutation>> SavedMutations;$/;"	m	class:llvm::GCNPostScheduleDAGMILive	typeref:typename:std::vector<std::unique_ptr<ScheduleDAGMutation>>
SavedMutations	GCNSchedStrategy.h	/^  std::vector<std::unique_ptr<ScheduleDAGMutation>> SavedMutations;$/;"	m	class:llvm::GCNSchedStage	typeref:typename:std::vector<std::unique_ptr<ScheduleDAGMutation>>
ScalarFlatScratchInsts	GCNSubtarget.h	/^  bool ScalarFlatScratchInsts = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
ScalarizeGlobal	GCNSubtarget.h	/^  bool ScalarizeGlobal = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
ScalarizeGlobal	RVGPUTargetMachine.cpp	/^static cl::opt<bool> ScalarizeGlobal($/;"	v	typeref:typename:cl::opt<bool>	file:
ScaleFactor	GCNSchedStrategy.cpp	/^const unsigned ScheduleMetrics::ScaleFactor = 100;$/;"	m	class:ScheduleMetrics	typeref:typename:const unsigned
ScaleFactor	GCNSchedStrategy.h	/^  static const unsigned ScaleFactor;$/;"	m	class:llvm::ScheduleMetrics	typeref:typename:const unsigned
ScanImpl	RVGPU.h	/^  ScanOptions ScanImpl;$/;"	m	struct:llvm::RVGPUAtomicOptimizerPass	typeref:typename:ScanOptions
ScanImpl	RVGPUAtomicOptimizer.cpp	/^  ScanOptions ScanImpl;$/;"	m	class:__anon7bca098a0111::RVGPUAtomicOptimizer	typeref:typename:ScanOptions	file:
ScanImpl	RVGPUAtomicOptimizer.cpp	/^  ScanOptions ScanImpl;$/;"	m	class:__anon7bca098a0111::RVGPUAtomicOptimizerImpl	typeref:typename:ScanOptions	file:
ScanOptions	RVGPU.h	/^enum class ScanOptions { DPP, Iterative, None };$/;"	g	namespace:llvm
ScavengeFI	RVMachineFunctionInfo.h	/^  std::optional<FrameIndex> ScavengeFI;$/;"	m	struct:llvm::yaml::RVMachineFunctionInfo	typeref:typename:std::optional<FrameIndex>
ScavengeFI	RVMachineFunctionInfo.h	/^  std::optional<int> ScavengeFI;$/;"	m	class:llvm::RVMachineFunctionInfo	typeref:typename:std::optional<int>
Sch	GCNIterativeScheduler.cpp	/^  GCNIterativeScheduler &Sch;$/;"	m	class:GCNIterativeScheduler::BuildDAG	typeref:typename:GCNIterativeScheduler &	file:
Sch	GCNIterativeScheduler.cpp	/^  GCNIterativeScheduler &Sch;$/;"	m	class:GCNIterativeScheduler::OverrideLegacyStrategy	typeref:typename:GCNIterativeScheduler &	file:
SchedGroup	RVGPUIGroupLP.cpp	/^  SchedGroup(SchedGroupMask SGMask, std::optional<unsigned> MaxSize, int SyncID,$/;"	f	class:__anon61b122dc0111::SchedGroup	file:
SchedGroup	RVGPUIGroupLP.cpp	/^  SchedGroup(SchedGroupMask SGMask, std::optional<unsigned> MaxSize,$/;"	f	class:__anon61b122dc0111::SchedGroup	file:
SchedGroup	RVGPUIGroupLP.cpp	/^class SchedGroup {$/;"	c	namespace:__anon61b122dc0111	file:
SchedGroupMask	RVGPUIGroupLP.cpp	/^enum class SchedGroupMask {$/;"	g	namespace:__anon61b122dc0111	file:
SchedModel	RVGPUInsertDelayAlu.cpp	/^  TargetSchedModel SchedModel;$/;"	m	class:__anonc7296b900111::RVGPUInsertDelayAlu	typeref:typename:TargetSchedModel	file:
SchedModel	RVInstrInfo.h	/^  TargetSchedModel SchedModel;$/;"	m	class:llvm::RVInstrInfo	typeref:typename:TargetSchedModel
SchedStages	GCNSchedStrategy.h	/^  SmallVector<GCNSchedStageID, 4> SchedStages;$/;"	m	class:llvm::GCNSchedStrategy	typeref:typename:SmallVector<GCNSchedStageID,4>
SchedStrategyStub	GCNIterativeScheduler.cpp	/^class SchedStrategyStub : public MachineSchedStrategy {$/;"	c	namespace:__anon1e3e8dba0111	file:
Schedule	GCNIterativeScheduler.h	/^    std::vector<MachineInstr *> Schedule;$/;"	m	struct:llvm::GCNIterativeScheduler::TentativeSchedule	typeref:typename:std::vector<MachineInstr * >
ScheduleLength	GCNSchedStrategy.h	/^  unsigned ScheduleLength;$/;"	m	class:llvm::ScheduleMetrics	typeref:typename:unsigned
ScheduleMetricBias	GCNSchedStrategy.cpp	/^static cl::opt<unsigned> ScheduleMetricBias($/;"	v	typeref:typename:cl::opt<unsigned>	file:
ScheduleMetrics	GCNSchedStrategy.h	/^  ScheduleMetrics() {}$/;"	f	class:llvm::ScheduleMetrics
ScheduleMetrics	GCNSchedStrategy.h	/^  ScheduleMetrics(unsigned L, unsigned BC)$/;"	f	class:llvm::ScheduleMetrics
ScheduleMetrics	GCNSchedStrategy.h	/^class ScheduleMetrics {$/;"	c	namespace:llvm
ScheduleRef	GCNIterativeScheduler.h	/^  using ScheduleRef = ArrayRef<const SUnit *>;$/;"	t	class:llvm::GCNIterativeScheduler	typeref:typename:ArrayRef<const SUnit * >
Scheduled	SIMachineScheduler.h	/^  bool Scheduled = false;$/;"	m	class:llvm::SIScheduleBlock	typeref:typename:bool
ScheduledSUnits	SIMachineScheduler.h	/^  std::vector<SUnit*> ScheduledSUnits;$/;"	m	class:llvm::SIScheduleBlock	typeref:typename:std::vector<SUnit * >
ScheduledSUnits	SIMachineScheduler.h	/^  std::vector<unsigned> ScheduledSUnits;$/;"	m	class:llvm::SIScheduleDAGMI	typeref:typename:std::vector<unsigned>
ScheduledSUnitsInv	SIMachineScheduler.h	/^  std::vector<unsigned> ScheduledSUnitsInv;$/;"	m	class:llvm::SIScheduleDAGMI	typeref:typename:std::vector<unsigned>
Scope	SIMemoryLegalizer.cpp	/^  SIAtomicScope Scope = SIAtomicScope::SYSTEM;$/;"	m	class:__anon46517b8a0111::SIMemOpInfo	typeref:typename:SIAtomicScope	file:
Score	SIFixSGPRCopies.cpp	/^  unsigned Score;$/;"	m	class:__anond27816180111::V2SCopyInfo	typeref:typename:unsigned	file:
ScoreLBs	SIInsertWaitcnts.cpp	/^  unsigned ScoreLBs[NUM_INST_CNTS] = {0};$/;"	m	class:__anona6cbb7940211::WaitcntBrackets	typeref:typename:unsigned[]	file:
ScoreUBs	SIInsertWaitcnts.cpp	/^  unsigned ScoreUBs[NUM_INST_CNTS] = {0};$/;"	m	class:__anona6cbb7940211::WaitcntBrackets	typeref:typename:unsigned[]	file:
ScratchBlocks	SIProgramInfo.h	/^    uint32_t ScratchBlocks = 0;$/;"	m	struct:llvm::SIProgramInfo	typeref:typename:uint32_t
ScratchEnable	SIProgramInfo.h	/^    uint32_t ScratchEnable = 0;$/;"	m	struct:llvm::SIProgramInfo	typeref:typename:uint32_t
ScratchRSrcReg	RVMachineFunctionInfo.h	/^  Register ScratchRSrcReg = RVGPU::PRIVATE_RSRC_REG;$/;"	m	class:llvm::RVMachineFunctionInfo	typeref:typename:Register
ScratchRSrcReg	RVMachineFunctionInfo.h	/^  StringValue ScratchRSrcReg = "$private_rsrc_reg";$/;"	m	struct:llvm::yaml::RVMachineFunctionInfo	typeref:typename:StringValue
ScratchSize	SIProgramInfo.h	/^    uint64_t ScratchSize = 0;$/;"	m	struct:llvm::SIProgramInfo	typeref:typename:uint64_t
SdwaSel	SIDefines.h	/^enum SdwaSel : unsigned {$/;"	g	namespace:llvm::RVGPU::SDWA	typeref:typename:unsigned
SecondMI	GCNCreateVOPD.cpp	/^      MachineInstr *SecondMI;$/;"	m	class:__anon7e59fb9b0111::GCNCreateVOPD::VOPDCombineInfo	typeref:typename:MachineInstr *	file:
SectionName	RVGPUPTNote.h	/^const char SectionName[] = ".note";$/;"	v	namespace:llvm::RVGPU::ElfNote	typeref:typename:const char[]
Select	RVGPUISelDAGToDAG.cpp	/^void RVGPUDAGToDAGISel::Select(SDNode *N) {$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:void
SelectADDRVTX_READ	RVGPUISelDAGToDAG.cpp	/^bool RVGPUDAGToDAGISel::SelectADDRVTX_READ(SDValue Addr, SDValue &Base,$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
SelectADD_SUB_I64	RVGPUISelDAGToDAG.cpp	/^void RVGPUDAGToDAGISel::SelectADD_SUB_I64(SDNode *N) {$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:void
SelectAddcSubb	RVGPUISelDAGToDAG.cpp	/^void RVGPUDAGToDAGISel::SelectAddcSubb(SDNode *N) {$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:void
SelectBRCOND	RVGPUISelDAGToDAG.cpp	/^void RVGPUDAGToDAGISel::SelectBRCOND(SDNode *N) {$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:void
SelectBUFSOffset	RVGPUISelDAGToDAG.cpp	/^bool RVGPUDAGToDAGISel::SelectBUFSOffset(SDValue ByteOffsetNode,$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
SelectBuildVector	RVGPUISelDAGToDAG.cpp	/^void RVGPUDAGToDAGISel::SelectBuildVector(SDNode *N, unsigned RegClassID) {$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:void
SelectDIV_SCALE	RVGPUISelDAGToDAG.cpp	/^void RVGPUDAGToDAGISel::SelectDIV_SCALE(SDNode *N) {$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:void
SelectDS128Bit8ByteAligned	RVGPUISelDAGToDAG.cpp	/^bool RVGPUDAGToDAGISel::SelectDS128Bit8ByteAligned(SDValue Addr, SDValue &Base,$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
SelectDS1Addr1Offset	RVGPUISelDAGToDAG.cpp	/^bool RVGPUDAGToDAGISel::SelectDS1Addr1Offset(SDValue Addr, SDValue &Base,$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
SelectDS64Bit4ByteAligned	RVGPUISelDAGToDAG.cpp	/^bool RVGPUDAGToDAGISel::SelectDS64Bit4ByteAligned(SDValue Addr, SDValue &Base,$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
SelectDSAppendConsume	RVGPUISelDAGToDAG.cpp	/^void RVGPUDAGToDAGISel::SelectDSAppendConsume(SDNode *N, unsigned IntrID) {$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:void
SelectDSBvhStackIntrinsic	RVGPUISelDAGToDAG.cpp	/^void RVGPUDAGToDAGISel::SelectDSBvhStackIntrinsic(SDNode *N) {$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:void
SelectDSReadWrite2	RVGPUISelDAGToDAG.cpp	/^bool RVGPUDAGToDAGISel::SelectDSReadWrite2(SDValue Addr, SDValue &Base,$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
SelectDS_GWS	RVGPUISelDAGToDAG.cpp	/^void RVGPUDAGToDAGISel::SelectDS_GWS(SDNode *N, unsigned IntrID) {$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:void
SelectDotIUVOP3PMods	RVGPUISelDAGToDAG.cpp	/^bool RVGPUDAGToDAGISel::SelectDotIUVOP3PMods(SDValue In, SDValue &Src) const {$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
SelectFMA_W_CHAIN	RVGPUISelDAGToDAG.cpp	/^void RVGPUDAGToDAGISel::SelectFMA_W_CHAIN(SDNode *N) {$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:void
SelectFMUL_W_CHAIN	RVGPUISelDAGToDAG.cpp	/^void RVGPUDAGToDAGISel::SelectFMUL_W_CHAIN(SDNode *N) {$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:void
SelectFP_EXTEND	RVGPUISelDAGToDAG.cpp	/^void RVGPUDAGToDAGISel::SelectFP_EXTEND(SDNode *N) {$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:void
SelectFlatOffset	RVGPUISelDAGToDAG.cpp	/^bool RVGPUDAGToDAGISel::SelectFlatOffset(SDNode *N, SDValue Addr,$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
SelectFlatOffsetImpl	RVGPUISelDAGToDAG.cpp	/^bool RVGPUDAGToDAGISel::SelectFlatOffsetImpl(SDNode *N, SDValue Addr,$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
SelectGlobalOffset	RVGPUISelDAGToDAG.cpp	/^bool RVGPUDAGToDAGISel::SelectGlobalOffset(SDNode *N, SDValue Addr,$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
SelectGlobalSAddr	RVGPUISelDAGToDAG.cpp	/^bool RVGPUDAGToDAGISel::SelectGlobalSAddr(SDNode *N,$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
SelectINTRINSIC_VOID	RVGPUISelDAGToDAG.cpp	/^void RVGPUDAGToDAGISel::SelectINTRINSIC_VOID(SDNode *N) {$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:void
SelectINTRINSIC_WO_CHAIN	RVGPUISelDAGToDAG.cpp	/^void RVGPUDAGToDAGISel::SelectINTRINSIC_WO_CHAIN(SDNode *N) {$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:void
SelectINTRINSIC_W_CHAIN	RVGPUISelDAGToDAG.cpp	/^void RVGPUDAGToDAGISel::SelectINTRINSIC_W_CHAIN(SDNode *N) {$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:void
SelectInterpP1F16	RVGPUISelDAGToDAG.cpp	/^void RVGPUDAGToDAGISel::SelectInterpP1F16(SDNode *N) {$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:void
SelectMAD_64_32	RVGPUISelDAGToDAG.cpp	/^void RVGPUDAGToDAGISel::SelectMAD_64_32(SDNode *N) {$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:void
SelectMOVRELOffset	RVGPUISelDAGToDAG.cpp	/^bool RVGPUDAGToDAGISel::SelectMOVRELOffset(SDValue Index,$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
SelectMUBUF	RVGPUISelDAGToDAG.cpp	/^bool RVGPUDAGToDAGISel::SelectMUBUF(SDValue Addr, SDValue &Ptr, SDValue &VAddr,$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
SelectMUBUFAddr64	RVGPUISelDAGToDAG.cpp	/^bool RVGPUDAGToDAGISel::SelectMUBUFAddr64(SDValue Addr, SDValue &SRsrc,$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
SelectMUBUFOffset	RVGPUISelDAGToDAG.cpp	/^bool RVGPUDAGToDAGISel::SelectMUBUFOffset(SDValue Addr, SDValue &SRsrc,$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
SelectMUBUFScratchOffen	RVGPUISelDAGToDAG.cpp	/^bool RVGPUDAGToDAGISel::SelectMUBUFScratchOffen(SDNode *Parent,$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
SelectMUBUFScratchOffset	RVGPUISelDAGToDAG.cpp	/^bool RVGPUDAGToDAGISel::SelectMUBUFScratchOffset(SDNode *Parent,$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
SelectMUL_LOHI	RVGPUISelDAGToDAG.cpp	/^void RVGPUDAGToDAGISel::SelectMUL_LOHI(SDNode *N) {$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:void
SelectSAddrFI	RVGPUISelDAGToDAG.cpp	/^static SDValue SelectSAddrFI(SelectionDAG *CurDAG, SDValue SAddr) {$/;"	f	typeref:typename:SDValue	file:
SelectSMRD	RVGPUISelDAGToDAG.cpp	/^bool RVGPUDAGToDAGISel::SelectSMRD(SDValue Addr, SDValue &SBase,$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
SelectSMRDBaseOffset	RVGPUISelDAGToDAG.cpp	/^bool RVGPUDAGToDAGISel::SelectSMRDBaseOffset(SDValue Addr, SDValue &SBase,$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
SelectSMRDBufferImm	RVGPUISelDAGToDAG.cpp	/^bool RVGPUDAGToDAGISel::SelectSMRDBufferImm(SDValue N, SDValue &Offset) const {$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
SelectSMRDBufferImm32	RVGPUISelDAGToDAG.cpp	/^bool RVGPUDAGToDAGISel::SelectSMRDBufferImm32(SDValue N,$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
SelectSMRDBufferSgprImm	RVGPUISelDAGToDAG.cpp	/^bool RVGPUDAGToDAGISel::SelectSMRDBufferSgprImm(SDValue N, SDValue &SOffset,$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
SelectSMRDImm	RVGPUISelDAGToDAG.cpp	/^bool RVGPUDAGToDAGISel::SelectSMRDImm(SDValue Addr, SDValue &SBase,$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
SelectSMRDImm32	RVGPUISelDAGToDAG.cpp	/^bool RVGPUDAGToDAGISel::SelectSMRDImm32(SDValue Addr, SDValue &SBase,$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
SelectSMRDOffset	RVGPUISelDAGToDAG.cpp	/^bool RVGPUDAGToDAGISel::SelectSMRDOffset(SDValue ByteOffsetNode,$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
SelectSMRDSgpr	RVGPUISelDAGToDAG.cpp	/^bool RVGPUDAGToDAGISel::SelectSMRDSgpr(SDValue Addr, SDValue &SBase,$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
SelectSMRDSgprImm	RVGPUISelDAGToDAG.cpp	/^bool RVGPUDAGToDAGISel::SelectSMRDSgprImm(SDValue Addr, SDValue &SBase,$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
SelectSTACKRESTORE	RVGPUISelDAGToDAG.cpp	/^void RVGPUDAGToDAGISel::SelectSTACKRESTORE(SDNode *N) {$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:void
SelectS_BFE	RVGPUISelDAGToDAG.cpp	/^void RVGPUDAGToDAGISel::SelectS_BFE(SDNode *N) {$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:void
SelectS_BFEFromShifts	RVGPUISelDAGToDAG.cpp	/^void RVGPUDAGToDAGISel::SelectS_BFEFromShifts(SDNode *N) {$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:void
SelectScratchOffset	RVGPUISelDAGToDAG.cpp	/^bool RVGPUDAGToDAGISel::SelectScratchOffset(SDNode *N, SDValue Addr,$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
SelectScratchSAddr	RVGPUISelDAGToDAG.cpp	/^bool RVGPUDAGToDAGISel::SelectScratchSAddr(SDNode *Parent, SDValue Addr,$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
SelectScratchSVAddr	RVGPUISelDAGToDAG.cpp	/^bool RVGPUDAGToDAGISel::SelectScratchSVAddr(SDNode *N, SDValue Addr,$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
SelectSectionForGlobal	RVGPUTargetObjectFile.cpp	/^MCSection *RVGPUTargetObjectFile::SelectSectionForGlobal($/;"	f	class:RVGPUTargetObjectFile	typeref:typename:MCSection *
SelectUADDO_USUBO	RVGPUISelDAGToDAG.cpp	/^void RVGPUDAGToDAGISel::SelectUADDO_USUBO(SDNode *N) {$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:void
SelectVINTERPMods	RVGPUISelDAGToDAG.cpp	/^bool RVGPUDAGToDAGISel::SelectVINTERPMods(SDValue In, SDValue &Src,$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
SelectVINTERPModsHi	RVGPUISelDAGToDAG.cpp	/^bool RVGPUDAGToDAGISel::SelectVINTERPModsHi(SDValue In, SDValue &Src,$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
SelectVINTERPModsImpl	RVGPUISelDAGToDAG.cpp	/^bool RVGPUDAGToDAGISel::SelectVINTERPModsImpl(SDValue In, SDValue &Src,$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
SelectVOP3BMods	RVGPUISelDAGToDAG.cpp	/^bool RVGPUDAGToDAGISel::SelectVOP3BMods(SDValue In, SDValue &Src,$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
SelectVOP3BMods0	RVGPUISelDAGToDAG.cpp	/^bool RVGPUDAGToDAGISel::SelectVOP3BMods0(SDValue In, SDValue &Src,$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
SelectVOP3Mods	RVGPUISelDAGToDAG.cpp	/^bool RVGPUDAGToDAGISel::SelectVOP3Mods(SDValue In, SDValue &Src,$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
SelectVOP3Mods0	RVGPUISelDAGToDAG.cpp	/^bool RVGPUDAGToDAGISel::SelectVOP3Mods0(SDValue In, SDValue &Src,$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
SelectVOP3ModsImpl	RVGPUISelDAGToDAG.cpp	/^bool RVGPUDAGToDAGISel::SelectVOP3ModsImpl(SDValue In, SDValue &Src,$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
SelectVOP3ModsNonCanonicalizing	RVGPUISelDAGToDAG.cpp	/^bool RVGPUDAGToDAGISel::SelectVOP3ModsNonCanonicalizing($/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
SelectVOP3NoMods	RVGPUISelDAGToDAG.cpp	/^bool RVGPUDAGToDAGISel::SelectVOP3NoMods(SDValue In, SDValue &Src) const {$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
SelectVOP3OMods	RVGPUISelDAGToDAG.cpp	/^bool RVGPUDAGToDAGISel::SelectVOP3OMods(SDValue In, SDValue &Src,$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
SelectVOP3OpSel	RVGPUISelDAGToDAG.cpp	/^bool RVGPUDAGToDAGISel::SelectVOP3OpSel(SDValue In, SDValue &Src,$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
SelectVOP3OpSelMods	RVGPUISelDAGToDAG.cpp	/^bool RVGPUDAGToDAGISel::SelectVOP3OpSelMods(SDValue In, SDValue &Src,$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
SelectVOP3PMadMixMods	RVGPUISelDAGToDAG.cpp	/^bool RVGPUDAGToDAGISel::SelectVOP3PMadMixMods(SDValue In, SDValue &Src,$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
SelectVOP3PMadMixModsExt	RVGPUISelDAGToDAG.cpp	/^bool RVGPUDAGToDAGISel::SelectVOP3PMadMixModsExt(SDValue In, SDValue &Src,$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
SelectVOP3PMadMixModsImpl	RVGPUISelDAGToDAG.cpp	/^bool RVGPUDAGToDAGISel::SelectVOP3PMadMixModsImpl(SDValue In, SDValue &Src,$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
SelectVOP3PMods	RVGPUISelDAGToDAG.cpp	/^bool RVGPUDAGToDAGISel::SelectVOP3PMods(SDValue In, SDValue &Src,$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
SelectVOP3PModsDOT	RVGPUISelDAGToDAG.cpp	/^bool RVGPUDAGToDAGISel::SelectVOP3PModsDOT(SDValue In, SDValue &Src,$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
SelectWAVE_ADDRESS	RVGPUISelDAGToDAG.cpp	/^void RVGPUDAGToDAGISel::SelectWAVE_ADDRESS(SDNode *N) {$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:void
SelectWMMAOpSelVOP3PMods	RVGPUISelDAGToDAG.cpp	/^bool RVGPUDAGToDAGISel::SelectWMMAOpSelVOP3PMods(SDValue In,$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
SendMsg	SIDefines.h	/^namespace SendMsg { \/\/ Encoding of SIMM16 used in s_sendmsg* insns.$/;"	n	namespace:llvm::RVGPU
SendMsg	Utils/RVGPUAsmUtils.cpp	/^namespace SendMsg {$/;"	n	namespace:llvm::RVGPU	file:
SendMsg	Utils/RVGPUAsmUtils.h	/^namespace SendMsg { \/\/ Symbolic names for the sendmsg(...) syntax.$/;"	n	namespace:llvm::RVGPU
SendMsg	Utils/RVGPUBaseInfo.cpp	/^namespace SendMsg {$/;"	n	namespace:llvm::RVGPU	file:
SendMsg	Utils/RVGPUBaseInfo.h	/^namespace SendMsg {$/;"	n	namespace:llvm::RVGPU
SetVectorType	RVInstrInfo.h	/^  using SetVectorType = SmallSetVector<MachineInstr *, 32>;$/;"	t	class:llvm::RVInstrInfo	typeref:typename:SmallSetVector<MachineInstr *,32>
Sext	AsmParser/RVGPUAsmParser.cpp	/^    bool Sext = false;$/;"	m	struct:__anon672fa8550111::RVGPUOperand::Modifiers	typeref:typename:bool	file:
Sext	SIPeepholeSDWA.cpp	/^  bool Sext;$/;"	m	class:__anon00bd52b30111::SDWASrcOperand	typeref:typename:bool	file:
SgprIndexUnusedMin	AsmParser/RVGPUAsmParser.cpp	/^  int SgprIndexUnusedMin = -1;$/;"	m	class:__anon672fa8550111::KernelScopeInfo	typeref:typename:int	file:
SgprParts	RVGPUInstructionSelector.h	/^    SmallVector<unsigned, 2> SgprParts;$/;"	m	struct:llvm::RVGPUInstructionSelector::GEPInfo	typeref:typename:SmallVector<unsigned,2>
SgprScores	SIInsertWaitcnts.cpp	/^  unsigned SgprScores[SQ_MAX_PGM_SGPRS] = {0};$/;"	m	class:__anona6cbb7940211::WaitcntBrackets	typeref:typename:unsigned[]	file:
SgprUB	SIInsertWaitcnts.cpp	/^  int SgprUB = -1;$/;"	m	class:__anona6cbb7940211::WaitcntBrackets	typeref:typename:int	file:
ShaderFunctions	Utils/RVGPUPALMetadata.h	/^  msgpack::DocNode ShaderFunctions;$/;"	m	class:llvm::RVGPUPALMetadata	typeref:typename:msgpack::DocNode
SharesPredWithPrevNthGroup	RVGPUIGroupLP.cpp	/^    SharesPredWithPrevNthGroup(unsigned Distance, const RVInstrInfo *TII,$/;"	f	class:__anon61b122dc0111::MFMASmallGemmSingleWaveOpt::SharesPredWithPrevNthGroup	file:
SharesPredWithPrevNthGroup	RVGPUIGroupLP.cpp	/^  class SharesPredWithPrevNthGroup final : public InstructionRule {$/;"	c	class:__anon61b122dc0111::MFMASmallGemmSingleWaveOpt	file:
Shift	Utils/RVGPUAsmUtils.h	/^  unsigned Shift;$/;"	m	struct:llvm::RVGPU::CustomOperandVal	typeref:typename:unsigned
ShiftOffset	RVGPUPostLegalizerCombiner.cpp	/^    unsigned ShiftOffset;$/;"	m	struct:__anonf94dcdde0111::RVGPUPostLegalizerCombinerImpl::CvtF32UByteMatchInfo	typeref:typename:unsigned	file:
ShouldPreferAnother	GCNHazardRecognizer.cpp	/^bool GCNHazardRecognizer::ShouldPreferAnother(SUnit *SU) {$/;"	f	class:GCNHazardRecognizer	typeref:typename:bool
ShouldShrinkFPConstant	RVGPUISelLowering.cpp	/^bool RVGPUTargetLowering::ShouldShrinkFPConstant(EVT VT) const {$/;"	f	class:RVGPUTargetLowering	typeref:typename:bool
ShrinkOpcode	SIFoldOperands.cpp	/^  int ShrinkOpcode;$/;"	m	struct:__anon07e514130111::FoldCandidate	typeref:typename:int	file:
SiblingPenalty	SIFixSGPRCopies.cpp	/^  DenseMap<MachineInstr *, SetVector<unsigned>> SiblingPenalty;$/;"	m	class:__anond27816180111::SIFixSGPRCopies	typeref:typename:DenseMap<MachineInstr *,SetVector<unsigned>>	file:
SiblingPenalty	SIFixSGPRCopies.cpp	/^  unsigned SiblingPenalty = 0;$/;"	m	class:__anond27816180111::V2SCopyInfo	typeref:typename:unsigned	file:
Siblings	SIFixSGPRCopies.cpp	/^  SetVector<unsigned> Siblings;$/;"	m	class:__anond27816180111::V2SCopyInfo	typeref:typename:SetVector<unsigned>	file:
SingleThreadOneAddressSpaceSSID	RVGPUMachineModuleInfo.h	/^  SyncScope::ID SingleThreadOneAddressSpaceSSID;$/;"	m	class:llvm::RVGPUMachineModuleInfo	typeref:typename:SyncScope::ID
Size	GCNPreRALongBranchReg.cpp	/^    uint64_t Size = 0;$/;"	m	struct:__anon4605b2240111::GCNPreRALongBranchReg::BasicBlockInfo	typeref:typename:uint64_t	file:
Size	RVGPULowerModuleLDSPass.cpp	/^      size_t Size = 0;$/;"	m	struct:__anoncc7483b30111::RVGPULowerModuleLDS::chooseBestVariableForModuleStrategy::CandidateTy	typeref:typename:size_t	file:
SkipThreshold	SIPreEmitPeephole.cpp	/^static unsigned SkipThreshold;$/;"	v	typeref:typename:unsigned	file:
SkipThresholdFlag	SIPreEmitPeephole.cpp	/^static cl::opt<unsigned, true> SkipThresholdFlag($/;"	v	typeref:typename:cl::opt<unsigned,true>	file:
SlicedVals	RVGPUCodeGenPrepare.cpp	/^  SmallDenseMap<std::pair<BasicBlock *, Value *>, Value *> SlicedVals;$/;"	m	class:VectorSlice	typeref:typename:SmallDenseMap<std::pair<BasicBlock *,Value * >,Value * >	file:
SourceOfDivergence	Utils/RVGPUBaseInfo.cpp	/^struct SourceOfDivergence {$/;"	s	namespace:llvm::RVGPU::__anonc82e9e910411	file:
SpillAGPR	RVMachineFunctionInfo.h	/^  SmallVector<MCPhysReg, 32> SpillAGPR;$/;"	m	class:llvm::RVMachineFunctionInfo	typeref:typename:SmallVector<MCPhysReg,32>
SpillPhysVGPRs	RVMachineFunctionInfo.h	/^  SmallVector<Register, 2> SpillPhysVGPRs;$/;"	m	class:llvm::RVMachineFunctionInfo	typeref:typename:SmallVector<Register,2>
SpillSGPRToVGPR	RVRegisterInfo.h	/^  bool SpillSGPRToVGPR;$/;"	m	class:llvm::RVRegisterInfo	typeref:typename:bool
SpillVGPR	RVMachineFunctionInfo.h	/^  SmallVector<MCPhysReg, 32> SpillVGPR;$/;"	m	class:llvm::RVMachineFunctionInfo	typeref:typename:SmallVector<MCPhysReg,32>
SpillVGPRs	RVMachineFunctionInfo.h	/^  SmallVector<Register, 2> SpillVGPRs;$/;"	m	class:llvm::RVMachineFunctionInfo	typeref:typename:SmallVector<Register,2>
SpilledReg	RVRegisterInfo.h	/^    SpilledReg(Register R, int L) : VGPR(R), Lane(L) {}$/;"	f	struct:llvm::RVRegisterInfo::SpilledReg
SpilledReg	RVRegisterInfo.h	/^  struct SpilledReg {$/;"	s	class:llvm::RVRegisterInfo
SpirVer	RVGPUUnifyMetadata.cpp	/^    const char SpirVer[]            = "opencl.spir.version";$/;"	v	namespace:__anon26dde6960111::kOCLMD	typeref:typename:const char[]
SplitParts	RVFrameLowering.cpp	/^  ArrayRef<int16_t> SplitParts;$/;"	m	class:llvm::PrologEpilogSGPRSpillBuilder	typeref:typename:ArrayRef<int16_t>	file:
SplitParts	RVRegisterInfo.cpp	/^  ArrayRef<int16_t> SplitParts;$/;"	m	struct:llvm::SGPRSpillBuilder	typeref:typename:ArrayRef<int16_t>	file:
SplitVectorLoad	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::SplitVectorLoad(const SDValue Op,$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
SplitVectorStore	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::SplitVectorStore(SDValue Op,$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
SqrtF32	RVGPUCodeGenPrepare.cpp	/^  mutable Function *SqrtF32 = nullptr;$/;"	m	class:__anond35e324e0111::RVGPUCodeGenPrepareImpl	typeref:typename:Function *	file:
SramEccSetting	Utils/RVGPUBaseInfo.h	/^  TargetIDSetting SramEccSetting;$/;"	m	class:llvm::RVGPU::IsaInfo::RVGPUTargetID	typeref:typename:TargetIDSetting
SrcIndex	RVGPUPromoteAlloca.cpp	/^  ConstantInt *SrcIndex = nullptr;$/;"	m	struct:MemTransferInfo	typeref:typename:ConstantInt *	file:
SrcOperandsNum	Utils/RVGPUBaseInfo.h	/^  unsigned SrcOperandsNum = 0;$/;"	m	class:llvm::RVGPU::VOPD::ComponentProps	typeref:typename:unsigned
SrcSel	SIPeepholeSDWA.cpp	/^  SdwaSel SrcSel;$/;"	m	class:__anon00bd52b30111::SDWASrcOperand	typeref:typename:SdwaSel	file:
SregCurrentUsage	SIMachineScheduler.h	/^  unsigned SregCurrentUsage;$/;"	m	class:llvm::SIScheduleBlockScheduler	typeref:typename:unsigned
Stack	SIAnnotateControlFlow.cpp	/^  StackVector Stack;$/;"	m	class:__anond71df4850111::SIAnnotateControlFlow	typeref:typename:StackVector	file:
Stack	SILowerI1Copies.cpp	/^  SmallVector<MachineBasicBlock *, 4> Stack;$/;"	m	class:__anone16a92980111::LoopFinder	typeref:typename:SmallVector<MachineBasicBlock *,4>	file:
Stack	SILowerI1Copies.cpp	/^  SmallVector<MachineBasicBlock *, 4> Stack;$/;"	m	class:__anone16a92980111::PhiIncomingAnalysis	typeref:typename:SmallVector<MachineBasicBlock *,4>	file:
StackEntry	SIAnnotateControlFlow.cpp	/^using StackEntry = std::pair<BasicBlock *, Value *>;$/;"	t	namespace:__anond71df4850111	typeref:typename:std::pair<BasicBlock *,Value * >	file:
StackOffset	RVGPUArgumentUsageInfo.h	/^    unsigned StackOffset;$/;"	m	union:llvm::ArgDescriptor::__anonf03b7d93010a	typeref:typename:unsigned
StackOffset	RVMachineFunctionInfo.h	/^    unsigned StackOffset;$/;"	m	union:llvm::yaml::SIArgument::__anon7e8d0eca010a	typeref:typename:unsigned
StackPtrOffsetReg	RVMachineFunctionInfo.h	/^  Register StackPtrOffsetReg = RVGPU::SP_REG;$/;"	m	class:llvm::RVMachineFunctionInfo	typeref:typename:Register
StackPtrOffsetReg	RVMachineFunctionInfo.h	/^  StringValue StackPtrOffsetReg = "$sp_reg";$/;"	m	struct:llvm::yaml::RVMachineFunctionInfo	typeref:typename:StringValue
StackUsed	RVGPUCallLowering.cpp	/^  uint64_t StackUsed = 0;$/;"	m	struct:__anonad2fb0ad0111::RVGPUIncomingArgHandler	typeref:typename:uint64_t	file:
StackVector	SIAnnotateControlFlow.cpp	/^using StackVector = SmallVector<StackEntry, 16>;$/;"	t	namespace:__anond71df4850111	typeref:typename:SmallVector<StackEntry,16>	file:
StageID	GCNSchedStrategy.h	/^  const GCNSchedStageID StageID;$/;"	m	class:llvm::GCNSchedStage	typeref:typename:const GCNSchedStageID
StartLoc	AsmParser/RVGPUAsmParser.cpp	/^  SMLoc StartLoc, EndLoc;$/;"	m	class:__anon672fa8550111::RVGPUOperand	typeref:typename:SMLoc	file:
StartingOccupancy	GCNSchedStrategy.h	/^  unsigned StartingOccupancy;$/;"	m	class:llvm::GCNScheduleDAGMILive	typeref:typename:unsigned
State	SIWholeQuadMode.cpp	/^  int State;$/;"	m	struct:__anon41aff2810111::PrintState	typeref:typename:int	file:
StateExact	SIWholeQuadMode.cpp	/^  StateExact = 0x8,$/;"	e	enum:__anon41aff2810111::__anon41aff2810203	file:
StateStrict	SIWholeQuadMode.cpp	/^  StateStrict = StateStrictWWM | StateStrictWQM,$/;"	e	enum:__anon41aff2810111::__anon41aff2810203	file:
StateStrictWQM	SIWholeQuadMode.cpp	/^  StateStrictWQM = 0x4,$/;"	e	enum:__anon41aff2810111::__anon41aff2810203	file:
StateStrictWWM	SIWholeQuadMode.cpp	/^  StateStrictWWM = 0x2,$/;"	e	enum:__anon41aff2810111::__anon41aff2810203	file:
StateTransition	SIWholeQuadMode.cpp	/^  DenseMap<const MachineInstr *, char> StateTransition;$/;"	m	class:__anon41aff2810111::SIWholeQuadMode	typeref:typename:DenseMap<const MachineInstr *,char>	file:
StateType	GCNHazardRecognizer.cpp	/^  struct StateType {$/;"	s	function:GCNHazardRecognizer::fixVALUPartialForwardingHazard	file:
StateType	GCNHazardRecognizer.cpp	/^  struct StateType {$/;"	s	function:GCNHazardRecognizer::fixVALUTransUseHazard	file:
StateWQM	SIWholeQuadMode.cpp	/^  StateWQM = 0x1,$/;"	e	enum:__anon41aff2810111::__anon41aff2810203	file:
StaticGDSSize	RVGPUMachineFunction.h	/^  uint32_t StaticGDSSize = 0;$/;"	m	class:llvm::RVGPUMachineFunction	typeref:typename:uint32_t
StaticLDSSize	RVGPUMachineFunction.h	/^  uint32_t StaticLDSSize = 0;$/;"	m	class:llvm::RVGPUMachineFunction	typeref:typename:uint32_t
Status	SIModeRegister.cpp	/^  Status(unsigned NewMask, unsigned NewMode) : Mask(NewMask), Mode(NewMode) {$/;"	f	struct:Status	file:
Status	SIModeRegister.cpp	/^struct Status {$/;"	s	file:
Store	Utils/RVGPUBaseInfo.h	/^  bool Store;$/;"	m	struct:llvm::RVGPU::MIMGBaseOpcodeInfo	typeref:typename:bool
Str	RVGPULibFunc.cpp	/^  SmallVector<RVGPULibFunc::Param, 10> Str; \/\/ list of accumulated substitutions$/;"	m	class:__anona5afe38d0311::ItaniumMangler	typeref:typename:SmallVector<RVGPULibFunc::Param,10>	file:
Strategy	GCNIterativeScheduler.h	/^  const StrategyKind Strategy;$/;"	m	class:llvm::GCNIterativeScheduler	typeref:typename:const StrategyKind
StrategyKind	GCNIterativeScheduler.h	/^  enum StrategyKind {$/;"	g	class:llvm::GCNIterativeScheduler
StreamId	SIDefines.h	/^enum StreamId : unsigned { \/\/ Stream ID, (2) [9:8].$/;"	g	namespace:llvm::RVGPU::SendMsg	typeref:typename:unsigned
Streamer	MCTargetDesc/RVGPUTargetStreamer.h	/^  MCStreamer &Streamer;$/;"	m	class:llvm::RVGPUTargetELFStreamer	typeref:typename:MCStreamer &
StressCalls	RVGPUAlwaysInlinePass.cpp	/^static cl::opt<bool> StressCalls($/;"	v	namespace:__anonad1ccdb10111	typeref:typename:cl::opt<bool>	file:
SubIdx2Lane	RVISelLowering.cpp	/^static unsigned SubIdx2Lane(unsigned Idx) {$/;"	f	typeref:typename:unsigned	file:
SubReg	GCNRewritePartialRegUses.cpp	/^    unsigned SubReg = RVGPU::NoSubRegister;$/;"	m	struct:__anon37bf8c3b0111::GCNRewritePartialRegUses::SubRegInfo	typeref:typename:unsigned	file:
SubRegFromChannelTable	RVRegisterInfo.cpp	/^std::array<std::array<uint16_t, 32>, 9> RVRegisterInfo::SubRegFromChannelTable;$/;"	m	class:RVRegisterInfo	typeref:typename:std::array<std::array<uint16_t,32>,9>
SubRegFromChannelTable	RVRegisterInfo.h	/^  static std::array<std::array<uint16_t, 32>, 9> SubRegFromChannelTable;$/;"	m	class:llvm::RVRegisterInfo	typeref:typename:std::array<std::array<uint16_t,32>,9>
SubRegFromChannelTableWidthMap	RVRegisterInfo.cpp	/^static const std::array<unsigned, 17> SubRegFromChannelTableWidthMap = {$/;"	v	typeref:typename:const std::array<unsigned,17>	file:
SubRegInfo	GCNRewritePartialRegUses.cpp	/^    SubRegInfo(const TargetRegisterClass *RC_ = nullptr) : RC(RC_) {}$/;"	f	struct:__anon37bf8c3b0111::GCNRewritePartialRegUses::SubRegInfo	file:
SubRegInfo	GCNRewritePartialRegUses.cpp	/^  struct SubRegInfo {$/;"	s	class:__anon37bf8c3b0111::GCNRewritePartialRegUses	file:
SubRegMap	GCNRewritePartialRegUses.cpp	/^  typedef SmallDenseMap<unsigned, SubRegInfo> SubRegMap;$/;"	t	class:__anon37bf8c3b0111::GCNRewritePartialRegUses	typeref:typename:SmallDenseMap<unsigned,SubRegInfo>	file:
SubRegs	GCNRewritePartialRegUses.cpp	/^  mutable SmallDenseMap<std::pair<unsigned, unsigned>, unsigned> SubRegs;$/;"	m	class:__anon37bf8c3b0111::GCNRewritePartialRegUses	typeref:typename:SmallDenseMap<std::pair<unsigned,unsigned>,unsigned>	file:
Subtarget	RVGPUISelDAGToDAG.h	/^  const GCNSubtarget *Subtarget;$/;"	m	class:RVGPUDAGToDAGISel	typeref:typename:const GCNSubtarget *
Subtarget	RVGPUISelLowering.h	/^  const RVGPUSubtarget *Subtarget;$/;"	m	class:llvm::RVGPUTargetLowering	typeref:typename:const RVGPUSubtarget *
Subtarget	RVGPUInstructionSelector.h	/^  const GCNSubtarget *Subtarget;$/;"	m	class:llvm::RVGPUInstructionSelector	typeref:typename:const GCNSubtarget *
Subtarget	RVGPURegisterBankInfo.h	/^  const GCNSubtarget &Subtarget;$/;"	m	class:llvm::RVGPURegisterBankInfo	typeref:typename:const GCNSubtarget &
Subtarget	RVISelLowering.h	/^  const GCNSubtarget *Subtarget;$/;"	m	class:llvm::RVTargetLowering	typeref:typename:const GCNSubtarget *
Subtarget	Utils/RVGPUBaseInfo.cpp	/^  uint16_t Subtarget;$/;"	m	struct:llvm::RVGPU::VOPDInfo	typeref:typename:uint16_t	file:
SubtargetMap	RVGPUTargetMachine.h	/^  mutable StringMap<std::unique_ptr<GCNSubtarget>> SubtargetMap;$/;"	m	class:llvm::GCNTargetMachine	typeref:typename:StringMap<std::unique_ptr<GCNSubtarget>>
Succ	RVGPUMachineCFGStructurizer.cpp	/^  MachineBasicBlock *Succ = nullptr;$/;"	m	class:__anon1695b1f50211::RegionMRT	typeref:typename:MachineBasicBlock *	file:
Successor	SIMachineScheduler.h	/^  Successor,$/;"	e	enum:llvm::SIScheduleCandReason
Succs	SIMachineScheduler.h	/^  std::vector<std::pair<SIScheduleBlock*, SIScheduleBlockLinkKind>> Succs;$/;"	m	class:llvm::SIScheduleBlock	typeref:typename:std::vector<std::pair<SIScheduleBlock *,SIScheduleBlockLinkKind>>
SuperAlignLDSGlobals	RVGPULowerModuleLDSPass.cpp	/^cl::opt<bool> SuperAlignLDSGlobals($/;"	v	namespace:__anoncc7483b30111	typeref:typename:cl::opt<bool>
SuperReg	RVFrameLowering.cpp	/^  Register SuperReg;$/;"	m	class:llvm::PrologEpilogSGPRSpillBuilder	typeref:typename:Register	file:
SuperReg	RVRegisterInfo.cpp	/^  Register SuperReg;$/;"	m	struct:llvm::SGPRSpillBuilder	typeref:typename:Register	file:
SuperRegMasks	GCNRewritePartialRegUses.cpp	/^      SuperRegMasks;$/;"	m	class:__anon37bf8c3b0111::GCNRewritePartialRegUses	typeref:typename:SmallDenseMap<std::pair<const TargetRegisterClass *,unsigned>,const uint32_t * >	file:
SupportsSRAMECC	GCNSubtarget.h	/^  bool SupportsSRAMECC = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
SupportsXNACK	GCNSubtarget.h	/^  bool SupportsXNACK = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
Swizzle	SIDefines.h	/^namespace Swizzle { \/\/ Encoding of swizzle macro used in ds_swizzle_b32.$/;"	n	namespace:llvm::RVGPU
Swizzle	Utils/RVGPUAsmUtils.cpp	/^namespace Swizzle {$/;"	n	namespace:llvm::RVGPU	file:
Swizzle	Utils/RVGPUAsmUtils.h	/^namespace Swizzle { \/\/ Symbolic names for the swizzle(...) syntax.$/;"	n	namespace:llvm::RVGPU
SyncID	RVGPUIGroupLP.cpp	/^  int SyncID = 0;$/;"	m	class:__anon61b122dc0111::SchedGroup	typeref:typename:int	file:
SyncedInstrs	RVGPUIGroupLP.cpp	/^  DenseMap<int, SUnitsToCandidateSGsMap> SyncedInstrs;$/;"	m	class:__anon61b122dc0111::IGroupLPDAGMutation	typeref:typename:DenseMap<int,SUnitsToCandidateSGsMap>	file:
SyncedInstrs	RVGPUIGroupLP.cpp	/^  DenseMap<int, SUnitsToCandidateSGsMap> SyncedInstrs;$/;"	m	class:__anon61b122dc0111::PipelineSolver	typeref:typename:DenseMap<int,SUnitsToCandidateSGsMap>	file:
SyncedSchedGroups	RVGPUIGroupLP.cpp	/^  DenseMap<int, SmallVector<SchedGroup, 4>> SyncedSchedGroups;$/;"	m	class:__anon61b122dc0111::IGroupLPDAGMutation	typeref:typename:DenseMap<int,SmallVector<SchedGroup,4>>	file:
SyncedSchedGroups	RVGPUIGroupLP.cpp	/^  DenseMap<int, SmallVector<SchedGroup, 4>> SyncedSchedGroups;$/;"	m	class:__anon61b122dc0111::PipelineSolver	typeref:typename:DenseMap<int,SmallVector<SchedGroup,4>>	file:
SystemOneAddressSpaceSSID	RVGPUMachineModuleInfo.h	/^  SyncScope::ID SystemOneAddressSpaceSSID;$/;"	m	class:llvm::RVGPUMachineModuleInfo	typeref:typename:SyncScope::ID
T	GCNMinRegStrategy.cpp	/^  using T = decltype(C(*RQ.begin())) ;$/;"	t	function:GCNMinRegScheduler::findMax	file:
TBUFFER_LOAD	SILoadStoreOptimizer.cpp	/^  TBUFFER_LOAD,$/;"	e	enum:__anon677101620111::InstClassEnum	file:
TBUFFER_LOAD_FORMAT	RVGPUISelLowering.h	/^  TBUFFER_LOAD_FORMAT,$/;"	e	enum:llvm::RVGPUISD::NodeType
TBUFFER_LOAD_FORMAT_D16	RVGPUISelLowering.h	/^  TBUFFER_LOAD_FORMAT_D16,$/;"	e	enum:llvm::RVGPUISD::NodeType
TBUFFER_STORE	SILoadStoreOptimizer.cpp	/^  TBUFFER_STORE,$/;"	e	enum:__anon677101620111::InstClassEnum	file:
TBUFFER_STORE_FORMAT	RVGPUISelLowering.h	/^  TBUFFER_STORE_FORMAT,$/;"	e	enum:llvm::RVGPUISD::NodeType
TBUFFER_STORE_FORMAT_D16	RVGPUISelLowering.h	/^  TBUFFER_STORE_FORMAT_D16,$/;"	e	enum:llvm::RVGPUISD::NodeType
TC_RETURN	RVGPUISelLowering.h	/^  TC_RETURN,$/;"	e	enum:llvm::RVGPUISD::NodeType
TC_RETURN_CHAIN	RVGPUISelLowering.h	/^  TC_RETURN_CHAIN,$/;"	e	enum:llvm::RVGPUISD::NodeType
TC_RETURN_GFX	RVGPUISelLowering.h	/^  TC_RETURN_GFX,$/;"	e	enum:llvm::RVGPUISD::NodeType
TD	RVGPUPrintfRuntimeBinding.cpp	/^  const DataLayout *TD;$/;"	m	class:__anonf5f1f1fc0111::RVGPUPrintfRuntimeBindingImpl	typeref:typename:const DataLayout *	file:
TDOFold	RVGPULibCalls.cpp	/^bool RVGPULibCalls::TDOFold(CallInst *CI, const FuncInfo &FInfo) {$/;"	f	class:RVGPULibCalls	typeref:typename:bool
TEXTURE_FETCH	RVGPUISelLowering.h	/^  TEXTURE_FETCH,$/;"	e	enum:llvm::RVGPUISD::NodeType
TGIdXEnable	SIProgramInfo.h	/^    uint32_t TGIdXEnable = 0;$/;"	m	struct:llvm::SIProgramInfo	typeref:typename:uint32_t
TGIdYEnable	SIProgramInfo.h	/^    uint32_t TGIdYEnable = 0;$/;"	m	struct:llvm::SIProgramInfo	typeref:typename:uint32_t
TGIdZEnable	SIProgramInfo.h	/^    uint32_t TGIdZEnable = 0;$/;"	m	struct:llvm::SIProgramInfo	typeref:typename:uint32_t
TGSizeEnable	SIProgramInfo.h	/^    uint32_t TGSizeEnable = 0;$/;"	m	struct:llvm::SIProgramInfo	typeref:typename:uint32_t
TH	SIDefines.h	/^  TH = 0x7,      \/\/ All TH bits$/;"	e	enum:llvm::RVGPU::CPol::CPol
TH_ATOMIC_CASCADE	SIDefines.h	/^  TH_ATOMIC_CASCADE = 4,  \/\/ Cascading vs regular$/;"	e	enum:llvm::RVGPU::CPol::CPol
TH_ATOMIC_NT	SIDefines.h	/^  TH_ATOMIC_NT = SLC,     \/\/ Non-temporal vs regular$/;"	e	enum:llvm::RVGPU::CPol::CPol
TH_ATOMIC_RETURN	SIDefines.h	/^  TH_ATOMIC_RETURN = GLC, \/\/ Returning vs non-returning$/;"	e	enum:llvm::RVGPU::CPol::CPol
TH_BYPASS	SIDefines.h	/^  TH_BYPASS = 3, \/\/ only to be used with scope = 3$/;"	e	enum:llvm::RVGPU::CPol::CPol
TH_HT	SIDefines.h	/^  TH_HT = 2,     \/\/ high-temporal$/;"	e	enum:llvm::RVGPU::CPol::CPol
TH_LU	SIDefines.h	/^  TH_LU = 3,     \/\/ last use$/;"	e	enum:llvm::RVGPU::CPol::CPol
TH_NT	SIDefines.h	/^  TH_NT = 1,     \/\/ non-temporal$/;"	e	enum:llvm::RVGPU::CPol::CPol
TH_NT_HT	SIDefines.h	/^  TH_NT_HT = 6,  \/\/ non-temporal (CU, SE), high-temporal (MALL)$/;"	e	enum:llvm::RVGPU::CPol::CPol
TH_NT_RT	SIDefines.h	/^  TH_NT_RT = 4,  \/\/ non-temporal (CU, SE), regular (MALL)$/;"	e	enum:llvm::RVGPU::CPol::CPol
TH_NT_WB	SIDefines.h	/^  TH_NT_WB = 7,  \/\/ non-temporal (CU, SE), high-temporal with write-back (MALL)$/;"	e	enum:llvm::RVGPU::CPol::CPol
TH_REAL_BYPASS	SIDefines.h	/^  TH_REAL_BYPASS = 1 << 10, \/\/ is TH=3 bypass policy or not$/;"	e	enum:llvm::RVGPU::CPol::CPol
TH_RESERVED	SIDefines.h	/^  TH_RESERVED = 7, \/\/ unused value for load insts$/;"	e	enum:llvm::RVGPU::CPol::CPol
TH_RT	SIDefines.h	/^  TH_RT = 0,     \/\/ regular$/;"	e	enum:llvm::RVGPU::CPol::CPol
TH_RT_NT	SIDefines.h	/^  TH_RT_NT = 5,  \/\/ regular (CU, SE), non-temporal (MALL)$/;"	e	enum:llvm::RVGPU::CPol::CPol
TH_RT_WB	SIDefines.h	/^  TH_RT_WB = 3,  \/\/ regular (CU, SE), high-temporal with write-back (MALL)$/;"	e	enum:llvm::RVGPU::CPol::CPol
TH_TYPE_ATOMIC	SIDefines.h	/^  TH_TYPE_ATOMIC = 1 << 9,  \/\/ TH_ATOMIC policy$/;"	e	enum:llvm::RVGPU::CPol::CPol
TH_TYPE_LOAD	SIDefines.h	/^  TH_TYPE_LOAD = 1 << 7,    \/\/ TH_LOAD policy$/;"	e	enum:llvm::RVGPU::CPol::CPol
TH_TYPE_STORE	SIDefines.h	/^  TH_TYPE_STORE = 1 << 8,   \/\/ TH_STORE policy$/;"	e	enum:llvm::RVGPU::CPol::CPol
TII	GCNDPPCombine.cpp	/^  const RVInstrInfo *TII;$/;"	m	class:__anon46a5cf8f0111::GCNDPPCombine	typeref:typename:const RVInstrInfo *	file:
TII	GCNHazardRecognizer.h	/^  const RVInstrInfo &TII;$/;"	m	class:llvm::GCNHazardRecognizer	typeref:typename:const RVInstrInfo &
TII	GCNPreRAOptimizations.cpp	/^  const RVInstrInfo *TII;$/;"	m	class:__anon3997f4420111::GCNPreRAOptimizations	typeref:typename:const RVInstrInfo *	file:
TII	GCNRewritePartialRegUses.cpp	/^  const TargetInstrInfo *TII;$/;"	m	class:__anon37bf8c3b0111::GCNRewritePartialRegUses	typeref:typename:const TargetInstrInfo *	file:
TII	RVFrameLowering.cpp	/^  const RVInstrInfo *TII;$/;"	m	class:llvm::PrologEpilogSGPRSpillBuilder	typeref:typename:const RVInstrInfo *	file:
TII	RVGPUIGroupLP.cpp	/^  const RVInstrInfo *TII;$/;"	m	class:__anon61b122dc0111::IGLPStrategy	typeref:typename:const RVInstrInfo *	file:
TII	RVGPUIGroupLP.cpp	/^  const RVInstrInfo *TII;$/;"	m	class:__anon61b122dc0111::IGroupLPDAGMutation	typeref:typename:const RVInstrInfo *	file:
TII	RVGPUIGroupLP.cpp	/^  const RVInstrInfo *TII;$/;"	m	class:__anon61b122dc0111::InstructionRule	typeref:typename:const RVInstrInfo *	file:
TII	RVGPUIGroupLP.cpp	/^  const RVInstrInfo *TII;$/;"	m	class:__anon61b122dc0111::SchedGroup	typeref:typename:const RVInstrInfo *	file:
TII	RVGPUInstructionSelector.h	/^  const RVInstrInfo &TII;$/;"	m	class:llvm::RVGPUInstructionSelector	typeref:typename:const RVInstrInfo &
TII	RVGPUMachineCFGStructurizer.cpp	/^  const RVInstrInfo *TII;$/;"	m	class:__anon1695b1f50311::RVGPUMachineCFGStructurizer	typeref:typename:const RVInstrInfo *	file:
TII	RVGPUPostLegalizerCombiner.cpp	/^  const RVInstrInfo &TII;$/;"	m	class:__anonf94dcdde0111::RVGPUPostLegalizerCombinerImpl	typeref:typename:const RVInstrInfo &	file:
TII	RVGPURegBankCombiner.cpp	/^  const RVInstrInfo &TII;$/;"	m	class:__anon00ae19330111::RVGPURegBankCombinerImpl	typeref:typename:const RVInstrInfo &	file:
TII	RVGPURegisterBankInfo.h	/^  const RVInstrInfo *TII;$/;"	m	class:llvm::RVGPURegisterBankInfo	typeref:typename:const RVInstrInfo *
TII	RVGPUSetWavePriority.cpp	/^  const RVInstrInfo *TII;$/;"	m	class:__anonfc3f584b0111::RVGPUSetWavePriority	typeref:typename:const RVInstrInfo *	file:
TII	RVGPUSubtarget.cpp	/^  const RVInstrInfo *TII;$/;"	m	struct:__anon4eb125fb0111::FillMFMAShadowMutation	typeref:typename:const RVInstrInfo *	file:
TII	RVRegisterInfo.cpp	/^  const RVInstrInfo &TII;$/;"	m	struct:llvm::SGPRSpillBuilder	typeref:typename:const RVInstrInfo &	file:
TII	SIFixSGPRCopies.cpp	/^  const RVInstrInfo *TII;$/;"	m	class:__anond27816180111::SIFixSGPRCopies	typeref:typename:const RVInstrInfo *	file:
TII	SIFoldOperands.cpp	/^  const RVInstrInfo *TII;$/;"	m	class:__anon07e514130111::SIFoldOperands	typeref:typename:const RVInstrInfo *	file:
TII	SIInsertWaitcnts.cpp	/^  const RVInstrInfo *TII = nullptr;$/;"	m	class:__anona6cbb7940211::SIInsertWaitcnts	typeref:typename:const RVInstrInfo *	file:
TII	SILateBranchLowering.cpp	/^  const RVInstrInfo *TII = nullptr;$/;"	m	class:__anon4aa55dad0111::SILateBranchLowering	typeref:typename:const RVInstrInfo *	file:
TII	SILoadStoreOptimizer.cpp	/^  const RVInstrInfo *TII = nullptr;$/;"	m	class:__anon677101620111::SILoadStoreOptimizer	typeref:typename:const RVInstrInfo *	file:
TII	SILowerControlFlow.cpp	/^  const RVInstrInfo *TII = nullptr;$/;"	m	class:__anon0ce7c3340111::SILowerControlFlow	typeref:typename:const RVInstrInfo *	file:
TII	SILowerI1Copies.cpp	/^  const RVInstrInfo *TII;$/;"	m	class:__anone16a92980111::PhiIncomingAnalysis	typeref:typename:const RVInstrInfo *	file:
TII	SILowerI1Copies.h	/^  const RVInstrInfo *TII = nullptr;$/;"	m	class:llvm::PhiLoweringHelper	typeref:typename:const RVInstrInfo *
TII	SILowerSGPRSpills.cpp	/^  const RVInstrInfo *TII = nullptr;$/;"	m	class:__anon4be335ae0111::SILowerSGPRSpills	typeref:typename:const RVInstrInfo *	file:
TII	SIMemoryLegalizer.cpp	/^  const RVInstrInfo *TII = nullptr;$/;"	m	class:__anon46517b8a0111::SICacheControl	typeref:typename:const RVInstrInfo *	file:
TII	SIOptimizeExecMasking.cpp	/^  const RVInstrInfo *TII = nullptr;$/;"	m	class:__anon15773df20111::SIOptimizeExecMasking	typeref:typename:const RVInstrInfo *	file:
TII	SIOptimizeExecMaskingPreRA.cpp	/^  const RVInstrInfo *TII;$/;"	m	class:__anon5760078c0111::SIOptimizeExecMaskingPreRA	typeref:typename:const RVInstrInfo *	file:
TII	SIOptimizeVGPRLiveRange.cpp	/^  const RVInstrInfo *TII = nullptr;$/;"	m	class:__anon3fc4a09f0111::SIOptimizeVGPRLiveRange	typeref:typename:const RVInstrInfo *	file:
TII	SIPeepholeSDWA.cpp	/^  const RVInstrInfo *TII;$/;"	m	class:__anon00bd52b30111::SIPeepholeSDWA	typeref:typename:const RVInstrInfo *	file:
TII	SIPreAllocateWWMRegs.cpp	/^  const RVInstrInfo *TII;$/;"	m	class:__anon37f997ca0111::SIPreAllocateWWMRegs	typeref:typename:const RVInstrInfo *	file:
TII	SIPreEmitPeephole.cpp	/^  const RVInstrInfo *TII = nullptr;$/;"	m	class:__anon02bc421a0111::SIPreEmitPeephole	typeref:typename:const RVInstrInfo *	file:
TII	SIShrinkInstructions.cpp	/^  const RVInstrInfo *TII;$/;"	m	class:__anon665027960111::SIShrinkInstructions	typeref:typename:const RVInstrInfo *	file:
TII	SIWholeQuadMode.cpp	/^  const RVInstrInfo *TII;$/;"	m	class:__anon41aff2810111::SIWholeQuadMode	typeref:typename:const RVInstrInfo *	file:
TI_CONSTDATA_START	RVGPU.h	/^  TI_CONSTDATA_START,$/;"	e	enum:llvm::RVGPU::TargetIndex
TI_SCRATCH_RSRC_DWORD0	RVGPU.h	/^  TI_SCRATCH_RSRC_DWORD0,$/;"	e	enum:llvm::RVGPU::TargetIndex
TI_SCRATCH_RSRC_DWORD1	RVGPU.h	/^  TI_SCRATCH_RSRC_DWORD1,$/;"	e	enum:llvm::RVGPU::TargetIndex
TI_SCRATCH_RSRC_DWORD2	RVGPU.h	/^  TI_SCRATCH_RSRC_DWORD2,$/;"	e	enum:llvm::RVGPU::TargetIndex
TI_SCRATCH_RSRC_DWORD3	RVGPU.h	/^  TI_SCRATCH_RSRC_DWORD3$/;"	e	enum:llvm::RVGPU::TargetIndex
TIdIGCompCount	SIProgramInfo.h	/^    uint32_t TIdIGCompCount = 0;$/;"	m	struct:llvm::SIProgramInfo	typeref:typename:uint32_t
TLI	RVGPUPerfHintAnalysis.cpp	/^  const TargetLowering *TLI;$/;"	m	struct:__anon406ad74e0111::RVGPUPerfHint	typeref:typename:const TargetLowering *	file:
TLI	RVGPUTargetTransformInfo.h	/^  const RVTargetLowering *TLI;$/;"	m	class:llvm::GCNTTIImpl	typeref:typename:const RVTargetLowering *
TLI	RVGPUTargetTransformInfo.h	/^  const TargetLoweringBase *TLI;$/;"	m	class:llvm::RVGPUTTIImpl	typeref:typename:const TargetLoweringBase *
TLInfo	GCNSubtarget.h	/^  RVTargetLowering TLInfo;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:RVTargetLowering
TLInfo	RVGPUCodeGenPrepare.cpp	/^  const TargetLibraryInfo *TLInfo = nullptr;$/;"	m	class:__anond35e324e0111::RVGPUCodeGenPrepareImpl	typeref:typename:const TargetLibraryInfo *	file:
TLInfo	RVGPULibCalls.cpp	/^  const TargetLibraryInfo *TLInfo = nullptr;$/;"	m	class:llvm::RVGPULibCalls	typeref:typename:const TargetLibraryInfo *	file:
TLOF	RVGPUTargetMachine.h	/^  std::unique_ptr<TargetLoweringObjectFile> TLOF;$/;"	m	class:llvm::RVGPUTargetMachine	typeref:typename:std::unique_ptr<TargetLoweringObjectFile>
TM	RVGPU.h	/^  TargetMachine &TM;$/;"	m	class:llvm::RVGPUAttributorPass	typeref:typename:TargetMachine &
TM	RVGPU.h	/^  TargetMachine &TM;$/;"	m	class:llvm::RVGPUCodeGenPreparePass	typeref:typename:TargetMachine &
TM	RVGPU.h	/^  TargetMachine &TM;$/;"	m	class:llvm::RVGPULowerKernelArgumentsPass	typeref:typename:TargetMachine &
TM	RVGPU.h	/^  TargetMachine &TM;$/;"	m	struct:llvm::RVGPUAtomicOptimizerPass	typeref:typename:TargetMachine &
TM	RVGPU.h	/^  TargetMachine &TM;$/;"	m	struct:llvm::RVGPUImageIntrinsicOptimizerPass	typeref:typename:TargetMachine &
TM	RVGPU.h	/^  TargetMachine &TM;$/;"	m	struct:llvm::RVGPUPromoteAllocaPass	typeref:typename:TargetMachine &
TM	RVGPU.h	/^  TargetMachine &TM;$/;"	m	struct:llvm::RVGPUPromoteAllocaToVectorPass	typeref:typename:TargetMachine &
TM	RVGPU.h	/^  const RVGPUTargetMachine &TM;$/;"	m	struct:llvm::RVGPULowerModuleLDSPass	typeref:typename:const RVGPUTargetMachine &
TM	RVGPUAnnotateKernelFeatures.cpp	/^  const TargetMachine *TM = nullptr;$/;"	m	class:__anondc582c840111::RVGPUAnnotateKernelFeatures	typeref:typename:const TargetMachine *	file:
TM	RVGPUAttributor.cpp	/^  TargetMachine &TM;$/;"	m	class:__anon512e119a0111::RVGPUInformationCache	typeref:typename:TargetMachine &	file:
TM	RVGPUAttributor.cpp	/^  TargetMachine *TM;$/;"	m	class:__anon512e119a0111::RVGPUAttributorLegacy	typeref:typename:TargetMachine *	file:
TM	RVGPUImageIntrinsicOptimizer.cpp	/^  const TargetMachine *TM;$/;"	m	class:__anon27dfeec30111::RVGPUImageIntrinsicOptimizer	typeref:typename:const TargetMachine *	file:
TM	RVGPUInstructionSelector.h	/^  const RVGPUTargetMachine &TM;$/;"	m	class:llvm::RVGPUInstructionSelector	typeref:typename:const RVGPUTargetMachine &
TM	RVGPULowerModuleLDSPass.cpp	/^  const RVGPUTargetMachine &TM;$/;"	m	class:__anoncc7483b30111::RVGPULowerModuleLDS	typeref:typename:const RVGPUTargetMachine &	file:
TM	RVGPULowerModuleLDSPass.cpp	/^  const RVGPUTargetMachine *TM;$/;"	m	class:__anoncc7483b30111::RVGPULowerModuleLDSLegacy	typeref:typename:const RVGPUTargetMachine *	file:
TM	RVGPUPromoteAlloca.cpp	/^  const TargetMachine &TM;$/;"	m	class:__anonea904d1c0111::RVGPUPromoteAllocaImpl	typeref:typename:const TargetMachine &	file:
TM	RVGPURemoveIncompatibleFunctions.cpp	/^  const TargetMachine *TM = nullptr;$/;"	m	class:__anonbd23f2080111::RVGPURemoveIncompatibleFunctions	typeref:typename:const TargetMachine *	file:
TOTAL_KINDS	GCNRegPressure.h	/^    TOTAL_KINDS$/;"	e	enum:llvm::GCNRegPressure::RegKind
TRANS	GCNHazardRecognizer.cpp	/^    int TRANS = 0;$/;"	m	struct:GCNHazardRecognizer::fixVALUTransUseHazard::StateType	typeref:typename:int	file:
TRANS	RVGPUIGroupLP.cpp	/^  TRANS = 1u << 10,$/;"	e	enum:__anon61b122dc0111::SchedGroupMask	file:
TRANS	RVGPUInsertDelayAlu.cpp	/^  enum DelayType { VALU, TRANS, SALU, OTHER };$/;"	e	enum:__anonc7296b900111::RVGPUInsertDelayAlu::DelayType	file:
TRANS	SIDefines.h	/^  TRANS = 1 << 16,$/;"	e	enum:llvm::SIInstrFlags::__anon1f24a7950203
TRANSCycles	RVGPUInsertDelayAlu.cpp	/^    uint8_t TRANSCycles = 0;$/;"	m	struct:__anonc7296b900111::RVGPUInsertDelayAlu::DelayInfo	typeref:typename:uint8_t	file:
TRANSNum	RVGPUInsertDelayAlu.cpp	/^    uint8_t TRANSNum = TRANS_MAX;$/;"	m	struct:__anonc7296b900111::RVGPUInsertDelayAlu::DelayInfo	typeref:typename:uint8_t	file:
TRANSNumVALU	RVGPUInsertDelayAlu.cpp	/^    uint8_t TRANSNumVALU = VALU_MAX;$/;"	m	struct:__anonc7296b900111::RVGPUInsertDelayAlu::DelayInfo	typeref:typename:uint8_t	file:
TRANS_MAX	RVGPUInsertDelayAlu.cpp	/^    static constexpr unsigned TRANS_MAX = 4;$/;"	m	struct:__anonc7296b900111::RVGPUInsertDelayAlu::DelayInfo	typeref:typename:unsigned	file:
TRAP	RVGPUISelLowering.h	/^  TRAP,$/;"	e	enum:llvm::RVGPUISD::NodeType
TRAP	SIDefines.h	/^enum Type { TRAP = -2, WORKGROUP = -1 };$/;"	e	enum:llvm::RVGPU::Barrier::Type
TRAP_NUM_SGPRS	Utils/RVGPUBaseInfo.h	/^  TRAP_NUM_SGPRS = 16$/;"	e	enum:llvm::RVGPU::IsaInfo::__anon2734ef760203
TRI	GCNHazardRecognizer.h	/^  const RVRegisterInfo &TRI;$/;"	m	class:llvm::GCNHazardRecognizer	typeref:typename:const RVRegisterInfo &
TRI	GCNNSAReassign.cpp	/^  const RVRegisterInfo *TRI;$/;"	m	class:__anon7e838c8c0111::GCNNSAReassign	typeref:typename:const RVRegisterInfo *	file:
TRI	GCNPreRAOptimizations.cpp	/^  const RVRegisterInfo *TRI;$/;"	m	class:__anon3997f4420111::GCNPreRAOptimizations	typeref:typename:const RVRegisterInfo *	file:
TRI	GCNRewritePartialRegUses.cpp	/^  const RVRegisterInfo *TRI;$/;"	m	class:__anon37bf8c3b0111::GCNRewritePartialRegUses	typeref:typename:const RVRegisterInfo *	file:
TRI	RVFrameLowering.cpp	/^  const RVRegisterInfo &TRI;$/;"	m	class:llvm::PrologEpilogSGPRSpillBuilder	typeref:typename:const RVRegisterInfo &	file:
TRI	RVGPUInsertDelayAlu.cpp	/^  const TargetRegisterInfo *TRI;$/;"	m	class:__anonc7296b900111::RVGPUInsertDelayAlu	typeref:typename:const TargetRegisterInfo *	file:
TRI	RVGPUInstructionSelector.h	/^  const RVRegisterInfo &TRI;$/;"	m	class:llvm::RVGPUInstructionSelector	typeref:typename:const RVRegisterInfo &
TRI	RVGPUMachineCFGStructurizer.cpp	/^  const TargetRegisterInfo *TRI;$/;"	m	class:__anon1695b1f50311::RVGPUMachineCFGStructurizer	typeref:typename:const TargetRegisterInfo *	file:
TRI	RVGPURegBankCombiner.cpp	/^  const TargetRegisterInfo &TRI;$/;"	m	class:__anon00ae19330111::RVGPURegBankCombinerImpl	typeref:typename:const TargetRegisterInfo &	file:
TRI	RVGPURegisterBankInfo.h	/^  const RVRegisterInfo *TRI;$/;"	m	class:llvm::RVGPURegisterBankInfo	typeref:typename:const RVRegisterInfo *
TRI	RVRegisterInfo.cpp	/^  const RVRegisterInfo &TRI;$/;"	m	struct:llvm::SGPRSpillBuilder	typeref:typename:const RVRegisterInfo &	file:
TRI	SIFixSGPRCopies.cpp	/^  const RVRegisterInfo *TRI;$/;"	m	class:__anond27816180111::SIFixSGPRCopies	typeref:typename:const RVRegisterInfo *	file:
TRI	SIFoldOperands.cpp	/^  const RVRegisterInfo *TRI;$/;"	m	class:__anon07e514130111::SIFoldOperands	typeref:typename:const RVRegisterInfo *	file:
TRI	SIFormMemoryClauses.cpp	/^  const RVRegisterInfo *TRI;$/;"	m	class:__anon8c5c3e4f0111::SIFormMemoryClauses	typeref:typename:const RVRegisterInfo *	file:
TRI	SIInsertWaitcnts.cpp	/^  const RVRegisterInfo *TRI = nullptr;$/;"	m	class:__anona6cbb7940211::SIInsertWaitcnts	typeref:typename:const RVRegisterInfo *	file:
TRI	SILateBranchLowering.cpp	/^  const RVRegisterInfo *TRI = nullptr;$/;"	m	class:__anon4aa55dad0111::SILateBranchLowering	typeref:typename:const RVRegisterInfo *	file:
TRI	SILoadStoreOptimizer.cpp	/^  const RVRegisterInfo *TRI = nullptr;$/;"	m	class:__anon677101620111::SILoadStoreOptimizer	typeref:typename:const RVRegisterInfo *	file:
TRI	SILowerControlFlow.cpp	/^  const RVRegisterInfo *TRI = nullptr;$/;"	m	class:__anon0ce7c3340111::SILowerControlFlow	typeref:typename:const RVRegisterInfo *	file:
TRI	SILowerSGPRSpills.cpp	/^  const RVRegisterInfo *TRI = nullptr;$/;"	m	class:__anon4be335ae0111::SILowerSGPRSpills	typeref:typename:const RVRegisterInfo *	file:
TRI	SILowerWWMCopies.cpp	/^  const RVRegisterInfo *TRI;$/;"	m	class:__anon4731d9190111::SILowerWWMCopies	typeref:typename:const RVRegisterInfo *	file:
TRI	SIOptimizeExecMasking.cpp	/^  const RVRegisterInfo *TRI = nullptr;$/;"	m	class:__anon15773df20111::SIOptimizeExecMasking	typeref:typename:const RVRegisterInfo *	file:
TRI	SIOptimizeExecMaskingPreRA.cpp	/^  const RVRegisterInfo *TRI;$/;"	m	class:__anon5760078c0111::SIOptimizeExecMaskingPreRA	typeref:typename:const RVRegisterInfo *	file:
TRI	SIOptimizeVGPRLiveRange.cpp	/^  const RVRegisterInfo *TRI = nullptr;$/;"	m	class:__anon3fc4a09f0111::SIOptimizeVGPRLiveRange	typeref:typename:const RVRegisterInfo *	file:
TRI	SIPeepholeSDWA.cpp	/^  const RVRegisterInfo *TRI;$/;"	m	class:__anon00bd52b30111::SIPeepholeSDWA	typeref:typename:const RVRegisterInfo *	file:
TRI	SIPostRABundler.cpp	/^  const RVRegisterInfo *TRI;$/;"	m	class:__anona97e3cd70111::SIPostRABundler	typeref:typename:const RVRegisterInfo *	file:
TRI	SIPreAllocateWWMRegs.cpp	/^  const RVRegisterInfo *TRI;$/;"	m	class:__anon37f997ca0111::SIPreAllocateWWMRegs	typeref:typename:const RVRegisterInfo *	file:
TRI	SIPreEmitPeephole.cpp	/^  const RVRegisterInfo *TRI = nullptr;$/;"	m	class:__anon02bc421a0111::SIPreEmitPeephole	typeref:typename:const RVRegisterInfo *	file:
TRI	SIShrinkInstructions.cpp	/^  const RVRegisterInfo *TRI;$/;"	m	class:__anon665027960111::SIShrinkInstructions	typeref:typename:const RVRegisterInfo *	file:
TRI	SIWholeQuadMode.cpp	/^  const RVRegisterInfo *TRI;$/;"	m	class:__anon41aff2810111::SIWholeQuadMode	typeref:typename:const RVRegisterInfo *	file:
TSInfo	GCNSubtarget.h	/^  SelectionDAGTargetInfo TSInfo;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:SelectionDAGTargetInfo
TSchedModel	GCNHazardRecognizer.h	/^  TargetSchedModel TSchedModel;$/;"	m	class:llvm::GCNHazardRecognizer	typeref:typename:TargetSchedModel
TTI	RVGPUTargetTransformInfo.h	/^  using TTI = TargetTransformInfo;$/;"	t	class:llvm::GCNTTIImpl	typeref:typename:TargetTransformInfo
TTI	RVGPUTargetTransformInfo.h	/^  using TTI = TargetTransformInfo;$/;"	t	class:llvm::RVGPUTTIImpl	typeref:typename:TargetTransformInfo
TTI	RVGPUUnifyDivergentExitNodes.cpp	/^  const TargetTransformInfo *TTI = nullptr;$/;"	m	class:__anonc14c2af00111::RVGPUUnifyDivergentExitNodesImpl	typeref:typename:const TargetTransformInfo *	file:
TTMP_GFX9PLUS_MAX	SIDefines.h	/^  TTMP_GFX9PLUS_MAX = 123,$/;"	e	enum:llvm::RVGPU::EncValues::__anon1f24a7950603
TTMP_GFX9PLUS_MIN	SIDefines.h	/^  TTMP_GFX9PLUS_MIN = 108,$/;"	e	enum:llvm::RVGPU::EncValues::__anon1f24a7950603
TTMP_VI_MAX	SIDefines.h	/^  TTMP_VI_MAX = 123,$/;"	e	enum:llvm::RVGPU::EncValues::__anon1f24a7950603
TTMP_VI_MIN	SIDefines.h	/^  TTMP_VI_MIN = 112,$/;"	e	enum:llvm::RVGPU::EncValues::__anon1f24a7950603
Table	RVGPULibFunc.cpp	/^  static const UnmangledFuncInfo Table[];$/;"	m	class:__anona5afe38d0111::UnmangledFuncInfo	typeref:typename:const UnmangledFuncInfo[]	file:
Table	RVGPULibFunc.cpp	/^const UnmangledFuncInfo UnmangledFuncInfo::Table[] = {$/;"	m	class:__anona5afe38d0111::UnmangledFuncInfo	typeref:typename:const UnmangledFuncInfo[]
TableEntry	RVGPULibCalls.cpp	/^struct TableEntry {$/;"	s	file:
TableRef	RVGPULibCalls.cpp	/^using TableRef = ArrayRef<TableEntry>;$/;"	t	typeref:typename:ArrayRef<TableEntry>	file:
TableSize	RVGPULibFunc.cpp	/^  static const unsigned TableSize;$/;"	m	class:__anona5afe38d0111::UnmangledFuncInfo	typeref:typename:const unsigned	file:
TableSize	RVGPULibFunc.cpp	/^const unsigned UnmangledFuncInfo::TableSize =$/;"	m	class:__anona5afe38d0111::UnmangledFuncInfo	typeref:typename:const unsigned
Target	SIDefines.h	/^enum Target : unsigned {$/;"	g	namespace:llvm::RVGPU::Exp	typeref:typename:unsigned
Target	SIPeepholeSDWA.cpp	/^  MachineOperand *Target; \/\/ Operand that would be used in converted instruction$/;"	m	class:__anon00bd52b30111::SDWAOperand	typeref:typename:MachineOperand *	file:
TargetID	GCNSubtarget.h	/^  RVGPU::IsaInfo::RVGPUTargetID TargetID;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:RVGPU::IsaInfo::RVGPUTargetID
TargetID	MCTargetDesc/RVGPUTargetStreamer.h	/^  std::optional<RVGPU::IsaInfo::RVGPUTargetID> TargetID;$/;"	m	class:llvm::RVGPUTargetStreamer	typeref:typename:std::optional<RVGPU::IsaInfo::RVGPUTargetID>
TargetIDSetting	Utils/RVGPUBaseInfo.h	/^enum class TargetIDSetting {$/;"	g	namespace:llvm::RVGPU::IsaInfo
TargetIndex	RVGPU.h	/^enum TargetIndex {$/;"	g	namespace:llvm::RVGPU
TargetMaxInstBytes	Disassembler/RVGPUDisassembler.h	/^  const unsigned TargetMaxInstBytes;$/;"	m	class:llvm::RVGPUDisassembler	typeref:typename:const unsigned
TargetOccupancy	GCNSchedStrategy.h	/^  unsigned TargetOccupancy;$/;"	m	class:llvm::GCNSchedStrategy	typeref:typename:unsigned
TargetOperandFlags	RVInstrInfo.h	/^  enum TargetOperandFlags {$/;"	g	class:llvm::RVInstrInfo
TargetTriple	GCNSubtarget.h	/^  Triple TargetTriple;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:Triple
TargetTriple	RVGPUSubtarget.h	/^  Triple TargetTriple;$/;"	m	class:llvm::RVGPUSubtarget	typeref:typename:Triple
TargetTriple	RVGPUTargetTransformInfo.h	/^  Triple TargetTriple;$/;"	m	class:llvm::RVGPUTTIImpl	typeref:typename:Triple
TentativeSchedule	GCNIterativeScheduler.h	/^  struct TentativeSchedule {$/;"	s	class:llvm::GCNIterativeScheduler
TexFailCtrlIndex	RVGPUInstrInfo.h	/^  uint8_t TexFailCtrlIndex;$/;"	m	struct:llvm::RVGPU::ImageDimIntrinsicInfo	typeref:typename:uint8_t
TgSplit	SIProgramInfo.h	/^    uint32_t TgSplit = 0;$/;"	m	struct:llvm::SIProgramInfo	typeref:typename:uint32_t
Tgt	Utils/RVGPUBaseInfo.cpp	/^  unsigned Tgt;$/;"	m	struct:llvm::RVGPU::Exp::ExpTgt	typeref:typename:unsigned	file:
TiedSourceNotRead	SIDefines.h	/^  TiedSourceNotRead = UINT64_C(1) << 60,$/;"	e	enum:llvm::SIInstrFlags::__anon1f24a7950203
TmpVGPR	RVRegisterInfo.cpp	/^  Register TmpVGPR = RVGPU::NoRegister;$/;"	m	struct:llvm::SGPRSpillBuilder	typeref:typename:Register	file:
TmpVGPRIndex	RVRegisterInfo.cpp	/^  int TmpVGPRIndex = 0;$/;"	m	struct:llvm::SGPRSpillBuilder	typeref:typename:int	file:
TmpVGPRLive	RVRegisterInfo.cpp	/^  bool TmpVGPRLive = false;$/;"	m	struct:llvm::SGPRSpillBuilder	typeref:typename:bool	file:
ToReplace	RVGPUAtomicOptimizer.cpp	/^  SmallVector<ReplacementInfo, 8> ToReplace;$/;"	m	class:__anon7bca098a0111::RVGPUAtomicOptimizerImpl	typeref:typename:SmallVector<ReplacementInfo,8>	file:
Tok	AsmParser/RVGPUAsmParser.cpp	/^    TokOp Tok;$/;"	m	union:__anon672fa8550111::RVGPUOperand::__anon672fa855020a	typeref:typename:TokOp	file:
TokOp	AsmParser/RVGPUAsmParser.cpp	/^  struct TokOp {$/;"	s	class:__anon672fa8550111::RVGPUOperand	file:
Token	AsmParser/RVGPUAsmParser.cpp	/^    Token,$/;"	e	enum:__anon672fa8550111::RVGPUOperand::KindTy	file:
TopDownBlock2Index	SIMachineScheduler.h	/^  std::vector<int> TopDownBlock2Index;$/;"	m	class:llvm::SIScheduleBlockCreator	typeref:typename:std::vector<int>
TopDownBlock2Index	SIMachineScheduler.h	/^  std::vector<int> TopDownBlock2Index;$/;"	m	struct:llvm::SIScheduleBlocks	typeref:typename:std::vector<int>
TopDownIndex2Block	SIMachineScheduler.h	/^  std::vector<int> TopDownIndex2Block;$/;"	m	class:llvm::SIScheduleBlockCreator	typeref:typename:std::vector<int>
TopDownIndex2Block	SIMachineScheduler.h	/^  std::vector<int> TopDownIndex2Block;$/;"	m	struct:llvm::SIScheduleBlocks	typeref:typename:std::vector<int>
TopDownIndex2SU	SIMachineScheduler.h	/^  std::vector<int> TopDownIndex2SU;$/;"	m	class:llvm::SIScheduleDAGMI	typeref:typename:std::vector<int>
TopPressure	SIMachineScheduler.h	/^  IntervalPressure TopPressure;$/;"	m	class:llvm::SIScheduleBlock	typeref:typename:IntervalPressure
TopRPTracker	SIMachineScheduler.h	/^  RegPressureTracker TopRPTracker;$/;"	m	class:llvm::SIScheduleBlock	typeref:typename:RegPressureTracker
TopReadySUs	SIMachineScheduler.h	/^  std::vector<SUnit*> TopReadySUs;$/;"	m	class:llvm::SIScheduleBlock	typeref:typename:std::vector<SUnit * >
TopRoots	GCNIterativeScheduler.cpp	/^  SmallVector<SUnit *, 8> TopRoots;$/;"	m	class:GCNIterativeScheduler::BuildDAG	typeref:typename:SmallVector<SUnit *,8>	file:
TowardNegative	SIModeRegisterDefaults.h	/^  TowardNegative = static_cast<int8_t>(RoundingMode::TowardNegative),$/;"	e	enum:llvm::RVGPU::RVGPUFltRounds
TowardNegativeF32_NearestTiesToEvenF64	SIModeRegisterDefaults.h	/^  TowardNegativeF32_NearestTiesToEvenF64 = 14,$/;"	e	enum:llvm::RVGPU::RVGPUFltRounds
TowardNegativeF32_TowardNegativeF64	SIModeRegisterDefaults.h	/^  TowardNegativeF32_TowardNegativeF64 = TowardNegative,$/;"	e	enum:llvm::RVGPU::RVGPUFltRounds
TowardNegativeF32_TowardPositiveF64	SIModeRegisterDefaults.h	/^  TowardNegativeF32_TowardPositiveF64 = 15,$/;"	e	enum:llvm::RVGPU::RVGPUFltRounds
TowardNegativeF32_TowardZeroF64	SIModeRegisterDefaults.h	/^  TowardNegativeF32_TowardZeroF64 = 16,$/;"	e	enum:llvm::RVGPU::RVGPUFltRounds
TowardPositive	SIModeRegisterDefaults.h	/^  TowardPositive = static_cast<int8_t>(RoundingMode::TowardPositive),$/;"	e	enum:llvm::RVGPU::RVGPUFltRounds
TowardPositiveF32_NearestTiesToEvenF64	SIModeRegisterDefaults.h	/^  TowardPositiveF32_NearestTiesToEvenF64 = 11,$/;"	e	enum:llvm::RVGPU::RVGPUFltRounds
TowardPositiveF32_TowardNegativeF64	SIModeRegisterDefaults.h	/^  TowardPositiveF32_TowardNegativeF64 = 12,$/;"	e	enum:llvm::RVGPU::RVGPUFltRounds
TowardPositiveF32_TowardPositiveF64	SIModeRegisterDefaults.h	/^  TowardPositiveF32_TowardPositiveF64 = TowardPositive,$/;"	e	enum:llvm::RVGPU::RVGPUFltRounds
TowardPositiveF32_TowardZeroF64	SIModeRegisterDefaults.h	/^  TowardPositiveF32_TowardZeroF64 = 13,$/;"	e	enum:llvm::RVGPU::RVGPUFltRounds
TowardZero	SIModeRegisterDefaults.h	/^  TowardZero = static_cast<int8_t>(RoundingMode::TowardZero),$/;"	e	enum:llvm::RVGPU::RVGPUFltRounds
TowardZeroF32_NearestTiesToEvenF64	SIModeRegisterDefaults.h	/^  TowardZeroF32_NearestTiesToEvenF64 = 17,$/;"	e	enum:llvm::RVGPU::RVGPUFltRounds
TowardZeroF32_TowardNegativeF64	SIModeRegisterDefaults.h	/^  TowardZeroF32_TowardNegativeF64 = 19,$/;"	e	enum:llvm::RVGPU::RVGPUFltRounds
TowardZeroF32_TowardPositiveF64	SIModeRegisterDefaults.h	/^  TowardZeroF32_TowardPositiveF64 = 18,$/;"	e	enum:llvm::RVGPU::RVGPUFltRounds
TowardZeroF32_TowardZeroF64	SIModeRegisterDefaults.h	/^  TowardZeroF32_TowardZeroF64 = TowardZero,$/;"	e	enum:llvm::RVGPU::RVGPUFltRounds
TrailingInternalLength	SIInsertHardClauses.cpp	/^    unsigned TrailingInternalLength = 0;$/;"	m	struct:__anon09538a560111::SIInsertHardClauses::ClauseInfo	typeref:typename:unsigned	file:
TrapHandler	GCNSubtarget.h	/^  bool TrapHandler = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
TrapHandlerAbi	GCNSubtarget.h	/^  enum class TrapHandlerAbi {$/;"	g	class:llvm::GCNSubtarget
TrapHandlerEnable	SIProgramInfo.h	/^    uint32_t TrapHandlerEnable = 0;$/;"	m	struct:llvm::SIProgramInfo	typeref:typename:uint32_t
TrapID	GCNSubtarget.h	/^  enum class TrapID {$/;"	g	class:llvm::GCNSubtarget
True	RVGPUPostLegalizerCombiner.cpp	/^    Register True;$/;"	m	struct:__anonf94dcdde0111::RVGPUPostLegalizerCombinerImpl::FMinFMaxLegacyInfo	typeref:typename:Register	file:
Ty	RVGPUCodeGenPrepare.cpp	/^  Type *Ty = nullptr;$/;"	m	class:VectorSlice	typeref:typename:Type *	file:
Type	AsmParser/RVGPUAsmParser.cpp	/^    ImmTy Type;$/;"	m	struct:__anon672fa8550111::RVGPUOperand::ImmOp	typeref:typename:ImmTy	file:
Type	SIDefines.h	/^enum Type { TRAP = -2, WORKGROUP = -1 };$/;"	g	namespace:llvm::RVGPU::Barrier
Type	SIInsertHardClauses.cpp	/^    HardClauseType Type = HARDCLAUSE_ILLEGAL;$/;"	m	struct:__anon09538a560111::SIInsertHardClauses::ClauseInfo	typeref:typename:HardClauseType	file:
U16	RVGPULibFunc.h	/^    U16 =  UINT | B16,$/;"	e	enum:llvm::RVGPULibFuncBase::EType
U32	RVGPULibFunc.h	/^    U32 =  UINT | B32,$/;"	e	enum:llvm::RVGPULibFuncBase::EType
U64	RVGPULibFunc.h	/^    U64 =  UINT | B64,$/;"	e	enum:llvm::RVGPULibFuncBase::EType
U8	RVGPULibFunc.h	/^    U8  =  UINT | B8,$/;"	e	enum:llvm::RVGPULibFuncBase::EType
UA	RVGPUAnnotateUniformValues.cpp	/^  UniformityInfo *UA;$/;"	m	class:__anon9c77d1d40111::RVGPUAnnotateUniformValues	typeref:typename:UniformityInfo *	file:
UA	RVGPUAtomicOptimizer.cpp	/^  const UniformityInfo *UA;$/;"	m	class:__anon7bca098a0111::RVGPUAtomicOptimizerImpl	typeref:typename:const UniformityInfo *	file:
UA	RVGPUCodeGenPrepare.cpp	/^  UniformityInfo *UA = nullptr;$/;"	m	class:__anond35e324e0111::RVGPUCodeGenPrepareImpl	typeref:typename:UniformityInfo *	file:
UA	RVGPULateCodeGenPrepare.cpp	/^  UniformityInfo *UA = nullptr;$/;"	m	class:__anon4d9375140111::RVGPULateCodeGenPrepare	typeref:typename:UniformityInfo *	file:
UA	SIAnnotateControlFlow.cpp	/^  UniformityInfo *UA;$/;"	m	class:__anond71df4850111::SIAnnotateControlFlow	typeref:typename:UniformityInfo *	file:
UFMT_10_10_10_2_SINT	SIDefines.h	/^  UFMT_10_10_10_2_SINT,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_10_10_10_2_SINT	SIDefines.h	/^  UFMT_10_10_10_2_SINT,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_10_10_10_2_SNORM	SIDefines.h	/^  UFMT_10_10_10_2_SNORM,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_10_10_10_2_SNORM	SIDefines.h	/^  UFMT_10_10_10_2_SNORM,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_10_10_10_2_SSCALED	SIDefines.h	/^  UFMT_10_10_10_2_SSCALED,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_10_10_10_2_UINT	SIDefines.h	/^  UFMT_10_10_10_2_UINT,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_10_10_10_2_UINT	SIDefines.h	/^  UFMT_10_10_10_2_UINT,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_10_10_10_2_UNORM	SIDefines.h	/^  UFMT_10_10_10_2_UNORM,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_10_10_10_2_UNORM	SIDefines.h	/^  UFMT_10_10_10_2_UNORM,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_10_10_10_2_USCALED	SIDefines.h	/^  UFMT_10_10_10_2_USCALED,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_10_11_11_FLOAT	SIDefines.h	/^  UFMT_10_11_11_FLOAT,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_10_11_11_FLOAT	SIDefines.h	/^  UFMT_10_11_11_FLOAT,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_10_11_11_SINT	SIDefines.h	/^  UFMT_10_11_11_SINT,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_10_11_11_SNORM	SIDefines.h	/^  UFMT_10_11_11_SNORM,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_10_11_11_SSCALED	SIDefines.h	/^  UFMT_10_11_11_SSCALED,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_10_11_11_UINT	SIDefines.h	/^  UFMT_10_11_11_UINT,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_10_11_11_UNORM	SIDefines.h	/^  UFMT_10_11_11_UNORM,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_10_11_11_USCALED	SIDefines.h	/^  UFMT_10_11_11_USCALED,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_11_11_10_FLOAT	SIDefines.h	/^  UFMT_11_11_10_FLOAT,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_11_11_10_FLOAT	SIDefines.h	/^  UFMT_11_11_10_FLOAT,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_11_11_10_SINT	SIDefines.h	/^  UFMT_11_11_10_SINT,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_11_11_10_SNORM	SIDefines.h	/^  UFMT_11_11_10_SNORM,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_11_11_10_SSCALED	SIDefines.h	/^  UFMT_11_11_10_SSCALED,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_11_11_10_UINT	SIDefines.h	/^  UFMT_11_11_10_UINT,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_11_11_10_UNORM	SIDefines.h	/^  UFMT_11_11_10_UNORM,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_11_11_10_USCALED	SIDefines.h	/^  UFMT_11_11_10_USCALED,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_16_16_16_16_FLOAT	SIDefines.h	/^  UFMT_16_16_16_16_FLOAT,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_16_16_16_16_FLOAT	SIDefines.h	/^  UFMT_16_16_16_16_FLOAT,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_16_16_16_16_SINT	SIDefines.h	/^  UFMT_16_16_16_16_SINT,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_16_16_16_16_SINT	SIDefines.h	/^  UFMT_16_16_16_16_SINT,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_16_16_16_16_SNORM	SIDefines.h	/^  UFMT_16_16_16_16_SNORM,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_16_16_16_16_SNORM	SIDefines.h	/^  UFMT_16_16_16_16_SNORM,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_16_16_16_16_SSCALED	SIDefines.h	/^  UFMT_16_16_16_16_SSCALED,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_16_16_16_16_SSCALED	SIDefines.h	/^  UFMT_16_16_16_16_SSCALED,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_16_16_16_16_UINT	SIDefines.h	/^  UFMT_16_16_16_16_UINT,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_16_16_16_16_UINT	SIDefines.h	/^  UFMT_16_16_16_16_UINT,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_16_16_16_16_UNORM	SIDefines.h	/^  UFMT_16_16_16_16_UNORM,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_16_16_16_16_UNORM	SIDefines.h	/^  UFMT_16_16_16_16_UNORM,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_16_16_16_16_USCALED	SIDefines.h	/^  UFMT_16_16_16_16_USCALED,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_16_16_16_16_USCALED	SIDefines.h	/^  UFMT_16_16_16_16_USCALED,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_16_16_FLOAT	SIDefines.h	/^  UFMT_16_16_FLOAT,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_16_16_FLOAT	SIDefines.h	/^  UFMT_16_16_FLOAT,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_16_16_SINT	SIDefines.h	/^  UFMT_16_16_SINT,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_16_16_SINT	SIDefines.h	/^  UFMT_16_16_SINT,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_16_16_SNORM	SIDefines.h	/^  UFMT_16_16_SNORM,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_16_16_SNORM	SIDefines.h	/^  UFMT_16_16_SNORM,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_16_16_SSCALED	SIDefines.h	/^  UFMT_16_16_SSCALED,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_16_16_SSCALED	SIDefines.h	/^  UFMT_16_16_SSCALED,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_16_16_UINT	SIDefines.h	/^  UFMT_16_16_UINT,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_16_16_UINT	SIDefines.h	/^  UFMT_16_16_UINT,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_16_16_UNORM	SIDefines.h	/^  UFMT_16_16_UNORM,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_16_16_UNORM	SIDefines.h	/^  UFMT_16_16_UNORM,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_16_16_USCALED	SIDefines.h	/^  UFMT_16_16_USCALED,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_16_16_USCALED	SIDefines.h	/^  UFMT_16_16_USCALED,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_16_FLOAT	SIDefines.h	/^  UFMT_16_FLOAT,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_16_FLOAT	SIDefines.h	/^  UFMT_16_FLOAT,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_16_SINT	SIDefines.h	/^  UFMT_16_SINT,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_16_SINT	SIDefines.h	/^  UFMT_16_SINT,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_16_SNORM	SIDefines.h	/^  UFMT_16_SNORM,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_16_SNORM	SIDefines.h	/^  UFMT_16_SNORM,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_16_SSCALED	SIDefines.h	/^  UFMT_16_SSCALED,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_16_SSCALED	SIDefines.h	/^  UFMT_16_SSCALED,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_16_UINT	SIDefines.h	/^  UFMT_16_UINT,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_16_UINT	SIDefines.h	/^  UFMT_16_UINT,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_16_UNORM	SIDefines.h	/^  UFMT_16_UNORM,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_16_UNORM	SIDefines.h	/^  UFMT_16_UNORM,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_16_USCALED	SIDefines.h	/^  UFMT_16_USCALED,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_16_USCALED	SIDefines.h	/^  UFMT_16_USCALED,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_2_10_10_10_SINT	SIDefines.h	/^  UFMT_2_10_10_10_SINT,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_2_10_10_10_SINT	SIDefines.h	/^  UFMT_2_10_10_10_SINT,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_2_10_10_10_SNORM	SIDefines.h	/^  UFMT_2_10_10_10_SNORM,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_2_10_10_10_SNORM	SIDefines.h	/^  UFMT_2_10_10_10_SNORM,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_2_10_10_10_SSCALED	SIDefines.h	/^  UFMT_2_10_10_10_SSCALED,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_2_10_10_10_SSCALED	SIDefines.h	/^  UFMT_2_10_10_10_SSCALED,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_2_10_10_10_UINT	SIDefines.h	/^  UFMT_2_10_10_10_UINT,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_2_10_10_10_UINT	SIDefines.h	/^  UFMT_2_10_10_10_UINT,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_2_10_10_10_UNORM	SIDefines.h	/^  UFMT_2_10_10_10_UNORM,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_2_10_10_10_UNORM	SIDefines.h	/^  UFMT_2_10_10_10_UNORM,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_2_10_10_10_USCALED	SIDefines.h	/^  UFMT_2_10_10_10_USCALED,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_2_10_10_10_USCALED	SIDefines.h	/^  UFMT_2_10_10_10_USCALED,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_32_32_32_32_FLOAT	SIDefines.h	/^  UFMT_32_32_32_32_FLOAT,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_32_32_32_32_FLOAT	SIDefines.h	/^  UFMT_32_32_32_32_FLOAT,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_32_32_32_32_SINT	SIDefines.h	/^  UFMT_32_32_32_32_SINT,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_32_32_32_32_SINT	SIDefines.h	/^  UFMT_32_32_32_32_SINT,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_32_32_32_32_UINT	SIDefines.h	/^  UFMT_32_32_32_32_UINT,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_32_32_32_32_UINT	SIDefines.h	/^  UFMT_32_32_32_32_UINT,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_32_32_32_FLOAT	SIDefines.h	/^  UFMT_32_32_32_FLOAT,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_32_32_32_FLOAT	SIDefines.h	/^  UFMT_32_32_32_FLOAT,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_32_32_32_SINT	SIDefines.h	/^  UFMT_32_32_32_SINT,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_32_32_32_SINT	SIDefines.h	/^  UFMT_32_32_32_SINT,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_32_32_32_UINT	SIDefines.h	/^  UFMT_32_32_32_UINT,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_32_32_32_UINT	SIDefines.h	/^  UFMT_32_32_32_UINT,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_32_32_FLOAT	SIDefines.h	/^  UFMT_32_32_FLOAT,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_32_32_FLOAT	SIDefines.h	/^  UFMT_32_32_FLOAT,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_32_32_SINT	SIDefines.h	/^  UFMT_32_32_SINT,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_32_32_SINT	SIDefines.h	/^  UFMT_32_32_SINT,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_32_32_UINT	SIDefines.h	/^  UFMT_32_32_UINT,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_32_32_UINT	SIDefines.h	/^  UFMT_32_32_UINT,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_32_FLOAT	SIDefines.h	/^  UFMT_32_FLOAT,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_32_FLOAT	SIDefines.h	/^  UFMT_32_FLOAT,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_32_SINT	SIDefines.h	/^  UFMT_32_SINT,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_32_SINT	SIDefines.h	/^  UFMT_32_SINT,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_32_UINT	SIDefines.h	/^  UFMT_32_UINT,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_32_UINT	SIDefines.h	/^  UFMT_32_UINT,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_8_8_8_8_SINT	SIDefines.h	/^  UFMT_8_8_8_8_SINT,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_8_8_8_8_SINT	SIDefines.h	/^  UFMT_8_8_8_8_SINT,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_8_8_8_8_SNORM	SIDefines.h	/^  UFMT_8_8_8_8_SNORM,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_8_8_8_8_SNORM	SIDefines.h	/^  UFMT_8_8_8_8_SNORM,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_8_8_8_8_SSCALED	SIDefines.h	/^  UFMT_8_8_8_8_SSCALED,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_8_8_8_8_SSCALED	SIDefines.h	/^  UFMT_8_8_8_8_SSCALED,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_8_8_8_8_UINT	SIDefines.h	/^  UFMT_8_8_8_8_UINT,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_8_8_8_8_UINT	SIDefines.h	/^  UFMT_8_8_8_8_UINT,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_8_8_8_8_UNORM	SIDefines.h	/^  UFMT_8_8_8_8_UNORM,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_8_8_8_8_UNORM	SIDefines.h	/^  UFMT_8_8_8_8_UNORM,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_8_8_8_8_USCALED	SIDefines.h	/^  UFMT_8_8_8_8_USCALED,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_8_8_8_8_USCALED	SIDefines.h	/^  UFMT_8_8_8_8_USCALED,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_8_8_SINT	SIDefines.h	/^  UFMT_8_8_SINT,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_8_8_SINT	SIDefines.h	/^  UFMT_8_8_SINT,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_8_8_SNORM	SIDefines.h	/^  UFMT_8_8_SNORM,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_8_8_SNORM	SIDefines.h	/^  UFMT_8_8_SNORM,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_8_8_SSCALED	SIDefines.h	/^  UFMT_8_8_SSCALED,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_8_8_SSCALED	SIDefines.h	/^  UFMT_8_8_SSCALED,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_8_8_UINT	SIDefines.h	/^  UFMT_8_8_UINT,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_8_8_UINT	SIDefines.h	/^  UFMT_8_8_UINT,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_8_8_UNORM	SIDefines.h	/^  UFMT_8_8_UNORM,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_8_8_UNORM	SIDefines.h	/^  UFMT_8_8_UNORM,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_8_8_USCALED	SIDefines.h	/^  UFMT_8_8_USCALED,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_8_8_USCALED	SIDefines.h	/^  UFMT_8_8_USCALED,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_8_SINT	SIDefines.h	/^  UFMT_8_SINT,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_8_SINT	SIDefines.h	/^  UFMT_8_SINT,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_8_SNORM	SIDefines.h	/^  UFMT_8_SNORM,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_8_SNORM	SIDefines.h	/^  UFMT_8_SNORM,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_8_SSCALED	SIDefines.h	/^  UFMT_8_SSCALED,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_8_SSCALED	SIDefines.h	/^  UFMT_8_SSCALED,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_8_UINT	SIDefines.h	/^  UFMT_8_UINT,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_8_UINT	SIDefines.h	/^  UFMT_8_UINT,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_8_UNORM	SIDefines.h	/^  UFMT_8_UNORM,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_8_UNORM	SIDefines.h	/^  UFMT_8_UNORM,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_8_USCALED	SIDefines.h	/^  UFMT_8_USCALED,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_8_USCALED	SIDefines.h	/^  UFMT_8_USCALED,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_DEFAULT	SIDefines.h	/^  UFMT_DEFAULT = 1$/;"	e	enum:llvm::RVGPU::MTBUFFormat::UnifiedFormatCommon
UFMT_FIRST	SIDefines.h	/^  UFMT_FIRST = UFMT_INVALID,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_FIRST	SIDefines.h	/^  UFMT_FIRST = UFMT_INVALID,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_INVALID	SIDefines.h	/^  UFMT_INVALID = 0,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_INVALID	SIDefines.h	/^  UFMT_INVALID = 0,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_LAST	SIDefines.h	/^  UFMT_LAST = UFMT_32_32_32_32_FLOAT,$/;"	e	enum:llvm::RVGPU::UfmtGFX10::UnifiedFormat
UFMT_LAST	SIDefines.h	/^  UFMT_LAST = UFMT_32_32_32_32_FLOAT,$/;"	e	enum:llvm::RVGPU::UfmtGFX11::UnifiedFormat
UFMT_MAX	SIDefines.h	/^  UFMT_MAX = 127,$/;"	e	enum:llvm::RVGPU::MTBUFFormat::UnifiedFormatCommon
UFMT_UNDEF	SIDefines.h	/^  UFMT_UNDEF = -1,$/;"	e	enum:llvm::RVGPU::MTBUFFormat::UnifiedFormatCommon
UINT	RVGPULibFunc.h	/^    UINT  = 0x30,$/;"	e	enum:llvm::RVGPULibFuncBase::EType
UMAX3	RVGPUISelLowering.h	/^  UMAX3,$/;"	e	enum:llvm::RVGPUISD::NodeType
UMED3	RVGPUISelLowering.h	/^  UMED3,$/;"	e	enum:llvm::RVGPUISD::NodeType
UMIN3	RVGPUISelLowering.h	/^  UMIN3,$/;"	e	enum:llvm::RVGPUISD::NodeType
UMUL	RVGPUISelLowering.h	/^  UMUL, \/\/ 32bit unsigned multiplication$/;"	e	enum:llvm::RVGPUISD::NodeType
UNDEF	SIDefines.h	/^  UNDEF = 0xFFFF$/;"	e	enum:llvm::RVGPU::VGPRIndexMode::EncBits
UNKNOWN	SILoadStoreOptimizer.cpp	/^  UNKNOWN,$/;"	e	enum:__anon677101620111::InstClassEnum	file:
UNUSED_PAD	SIDefines.h	/^  UNUSED_PAD = 0,$/;"	e	enum:llvm::RVGPU::SDWA::DstUnused
UNUSED_PRESERVE	SIDefines.h	/^  UNUSED_PRESERVE = 2,$/;"	e	enum:llvm::RVGPU::SDWA::DstUnused
UNUSED_SEXT	SIDefines.h	/^  UNUSED_SEXT = 1,$/;"	e	enum:llvm::RVGPU::SDWA::DstUnused
UPTracker	GCNIterativeScheduler.h	/^  mutable GCNUpwardRPTracker UPTracker;$/;"	m	class:llvm::GCNIterativeScheduler	typeref:typename:GCNUpwardRPTracker
URECIP	RVGPUISelLowering.h	/^  URECIP,$/;"	e	enum:llvm::RVGPUISD::NodeType
USI	RVGPUSubtarget.cpp	/^  using USI = GCNUserSGPRUsageInfo;$/;"	t	function:getMaxNumPreloadedSGPRs	typeref:typename:GCNUserSGPRUsageInfo	file:
UfmtGFX10	SIDefines.h	/^namespace UfmtGFX10 {$/;"	n	namespace:llvm::RVGPU
UfmtGFX11	SIDefines.h	/^namespace UfmtGFX11 {$/;"	n	namespace:llvm::RVGPU
UfmtSymbolicGFX10	Utils/RVGPUAsmUtils.cpp	/^StringLiteral const UfmtSymbolicGFX10[] = {$/;"	v	namespace:llvm::RVGPU::MTBUFFormat	typeref:typename:StringLiteral const[]
UfmtSymbolicGFX11	Utils/RVGPUAsmUtils.cpp	/^StringLiteral const UfmtSymbolicGFX11[] = {$/;"	v	namespace:llvm::RVGPU::MTBUFFormat	typeref:typename:StringLiteral const[]
UnalignedAccessMode	GCNSubtarget.h	/^  bool UnalignedAccessMode = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
UnalignedBufferAccess	GCNSubtarget.h	/^  bool UnalignedBufferAccess = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
UnalignedDSAccess	GCNSubtarget.h	/^  bool UnalignedDSAccess = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
UnalignedScratchAccess	GCNSubtarget.h	/^  bool UnalignedScratchAccess = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
UnclusteredHighRPReschedule	GCNSchedStrategy.h	/^  UnclusteredHighRPReschedule = 1,$/;"	e	enum:llvm::GCNSchedStageID
UnclusteredHighRPStage	GCNSchedStrategy.h	/^  UnclusteredHighRPStage(GCNSchedStageID StageID, GCNScheduleDAGMILive &DAG)$/;"	f	class:llvm::UnclusteredHighRPStage
UnclusteredHighRPStage	GCNSchedStrategy.h	/^class UnclusteredHighRPStage : public GCNSchedStage {$/;"	c	namespace:llvm
UnifiedFormat	SIDefines.h	/^enum UnifiedFormat : int64_t {$/;"	g	namespace:llvm::RVGPU::UfmtGFX10	typeref:typename:int64_t
UnifiedFormat	SIDefines.h	/^enum UnifiedFormat : int64_t {$/;"	g	namespace:llvm::RVGPU::UfmtGFX11	typeref:typename:int64_t
UnifiedFormatCommon	SIDefines.h	/^enum UnifiedFormatCommon : int64_t {$/;"	g	namespace:llvm::RVGPU::MTBUFFormat	typeref:typename:int64_t
UnmangledFuncInfo	RVGPULibFunc.cpp	/^  constexpr UnmangledFuncInfo(const char *_Name, unsigned _NumArgs)$/;"	f	class:__anona5afe38d0111::UnmangledFuncInfo	file:
UnmangledFuncInfo	RVGPULibFunc.cpp	/^class UnmangledFuncInfo {$/;"	c	namespace:__anona5afe38d0111	file:
UnormIndex	RVGPUInstrInfo.h	/^  uint8_t UnormIndex;$/;"	m	struct:llvm::RVGPU::ImageDimIntrinsicInfo	typeref:typename:uint8_t
UnrollMaxBlockToAnalyze	RVGPUTargetTransformInfo.cpp	/^static cl::opt<unsigned> UnrollMaxBlockToAnalyze($/;"	v	typeref:typename:cl::opt<unsigned>	file:
UnrollRuntimeLocal	RVGPUTargetTransformInfo.cpp	/^static cl::opt<bool> UnrollRuntimeLocal($/;"	v	typeref:typename:cl::opt<bool>	file:
UnrollThresholdIf	RVGPUTargetTransformInfo.cpp	/^static cl::opt<unsigned> UnrollThresholdIf($/;"	v	typeref:typename:cl::opt<unsigned>	file:
UnrollThresholdLocal	RVGPUTargetTransformInfo.cpp	/^static cl::opt<unsigned> UnrollThresholdLocal($/;"	v	typeref:typename:cl::opt<unsigned>	file:
UnrollThresholdPrivate	RVGPUTargetTransformInfo.cpp	/^static cl::opt<unsigned> UnrollThresholdPrivate($/;"	v	typeref:typename:cl::opt<unsigned>	file:
UnsafeFPMath	RVGPULibCalls.cpp	/^  bool UnsafeFPMath = false;$/;"	m	class:llvm::RVGPULibCalls	typeref:typename:bool	file:
Unsched	GCNSchedStrategy.h	/^  std::vector<MachineInstr *> Unsched;$/;"	m	class:llvm::GCNSchedStage	typeref:typename:std::vector<MachineInstr * >
Unsupported	Utils/RVGPUBaseInfo.h	/^  Unsupported,$/;"	e	enum:llvm::RVGPU::IsaInfo::TargetIDSetting
UpdatedReg	SILowerI1Copies.h	/^  Register UpdatedReg;$/;"	m	struct:llvm::Incoming	typeref:typename:Register
UseAA	RVGPUSubtarget.cpp	/^static cl::opt<bool> UseAA("rvgpu-use-aa-in-codegen",$/;"	v	typeref:typename:cl::opt<bool>	file:
UseAddrSpace	RVGPULibFunc.cpp	/^  bool  UseAddrSpace;$/;"	m	class:__anona5afe38d0311::ItaniumMangler	typeref:typename:bool	file:
UseDivergentRegisterIndexing	RVISelLowering.cpp	/^static cl::opt<bool> UseDivergentRegisterIndexing($/;"	v	typeref:typename:cl::opt<bool>	file:
UseDownwardTracker	GCNRegPressure.cpp	/^static cl::opt<bool> UseDownwardTracker($/;"	v	typeref:typename:cl::opt<bool>	file:
UseMI	SIFoldOperands.cpp	/^  MachineInstr *UseMI;$/;"	m	struct:__anon07e514130111::FoldCandidate	typeref:typename:MachineInstr *	file:
UseMul24Intrin	RVGPUCodeGenPrepare.cpp	/^static cl::opt<bool> UseMul24Intrin($/;"	v	namespace:__anond35e324e0111	typeref:typename:cl::opt<bool>	file:
UseNative	RVGPULibCalls.cpp	/^static cl::list<std::string> UseNative("rvgpu-use-native",$/;"	v	typeref:typename:cl::list<std::string>	file:
UseOpNo	SIFoldOperands.cpp	/^  unsigned UseOpNo;$/;"	m	struct:__anon07e514130111::FoldCandidate	typeref:typename:unsigned	file:
UseST64	SILoadStoreOptimizer.cpp	/^    bool UseST64;$/;"	m	struct:__anon677101620111::SILoadStoreOptimizer::CombineInfo	typeref:typename:bool	file:
UsedExt	RVGPUUnifyMetadata.cpp	/^    const char UsedExt[]            = "opencl.used.extensions";$/;"	v	namespace:__anon26dde6960111::kOCLMD	typeref:typename:const char[]
UsedOptCoreFeat	RVGPUUnifyMetadata.cpp	/^    const char UsedOptCoreFeat[]    = "opencl.used.optional.core.features";$/;"	v	namespace:__anon26dde6960111::kOCLMD	typeref:typename:const char[]
UserCount	RVGPULowerModuleLDSPass.cpp	/^      size_t UserCount = 0;$/;"	m	struct:__anoncc7483b30111::RVGPULowerModuleLDS::chooseBestVariableForModuleStrategy::CandidateTy	typeref:typename:size_t	file:
UserSGPR	SIProgramInfo.h	/^    uint32_t UserSGPR = 0;$/;"	m	struct:llvm::SIProgramInfo	typeref:typename:uint32_t
UserSGPRID	GCNSubtarget.h	/^  enum UserSGPRID : unsigned {$/;"	g	class:llvm::GCNUserSGPRUsageInfo	typeref:typename:unsigned
UserSGPRInfo	RVMachineFunctionInfo.h	/^  GCNUserSGPRUsageInfo UserSGPRInfo;$/;"	m	class:llvm::RVMachineFunctionInfo	typeref:typename:GCNUserSGPRUsageInfo
UserSGPRInit16Bug	GCNSubtarget.h	/^  bool UserSGPRInit16Bug = false;$/;"	m	class:llvm::GCNSubtarget	typeref:typename:bool
UsesAGPRs	RVMachineFunctionInfo.h	/^  mutable std::optional<bool> UsesAGPRs;$/;"	m	class:llvm::RVMachineFunctionInfo	typeref:typename:std::optional<bool>
UsesFlatScratch	RVGPUResourceUsageAnalysis.h	/^    bool UsesFlatScratch = false;$/;"	m	struct:llvm::RVGPUResourceUsageAnalysis::SIFunctionResourceInfo	typeref:typename:bool
UsesVCC	RVGPUResourceUsageAnalysis.h	/^    bool UsesVCC = false;$/;"	m	struct:llvm::RVGPUResourceUsageAnalysis::SIFunctionResourceInfo	typeref:typename:bool
V	RVGPUPerfHintAnalysis.cpp	/^    const Value *V = nullptr;$/;"	m	struct:__anon406ad74e0111::RVGPUPerfHint::MemAccessInfo	typeref:typename:const Value *	file:
V2SCopies	SIFixSGPRCopies.cpp	/^  MapVector<unsigned, V2SCopyInfo> V2SCopies;$/;"	m	class:__anond27816180111::SIFixSGPRCopies	typeref:typename:MapVector<unsigned,V2SCopyInfo>	file:
V2SCopyInfo	SIFixSGPRCopies.cpp	/^  V2SCopyInfo() : Copy(nullptr), ID(0){};$/;"	f	class:__anond27816180111::V2SCopyInfo	file:
V2SCopyInfo	SIFixSGPRCopies.cpp	/^  V2SCopyInfo(unsigned Id, MachineInstr *C, unsigned Width)$/;"	f	class:__anond27816180111::V2SCopyInfo	file:
V2SCopyInfo	SIFixSGPRCopies.cpp	/^class V2SCopyInfo {$/;"	c	namespace:__anond27816180111	file:
VALU	RVGPUIGroupLP.cpp	/^  VALU = 1u << 1,$/;"	e	enum:__anon61b122dc0111::SchedGroupMask	file:
VALU	RVGPUInsertDelayAlu.cpp	/^  enum DelayType { VALU, TRANS, SALU, OTHER };$/;"	e	enum:__anonc7296b900111::RVGPUInsertDelayAlu::DelayType	file:
VALU	SIDefines.h	/^  VALU = 1 << 1,$/;"	e	enum:llvm::SIInstrFlags::__anon1f24a7950203
VALUCycles	RVGPUInsertDelayAlu.cpp	/^    uint8_t VALUCycles = 0;$/;"	m	struct:__anonc7296b900111::RVGPUInsertDelayAlu::DelayInfo	typeref:typename:uint8_t	file:
VALUNum	RVGPUInsertDelayAlu.cpp	/^    uint8_t VALUNum = VALU_MAX;$/;"	m	struct:__anonc7296b900111::RVGPUInsertDelayAlu::DelayInfo	typeref:typename:uint8_t	file:
VALU_MAX	RVGPUInsertDelayAlu.cpp	/^    static constexpr unsigned VALU_MAX = 5;$/;"	m	struct:__anonc7296b900111::RVGPUInsertDelayAlu::DelayInfo	typeref:typename:unsigned	file:
VALUs	GCNHazardRecognizer.cpp	/^    int VALUs = 0;$/;"	m	struct:GCNHazardRecognizer::fixVALUPartialForwardingHazard::StateType	typeref:typename:int	file:
VALUs	GCNHazardRecognizer.cpp	/^    int VALUs = 0;$/;"	m	struct:GCNHazardRecognizer::fixVALUTransUseHazard::StateType	typeref:typename:int	file:
VAddr	SILoadStoreOptimizer.cpp	/^  bool VAddr = false;$/;"	m	struct:__anon677101620111::AddressRegs	typeref:typename:bool	file:
VAddrDwords	Utils/RVGPUBaseInfo.h	/^  uint8_t VAddrDwords;$/;"	m	struct:llvm::RVGPU::MIMGInfo	typeref:typename:uint8_t
VAddrEnd	RVGPUInstrInfo.h	/^  uint8_t VAddrEnd;$/;"	m	struct:llvm::RVGPU::ImageDimIntrinsicInfo	typeref:typename:uint8_t
VAddrOperands	Utils/RVGPUBaseInfo.h	/^  uint8_t VAddrOperands;$/;"	m	struct:llvm::RVGPU::MIMGInfo	typeref:typename:uint8_t
VAddrStart	RVGPUInstrInfo.h	/^  uint8_t VAddrStart;$/;"	m	struct:llvm::RVGPU::ImageDimIntrinsicInfo	typeref:typename:uint8_t
VCCNZ	RVInstrInfo.h	/^    VCCNZ = 2,$/;"	e	enum:llvm::RVInstrInfo::BranchPredicate
VCCUsed	SIProgramInfo.h	/^    bool VCCUsed = false;$/;"	m	struct:llvm::SIProgramInfo	typeref:typename:bool
VCCZ	RVInstrInfo.h	/^    VCCZ = -2,$/;"	e	enum:llvm::RVInstrInfo::BranchPredicate
VDataDwords	Utils/RVGPUBaseInfo.h	/^  uint8_t VDataDwords;$/;"	m	struct:llvm::RVGPU::MIMGInfo	typeref:typename:uint8_t
VGPR	RVRegisterInfo.h	/^    Register VGPR;$/;"	m	struct:llvm::RVRegisterInfo::SpilledReg	typeref:typename:Register
VGPR0	SIInsertWaitcnts.cpp	/^  unsigned VGPR0;$/;"	m	struct:__anona6cbb7940211::RegisterEncoding	typeref:typename:unsigned	file:
VGPR32	GCNRegPressure.h	/^    VGPR32,$/;"	e	enum:llvm::GCNRegPressure::RegKind
VGPRBlocks	SIProgramInfo.h	/^    uint32_t VGPRBlocks = 0;$/;"	m	struct:llvm::SIProgramInfo	typeref:typename:uint32_t
VGPRCriticalLimit	GCNSchedStrategy.h	/^  unsigned VGPRCriticalLimit;$/;"	m	class:llvm::GCNSchedStrategy	typeref:typename:unsigned
VGPRExcessLimit	GCNSchedStrategy.h	/^  unsigned VGPRExcessLimit;$/;"	m	class:llvm::GCNSchedStrategy	typeref:typename:unsigned
VGPRForAGPRCopy	RVMachineFunctionInfo.h	/^  Register VGPRForAGPRCopy;$/;"	m	class:llvm::RVMachineFunctionInfo	typeref:typename:Register
VGPRForAGPRCopy	RVMachineFunctionInfo.h	/^  StringValue VGPRForAGPRCopy;$/;"	m	struct:llvm::yaml::RVMachineFunctionInfo	typeref:typename:StringValue
VGPRIndexMode	SIDefines.h	/^namespace VGPRIndexMode {$/;"	n	namespace:llvm::RVGPU
VGPRIndexMode	Utils/RVGPUAsmUtils.cpp	/^namespace VGPRIndexMode {$/;"	n	namespace:llvm::RVGPU	file:
VGPRIndexMode	Utils/RVGPUAsmUtils.h	/^namespace VGPRIndexMode { \/\/ Symbolic names for the gpr_idx(...) syntax.$/;"	n	namespace:llvm::RVGPU
VGPRL	SIInsertWaitcnts.cpp	/^  unsigned VGPRL;$/;"	m	struct:__anona6cbb7940211::RegisterEncoding	typeref:typename:unsigned	file:
VGPRLanes	RVRegisterInfo.cpp	/^    int64_t VGPRLanes;$/;"	m	struct:llvm::SGPRSpillBuilder::PerVGPRData	typeref:typename:int64_t	file:
VGPRLimitBias	GCNSchedStrategy.h	/^  unsigned VGPRLimitBias = 0;$/;"	m	class:llvm::GCNSchedStrategy	typeref:typename:unsigned
VGPRRegAlloc	RVGPUTargetMachine.cpp	/^VGPRRegAlloc("vgpr-regalloc", cl::Hidden, cl::init(&useDefaultRegisterAllocator),$/;"	v	namespace:__anon565c6f860111	typeref:typename:cl::opt<VGPRRegisterRegAlloc::FunctionPassCtor,false,RegisterPassParser<VGPRRegisterRegAlloc>>	file:
VGPRRegisterRegAlloc	RVGPUTargetMachine.cpp	/^  VGPRRegisterRegAlloc(const char *N, const char *D, FunctionPassCtor C)$/;"	f	class:__anon565c6f860111::VGPRRegisterRegAlloc	file:
VGPRRegisterRegAlloc	RVGPUTargetMachine.cpp	/^class VGPRRegisterRegAlloc : public RegisterRegAllocBase<VGPRRegisterRegAlloc> {$/;"	c	namespace:__anon565c6f860111	file:
VGPRSpill	SIDefines.h	/^  VGPRSpill = 1 << 26,$/;"	e	enum:llvm::SIInstrFlags::__anon1f24a7950203
VGPRSpill	SIProgramInfo.h	/^    unsigned VGPRSpill = 0;$/;"	m	struct:llvm::SIProgramInfo	typeref:typename:unsigned
VGPRSpillToAGPR	RVMachineFunctionInfo.h	/^  struct VGPRSpillToAGPR {$/;"	s	class:llvm::RVMachineFunctionInfo
VGPRToAGPRSpills	RVMachineFunctionInfo.h	/^  DenseMap<int, VGPRSpillToAGPR> VGPRToAGPRSpills;$/;"	m	class:llvm::RVMachineFunctionInfo	typeref:typename:DenseMap<int,VGPRSpillToAGPR>
VGPRUsage	SIMachineScheduler.h	/^    unsigned VGPRUsage;$/;"	m	struct:llvm::SIScheduleBlock::SISchedCandidate	typeref:typename:unsigned
VGPRUsageDiff	SIMachineScheduler.h	/^    int VGPRUsageDiff;$/;"	m	struct:llvm::SIScheduleBlockScheduler::SIBlockSchedCandidate	typeref:typename:int
VGPR_MAX	SIDefines.h	/^  VGPR_MAX = 511,$/;"	e	enum:llvm::RVGPU::EncValues::__anon1f24a7950603
VGPR_MIN	SIDefines.h	/^  VGPR_MIN = 256,$/;"	e	enum:llvm::RVGPU::EncValues::__anon1f24a7950603
VGPR_TUPLE	GCNRegPressure.h	/^    VGPR_TUPLE,$/;"	e	enum:llvm::GCNRegPressure::RegKind
VI	SIDefines.h	/^  VI = 1,$/;"	e	enum:llvm::SIEncodingFamily::__anon1f24a7950103
VIMAGE	SIDefines.h	/^  VIMAGE = 1 << 21,$/;"	e	enum:llvm::SIInstrFlags::__anon1f24a7950203
VINTERP	SIDefines.h	/^  VINTERP = 1 << 29,$/;"	e	enum:llvm::SIInstrFlags::__anon1f24a7950203
VINTRP	SIDefines.h	/^  VINTRP = 1 << 13,$/;"	e	enum:llvm::SIInstrFlags::__anon1f24a7950203
VMEM	RVGPUIGroupLP.cpp	/^  VMEM = 1u << 4,$/;"	e	enum:__anon61b122dc0111::SchedGroupMask	file:
VMEMSize	RVGPUIGroupLP.cpp	/^    VMEMSize(const RVInstrInfo *TII, unsigned SGID, bool NeedsCache = false)$/;"	f	class:__anon61b122dc0111::MFMASmallGemmSingleWaveOpt::VMEMSize	file:
VMEMSize	RVGPUIGroupLP.cpp	/^  class VMEMSize final : public InstructionRule {$/;"	c	class:__anon61b122dc0111::MFMASmallGemmSingleWaveOpt	file:
VMEM_ACCESS	SIInsertWaitcnts.cpp	/^  VMEM_ACCESS,          \/\/ vector-memory read & write$/;"	e	enum:__anona6cbb7940211::WaitEventType	file:
VMEM_BVH	SIInsertWaitcnts.cpp	/^  VMEM_BVH$/;"	e	enum:__anona6cbb7940211::VmemType	file:
VMEM_NOSAMPLER	SIInsertWaitcnts.cpp	/^  VMEM_NOSAMPLER,$/;"	e	enum:__anona6cbb7940211::VmemType	file:
VMEM_READ	RVGPUIGroupLP.cpp	/^  VMEM_READ = 1u << 5,$/;"	e	enum:__anon61b122dc0111::SchedGroupMask	file:
VMEM_READ_ACCESS	SIInsertWaitcnts.cpp	/^  VMEM_READ_ACCESS,     \/\/ vector-memory read$/;"	e	enum:__anona6cbb7940211::WaitEventType	file:
VMEM_SAMPLER	SIInsertWaitcnts.cpp	/^  VMEM_SAMPLER,$/;"	e	enum:__anona6cbb7940211::VmemType	file:
VMEM_WRITE	RVGPUIGroupLP.cpp	/^  VMEM_WRITE = 1u << 6,$/;"	e	enum:__anon61b122dc0111::SchedGroupMask	file:
VMEM_WRITE_ACCESS	SIInsertWaitcnts.cpp	/^  VMEM_WRITE_ACCESS,    \/\/ vector-memory write that is not scratch$/;"	e	enum:__anona6cbb7940211::WaitEventType	file:
VMW_GPR_LOCK	SIInsertWaitcnts.cpp	/^  VMW_GPR_LOCK,         \/\/ vector-memory write holding on its data src$/;"	e	enum:__anona6cbb7940211::WaitEventType	file:
VM_CNT	SIDefines.h	/^  VM_CNT = UINT64_C(1) << 32,$/;"	e	enum:llvm::SIInstrFlags::__anon1f24a7950203
VM_CNT	SIInsertWaitcnts.cpp	/^enum InstCounterType { VM_CNT = 0, LGKM_CNT, EXP_CNT, VS_CNT, NUM_INST_CNTS };$/;"	e	enum:__anona6cbb7940111::InstCounterType	file:
VOLATILE	RVGPULibFunc.h	/^    VOLATILE   = 0x20$/;"	e	enum:llvm::RVGPULibFuncBase::EPtrKind
VOLCANIC_ISLANDS	RVGPUSubtarget.h	/^    VOLCANIC_ISLANDS = 7,$/;"	e	enum:llvm::RVGPUSubtarget::Generation
VOP1	SIDefines.h	/^  VOP1 = 1 << 7,$/;"	e	enum:llvm::SIInstrFlags::__anon1f24a7950203
VOP2	SIDefines.h	/^  VOP2 = 1 << 8,$/;"	e	enum:llvm::SIInstrFlags::__anon1f24a7950203
VOP3	SIDefines.h	/^    VOP3 = 1,$/;"	e	enum:llvm::RVGPUAsmVariants::__anon1f24a7950503
VOP3	SIDefines.h	/^  VOP3 = 1 << 10,$/;"	e	enum:llvm::SIInstrFlags::__anon1f24a7950203
VOP3P	SIDefines.h	/^  VOP3P = 1 << 12,$/;"	e	enum:llvm::SIInstrFlags::__anon1f24a7950203
VOP3PEncoding	SIDefines.h	/^namespace VOP3PEncoding {$/;"	n	namespace:llvm::RVGPU
VOP3_DPP	SIDefines.h	/^    VOP3_DPP = 5$/;"	e	enum:llvm::RVGPUAsmVariants::__anon1f24a7950503
VOP3_OPSEL	SIDefines.h	/^  VOP3_OPSEL = UINT64_C(1) << 42,$/;"	e	enum:llvm::SIInstrFlags::__anon1f24a7950203
VOPAsmPrefer32Bit	SIDefines.h	/^  VOPAsmPrefer32Bit = UINT64_C(1) << 41,$/;"	e	enum:llvm::SIInstrFlags::__anon1f24a7950203
VOPC	SIDefines.h	/^  VOPC = 1 << 9,$/;"	e	enum:llvm::SIInstrFlags::__anon1f24a7950203
VOPC64DPPInfo	Utils/RVGPUBaseInfo.cpp	/^struct VOPC64DPPInfo {$/;"	s	namespace:llvm::RVGPU	file:
VOPC_DST_SGPR_MASK	SIDefines.h	/^  VOPC_DST_SGPR_MASK = 0x7F,$/;"	e	enum:llvm::RVGPU::SDWA::SDWA9EncValues
VOPC_DST_VCC_MASK	SIDefines.h	/^  VOPC_DST_VCC_MASK = 0x80,$/;"	e	enum:llvm::RVGPU::SDWA::SDWA9EncValues
VOPD	Utils/RVGPUBaseInfo.cpp	/^namespace VOPD {$/;"	n	namespace:llvm::RVGPU	file:
VOPD	Utils/RVGPUBaseInfo.h	/^namespace VOPD {$/;"	n	namespace:llvm::RVGPU
VOPDCombineInfo	GCNCreateVOPD.cpp	/^      VOPDCombineInfo() {}$/;"	f	class:__anon7e59fb9b0111::GCNCreateVOPD::VOPDCombineInfo	file:
VOPDCombineInfo	GCNCreateVOPD.cpp	/^      VOPDCombineInfo(MachineInstr *First, MachineInstr *Second)$/;"	f	class:__anon7e59fb9b0111::GCNCreateVOPD::VOPDCombineInfo	file:
VOPDCombineInfo	GCNCreateVOPD.cpp	/^    class VOPDCombineInfo {$/;"	c	class:__anon7e59fb9b0111::GCNCreateVOPD	file:
VOPDComponentInfo	Utils/RVGPUBaseInfo.cpp	/^struct VOPDComponentInfo {$/;"	s	namespace:llvm::RVGPU	file:
VOPDInfo	Utils/RVGPUBaseInfo.cpp	/^struct VOPDInfo {$/;"	s	namespace:llvm::RVGPU	file:
VOPDOp	Utils/RVGPUBaseInfo.cpp	/^  uint16_t VOPDOp;$/;"	m	struct:llvm::RVGPU::VOPDComponentInfo	typeref:typename:uint16_t	file:
VOPDPairingMutation	GCNVOPDUtils.cpp	/^  VOPDPairingMutation($/;"	f	struct:__anonc08c76180411::VOPDPairingMutation	file:
VOPDPairingMutation	GCNVOPDUtils.cpp	/^struct VOPDPairingMutation : ScheduleDAGMutation {$/;"	s	namespace:__anonc08c76180411	file:
VOPD_VGPR_BANK_MASKS	Utils/RVGPUBaseInfo.h	/^constexpr unsigned VOPD_VGPR_BANK_MASKS[] = {1, 3, 3, 1};$/;"	v	namespace:llvm::RVGPU::VOPD	typeref:typename:unsigned[]
VOPInfo	Utils/RVGPUBaseInfo.cpp	/^struct VOPInfo {$/;"	s	namespace:llvm::RVGPU	file:
VOPModifiers	Disassembler/RVGPUDisassembler.cpp	/^struct VOPModifiers {$/;"	s	file:
VOPTrue16Info	Utils/RVGPUBaseInfo.cpp	/^struct VOPTrue16Info {$/;"	s	namespace:llvm::RVGPU	file:
VRM	GCNNSAReassign.cpp	/^  VirtRegMap *VRM;$/;"	m	class:__anon7e838c8c0111::GCNNSAReassign	typeref:typename:VirtRegMap *	file:
VRM	SILowerWWMCopies.cpp	/^  VirtRegMap *VRM;$/;"	m	class:__anon4731d9190111::SILowerWWMCopies	typeref:typename:VirtRegMap *	file:
VRM	SIPreAllocateWWMRegs.cpp	/^  VirtRegMap *VRM;$/;"	m	class:__anon37f997ca0111::SIPreAllocateWWMRegs	typeref:typename:VirtRegMap *	file:
VRegFlags	RVMachineFunctionInfo.h	/^  IndexedMap<uint8_t, VirtReg2IndexFunctor> VRegFlags;$/;"	m	class:llvm::RVMachineFunctionInfo	typeref:typename:IndexedMap<uint8_t,VirtReg2IndexFunctor>
VSAMPLE	SIDefines.h	/^  VSAMPLE = 1 << 22,$/;"	e	enum:llvm::SIInstrFlags::__anon1f24a7950203
VSKIP_MASK	SIDefines.h	/^  VSKIP_MASK = 1 << 28,$/;"	e	enum:llvm::RVGPU::Hwreg::ModeRegisterMasks
VS_CNT	SIInsertWaitcnts.cpp	/^enum InstCounterType { VM_CNT = 0, LGKM_CNT, EXP_CNT, VS_CNT, NUM_INST_CNTS };$/;"	e	enum:__anona6cbb7940111::InstCounterType	file:
Val	AsmParser/RVGPUAsmParser.cpp	/^    int64_t Val;$/;"	m	struct:__anon672fa8550111::RVGPUOperand::ImmOp	typeref:typename:int64_t	file:
Val0	RVGPURegBankCombiner.cpp	/^    Register Val0, Val1, Val2;$/;"	m	struct:__anon00ae19330111::RVGPURegBankCombinerImpl::Med3MatchInfo	typeref:typename:Register	file:
Val1	RVGPURegBankCombiner.cpp	/^    Register Val0, Val1, Val2;$/;"	m	struct:__anon00ae19330111::RVGPURegBankCombinerImpl::Med3MatchInfo	typeref:typename:Register	file:
Val2	RVGPURegBankCombiner.cpp	/^    Register Val0, Val1, Val2;$/;"	m	struct:__anon00ae19330111::RVGPURegBankCombinerImpl::Med3MatchInfo	typeref:typename:Register	file:
ValDivergent	RVGPUAtomicOptimizer.cpp	/^  bool ValDivergent;$/;"	m	struct:__anon7bca098a0111::ReplacementInfo	typeref:typename:bool	file:
ValIdx	RVGPUAtomicOptimizer.cpp	/^  unsigned ValIdx;$/;"	m	struct:__anon7bca098a0111::ReplacementInfo	typeref:typename:unsigned	file:
Value	GCNRegPressure.h	/^  unsigned Value[TOTAL_KINDS];$/;"	m	struct:llvm::GCNRegPressure	typeref:typename:unsigned[]
VariableFunctionMap	RVGPULowerModuleLDSPass.cpp	/^  using VariableFunctionMap = DenseMap<GlobalVariable *, DenseSet<Function *>>;$/;"	t	class:__anoncc7483b30111::RVGPULowerModuleLDS	typeref:typename:DenseMap<GlobalVariable *,DenseSet<Function * >>	file:
Variant	SIMachineScheduler.h	/^  SISchedulerBlockSchedulerVariant Variant;$/;"	m	class:llvm::SIScheduleBlockScheduler	typeref:typename:SISchedulerBlockSchedulerVariant
VectorSize	RVGPULibFunc.h	/^    unsigned char VectorSize = 1;$/;"	m	struct:llvm::RVGPULibFuncBase::Param	typeref:typename:unsigned char
VectorSlice	RVGPUCodeGenPrepare.cpp	/^  VectorSlice(Type *Ty, unsigned Idx, unsigned NumElts)$/;"	f	class:VectorSlice	file:
VectorSlice	RVGPUCodeGenPrepare.cpp	/^class VectorSlice {$/;"	c	file:
VerifyHSAMetadata	RVGPUHSAMetadataStreamer.cpp	/^static cl::opt<bool> VerifyHSAMetadata($/;"	v	namespace:llvm	typeref:typename:cl::opt<bool>	file:
Version	Utils/RVGPUPALMetadata.h	/^  msgpack::DocNode Version;$/;"	m	class:llvm::RVGPUPALMetadata	typeref:typename:msgpack::DocNode
VersionChecked	Utils/RVGPUPALMetadata.h	/^  bool VersionChecked = false;$/;"	m	class:llvm::RVGPUPALMetadata	typeref:typename:bool
VgprIndexUnusedMin	AsmParser/RVGPUAsmParser.cpp	/^  int VgprIndexUnusedMin = -1;$/;"	m	class:__anon672fa8550111::KernelScopeInfo	typeref:typename:int	file:
VgprParts	RVGPUInstructionSelector.h	/^    SmallVector<unsigned, 2> VgprParts;$/;"	m	struct:llvm::RVGPUInstructionSelector::GEPInfo	typeref:typename:SmallVector<unsigned,2>
VgprScores	SIInsertWaitcnts.cpp	/^  unsigned VgprScores[NUM_INST_CNTS][NUM_ALL_VGPRS] = {{0}};$/;"	m	class:__anona6cbb7940211::WaitcntBrackets	typeref:typename:unsigned[][]	file:
VgprUB	SIInsertWaitcnts.cpp	/^  int VgprUB = -1;$/;"	m	class:__anona6cbb7940211::WaitcntBrackets	typeref:typename:int	file:
VgprVmemTypes	SIInsertWaitcnts.cpp	/^  unsigned char VgprVmemTypes[NUM_ALL_VGPRS] = {0};$/;"	m	class:__anona6cbb7940211::WaitcntBrackets	typeref:typename:unsigned char[]	file:
VirtRegFlag	SIDefines.h	/^namespace VirtRegFlag {$/;"	n	namespace:llvm::RVGPU
VisitKey	SIWholeQuadMode.cpp	/^  using VisitKey = std::pair<const VNInfo *, LaneBitmask>;$/;"	t	function:SIWholeQuadMode::markDefs	typeref:typename:std::pair<const VNInfo *,LaneBitmask>	file:
Visited	SILowerI1Copies.cpp	/^  DenseMap<MachineBasicBlock *, unsigned> Visited;$/;"	m	class:__anone16a92980111::LoopFinder	typeref:typename:DenseMap<MachineBasicBlock *,unsigned>	file:
VisitedPostDom	SILowerI1Copies.cpp	/^  MachineBasicBlock *VisitedPostDom = nullptr;$/;"	m	class:__anone16a92980111::LoopFinder	typeref:typename:MachineBasicBlock *	file:
VmCnt	MCA/RVGPUCustomBehaviour.h	/^  bool VmCnt = false;$/;"	m	struct:llvm::mca::WaitCntInfo	typeref:typename:bool
VmCnt	Utils/RVGPUBaseInfo.h	/^  unsigned VmCnt = ~0u;$/;"	m	struct:llvm::RVGPU::Waitcnt	typeref:typename:unsigned
VmcntMax	SIInsertWaitcnts.cpp	/^  unsigned VmcntMax;$/;"	m	struct:__anona6cbb7940211::HardwareLimits	typeref:typename:unsigned	file:
VmemType	SIInsertWaitcnts.cpp	/^enum VmemType {$/;"	g	namespace:__anona6cbb7940211	file:
Void	SIAnnotateControlFlow.cpp	/^  Type *Void;$/;"	m	class:__anond71df4850111::SIAnnotateControlFlow	typeref:typename:Type *	file:
Vreg1LoweringHelper	SILowerI1Copies.cpp	/^Vreg1LoweringHelper::Vreg1LoweringHelper(MachineFunction *MF,$/;"	f	class:__anone16a92980111::Vreg1LoweringHelper
Vreg1LoweringHelper	SILowerI1Copies.cpp	/^class Vreg1LoweringHelper : public PhiLoweringHelper {$/;"	c	namespace:__anone16a92980111	file:
VregCurrentUsage	SIMachineScheduler.h	/^  unsigned VregCurrentUsage;$/;"	m	class:llvm::SIScheduleBlockScheduler	typeref:typename:unsigned
VsCnt	MCA/RVGPUCustomBehaviour.h	/^  bool VsCnt = false;$/;"	m	struct:llvm::mca::WaitCntInfo	typeref:typename:bool
VsCnt	Utils/RVGPUBaseInfo.h	/^  unsigned VsCnt = ~0u;$/;"	m	struct:llvm::RVGPU::Waitcnt	typeref:typename:unsigned
VscntMax	SIInsertWaitcnts.cpp	/^  unsigned VscntMax;$/;"	m	struct:__anona6cbb7940211::HardwareLimits	typeref:typename:unsigned	file:
WAVEFRONT	SIMemoryLegalizer.cpp	/^  WAVEFRONT,$/;"	e	enum:__anon46517b8a0111::SIAtomicScope	file:
WAVE_ADDRESS	RVGPUISelLowering.h	/^  WAVE_ADDRESS,$/;"	e	enum:llvm::RVGPUISD::NodeType
WAVE_ROL1	SIDefines.h	/^  WAVE_ROL1         = 0x134,$/;"	e	enum:llvm::RVGPU::DPP::DppCtrl
WAVE_ROR1	SIDefines.h	/^  WAVE_ROR1         = 0x13C,$/;"	e	enum:llvm::RVGPU::DPP::DppCtrl
WAVE_SHL1	SIDefines.h	/^  WAVE_SHL1         = 0x130,$/;"	e	enum:llvm::RVGPU::DPP::DppCtrl
WAVE_SHR1	SIDefines.h	/^  WAVE_SHR1         = 0x138,$/;"	e	enum:llvm::RVGPU::DPP::DppCtrl
WIDTH_DEFAULT_	SIDefines.h	/^  WIDTH_DEFAULT_ = WIDTH_M1_DEFAULT_ + 1,$/;"	e	enum:llvm::RVGPU::Hwreg::Width
WIDTH_M1_DEFAULT_	SIDefines.h	/^  WIDTH_M1_DEFAULT_ = 31,$/;"	e	enum:llvm::RVGPU::Hwreg::WidthMinusOne
WIDTH_M1_MASK_	SIDefines.h	/^  WIDTH_M1_MASK_ = (((1 << WIDTH_M1_WIDTH_) - 1) << WIDTH_M1_SHIFT_),$/;"	e	enum:llvm::RVGPU::Hwreg::WidthMinusOne
WIDTH_M1_SHIFT_	SIDefines.h	/^  WIDTH_M1_SHIFT_ = 11,$/;"	e	enum:llvm::RVGPU::Hwreg::WidthMinusOne
WIDTH_M1_WIDTH_	SIDefines.h	/^  WIDTH_M1_WIDTH_ = 5,$/;"	e	enum:llvm::RVGPU::Hwreg::WidthMinusOne
WMMAOpcodeMappingInfo	Utils/RVGPUBaseInfo.h	/^struct WMMAOpcodeMappingInfo {$/;"	s	namespace:llvm::RVGPU
WORD_0	SIDefines.h	/^  WORD_0 = 4,$/;"	e	enum:llvm::RVGPU::SDWA::SdwaSel
WORD_1	SIDefines.h	/^  WORD_1 = 5,$/;"	e	enum:llvm::RVGPU::SDWA::SdwaSel
WORKGROUP	SIDefines.h	/^enum Type { TRAP = -2, WORKGROUP = -1 };$/;"	e	enum:llvm::RVGPU::Barrier::Type
WORKGROUP	SIMemoryLegalizer.cpp	/^  WORKGROUP,$/;"	e	enum:__anon46517b8a0111::SIAtomicScope	file:
WORKGROUP_ID_X	RVGPUArgumentUsageInfo.h	/^    WORKGROUP_ID_X      = 10,$/;"	e	enum:llvm::RVGPUFunctionArgInfo::PreloadedValue
WORKGROUP_ID_Y	RVGPUArgumentUsageInfo.h	/^    WORKGROUP_ID_Y      = 11,$/;"	e	enum:llvm::RVGPUFunctionArgInfo::PreloadedValue
WORKGROUP_ID_Z	RVGPUArgumentUsageInfo.h	/^    WORKGROUP_ID_Z      = 12,$/;"	e	enum:llvm::RVGPUFunctionArgInfo::PreloadedValue
WORKGROUP_SIZE_X	RVGPULowerKernelAttributes.cpp	/^  WORKGROUP_SIZE_X = 4,$/;"	e	enum:__anon7b93ed1b0111::DispatchPackedOffsets	file:
WORKGROUP_SIZE_Y	RVGPULowerKernelAttributes.cpp	/^  WORKGROUP_SIZE_Y = 6,$/;"	e	enum:__anon7b93ed1b0111::DispatchPackedOffsets	file:
WORKGROUP_SIZE_Z	RVGPULowerKernelAttributes.cpp	/^  WORKGROUP_SIZE_Z = 8,$/;"	e	enum:__anon7b93ed1b0111::DispatchPackedOffsets	file:
WORKITEM_ID_X	RVGPUArgumentUsageInfo.h	/^    WORKITEM_ID_X       = 17,$/;"	e	enum:llvm::RVGPUFunctionArgInfo::PreloadedValue
WORKITEM_ID_Y	RVGPUArgumentUsageInfo.h	/^    WORKITEM_ID_Y       = 18,$/;"	e	enum:llvm::RVGPUFunctionArgInfo::PreloadedValue
WORKITEM_ID_Z	RVGPUArgumentUsageInfo.h	/^    WORKITEM_ID_Z       = 19,$/;"	e	enum:llvm::RVGPUFunctionArgInfo::PreloadedValue
WQM	SIDefines.h	/^  WQM = UINT64_C(1) << 35,$/;"	e	enum:llvm::SIInstrFlags::__anon1f24a7950203
WQMOpc	SIWholeQuadMode.cpp	/^  unsigned WQMOpc;$/;"	m	class:__anon41aff2810111::SIWholeQuadMode	typeref:typename:unsigned	file:
WWMReservedRegs	RVMachineFunctionInfo.h	/^  ReservedRegSet WWMReservedRegs;$/;"	m	class:llvm::RVMachineFunctionInfo	typeref:typename:ReservedRegSet
WWMReservedRegs	RVMachineFunctionInfo.h	/^  SmallVector<StringValue> WWMReservedRegs;$/;"	m	struct:llvm::yaml::RVMachineFunctionInfo	typeref:typename:SmallVector<StringValue>
WWMSpills	RVMachineFunctionInfo.h	/^  WWMSpillsMap WWMSpills;$/;"	m	class:llvm::RVMachineFunctionInfo	typeref:typename:WWMSpillsMap
WWMSpillsMap	RVMachineFunctionInfo.h	/^  using WWMSpillsMap = MapVector<Register, int>;$/;"	t	class:llvm::RVMachineFunctionInfo	typeref:typename:MapVector<Register,int>
WWM_REG	SIDefines.h	/^  WWM_REG = 1 << 0,$/;"	e	enum:llvm::RVGPU::VirtRegFlag::Register_Flag
WaitCntInfo	MCA/RVGPUCustomBehaviour.h	/^struct WaitCntInfo {$/;"	s	namespace:llvm::mca
WaitEventMaskForInst	SIInsertWaitcnts.cpp	/^static const unsigned WaitEventMaskForInst[NUM_INST_CNTS] = {$/;"	v	namespace:__anona6cbb7940211	typeref:typename:const unsigned[]	file:
WaitEventType	SIInsertWaitcnts.cpp	/^enum WaitEventType {$/;"	g	namespace:__anona6cbb7940211	file:
Waitcnt	Utils/RVGPUBaseInfo.h	/^  Waitcnt(unsigned VmCnt, unsigned ExpCnt, unsigned LgkmCnt, unsigned VsCnt)$/;"	f	struct:llvm::RVGPU::Waitcnt
Waitcnt	Utils/RVGPUBaseInfo.h	/^struct Waitcnt {$/;"	s	namespace:llvm::RVGPU
WaitcntBrackets	SIInsertWaitcnts.cpp	/^  WaitcntBrackets(const GCNSubtarget *SubTarget, HardwareLimits Limits,$/;"	f	class:__anona6cbb7940211::WaitcntBrackets	file:
WaitcntBrackets	SIInsertWaitcnts.cpp	/^class WaitcntBrackets {$/;"	c	namespace:__anona6cbb7940211	file:
Wave32	MCTargetDesc/RVGPUMCTargetDesc.h	/^enum RVGPUDwarfFlavour : unsigned { Wave64 = 0, Wave32 = 1 };$/;"	e	enum:llvm::RVGPUDwarfFlavour
Wave64	MCTargetDesc/RVGPUMCTargetDesc.h	/^enum RVGPUDwarfFlavour : unsigned { Wave64 = 0, Wave32 = 1 };$/;"	e	enum:llvm::RVGPUDwarfFlavour
WaveLimiter	RVGPUMachineFunction.h	/^  bool WaveLimiter = false;$/;"	m	class:llvm::RVGPUMachineFunction	typeref:typename:bool
WaveLimiter	RVMachineFunctionInfo.h	/^  bool WaveLimiter = false;$/;"	m	struct:llvm::yaml::RVMachineFunctionInfo	typeref:typename:bool
WavefrontOneAddressSpaceSSID	RVGPUMachineModuleInfo.h	/^  SyncScope::ID WavefrontOneAddressSpaceSSID;$/;"	m	class:llvm::RVGPUMachineModuleInfo	typeref:typename:SyncScope::ID
WavefrontSSID	RVGPUMachineModuleInfo.h	/^  SyncScope::ID WavefrontSSID;$/;"	m	class:llvm::RVGPUMachineModuleInfo	typeref:typename:SyncScope::ID
WavefrontSizeLog2	RVGPUSubtarget.h	/^  char WavefrontSizeLog2 = 0;$/;"	m	class:llvm::RVGPUSubtarget	typeref:typename:char
WavesPerEU	RVMachineFunctionInfo.h	/^  std::pair<unsigned, unsigned> WavesPerEU = {0, 0};$/;"	m	class:llvm::RVMachineFunctionInfo	typeref:typename:std::pair<unsigned,unsigned>
WgpMode	SIProgramInfo.h	/^    uint32_t WgpMode = 0; \/\/ GFX10+$/;"	m	struct:llvm::SIProgramInfo	typeref:typename:uint32_t
Widen16BitOps	RVGPUCodeGenPrepare.cpp	/^static cl::opt<bool> Widen16BitOps($/;"	v	namespace:__anond35e324e0111	typeref:typename:cl::opt<bool>	file:
WidenLoads	RVGPUCodeGenPrepare.cpp	/^static cl::opt<bool> WidenLoads($/;"	v	namespace:__anond35e324e0111	typeref:typename:cl::opt<bool>	file:
WidenLoads	RVGPULateCodeGenPrepare.cpp	/^    WidenLoads("rvgpu-late-codegenprepare-widen-constant-loads",$/;"	v	typeref:typename:cl::opt<bool>	file:
WidenOrSplitVectorLoad	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::WidenOrSplitVectorLoad(SDValue Op,$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
Width	SIDefines.h	/^enum Width : unsigned {$/;"	g	namespace:llvm::RVGPU::Hwreg	typeref:typename:unsigned
Width	SILoadStoreOptimizer.cpp	/^    unsigned Width;$/;"	m	struct:__anon677101620111::SILoadStoreOptimizer::CombineInfo	typeref:typename:unsigned	file:
Width	Utils/RVGPUAsmUtils.h	/^  unsigned Width;$/;"	m	struct:llvm::RVGPU::CustomOperandVal	typeref:typename:unsigned
WidthMinusOne	SIDefines.h	/^enum WidthMinusOne : unsigned { \/\/ WidthMinusOne, (5) [15:11]$/;"	g	namespace:llvm::RVGPU::Hwreg	typeref:typename:unsigned
WorkGroupIDX	RVGPUArgumentUsageInfo.h	/^  ArgDescriptor WorkGroupIDX;$/;"	m	struct:llvm::RVGPUFunctionArgInfo	typeref:typename:ArgDescriptor
WorkGroupIDX	RVMachineFunctionInfo.h	/^  bool WorkGroupIDX : 1; \/\/ Always initialized.$/;"	m	class:llvm::RVMachineFunctionInfo	typeref:typename:bool:1
WorkGroupIDX	RVMachineFunctionInfo.h	/^  std::optional<SIArgument> WorkGroupIDX;$/;"	m	struct:llvm::yaml::SIArgumentInfo	typeref:typename:std::optional<SIArgument>
WorkGroupIDY	RVGPUArgumentUsageInfo.h	/^  ArgDescriptor WorkGroupIDY;$/;"	m	struct:llvm::RVGPUFunctionArgInfo	typeref:typename:ArgDescriptor
WorkGroupIDY	RVMachineFunctionInfo.h	/^  bool WorkGroupIDY : 1;$/;"	m	class:llvm::RVMachineFunctionInfo	typeref:typename:bool:1
WorkGroupIDY	RVMachineFunctionInfo.h	/^  std::optional<SIArgument> WorkGroupIDY;$/;"	m	struct:llvm::yaml::SIArgumentInfo	typeref:typename:std::optional<SIArgument>
WorkGroupIDZ	RVGPUArgumentUsageInfo.h	/^  ArgDescriptor WorkGroupIDZ;$/;"	m	struct:llvm::RVGPUFunctionArgInfo	typeref:typename:ArgDescriptor
WorkGroupIDZ	RVMachineFunctionInfo.h	/^  bool WorkGroupIDZ : 1;$/;"	m	class:llvm::RVMachineFunctionInfo	typeref:typename:bool:1
WorkGroupIDZ	RVMachineFunctionInfo.h	/^  std::optional<SIArgument> WorkGroupIDZ;$/;"	m	struct:llvm::yaml::SIArgumentInfo	typeref:typename:std::optional<SIArgument>
WorkGroupInfo	RVGPUArgumentUsageInfo.h	/^  ArgDescriptor WorkGroupInfo;$/;"	m	struct:llvm::RVGPUFunctionArgInfo	typeref:typename:ArgDescriptor
WorkGroupInfo	RVMachineFunctionInfo.h	/^  bool WorkGroupInfo : 1;$/;"	m	class:llvm::RVMachineFunctionInfo	typeref:typename:bool:1
WorkGroupInfo	RVMachineFunctionInfo.h	/^  std::optional<SIArgument> WorkGroupInfo;$/;"	m	struct:llvm::yaml::SIArgumentInfo	typeref:typename:std::optional<SIArgument>
WorkItem	SIWholeQuadMode.cpp	/^  WorkItem(MachineBasicBlock *MBB) : MBB(MBB) {}$/;"	f	struct:__anon41aff2810111::WorkItem	file:
WorkItem	SIWholeQuadMode.cpp	/^  WorkItem(MachineInstr *MI) : MI(MI) {}$/;"	f	struct:__anon41aff2810111::WorkItem	file:
WorkItem	SIWholeQuadMode.cpp	/^struct WorkItem {$/;"	s	namespace:__anon41aff2810111	file:
WorkItemIDX	RVGPUArgumentUsageInfo.h	/^  ArgDescriptor WorkItemIDX;$/;"	m	struct:llvm::RVGPUFunctionArgInfo	typeref:typename:ArgDescriptor
WorkItemIDX	RVMachineFunctionInfo.h	/^  bool WorkItemIDX : 1; \/\/ Always initialized.$/;"	m	class:llvm::RVMachineFunctionInfo	typeref:typename:bool:1
WorkItemIDX	RVMachineFunctionInfo.h	/^  std::optional<SIArgument> WorkItemIDX;$/;"	m	struct:llvm::yaml::SIArgumentInfo	typeref:typename:std::optional<SIArgument>
WorkItemIDY	RVGPUArgumentUsageInfo.h	/^  ArgDescriptor WorkItemIDY;$/;"	m	struct:llvm::RVGPUFunctionArgInfo	typeref:typename:ArgDescriptor
WorkItemIDY	RVMachineFunctionInfo.h	/^  bool WorkItemIDY : 1;$/;"	m	class:llvm::RVMachineFunctionInfo	typeref:typename:bool:1
WorkItemIDY	RVMachineFunctionInfo.h	/^  std::optional<SIArgument> WorkItemIDY;$/;"	m	struct:llvm::yaml::SIArgumentInfo	typeref:typename:std::optional<SIArgument>
WorkItemIDZ	RVGPUArgumentUsageInfo.h	/^  ArgDescriptor WorkItemIDZ;$/;"	m	struct:llvm::RVGPUFunctionArgInfo	typeref:typename:ArgDescriptor
WorkItemIDZ	RVMachineFunctionInfo.h	/^  bool WorkItemIDZ : 1;$/;"	m	class:llvm::RVMachineFunctionInfo	typeref:typename:bool:1
WorkItemIDZ	RVMachineFunctionInfo.h	/^  std::optional<SIArgument> WorkItemIDZ;$/;"	m	struct:llvm::yaml::SIArgumentInfo	typeref:typename:std::optional<SIArgument>
WorkgroupOneAddressSpaceSSID	RVGPUMachineModuleInfo.h	/^  SyncScope::ID WorkgroupOneAddressSpaceSSID;$/;"	m	class:llvm::RVGPUMachineModuleInfo	typeref:typename:SyncScope::ID
WorkgroupSSID	RVGPUMachineModuleInfo.h	/^  SyncScope::ID WorkgroupSSID;$/;"	m	class:llvm::RVGPUMachineModuleInfo	typeref:typename:SyncScope::ID
X	Utils/RVGPUBaseInfo.h	/^  bool X;$/;"	m	struct:llvm::RVGPU::CanBeVOPD	typeref:typename:bool
X	Utils/RVGPUBaseInfo.h	/^enum ComponentIndex : unsigned { X = 0, Y = 1 };$/;"	e	enum:llvm::RVGPU::VOPD::ComponentIndex
XnackSetting	Utils/RVGPUBaseInfo.h	/^  TargetIDSetting XnackSetting;$/;"	m	class:llvm::RVGPU::IsaInfo::RVGPUTargetID	typeref:typename:TargetIDSetting
XorOp	SILowerI1Copies.h	/^  unsigned XorOp;$/;"	m	class:llvm::PhiLoweringHelper	typeref:typename:unsigned
XorOpc	SILowerControlFlow.cpp	/^  unsigned XorOpc;$/;"	m	class:__anon0ce7c3340111::SILowerControlFlow	typeref:typename:unsigned	file:
XorOpc	SIWholeQuadMode.cpp	/^  unsigned XorOpc;$/;"	m	class:__anon41aff2810111::SIWholeQuadMode	typeref:typename:unsigned	file:
XorTermrOpc	SILowerControlFlow.cpp	/^  unsigned XorTermrOpc;$/;"	m	class:__anon0ce7c3340111::SILowerControlFlow	typeref:typename:unsigned	file:
XorTermrOpc	SIOptimizeExecMaskingPreRA.cpp	/^  unsigned XorTermrOpc;$/;"	m	class:__anon5760078c0111::SIOptimizeExecMaskingPreRA	typeref:typename:unsigned	file:
Y	Utils/RVGPUBaseInfo.h	/^  bool Y;$/;"	m	struct:llvm::RVGPU::CanBeVOPD	typeref:typename:bool
Y	Utils/RVGPUBaseInfo.h	/^enum ComponentIndex : unsigned { X = 0, Y = 1 };$/;"	e	enum:llvm::RVGPU::VOPD::ComponentIndex
ZCompareIndex	RVGPUInstrInfo.h	/^  uint8_t ZCompareIndex;$/;"	m	struct:llvm::RVGPU::ImageDimIntrinsicInfo	typeref:typename:uint8_t
_RVGPU_LIBFUNC_H_	RVGPULibFunc.h	/^#define _RVGPU_LIBFUNC_H_$/;"	d
__anon00ae19330111	RVGPURegBankCombiner.cpp	/^namespace {$/;"	n	file:
__anon00ae19330202	RVGPURegBankCombiner.cpp	/^  auto isOp3Zero = [&]() {$/;"	f	function:__anon00ae19330111::RVGPURegBankCombinerImpl::matchFPMed3ToClamp	file:
__anon00bd52b30111	SIPeepholeSDWA.cpp	/^namespace {$/;"	n	file:
__anon00bd52b30202	SIPeepholeSDWA.cpp	/^      [&](const MachineOperand *Op1, const MachineOperand *Op2) -> CheckRetType {$/;"	f	function:SIPeepholeSDWA::matchSDWAOperand	typeref:typename:CheckRetType	file:
__anon02bc421a0111	SIPreEmitPeephole.cpp	/^namespace {$/;"	n	file:
__anon02bc421a0202	SIPreEmitPeephole.cpp	/^                       [&MRI, this](const MachineOperand &MO) {$/;"	f	function:SIPreEmitPeephole::optimizeSetGPR	file:
__anon070b45bc0111	SIModeRegister.cpp	/^namespace {$/;"	n	file:
__anon07e514130111	SIFoldOperands.cpp	/^namespace {$/;"	n	file:
__anon07e51413020a	SIFoldOperands.cpp	/^  union {$/;"	u	struct:__anon07e514130111::FoldCandidate	file:
__anon07e514130302	SIFoldOperands.cpp	/^  return any_of(FoldList, [&](const auto &C) { return C.UseMI == MI; });$/;"	f	function:isUseMIInFoldList	file:
__anon07e514130402	SIFoldOperands.cpp	/^  auto tryToFoldAsFMAAKorMK = [&]() {$/;"	f	function:SIFoldOperands::tryAddToFoldList	file:
__anon08859fd90102	RVGPUCombinerHelper.cpp	/^  auto NegateOperand = [&](MachineOperand &Op) {$/;"	f	function:RVGPUCombinerHelper::applyFoldableFneg	file:
__anon08859fd90202	RVGPUCombinerHelper.cpp	/^  auto NegateEitherOperand = [&](MachineOperand &X, MachineOperand &Y) {$/;"	f	function:RVGPUCombinerHelper::applyFoldableFneg	file:
__anon08dfa8900102	RVGPULibCalls.cpp	/^  auto replaceTrigInsts = [](ArrayRef<CallInst *> Calls, Value *Res) {$/;"	f	function:RVGPULibCalls::fold_sincos	file:
__anon09538a560111	SIInsertHardClauses.cpp	/^namespace {$/;"	n	file:
__anon0a1a7df70111	RVGPURegisterBankInfo.cpp	/^namespace {$/;"	n	file:
__anon0a1a7df70202	RVGPURegisterBankInfo.cpp	/^  static auto InitializeRegisterBankOnce = [this]() {$/;"	f	function:RVGPURegisterBankInfo::RVGPURegisterBankInfo	file:
__anon0a1a7df70302	RVGPURegisterBankInfo.cpp	/^    auto canUseSCCICMP = [&]() {$/;"	f	function:RVGPURegisterBankInfo::getInstrMapping	file:
__anon0a1a7df70402	RVGPURegisterBankInfo.cpp	/^    auto canUseSCCFCMP = [&]() {$/;"	f	function:RVGPURegisterBankInfo::getInstrMapping	file:
__anon0ce7c3340111	SILowerControlFlow.cpp	/^namespace {$/;"	n	file:
__anon15773df20111	SIOptimizeExecMasking.cpp	/^namespace {$/;"	n	file:
__anon15773df20202	SIOptimizeExecMasking.cpp	/^      [&](unsigned OperandName) -> void {$/;"	f	function:SIOptimizeExecMasking::optimizeVCMPSaveExecSequence	typeref:typename:void	file:
__anon15773df20302	SIOptimizeExecMasking.cpp	/^      [&](MachineInstr *Check) {$/;"	f	function:SIOptimizeExecMasking::tryRecordVCmpxAndSaveexecSequence	file:
__anon15773df20402	SIOptimizeExecMasking.cpp	/^      {Exec, SaveExecSrc0->getReg()});$/;"	f	function:SIOptimizeExecMasking::tryRecordVCmpxAndSaveexecSequence	file:
__anon15773df20502	SIOptimizeExecMasking.cpp	/^          MI, [&](MachineInstr *Check) { return Check == VCmp; }, NonDefRegs,$/;"	f	function:SIOptimizeExecMasking::tryRecordVCmpxAndSaveexecSequence	file:
__anon1695b1f50111	RVGPUMachineCFGStructurizer.cpp	/^namespace {$/;"	n	file:
__anon1695b1f50211	RVGPUMachineCFGStructurizer.cpp	/^namespace {$/;"	n	file:
__anon1695b1f50311	RVGPUMachineCFGStructurizer.cpp	/^namespace {$/;"	n	file:
__anon1829ed150102	Disassembler/RVGPUDisassembler.cpp	/^      const auto convertVOPDPP = [&]() {$/;"	f	function:RVGPUDisassembler::getInstruction	file:
__anon1829ed150202	Disassembler/RVGPUDisassembler.cpp	/^  auto Result = llvm::find_if(*Symbols, [Value](const SymbolInfoTy &Val) {$/;"	f	function:RVGPUSymbolizer::tryAddingSymbolicOperand	file:
__anon19f1a73d0102	RVGPUAliasAnalysis.h	/^    [](Pass &P, Function &, AAResults &AAR) {$/;"	f	class:llvm::RVGPUExternalAAWrapper	file:
__anon1d1751120111	RVGPUISelDAGToDAG.cpp	/^namespace {$/;"	n	file:
__anon1e3e8dba0111	GCNIterativeScheduler.cpp	/^namespace {$/;"	n	file:
__anon1e3e8dba0202	GCNIterativeScheduler.cpp	/^    const auto &D = std::find_if(DbgB, DbgE, [SU](decltype(*DbgB) &P) {$/;"	f	function:GCNIterativeScheduler::detachSchedule	file:
__anon1e3e8dba0302	GCNIterativeScheduler.cpp	/^  llvm::sort(Regions, [&ST, TargetOcc](const Region *R1, const Region *R2) {$/;"	f	function:GCNIterativeScheduler::sortRegionsByPressure	file:
__anon1f24a7950103	SIDefines.h	/^enum {$/;"	g	namespace:llvm::SIEncodingFamily
__anon1f24a7950203	SIDefines.h	/^enum : uint64_t {$/;"	g	namespace:llvm::SIInstrFlags	typeref:typename:uint64_t
__anon1f24a7950303	SIDefines.h	/^  enum : unsigned {$/;"	g	namespace:llvm::SISrcMods	typeref:typename:unsigned
__anon1f24a7950403	SIDefines.h	/^  enum : unsigned {$/;"	g	namespace:llvm::SIOutMods	typeref:typename:unsigned
__anon1f24a7950503	SIDefines.h	/^  enum : unsigned {$/;"	g	namespace:llvm::RVGPUAsmVariants	typeref:typename:unsigned
__anon1f24a7950603	SIDefines.h	/^enum : unsigned {$/;"	g	namespace:llvm::RVGPU::EncValues	typeref:typename:unsigned
__anon1f24a7950703	SIDefines.h	/^enum : unsigned {$/;"	g	namespace:llvm::RVGPU::HWEncoding	typeref:typename:unsigned
__anon1f37a0740111	MCTargetDesc/RVGPUMCCodeEmitter.cpp	/^namespace {$/;"	n	file:
__anon237d7fe20111	RVGPUCtorDtorLowering.cpp	/^namespace {$/;"	n	file:
__anon237d7fe20202	RVGPUCtorDtorLowering.cpp	/^      ArrayType::get(PtrTy, 0), [&]() {$/;"	f	function:__anon237d7fe20111::createInitOrFiniCalls	file:
__anon237d7fe20302	RVGPUCtorDtorLowering.cpp	/^      ArrayType::get(PtrTy, 0), [&]() {$/;"	f	function:__anon237d7fe20111::createInitOrFiniCalls	file:
__anon26dde6960111	RVGPUUnifyMetadata.cpp	/^namespace {$/;"	n	file:
__anon26fa33850102	GCNRegPressure.cpp	/^  return Printable([&RP, ST](raw_ostream &OS) {$/;"	f	function:llvm::print	file:
__anon26fa33850202	GCNRegPressure.cpp	/^    if (llvm::any_of(RegMaskPairs, [Reg](const RegisterMaskPair &RM) {$/;"	f	function:collectVirtualRegUses	file:
__anon26fa33850302	GCNRegPressure.cpp	/^  return Printable([&LISLR, &TrackedLR, TRI, Pfx](raw_ostream &OS) {$/;"	f	function:llvm::reportMismatch	file:
__anon26fa33850402	GCNRegPressure.cpp	/^  return Printable([&LiveRegs, &MRI](raw_ostream &OS) {$/;"	f	function:llvm::print	file:
__anon26fa33850502	GCNRegPressure.cpp	/^  auto IsInOneSegment = [Begin, End](const LiveRange &LR) -> bool {$/;"	f	function:getRegLiveThroughMask	typeref:typename:bool	file:
__anon26fa33850602	GCNRegPressure.cpp	/^  auto printRP = [](const GCNRegPressure &RP) {$/;"	f	function:GCNRegPressurePrinter::runOnMachineFunction	file:
__anon26fa33850702	GCNRegPressure.cpp	/^    return Printable([&RP](raw_ostream &OS) {$/;"	f	function:GCNRegPressurePrinter::runOnMachineFunction::__anon26fa33850602	file:
__anon26fa33850802	GCNRegPressure.cpp	/^                                    const GCNRPTracker::LiveRegSet &LISLR) {$/;"	f	function:GCNRegPressurePrinter::runOnMachineFunction	file:
__anon2734ef760103	Utils/RVGPUBaseInfo.h	/^enum { RVHSA_COV4 = 4, RVHSA_COV5 = 5 };$/;"	g	namespace:llvm::RVGPU
__anon2734ef760203	Utils/RVGPUBaseInfo.h	/^enum {$/;"	g	namespace:llvm::RVGPU::IsaInfo
__anon27dfeec30111	RVGPUImageIntrinsicOptimizer.cpp	/^namespace {$/;"	n	file:
__anon27dfeec30202	RVGPUImageIntrinsicOptimizer.cpp	/^  if (std::none_of(M->begin(), M->end(), [](Function &F) {$/;"	f	function:imageIntrinsicOptimizerImpl	file:
__anon281388e70111	RVGPUPromoteKernelArguments.cpp	/^namespace {$/;"	n	file:
__anon281388e70202	RVGPUPromoteKernelArguments.cpp	/^                         [Cast](Use &U) { return U.getUser() != Cast; });$/;"	f	function:RVGPUPromoteKernelArguments::promotePointer	file:
__anon2c6a01590102	RVGPUTargetTransformInfo.cpp	/^      if (llvm::none_of(L->getSubLoops(), [PHI](const Loop* SubLoop) {$/;"	f	function:dependsOnLocalPhi	file:
__anon2c6a01590202	RVGPUTargetTransformInfo.cpp	/^    if (llvm::any_of(L->getSubLoops(), [BB](const Loop* SubLoop) {$/;"	f	function:RVGPUTTIImpl::getUnrollingPreferences	file:
__anon2c6a01590302	RVGPUTargetTransformInfo.cpp	/^        if (llvm::any_of(L->getSubLoops(), [Inst](const Loop* SubLoop) {$/;"	f	function:RVGPUTTIImpl::getUnrollingPreferences	file:
__anon2c6a01590402	RVGPUTargetTransformInfo.cpp	/^    if (any_of(ValidSatTys, [&LT](MVT M) { return M == LT.second; }))$/;"	f	function:GCNTTIImpl::getIntrinsicInstrCost	file:
__anon2c6a01590502	RVGPUTargetTransformInfo.cpp	/^  bool SingleBB = none_of(*CB->getCalledFunction(), [](const BasicBlock &BB) {$/;"	f	function:GCNTTIImpl::getCallerAllocaCost	file:
__anon2ce138190102	MCTargetDesc/RVGPUTargetStreamer.cpp	/^           [&](MCELFStreamer &OS) { OS.emitBytes(Blob); });$/;"	f	function:RVGPUTargetELFStreamer::finish	file:
__anon2ce138190202	MCTargetDesc/RVGPUTargetStreamer.cpp	/^           ELF::NT_RV_HSA_CODE_OBJECT_VERSION, [&](MCELFStreamer &OS) {$/;"	f	function:RVGPUTargetELFStreamer::EmitDirectiveHSACodeObjectVersion	file:
__anon2ce138190302	MCTargetDesc/RVGPUTargetStreamer.cpp	/^           ELF::NT_RV_HSA_ISA_VERSION, [&](MCELFStreamer &OS) {$/;"	f	function:RVGPUTargetELFStreamer::EmitDirectiveHSACodeObjectISAV2	file:
__anon2ce138190402	MCTargetDesc/RVGPUTargetStreamer.cpp	/^           [&](MCELFStreamer &OS) {$/;"	f	function:RVGPUTargetELFStreamer::EmitISAVersion	file:
__anon2ce138190502	MCTargetDesc/RVGPUTargetStreamer.cpp	/^           [&](MCELFStreamer &OS) {$/;"	f	function:RVGPUTargetELFStreamer::EmitHSAMetadata	file:
__anon2ce138190602	MCTargetDesc/RVGPUTargetStreamer.cpp	/^           [&](MCELFStreamer &OS) {$/;"	f	function:RVGPUTargetELFStreamer::EmitHSAMetadata	file:
__anon37bf8c3b0111	GCNRewritePartialRegUses.cpp	/^namespace {$/;"	n	file:
__anon37bf8c3b0202	GCNRewritePartialRegUses.cpp	/^    auto I = find_if(SubRegs, [&](auto &P) {$/;"	f	function:GCNRewritePartialRegUses::updateLiveIntervals	file:
__anon37bf8c3b0302	GCNRewritePartialRegUses.cpp	/^  if (Range.empty() || any_of(Range, [](MachineOperand &MO) {$/;"	f	function:GCNRewritePartialRegUses::rewriteReg	file:
__anon37f997ca0111	SIPreAllocateWWMRegs.cpp	/^namespace {$/;"	n	file:
__anon3997f4420111	GCNPreRAOptimizations.cpp	/^namespace {$/;"	n	file:
__anon3ce248190111	RVGPUOpenCLEnqueuedBlockLowering.cpp	/^namespace {$/;"	n	file:
__anon3fc4a09f0111	SIOptimizeVGPRLiveRange.cpp	/^namespace {$/;"	n	file:
__anon3fc4a09f0202	SIOptimizeVGPRLiveRange.cpp	/^  auto IsLiveThroughThen = [&](Register Reg) {$/;"	f	function:SIOptimizeVGPRLiveRange::collectCandidateRegisters	file:
__anon4011a2720102	RVISelLowering.cpp	/^    auto packLanes = [&DAG, &Ops, &DL] (SDValue Op, bool IsAligned) {$/;"	f	function:RVTargetLowering::LowerINTRINSIC_W_CHAIN	file:
__anon4011a2720202	RVISelLowering.cpp	/^    auto usesCombinedOperand = [](SDNode *OrUse) {$/;"	f	function:RVTargetLowering::performOrCombine	file:
__anon4011a2720302	RVISelLowering.cpp	/^      auto MatchesFirst = [&BPP](std::pair<SDValue, unsigned> IterElt) {$/;"	f	function:placeSources	file:
__anon4011a2720402	RVISelLowering.cpp	/^      auto MatchesSecond = [&BPP](std::pair<SDValue, unsigned> IterElt) {$/;"	f	function:placeSources	file:
__anon4011a2720502	RVISelLowering.cpp	/^  auto ReportUnsafeHWInst = [&](TargetLowering::AtomicExpansionKind Kind) {$/;"	f	function:RVTargetLowering::shouldExpandAtomicRMWInIR	file:
__anon4011a2720602	RVISelLowering.cpp	/^    ORE.emit([&]() {$/;"	f	function:RVTargetLowering::shouldExpandAtomicRMWInIR::__anon4011a2720502	file:
__anon4011a2720702	RVISelLowering.cpp	/^                                 Value *Val) -> Value * {$/;"	f	function:RVTargetLowering::emitExpandAtomicRMW	typeref:typename:Value *	file:
__anon406ad74e0111	RVGPUPerfHintAnalysis.cpp	/^namespace {$/;"	n	file:
__anon406ad74e0202	RVGPUPerfHintAnalysis.cpp	/^      return Printable([this](raw_ostream &OS) {$/;"	f	function:__anon406ad74e0111::RVGPUPerfHint::MemAccessInfo::print	file:
__anon419d0db70111	RVGPUISelDAGToDAG.h	/^namespace {$/;"	n
__anon41aff2810111	SIWholeQuadMode.cpp	/^namespace {$/;"	n	file:
__anon41aff2810203	SIWholeQuadMode.cpp	/^enum {$/;"	g	namespace:__anon41aff2810111	file:
__anon41aff2810302	SIWholeQuadMode.cpp	/^      assert(any_of(MI->implicit_operands(), [](const MachineOperand &MO) {$/;"	f	function:SIWholeQuadMode::lowerCopyInstrs	file:
__anon4605b2240111	GCNPreRALongBranchReg.cpp	/^namespace {$/;"	n	file:
__anon46517b8a0111	SIMemoryLegalizer.cpp	/^namespace {$/;"	n	file:
__anon46a5cf8f0111	GCNDPPCombine.cpp	/^namespace {$/;"	n	file:
__anon4731d9190111	SILowerWWMCopies.cpp	/^namespace {$/;"	n	file:
__anon4aa55dad0111	SILateBranchLowering.cpp	/^namespace {$/;"	n	file:
__anon4be335ae0111	SILowerSGPRSpills.cpp	/^namespace {$/;"	n	file:
__anon4d1a276b0111	RVGPUGlobalISelDivergenceLowering.cpp	/^namespace {$/;"	n	file:
__anon4d9375140111	RVGPULateCodeGenPrepare.cpp	/^namespace {$/;"	n	file:
__anon4eb125fb0111	RVGPUSubtarget.cpp	/^namespace {$/;"	n	file:
__anon512e119a0111	RVGPUAttributor.cpp	/^namespace {$/;"	n	file:
__anon512e119a0202	RVGPUAttributor.cpp	/^    auto CheckCallSite = [&](AbstractCallSite CS) {$/;"	f	function:__anon512e119a0111::AAUniformWorkGroupSizeFunction::updateImpl	file:
__anon512e119a0302	RVGPUAttributor.cpp	/^    auto CheckAddrSpaceCasts = [&](Instruction &I) {$/;"	f	function:__anon512e119a0111::AARVAttributesFunction::checkForQueuePtr	file:
__anon512e119a0402	RVGPUAttributor.cpp	/^    auto DoesNotLeadToKernelArgLoc = [&](Instruction &I) {$/;"	f	function:__anon512e119a0111::AARVAttributesFunction::funcRetrievesImplicitKernelArg	file:
__anon512e119a0502	RVGPUAttributor.cpp	/^          Range, [](const AAPointerInfo::Access &Acc, bool IsExact) {$/;"	f	function:__anon512e119a0111::AARVAttributesFunction::funcRetrievesImplicitKernelArg::__anon512e119a0402	file:
__anon512e119a0602	RVGPUAttributor.cpp	/^    auto DoesNotRetrieve = [&](Instruction &I) {$/;"	f	function:__anon512e119a0111::AARVAttributesFunction::funcRetrievesLDSKernelId	file:
__anon512e119a0702	RVGPUAttributor.cpp	/^    auto CheckCallSite = [&](AbstractCallSite CS) {$/;"	f	function:__anon512e119a0111::AARVSizeRangeAttribute::updateImplImpl	file:
__anon512e119a0802	RVGPUAttributor.cpp	/^    auto CheckCallSite = [&](AbstractCallSite CS) {$/;"	f	function:__anon512e119a0111::AARVWavesPerEU::updateImpl	file:
__anon512e119a0902	RVGPUAttributor.cpp	/^  AC.IPOAmendableCB = [](const Function &F) {$/;"	f	function:__anon512e119a0111::runImpl	file:
__anon560be2e50102	RVMachineFunctionInfo.cpp	/^        NextSpillReg, Regs.end(), [&MRI, &OtherUsedRegs](MCPhysReg Reg) {$/;"	f	function:RVMachineFunctionInfo::allocateVGPRSpillToAGPR	file:
__anon560be2e50202	RVMachineFunctionInfo.cpp	/^                        const ArgDescriptor &Arg) {$/;"	f	function:convertArgumentInfo	file:
__anon565c6f860111	RVGPUTargetMachine.cpp	/^namespace {$/;"	n	file:
__anon565c6f860202	RVGPUTargetMachine.cpp	/^             ArrayRef<PassBuilder::PipelineElement>) {$/;"	f	function:RVGPUTargetMachine::registerPassBuilderCallbacks	file:
__anon565c6f860302	RVGPUTargetMachine.cpp	/^             ArrayRef<PassBuilder::PipelineElement>) {$/;"	f	function:RVGPUTargetMachine::registerPassBuilderCallbacks	file:
__anon565c6f860402	RVGPUTargetMachine.cpp	/^  PB.registerAnalysisRegistrationCallback([](FunctionAnalysisManager &FAM) {$/;"	f	function:RVGPUTargetMachine::registerPassBuilderCallbacks	file:
__anon565c6f860502	RVGPUTargetMachine.cpp	/^    FAM.registerPass([&] { return RVGPUAA(); });$/;"	f	function:RVGPUTargetMachine::registerPassBuilderCallbacks::__anon565c6f860402	file:
__anon565c6f860602	RVGPUTargetMachine.cpp	/^  PB.registerParseAACallback([](StringRef AAName, AAManager &AAM) {$/;"	f	function:RVGPUTargetMachine::registerPassBuilderCallbacks	file:
__anon565c6f860702	RVGPUTargetMachine.cpp	/^      [](ModulePassManager &PM, OptimizationLevel Level) {$/;"	f	function:RVGPUTargetMachine::registerPassBuilderCallbacks	file:
__anon565c6f860802	RVGPUTargetMachine.cpp	/^      [](ModulePassManager &PM, OptimizationLevel Level) {$/;"	f	function:RVGPUTargetMachine::registerPassBuilderCallbacks	file:
__anon565c6f860902	RVGPUTargetMachine.cpp	/^      [this](CGSCCPassManager &PM, OptimizationLevel Level) {$/;"	f	function:RVGPUTargetMachine::registerPassBuilderCallbacks	file:
__anon565c6f860a11	RVGPUTargetMachine.cpp	/^namespace {$/;"	n	file:
__anon565c6f860b02	RVGPUTargetMachine.cpp	/^                                             AAResults &AAR) {$/;"	f	function:RVGPUPassConfig::addIRPasses	file:
__anon565c6f860c02	RVGPUTargetMachine.cpp	/^  auto parseRegister = [&](const yaml::StringValue &RegName, Register &RegVal) {$/;"	f	function:GCNTargetMachine::parseMachineFunctionInfo	file:
__anon565c6f860d02	RVGPUTargetMachine.cpp	/^                                   Register &RegVal) {$/;"	f	function:GCNTargetMachine::parseMachineFunctionInfo	file:
__anon565c6f860e02	RVGPUTargetMachine.cpp	/^  auto diagnoseRegisterClass = [&](const yaml::StringValue &RegName) {$/;"	f	function:GCNTargetMachine::parseMachineFunctionInfo	file:
__anon565c6f860f02	RVGPUTargetMachine.cpp	/^                                   unsigned SystemSGPRs) {$/;"	f	function:GCNTargetMachine::parseMachineFunctionInfo	file:
__anon56776a060111	RVGPURewriteUndefForPHI.cpp	/^namespace {$/;"	n	file:
__anon56776a060202	RVGPURewriteUndefForPHI.cpp	/^      if (DT->dominates(DominateBB, &BB) && all_of(Undefs, [&](BasicBlock *UD) {$/;"	f	function:INITIALIZE_PASS_DEPENDENCY	file:
__anon5760078c0111	SIOptimizeExecMaskingPreRA.cpp	/^namespace {$/;"	n	file:
__anon5760078c0202	SIOptimizeExecMaskingPreRA.cpp	/^  auto I = llvm::find_if(MBB.terminators(), [](const MachineInstr &MI) {$/;"	f	function:SIOptimizeExecMaskingPreRA::optimizeVcndVcmpPair	file:
__anon5760078c0302	SIOptimizeExecMaskingPreRA.cpp	/^                    [](const VNInfo *VNI) {$/;"	f	function:SIOptimizeExecMaskingPreRA::optimizeVcndVcmpPair	file:
__anon5760078c0402	SIOptimizeExecMaskingPreRA.cpp	/^                    [&](const MachineInstr &MI) {$/;"	f	function:SIOptimizeExecMaskingPreRA::optimizeVcndVcmpPair	file:
__anon5760078c0502	SIOptimizeExecMaskingPreRA.cpp	/^  auto I = llvm::find_if(MBB.terminators(), [this](const MachineInstr &MI) {$/;"	f	function:SIOptimizeExecMaskingPreRA::optimizeElseBranch	file:
__anon61b122dc0111	RVGPUIGroupLP.cpp	/^namespace {$/;"	n	file:
__anon61b122dc0202	RVGPUIGroupLP.cpp	/^      auto SchedBarr = llvm::find_if(TempCollection, [](SUnit *SU) {$/;"	f	function:__anon61b122dc0111::PipelineSolver::reset	file:
__anon61b122dc0302	RVGPUIGroupLP.cpp	/^        Succ->Preds, [&Pred](SDep &P) { return P.getSUnit() == Pred; });$/;"	f	function:__anon61b122dc0111::PipelineSolver::removeEdges	file:
__anon61b122dc0402	RVGPUIGroupLP.cpp	/^    SchedGroup *Match = llvm::find_if(SyncPipeline, [CandSGID](SchedGroup &SG) {$/;"	f	function:__anon61b122dc0111::PipelineSolver::populateReadyList	file:
__anon61b122dc0502	RVGPUIGroupLP.cpp	/^              [](std::pair<int, int> A, std::pair<int, int> B) {$/;"	f	function:__anon61b122dc0111::PipelineSolver::populateReadyList	file:
__anon61b122dc0602	RVGPUIGroupLP.cpp	/^    SchedGroup *Match = llvm::find_if(SyncPipeline, [CandSGID](SchedGroup &SG) {$/;"	f	function:__anon61b122dc0111::PipelineSolver::greedyFind	file:
__anon61b122dc0702	RVGPUIGroupLP.cpp	/^      return llvm::any_of(*Cache, [&SU](SUnit *Elt) {$/;"	f	function:__anon61b122dc0111::MFMASmallGemmSingleWaveOpt::IsPermForDSW::apply	file:
__anon61b122dc0802	RVGPUIGroupLP.cpp	/^        return llvm::any_of(SU->Succs, [&Elt](const SDep &ThisSucc) {$/;"	f	function:__anon61b122dc0111::MFMASmallGemmSingleWaveOpt::IsPermForDSW::apply::__anon61b122dc0702	file:
__anon61b122dc0902	RVGPUIGroupLP.cpp	/^                          OtherGroup->Collection.end(), [&SU](SUnit *Elt) {$/;"	f	function:__anon61b122dc0111::MFMASmallGemmSingleWaveOpt::IsSuccOfPrevGroup::apply	file:
__anon61b122dc0a02	RVGPUIGroupLP.cpp	/^                                               [&SU](SDep &Succ) {$/;"	f	function:__anon61b122dc0111::MFMASmallGemmSingleWaveOpt::IsSuccOfPrevGroup::apply::__anon61b122dc0902	file:
__anon61b122dc0b02	RVGPUIGroupLP.cpp	/^      return llvm::any_of(*Cache, [&SU, &DAG](SUnit *Elt) {$/;"	f	function:__anon61b122dc0111::MFMASmallGemmSingleWaveOpt::SharesPredWithPrevNthGroup::apply	file:
__anon61b122dc0c02	RVGPUIGroupLP.cpp	/^  return std::all_of(B, E, [this](MachineInstr &MI) { return canAddMI(MI); });$/;"	f	function:__anon61b122dc0111::SchedGroup::canAddSU	file:
__anon61b122dc0d02	RVGPUIGroupLP.cpp	/^          const SUnit *A, const SUnit *B) { return A->NodeNum > B->NodeNum; });$/;"	f	function:__anon61b122dc0111::IGroupLPDAGMutation::addSchedBarrierEdges	file:
__anon63899d5a0111	RVGPURewriteOutArguments.cpp	/^namespace {$/;"	n	file:
__anon63899d5a0202	RVGPURewriteOutArguments.cpp	/^                         [OutArg](const std::pair<Argument *, Value *> &Entry) {$/;"	f	function:RVGPURewriteOutArguments::runOnFunction	file:
__anon6583ff500111	RVGPUMacroFusion.cpp	/^namespace {$/;"	n	file:
__anon665027960111	SIShrinkInstructions.cpp	/^namespace {$/;"	n	file:
__anon672fa8550111	AsmParser/RVGPUAsmParser.cpp	/^namespace {$/;"	n	file:
__anon672fa855020a	AsmParser/RVGPUAsmParser.cpp	/^  union {$/;"	u	class:__anon672fa8550111::RVGPUOperand	file:
__anon672fa8550302	AsmParser/RVGPUAsmParser.cpp	/^  auto getVRegIdx = [&](unsigned, unsigned OperandIdx) {$/;"	f	function:RVGPUAsmParser::validateVOPDRegBankConstraints	file:
__anon672fa8550402	AsmParser/RVGPUAsmParser.cpp	/^  auto PrintError = [&](StringRef Msg) {$/;"	f	function:RVGPUAsmParser::validateTHAndScopeBits	file:
__anon672fa8550502	AsmParser/RVGPUAsmParser.cpp	/^  auto Test = [=](const RVGPUOperand& Op) { return Op.isImmTy(Type); };$/;"	f	function:RVGPUAsmParser::getImmLoc	file:
__anon672fa8550602	AsmParser/RVGPUAsmParser.cpp	/^  auto Test = [=](const RVGPUOperand& Op) {$/;"	f	function:RVGPUAsmParser::getRegLoc	file:
__anon672fa8550702	AsmParser/RVGPUAsmParser.cpp	/^  auto Test = [](const RVGPUOperand& Op) {$/;"	f	function:RVGPUAsmParser::getLitLoc	file:
__anon672fa8550802	AsmParser/RVGPUAsmParser.cpp	/^  auto Test = [](const RVGPUOperand &Op) {$/;"	f	function:RVGPUAsmParser::getMandatoryLitLoc	file:
__anon672fa8550902	AsmParser/RVGPUAsmParser.cpp	/^  auto Test = [](const RVGPUOperand& Op) {$/;"	f	function:RVGPUAsmParser::getConstLoc	file:
__anon672fa8550a02	AsmParser/RVGPUAsmParser.cpp	/^  auto addOp = [&](uint16_t ParsedOprIdx) { \/\/ NOLINT:function pointer$/;"	f	function:RVGPUAsmParser::cvtVOPD	file:
__anon677101620111	SILoadStoreOptimizer.cpp	/^namespace {$/;"	n	file:
__anon677101620202	SILoadStoreOptimizer.cpp	/^        [] (const CombineInfo &A, const CombineInfo &B) {$/;"	f	function:SILoadStoreOptimizer::collectMergeableInsts	file:
__anon69c4fffe0102	RVGPUISelLowering.cpp	/^  auto IsShiftAndLoad = [](SDValue LHS, SDValue RHS) {$/;"	f	function:RVGPUTargetLowering::isDesirableToCommuteWithShift	file:
__anon69c4fffe0202	RVGPUISelLowering.cpp	/^  auto IsFoldableAdd = [](SDValue V) -> SDValue {$/;"	f	function:RVGPUTargetLowering::performMulCombine	typeref:typename:SDValue	file:
__anon69c4fffe0302	RVGPUISelLowering.cpp	/^    if (V.hasOneUse() || all_of(V->uses(), [](const SDNode *U) -> bool {$/;"	f	function:RVGPUTargetLowering::performMulCombine::__anon69c4fffe0202	typeref:typename:bool	file:
__anon69c4fffe0402	RVGPUISelLowering.cpp	/^      const auto FTZ = [](const APFloat &V) {$/;"	f	function:RVGPUTargetLowering::PerformDAGCombine	file:
__anon69c4fffe0502	RVGPUISelLowering.cpp	/^    if (any_of(Ops, [&](Use *U) { return U->get() == Op.get(); }))$/;"	f	function:RVGPUTargetLowering::shouldSinkOperands	file:
__anon6a9afc9f0102	RVInstrInfo.h	/^                        [&MRI, this](const MachineOperand &MO) {$/;"	f	function:llvm::RVInstrInfo::hasVGPRUses	file:
__anon6b905a380111	MCTargetDesc/RVGPUAsmBackend.cpp	/^namespace {$/;"	n	file:
__anon6b905a380211	MCTargetDesc/RVGPUAsmBackend.cpp	/^namespace {$/;"	n	file:
__anon6c17cf8f0111	RVGPUInsertSingleUseVDST.cpp	/^namespace {$/;"	n	file:
__anon71cb16800111	GCNHazardRecognizer.cpp	/^namespace {$/;"	n	file:
__anon71cb16800203	GCNHazardRecognizer.cpp	/^typedef enum { HazardFound, HazardExpired, NoHazardFound } HazardFnResult;$/;"	g	file:
__anon71cb16800302	GCNHazardRecognizer.cpp	/^    auto IsExpiredFn = [Limit](const MachineInstr &, int WaitStates) {$/;"	f	function:GCNHazardRecognizer::getWaitStatesSince	file:
__anon71cb16800402	GCNHazardRecognizer.cpp	/^  auto IsHazardFn = [IsHazardDef, TRI, Reg](const MachineInstr &MI) {$/;"	f	function:GCNHazardRecognizer::getWaitStatesSinceDef	file:
__anon71cb16800502	GCNHazardRecognizer.cpp	/^  auto IsHazardFn = [IsHazard](const MachineInstr &MI) {$/;"	f	function:GCNHazardRecognizer::getWaitStatesSinceSetReg	file:
__anon71cb16800602	GCNHazardRecognizer.cpp	/^  auto IsHazardDefFn = [this](const MachineInstr &MI) {$/;"	f	function:GCNHazardRecognizer::checkSMRDHazards	file:
__anon71cb16800702	GCNHazardRecognizer.cpp	/^  auto IsBufferHazardDefFn = [this](const MachineInstr &MI) {$/;"	f	function:GCNHazardRecognizer::checkSMRDHazards	file:
__anon71cb16800802	GCNHazardRecognizer.cpp	/^  auto IsHazardDefFn = [this](const MachineInstr &MI) {$/;"	f	function:GCNHazardRecognizer::checkVMEMHazards	file:
__anon71cb16800902	GCNHazardRecognizer.cpp	/^  auto IsHazardDefFn = [TII](const MachineInstr &MI) {$/;"	f	function:GCNHazardRecognizer::checkDPPHazards	file:
__anon71cb16800a02	GCNHazardRecognizer.cpp	/^                                [](const MachineInstr &) { return true; },$/;"	f	function:GCNHazardRecognizer::checkDPPHazards	file:
__anon71cb16800b02	GCNHazardRecognizer.cpp	/^  auto IsHazardDefFn = [TII](const MachineInstr &MI) {$/;"	f	function:GCNHazardRecognizer::checkDivFMasHazards	file:
__anon71cb16800c02	GCNHazardRecognizer.cpp	/^  auto IsHazardFn = [TII, GetRegHWReg](const MachineInstr &MI) {$/;"	f	function:GCNHazardRecognizer::checkGetRegHazards	file:
__anon71cb16800d02	GCNHazardRecognizer.cpp	/^  auto IsHazardFn = [TII, HWReg](const MachineInstr &MI) {$/;"	f	function:GCNHazardRecognizer::checkSetRegHazards	file:
__anon71cb16800e02	GCNHazardRecognizer.cpp	/^  auto IsHazardFn = [this, Reg, TRI](const MachineInstr &MI) {$/;"	f	function:GCNHazardRecognizer::checkVALUHazardsHelper	file:
__anon71cb16800f02	GCNHazardRecognizer.cpp	/^    auto IsTransDefFn = [this, VALU](const MachineInstr &MI) {$/;"	f	function:GCNHazardRecognizer::checkVALUHazards	file:
__anon71cb16801002	GCNHazardRecognizer.cpp	/^    auto IsShift16BitDefFn = [this, VALU](const MachineInstr &MI) {$/;"	f	function:GCNHazardRecognizer::checkVALUHazards	file:
__anon71cb16801102	GCNHazardRecognizer.cpp	/^    auto IsVALUDefSGPRFn = [&UseReg, TRI](const MachineInstr &MI) {$/;"	f	function:GCNHazardRecognizer::checkVALUHazards	file:
__anon71cb16801202	GCNHazardRecognizer.cpp	/^  auto IsHazardFn = [TII](const MachineInstr &MI) { return TII->isVALU(MI); };$/;"	f	function:GCNHazardRecognizer::checkRWLaneHazards	file:
__anon71cb16801302	GCNHazardRecognizer.cpp	/^  auto IsHazardFn = [TII](const MachineInstr &MI) {$/;"	f	function:GCNHazardRecognizer::checkRFEHazards	file:
__anon71cb16801402	GCNHazardRecognizer.cpp	/^  auto IsHazardFn = [TII](const MachineInstr &MI) { return TII->isSALU(MI); };$/;"	f	function:GCNHazardRecognizer::checkReadM0Hazards	file:
__anon71cb16801502	GCNHazardRecognizer.cpp	/^  auto IsHazardFn = [TII, TRI](const MachineInstr &MI) {$/;"	f	function:GCNHazardRecognizer::fixVcmpxPermlaneHazards	file:
__anon71cb16801602	GCNHazardRecognizer.cpp	/^  auto IsExpiredFn = [](const MachineInstr &MI, int) {$/;"	f	function:GCNHazardRecognizer::fixVcmpxPermlaneHazards	file:
__anon71cb16801702	GCNHazardRecognizer.cpp	/^  auto IsHazardFn = [TRI, MI](const MachineInstr &I) {$/;"	f	function:GCNHazardRecognizer::fixVMEMtoScalarWriteHazards	file:
__anon71cb16801802	GCNHazardRecognizer.cpp	/^  auto IsExpiredFn = [](const MachineInstr &MI, int) {$/;"	f	function:GCNHazardRecognizer::fixVMEMtoScalarWriteHazards	file:
__anon71cb16801902	GCNHazardRecognizer.cpp	/^  auto IsHazardFn = [SDSTReg, TRI](const MachineInstr &I) {$/;"	f	function:GCNHazardRecognizer::fixSMEMtoVectorWriteHazards	file:
__anon71cb16801a02	GCNHazardRecognizer.cpp	/^  auto IsExpiredFn = [TII, IV](const MachineInstr &MI, int) {$/;"	f	function:GCNHazardRecognizer::fixSMEMtoVectorWriteHazards	file:
__anon71cb16801b02	GCNHazardRecognizer.cpp	/^  auto IsHazardFn = [TRI](const MachineInstr &I) {$/;"	f	function:GCNHazardRecognizer::fixVcmpxExecWARHazard	file:
__anon71cb16801c02	GCNHazardRecognizer.cpp	/^  auto IsExpiredFn = [TII, TRI](const MachineInstr &MI, int) {$/;"	f	function:GCNHazardRecognizer::fixVcmpxExecWARHazard	file:
__anon71cb16801d02	GCNHazardRecognizer.cpp	/^  auto IsHazardInst = [](const MachineInstr &MI) {$/;"	f	function:GCNHazardRecognizer::fixLdsBranchVmemWARHazard	file:
__anon71cb16801e02	GCNHazardRecognizer.cpp	/^  auto IsExpiredFn = [&IsHazardInst](const MachineInstr &I, int) {$/;"	f	function:GCNHazardRecognizer::fixLdsBranchVmemWARHazard	file:
__anon71cb16801f02	GCNHazardRecognizer.cpp	/^  auto IsHazardFn = [InstType, &IsHazardInst](const MachineInstr &I) {$/;"	f	function:GCNHazardRecognizer::fixLdsBranchVmemWARHazard	file:
__anon71cb16802002	GCNHazardRecognizer.cpp	/^    auto IsHazardFn = [InstType, IsHazardInst](const MachineInstr &I) {$/;"	f	function:GCNHazardRecognizer::fixLdsBranchVmemWARHazard::__anon71cb16801f02	file:
__anon71cb16802102	GCNHazardRecognizer.cpp	/^    auto IsExpiredFn = [InstType, &IsHazardInst](const MachineInstr &I, int) {$/;"	f	function:GCNHazardRecognizer::fixLdsBranchVmemWARHazard::__anon71cb16801f02	file:
__anon71cb16802202	GCNHazardRecognizer.cpp	/^  auto IsHazardFn = [this, VDSTReg, &VisitedTrans](const MachineInstr &I) {$/;"	f	function:GCNHazardRecognizer::fixLdsDirectVALUHazard	file:
__anon71cb16802302	GCNHazardRecognizer.cpp	/^  auto IsExpiredFn = [&](const MachineInstr &I, int WaitStates) {$/;"	f	function:GCNHazardRecognizer::fixLdsDirectVALUHazard	file:
__anon71cb16802402	GCNHazardRecognizer.cpp	/^  auto GetWaitStatesFn = [](const MachineInstr &MI) {$/;"	f	function:GCNHazardRecognizer::fixLdsDirectVALUHazard	file:
__anon71cb16802502	GCNHazardRecognizer.cpp	/^  auto IsHazardFn = [this, VDSTReg](const MachineInstr &I) {$/;"	f	function:GCNHazardRecognizer::fixLdsDirectVMEMHazard	file:
__anon71cb16802602	GCNHazardRecognizer.cpp	/^  auto IsExpiredFn = [](const MachineInstr &I, int) {$/;"	f	function:GCNHazardRecognizer::fixLdsDirectVMEMHazard	file:
__anon71cb16802702	GCNHazardRecognizer.cpp	/^  auto IsHazardFn = [&, this](StateType &State, const MachineInstr &I) {$/;"	f	function:GCNHazardRecognizer::fixVALUPartialForwardingHazard	file:
__anon71cb16802802	GCNHazardRecognizer.cpp	/^  auto UpdateStateFn = [](StateType &State, const MachineInstr &MI) {$/;"	f	function:GCNHazardRecognizer::fixVALUPartialForwardingHazard	file:
__anon71cb16802902	GCNHazardRecognizer.cpp	/^  auto IsHazardFn = [&, this](StateType &State, const MachineInstr &I) {$/;"	f	function:GCNHazardRecognizer::fixVALUTransUseHazard	file:
__anon71cb16802a02	GCNHazardRecognizer.cpp	/^  auto UpdateStateFn = [](StateType &State, const MachineInstr &MI) {$/;"	f	function:GCNHazardRecognizer::fixVALUTransUseHazard	file:
__anon71cb16802b02	GCNHazardRecognizer.cpp	/^  auto IsHazardFn = [MI, TII, TRI](const MachineInstr &I) {$/;"	f	function:GCNHazardRecognizer::fixWMMAHazards	file:
__anon71cb16802c02	GCNHazardRecognizer.cpp	/^  auto IsExpiredFn = [](const MachineInstr &I, int) {$/;"	f	function:GCNHazardRecognizer::fixWMMAHazards	file:
__anon71cb16802d02	GCNHazardRecognizer.cpp	/^  auto IsHazardFn = [TII](const MachineInstr &I) {$/;"	f	function:GCNHazardRecognizer::checkNSAtoVMEMHazard	file:
__anon71cb16802e02	GCNHazardRecognizer.cpp	/^  auto IsHazardFn = [](const MachineInstr &I) {$/;"	f	function:GCNHazardRecognizer::checkFPAtomicToDenormModeHazard	file:
__anon71cb16802f02	GCNHazardRecognizer.cpp	/^  auto IsExpiredFn = [](const MachineInstr &MI, int WaitStates) {$/;"	f	function:GCNHazardRecognizer::checkFPAtomicToDenormModeHazard	file:
__anon71cb16803002	GCNHazardRecognizer.cpp	/^                            this](const MachineInstr &MI) {$/;"	f	function:GCNHazardRecognizer::checkMFMAPadding	file:
__anon71cb16803102	GCNHazardRecognizer.cpp	/^  auto IsVALUFn = [](const MachineInstr &MI) {$/;"	f	function:GCNHazardRecognizer::checkMAIHazards908	file:
__anon71cb16803202	GCNHazardRecognizer.cpp	/^                               this](const MachineInstr &MI) {$/;"	f	function:GCNHazardRecognizer::checkMAIHazards908	file:
__anon71cb16803302	GCNHazardRecognizer.cpp	/^    auto IsAccVgprWriteFn = [Reg, this](const MachineInstr &MI) {$/;"	f	function:GCNHazardRecognizer::checkMAIHazards908	file:
__anon71cb16803402	GCNHazardRecognizer.cpp	/^                         this](const MachineInstr &MI) {$/;"	f	function:GCNHazardRecognizer::checkMAIHazards908	file:
__anon71cb16803502	GCNHazardRecognizer.cpp	/^  auto IsLegacyVALUFn = [](const MachineInstr &MI) {$/;"	f	function:GCNHazardRecognizer::checkMAIHazards90A	file:
__anon71cb16803602	GCNHazardRecognizer.cpp	/^  auto IsLegacyVALUNotDotFn = [](const MachineInstr &MI) {$/;"	f	function:GCNHazardRecognizer::checkMAIHazards90A	file:
__anon71cb16803702	GCNHazardRecognizer.cpp	/^                               this](const MachineInstr &MI) {$/;"	f	function:GCNHazardRecognizer::checkMAIHazards90A	file:
__anon71cb16803802	GCNHazardRecognizer.cpp	/^  auto IsAccVgprReadFn = [](const MachineInstr &MI) {$/;"	f	function:GCNHazardRecognizer::checkMAILdStHazards	file:
__anon71cb16803902	GCNHazardRecognizer.cpp	/^    auto IsVALUAccVgprRdWrCheckFn = [Reg, this](const MachineInstr &MI) {$/;"	f	function:GCNHazardRecognizer::checkMAILdStHazards	file:
__anon71cb16803a02	GCNHazardRecognizer.cpp	/^      auto IsVALUFn = [](const MachineInstr &MI) {$/;"	f	function:GCNHazardRecognizer::checkMAILdStHazards::__anon71cb16803902	file:
__anon71cb16803b02	GCNHazardRecognizer.cpp	/^  auto IsDGEMMFn = [](const MachineInstr &MI) -> bool {$/;"	f	function:GCNHazardRecognizer::checkMAIVALUHazards	typeref:typename:bool	file:
__anon71cb16803c02	GCNHazardRecognizer.cpp	/^  auto IsMFMAWriteFn = [&Reg, &MFMA, this](const MachineInstr &MI) {$/;"	f	function:GCNHazardRecognizer::checkMAIVALUHazards	file:
__anon71cb16803d02	GCNHazardRecognizer.cpp	/^  auto IsDotWriteFn = [&Reg, &DOT, this](const MachineInstr &MI) {$/;"	f	function:GCNHazardRecognizer::checkMAIVALUHazards	file:
__anon71cb16803e02	GCNHazardRecognizer.cpp	/^  auto IsDGEMMHazard = [&DGEMMAfterVALUWrite, this](const MachineInstr &MI) {$/;"	f	function:GCNHazardRecognizer::checkMAIVALUHazards	file:
__anon71cb16803f02	GCNHazardRecognizer.cpp	/^    auto IsSMFMAReadAsCFn = [&Reg, &MFMA, this](const MachineInstr &MI) {$/;"	f	function:GCNHazardRecognizer::checkMAIVALUHazards	file:
__anon71cb16804002	GCNHazardRecognizer.cpp	/^  auto IsMFMAFn = [&MAI](const MachineInstr &MI) {$/;"	f	function:GCNHazardRecognizer::ShouldPreferAnother	file:
__anon71cb16804102	GCNHazardRecognizer.cpp	/^  auto IsHazardFn = [HazardReg, this](const MachineInstr &I) {$/;"	f	function:GCNHazardRecognizer::fixVALUMaskWriteHazard	file:
__anon71cb16804202	GCNHazardRecognizer.cpp	/^  auto IsExpiredFn = [&MRI, this](const MachineInstr &I, int) {$/;"	f	function:GCNHazardRecognizer::fixVALUMaskWriteHazard	file:
__anon7b93ed1b0111	RVGPULowerKernelAttributes.cpp	/^namespace {$/;"	n	file:
__anon7bca098a0111	RVGPUAtomicOptimizer.cpp	/^namespace {$/;"	n	file:
__anon7d4c99fa0102	RVInstrInfo.cpp	/^           llvm::all_of(MI.memoperands(), [](const MachineMemOperand *MMO) {$/;"	f	function:canRemat	file:
__anon7d4c99fa0202	RVInstrInfo.cpp	/^  auto getImmFor = [ImmOp](const MachineOperand &UseOp) -> int64_t {$/;"	f	function:RVInstrInfo::FoldImmediate	typeref:typename:int64_t	file:
__anon7d4c99fa0302	RVInstrInfo.cpp	/^    const auto killDef = [&]() -> void {$/;"	f	function:RVInstrInfo::convertToThreeAddress	typeref:typename:void	file:
__anon7d4c99fa0402	RVInstrInfo.cpp	/^                [&](unsigned Name) { return hasModifiersSet(MI, Name); });$/;"	f	function:RVInstrInfo::hasAnyModifiersSet	file:
__anon7d4c99fa0502	RVInstrInfo.cpp	/^      if (llvm::all_of(SGPRsUsed, [this, SGPRUsed](unsigned SGPR) {$/;"	f	function:RVInstrInfo::verifyInstruction	file:
__anon7d4c99fa0602	RVInstrInfo.cpp	/^    const auto isAlignedReg = [&MI, &MRI, this](unsigned OpName) -> bool {$/;"	f	function:RVInstrInfo::verifyInstruction	typeref:typename:bool	file:
__anon7d4c99fa0702	RVInstrInfo.cpp	/^    if (llvm::any_of(MI.memoperands(), [](const MachineMemOperand *mmo) {$/;"	f	function:RVInstrInfo::getGenericInstructionUniformity	file:
__anon7d4c99fa0802	RVInstrInfo.cpp	/^    if (llvm::any_of(MI.memoperands(), [](const MachineMemOperand *mmo) {$/;"	f	function:RVInstrInfo::getInstructionUniformity	file:
__anon7d4c99fa0902	RVInstrInfo.cpp	/^                                     bool IsReversible, bool IsSigned) -> bool {$/;"	f	function:RVInstrInfo::optimizeCompareInstr	typeref:typename:bool	file:
__anon7d4c99fa0a02	RVInstrInfo.cpp	/^    const auto isMask = [&Mask, SrcSize](const MachineOperand *MO) -> bool {$/;"	f	function:RVInstrInfo::optimizeCompareInstr::__anon7d4c99fa0902	typeref:typename:bool	file:
__anon7e59fb9b0111	GCNCreateVOPD.cpp	/^namespace {$/;"	n	file:
__anon7e838c8c0111	GCNNSAReassign.cpp	/^namespace {$/;"	n	file:
__anon7e838c8c0203	GCNNSAReassign.cpp	/^  typedef enum {$/;"	g	class:__anon7e838c8c0111::GCNNSAReassign	file:
__anon7e838c8c0302	GCNNSAReassign.cpp	/^                                [this](const Candidate &C, SlotIndex I) {$/;"	f	function:GCNNSAReassign::runOnMachineFunction	file:
__anon7e8d0eca010a	RVMachineFunctionInfo.h	/^  union {$/;"	u	struct:llvm::yaml::SIArgument
__anon7e8d0eca020a	RVMachineFunctionInfo.h	/^  union {$/;"	u	class:llvm::PrologEpilogSGPRSaveRestoreInfo
__anon7e8d0eca0302	RVMachineFunctionInfo.h	/^                                        PrologEpilogSGPRSaveRestoreInfo> &SI) {$/;"	f	function:llvm::RVMachineFunctionInfo::checkIndexInPrologEpilogSGPRSpills	file:
__anon807286a30111	GCNMinRegStrategy.cpp	/^namespace {$/;"	n	file:
__anon807286a30202	GCNMinRegStrategy.cpp	/^    Num = findMax(Num, [=](const Candidate &C) { return C.Priority; });$/;"	f	function:GCNMinRegScheduler::pickCandidate	file:
__anon807286a30302	GCNMinRegStrategy.cpp	/^    Num = findMax(Num, [=](const Candidate &C) {$/;"	f	function:GCNMinRegScheduler::pickCandidate	file:
__anon807286a30402	GCNMinRegStrategy.cpp	/^    Num = findMax(Num, [=](const Candidate &C) {$/;"	f	function:GCNMinRegScheduler::pickCandidate	file:
__anon807286a30502	GCNMinRegStrategy.cpp	/^    Num = findMax(Num, [=](const Candidate &C) { return -(int64_t)C.SU->NodeNum; });$/;"	f	function:GCNMinRegScheduler::pickCandidate	file:
__anon8438c2fb0111	SIFixVGPRCopies.cpp	/^namespace {$/;"	n	file:
__anon8c5c3e4f0111	SIFormMemoryClauses.cpp	/^namespace {$/;"	n	file:
__anon92cc91540102	Utils/RVGPUMemoryUtils.cpp	/^  const auto checkNoAlias = [AA, Ptr](auto I) -> bool {$/;"	f	function:llvm::RVGPU::isReallyAClobber	typeref:typename:bool	file:
__anon940616180111	RVGPUInstCombineIntrinsic.cpp	/^namespace {$/;"	n	file:
__anon940616180202	RVGPUInstCombineIntrinsic.cpp	/^            II, II, NewImageDimIntr->Intr, IC, [&](auto &Args, auto &ArgTys) {$/;"	f	function:simplifyRVGPUImageIntrinsic	file:
__anon940616180302	RVGPUInstCombineIntrinsic.cpp	/^            II, II, NewImageDimIntr->Intr, IC, [&](auto &Args, auto &ArgTys) {$/;"	f	function:simplifyRVGPUImageIntrinsic	file:
__anon940616180402	RVGPUInstCombineIntrinsic.cpp	/^            II, II, NewImageDimIntr->Intr, IC, [&](auto &Args, auto &ArgTys) {$/;"	f	function:simplifyRVGPUImageIntrinsic	file:
__anon940616180502	RVGPUInstCombineIntrinsic.cpp	/^            II, II, NewImageDimIntr->Intr, IC, [&](auto &Args, auto &ArgTys) {$/;"	f	function:simplifyRVGPUImageIntrinsic	file:
__anon940616180602	RVGPUInstCombineIntrinsic.cpp	/^                                     [&](auto &Args, auto &ArgTys) {$/;"	f	function:simplifyRVGPUImageIntrinsic	file:
__anon940616180702	RVGPUInstCombineIntrinsic.cpp	/^      II, II, II.getIntrinsicID(), IC, [&](auto &Args, auto &ArgTys) {$/;"	f	function:simplifyRVGPUImageIntrinsic	file:
__anon9509ab050111	MCTargetDesc/RVGPUMCTargetDesc.cpp	/^namespace {$/;"	n	file:
__anon9c77d1d40111	RVGPUAnnotateUniformValues.cpp	/^namespace {$/;"	n	file:
__anona1dbb8460102	SIMachineScheduler.cpp	/^                     SIScheduleBlockLinkKind> S) {$/;"	f	function:SIScheduleBlock::addPred	file:
__anona1dbb8460202	SIMachineScheduler.cpp	/^                 [=](SIScheduleBlock *P) { return SuccID == P->getID(); }) &&$/;"	f	function:SIScheduleBlock::addSucc	file:
__anona5afe38d0111	RVGPULibFunc.cpp	/^namespace {$/;"	n	file:
__anona5afe38d0211	RVGPULibFunc.cpp	/^namespace {$/;"	n	file:
__anona5afe38d0311	RVGPULibFunc.cpp	/^namespace {$/;"	n	file:
__anona6cbb7940111	SIInsertWaitcnts.cpp	/^namespace {$/;"	n	file:
__anona6cbb7940211	SIInsertWaitcnts.cpp	/^namespace {$/;"	n	file:
__anona6cbb7940302	SIInsertWaitcnts.cpp	/^  return any_of(MI.memoperands(), [](const MachineMemOperand *Memop) {$/;"	f	function:SIInsertWaitcnts::mayAccessScratchThroughFlat	file:
__anona97e3cd70111	SIPostRABundler.cpp	/^namespace {$/;"	n	file:
__anona97e3cd70202	SIPostRABundler.cpp	/^    bool HasIGLPInstrs = llvm::any_of(MBB.instrs(), [](MachineInstr &MI) {$/;"	f	function:SIPostRABundler::runOnMachineFunction	file:
__anonad1ccdb10111	RVGPUAlwaysInlinePass.cpp	/^namespace {$/;"	n	file:
__anonad2fb0ad0111	RVGPUCallLowering.cpp	/^namespace {$/;"	n	file:
__anonad2fb0ad0202	RVGPUCallLowering.cpp	/^  if (any_of(CallerF.args(), [](const Argument &A) {$/;"	f	function:RVGPUCallLowering::isEligibleForTailCallOptimization	file:
__anonad2fb0ad0302	RVGPUCallLowering.cpp	/^                     [](ISD::ArgFlagsTy F) { return F.isInReg(); }) &&$/;"	f	function:RVGPUCallLowering::lowerChainCall	file:
__anonad2fb0ad0402	RVGPUCallLowering.cpp	/^                      [](ISD::ArgFlagsTy F) { return F.isInReg(); }) &&$/;"	f	function:RVGPUCallLowering::lowerChainCall	file:
__anonb4b8f6f20111	RVGPUInstructionSelector.h	/^namespace {$/;"	n
__anonb779c2ff0111	RVGPUPreLegalizerCombiner.cpp	/^namespace {$/;"	n	file:
__anonb779c2ff0202	RVGPUPreLegalizerCombiner.cpp	/^  auto IsApplicableForCombine = [&MatchInfo]() -> bool {$/;"	f	function:__anonb779c2ff0111::RVGPUPreLegalizerCombinerImpl::matchClampI64ToI16	typeref:typename:bool	file:
__anonbb53b5ac0111	RVGPUExportClustering.cpp	/^namespace {$/;"	n	file:
__anonbb7d308f0102	RVGPUAsmPrinter.cpp	/^                                     StringRef RemarkLabel, auto Argument) {$/;"	f	function:RVGPUAsmPrinter::emitResourceUsageRemarks	file:
__anonbb7d308f0202	RVGPUAsmPrinter.cpp	/^    ORE->emit([&]() {$/;"	f	function:RVGPUAsmPrinter::emitResourceUsageRemarks::__anonbb7d308f0102	file:
__anonbd23f2080111	RVGPURemoveIncompatibleFunctions.cpp	/^namespace {$/;"	n	file:
__anonbd23f2080202	RVGPURemoveIncompatibleFunctions.cpp	/^  ORE.emit([&]() {$/;"	f	function:__anonbd23f2080111::reportFunctionRemoved	file:
__anonbd2d93ba0111	GCNILPSched.cpp	/^namespace {$/;"	n	file:
__anonbd2d93ba0202	GCNILPSched.cpp	/^        [=](const Candidate& C1, const Candidate& C2) {$/;"	f	function:GCNILPScheduler::schedule	file:
__anonc08c76180102	GCNVOPDUtils.cpp	/^  auto addLiteral = [&](const MachineOperand &Op) {$/;"	f	function:llvm::checkVOPDRegConstraints	file:
__anonc08c76180202	GCNVOPDUtils.cpp	/^  assert([&]() -> bool {$/;"	f	function:llvm::checkVOPDRegConstraints	typeref:typename:bool	file:
__anonc08c76180302	GCNVOPDUtils.cpp	/^  auto getVRegIdx = [&](unsigned OpcodeIdx, unsigned OperandIdx) {$/;"	f	function:llvm::checkVOPDRegConstraints	file:
__anonc08c76180411	GCNVOPDUtils.cpp	/^namespace {$/;"	n	file:
__anonc14c2af00111	RVGPUUnifyDivergentExitNodes.cpp	/^namespace {$/;"	n	file:
__anonc14c2af00202	RVGPUUnifyDivergentExitNodes.cpp	/^      PDT.roots(), [&](auto BB) { return !isUniformlyReached(UA, *BB); });$/;"	f	function:RVGPUUnifyDivergentExitNodesImpl::run	file:
__anonc1a9fdd50102	RVGPULegalizerInfo.cpp	/^  return [=](const LegalityQuery &Query) {$/;"	f	function:isSmallOddVector	file:
__anonc1a9fdd50202	RVGPULegalizerInfo.cpp	/^  return [=](const LegalityQuery &Query) {$/;"	f	function:sizeIsMultipleOf32	file:
__anonc1a9fdd50302	RVGPULegalizerInfo.cpp	/^  return [=](const LegalityQuery &Query) {$/;"	f	function:isWideVec16	file:
__anonc1a9fdd50402	RVGPULegalizerInfo.cpp	/^  return [=](const LegalityQuery &Query) {$/;"	f	function:oneMoreElement	file:
__anonc1a9fdd50502	RVGPULegalizerInfo.cpp	/^  return [=](const LegalityQuery &Query) {$/;"	f	function:fewerEltsToSize64Vector	file:
__anonc1a9fdd50602	RVGPULegalizerInfo.cpp	/^  return [=](const LegalityQuery &Query) {$/;"	f	function:moreEltsToNext32Bit	file:
__anonc1a9fdd50702	RVGPULegalizerInfo.cpp	/^  return [=](const LegalityQuery &Query) {$/;"	f	function:moreElementsToNextExistingRegClass	file:
__anonc1a9fdd50802	RVGPULegalizerInfo.cpp	/^  return [=](const LegalityQuery &Query) {$/;"	f	function:bitcastToRegisterType	file:
__anonc1a9fdd50902	RVGPULegalizerInfo.cpp	/^  return [=](const LegalityQuery &Query) {$/;"	f	function:bitcastToVectorElement32	file:
__anonc1a9fdd50a02	RVGPULegalizerInfo.cpp	/^  return [=](const LegalityQuery &Query) {$/;"	f	function:vectorSmallerThan	file:
__anonc1a9fdd50b02	RVGPULegalizerInfo.cpp	/^  return [=](const LegalityQuery &Query) {$/;"	f	function:vectorWiderThan	file:
__anonc1a9fdd50c02	RVGPULegalizerInfo.cpp	/^  return [=](const LegalityQuery &Query) {$/;"	f	function:numElementsNotEven	file:
__anonc1a9fdd50d02	RVGPULegalizerInfo.cpp	/^  return [=](const LegalityQuery &Query) {$/;"	f	function:isRegisterType	file:
__anonc1a9fdd50e02	RVGPULegalizerInfo.cpp	/^  return [=](const LegalityQuery &Query) {$/;"	f	function:isIllegalRegisterType	file:
__anonc1a9fdd50f02	RVGPULegalizerInfo.cpp	/^  return [=](const LegalityQuery &Query) {$/;"	f	function:elementTypeIsLegal	file:
__anonc1a9fdd51002	RVGPULegalizerInfo.cpp	/^  return [=](const LegalityQuery &Query) {$/;"	f	function:isWideScalarExtLoadTruncStore	file:
__anonc1a9fdd51102	RVGPULegalizerInfo.cpp	/^  auto GetAddrSpacePtr = [&TM](unsigned AS) {$/;"	f	function:RVGPULegalizerInfo::RVGPULegalizerInfo	file:
__anonc1a9fdd51202	RVGPULegalizerInfo.cpp	/^                     [](const LegalityQuery &Query) {$/;"	f	function:RVGPULegalizerInfo::RVGPULegalizerInfo	file:
__anonc1a9fdd51302	RVGPULegalizerInfo.cpp	/^      .narrowScalarIf(largerThan(1, 0), [](const LegalityQuery &Query) {$/;"	f	function:RVGPULegalizerInfo::RVGPULegalizerInfo	file:
__anonc1a9fdd51402	RVGPULegalizerInfo.cpp	/^                     [](const LegalityQuery &Query) {$/;"	f	function:RVGPULegalizerInfo::RVGPULegalizerInfo	file:
__anonc1a9fdd51502	RVGPULegalizerInfo.cpp	/^      .narrowScalarIf(largerThan(0, 1), [](const LegalityQuery &Query) {$/;"	f	function:RVGPULegalizerInfo::RVGPULegalizerInfo	file:
__anonc1a9fdd51602	RVGPULegalizerInfo.cpp	/^                                    bool IsLoad) -> bool {$/;"	f	function:RVGPULegalizerInfo::RVGPULegalizerInfo	typeref:typename:bool	file:
__anonc1a9fdd51702	RVGPULegalizerInfo.cpp	/^      [=](const LegalityQuery &Query) -> bool {$/;"	f	function:RVGPULegalizerInfo::RVGPULegalizerInfo	typeref:typename:bool	file:
__anonc1a9fdd51802	RVGPULegalizerInfo.cpp	/^    Actions.customIf([=](const LegalityQuery &Query) -> bool {$/;"	f	function:RVGPULegalizerInfo::RVGPULegalizerInfo	typeref:typename:bool	file:
__anonc1a9fdd51902	RVGPULegalizerInfo.cpp	/^      [=](const LegalityQuery &Query) -> bool {$/;"	f	function:RVGPULegalizerInfo::RVGPULegalizerInfo	typeref:typename:bool	file:
__anonc1a9fdd51a02	RVGPULegalizerInfo.cpp	/^      Actions.customIf([=](const LegalityQuery &Query) -> bool {$/;"	f	function:RVGPULegalizerInfo::RVGPULegalizerInfo	typeref:typename:bool	file:
__anonc1a9fdd51b02	RVGPULegalizerInfo.cpp	/^            [=](const LegalityQuery &Query) -> bool {$/;"	f	function:RVGPULegalizerInfo::RVGPULegalizerInfo	typeref:typename:bool	file:
__anonc1a9fdd51c02	RVGPULegalizerInfo.cpp	/^            [=](const LegalityQuery &Query) -> std::pair<unsigned, LLT> {$/;"	f	function:RVGPULegalizerInfo::RVGPULegalizerInfo	typeref:typename:std::pair<unsigned,LLT>	file:
__anonc1a9fdd51d02	RVGPULegalizerInfo.cpp	/^            [=](const LegalityQuery &Query) -> bool {$/;"	f	function:RVGPULegalizerInfo::RVGPULegalizerInfo	typeref:typename:bool	file:
__anonc1a9fdd51e02	RVGPULegalizerInfo.cpp	/^            [=](const LegalityQuery &Query) -> std::pair<unsigned, LLT> {$/;"	f	function:RVGPULegalizerInfo::RVGPULegalizerInfo	typeref:typename:std::pair<unsigned,LLT>	file:
__anonc1a9fdd51f02	RVGPULegalizerInfo.cpp	/^                         [=](const LegalityQuery &Query) -> bool {$/;"	f	function:RVGPULegalizerInfo::RVGPULegalizerInfo	typeref:typename:bool	file:
__anonc1a9fdd52002	RVGPULegalizerInfo.cpp	/^      [=](const LegalityQuery &Query) {$/;"	f	function:RVGPULegalizerInfo::RVGPULegalizerInfo	file:
__anonc1a9fdd52102	RVGPULegalizerInfo.cpp	/^      .customIf([=](const LegalityQuery &Query) {$/;"	f	function:RVGPULegalizerInfo::RVGPULegalizerInfo	file:
__anonc1a9fdd52202	RVGPULegalizerInfo.cpp	/^        [=](const LegalityQuery &Query) {$/;"	f	function:RVGPULegalizerInfo::RVGPULegalizerInfo	file:
__anonc1a9fdd52302	RVGPULegalizerInfo.cpp	/^    .unsupportedIf([=](const LegalityQuery &Query) {$/;"	f	function:RVGPULegalizerInfo::RVGPULegalizerInfo	file:
__anonc1a9fdd52402	RVGPULegalizerInfo.cpp	/^      .lowerIf([=](const LegalityQuery &Query) {$/;"	f	function:RVGPULegalizerInfo::RVGPULegalizerInfo	file:
__anonc1a9fdd52502	RVGPULegalizerInfo.cpp	/^      .legalIf([=](const LegalityQuery &Query) {$/;"	f	function:RVGPULegalizerInfo::RVGPULegalizerInfo	file:
__anonc1a9fdd52602	RVGPULegalizerInfo.cpp	/^        [=](const LegalityQuery &Query) {$/;"	f	function:RVGPULegalizerInfo::RVGPULegalizerInfo	file:
__anonc1a9fdd52702	RVGPULegalizerInfo.cpp	/^        [=](const LegalityQuery &Query) {$/;"	f	function:RVGPULegalizerInfo::RVGPULegalizerInfo	file:
__anonc1a9fdd52802	RVGPULegalizerInfo.cpp	/^    auto notValidElt = [=](const LegalityQuery &Query, unsigned TypeIdx) {$/;"	f	function:RVGPULegalizerInfo::RVGPULegalizerInfo	file:
__anonc1a9fdd52902	RVGPULegalizerInfo.cpp	/^      .lowerIf([=](const LegalityQuery &Query) {$/;"	f	function:RVGPULegalizerInfo::RVGPULegalizerInfo	file:
__anonc1a9fdd52a02	RVGPULegalizerInfo.cpp	/^        [=](const LegalityQuery &Query) { return notValidElt(Query, LitTyIdx); },$/;"	f	function:RVGPULegalizerInfo::RVGPULegalizerInfo	file:
__anonc1a9fdd52b02	RVGPULegalizerInfo.cpp	/^        [=](const LegalityQuery &Query) { return notValidElt(Query, BigTyIdx); },$/;"	f	function:RVGPULegalizerInfo::RVGPULegalizerInfo	file:
__anonc1a9fdd52c02	RVGPULegalizerInfo.cpp	/^        [=](const LegalityQuery &Query) {$/;"	f	function:RVGPULegalizerInfo::RVGPULegalizerInfo	file:
__anonc1a9fdd52d02	RVGPULegalizerInfo.cpp	/^      [=](const LegalityQuery &Query) {$/;"	f	function:RVGPULegalizerInfo::RVGPULegalizerInfo	file:
__anonc1a9fdd52e02	RVGPULegalizerInfo.cpp	/^      [=](const LegalityQuery &Query) {$/;"	f	function:RVGPULegalizerInfo::RVGPULegalizerInfo	file:
__anonc1a9fdd52f02	RVGPULegalizerInfo.cpp	/^  auto getZero32 = [&]() -> Register {$/;"	f	function:RVGPULegalizerInfo::buildMultiply	typeref:typename:Register	file:
__anonc1a9fdd53002	RVGPULegalizerInfo.cpp	/^  auto getZero64 = [&]() -> Register {$/;"	f	function:RVGPULegalizerInfo::buildMultiply	typeref:typename:Register	file:
__anonc1a9fdd53102	RVGPULegalizerInfo.cpp	/^      [&](Register &LocalAccum, const Carry &CarryIn) -> Register {$/;"	f	function:RVGPULegalizerInfo::buildMultiply	typeref:typename:Register	file:
__anonc1a9fdd53202	RVGPULegalizerInfo.cpp	/^          -> Carry {$/;"	f	function:RVGPULegalizerInfo::buildMultiply	typeref:typename:Carry	file:
__anonc1a9fdd53302	RVGPULegalizerInfo.cpp	/^  auto ChangedInstr = make_scope_exit([&] { Observer.changedInstr(MI); });$/;"	f	function:RVGPULegalizerInfo::legalizeImageIntrinsic	file:
__anonc1a9fdd53402	RVGPULegalizerInfo.cpp	/^  auto padWithUndef = [&](LLT Ty, int NumElts) {$/;"	f	function:RVGPULegalizerInfo::legalizeImageIntrinsic	file:
__anonc1a9fdd53502	RVGPULegalizerInfo.cpp	/^    auto packLanes = [&Ops, &S32, &V3S32, &B](Register Src) {$/;"	f	function:RVGPULegalizerInfo::legalizeBVHIntrinsic	file:
__anonc1a9fdd53602	RVGPULegalizerInfo.cpp	/^    auto packLanes = [&Ops, &S32, &B](Register Src) {$/;"	f	function:RVGPULegalizerInfo::legalizeBVHIntrinsic	file:
__anonc67e98680102	GCNSchedStrategy.cpp	/^      DAG->begin(), DAG->end(), [](MachineBasicBlock::iterator MI) {$/;"	f	function:hasIGLPInstrs	file:
__anonc6d2750d0102	RVGPUInstructionSelector.cpp	/^                          unsigned S64Opc) {$/;"	f	function:getV_CMPOpcode	file:
__anonc6d2750d0202	RVGPUInstructionSelector.cpp	/^  const auto BuildCopy = [&](Register SrcReg) {$/;"	f	function:RVGPUInstructionSelector::selectBallot	file:
__anonc6d2750d0302	RVGPUInstructionSelector.cpp	/^      [=](MachineInstrBuilder &MIB) { MIB.add(Root); }$/;"	f	function:RVGPUInstructionSelector::selectVCSRC	file:
__anonc6d2750d0402	RVGPUInstructionSelector.cpp	/^      [=](MachineInstrBuilder &MIB) { MIB.add(Root); }$/;"	f	function:RVGPUInstructionSelector::selectVSRC0	file:
__anonc6d2750d0502	RVGPUInstructionSelector.cpp	/^      [=](MachineInstrBuilder &MIB) {$/;"	f	function:RVGPUInstructionSelector::selectVOP3Mods0	file:
__anonc6d2750d0602	RVGPUInstructionSelector.cpp	/^      [=](MachineInstrBuilder &MIB) { MIB.addImm(Mods); }, \/\/ src0_mods$/;"	f	function:RVGPUInstructionSelector::selectVOP3Mods0	file:
__anonc6d2750d0702	RVGPUInstructionSelector.cpp	/^      [=](MachineInstrBuilder &MIB) { MIB.addImm(0); },    \/\/ clamp$/;"	f	function:RVGPUInstructionSelector::selectVOP3Mods0	file:
__anonc6d2750d0802	RVGPUInstructionSelector.cpp	/^      [=](MachineInstrBuilder &MIB) { MIB.addImm(0); }     \/\/ omod$/;"	f	function:RVGPUInstructionSelector::selectVOP3Mods0	file:
__anonc6d2750d0902	RVGPUInstructionSelector.cpp	/^      [=](MachineInstrBuilder &MIB) {$/;"	f	function:RVGPUInstructionSelector::selectVOP3BMods0	file:
__anonc6d2750d0a02	RVGPUInstructionSelector.cpp	/^      [=](MachineInstrBuilder &MIB) { MIB.addImm(Mods); }, \/\/ src0_mods$/;"	f	function:RVGPUInstructionSelector::selectVOP3BMods0	file:
__anonc6d2750d0b02	RVGPUInstructionSelector.cpp	/^      [=](MachineInstrBuilder &MIB) { MIB.addImm(0); },    \/\/ clamp$/;"	f	function:RVGPUInstructionSelector::selectVOP3BMods0	file:
__anonc6d2750d0c02	RVGPUInstructionSelector.cpp	/^      [=](MachineInstrBuilder &MIB) { MIB.addImm(0); }     \/\/ omod$/;"	f	function:RVGPUInstructionSelector::selectVOP3BMods0	file:
__anonc6d2750d0d02	RVGPUInstructionSelector.cpp	/^      [=](MachineInstrBuilder &MIB) { MIB.add(Root); },$/;"	f	function:RVGPUInstructionSelector::selectVOP3OMods	file:
__anonc6d2750d0e02	RVGPUInstructionSelector.cpp	/^      [=](MachineInstrBuilder &MIB) { MIB.addImm(0); }, \/\/ clamp$/;"	f	function:RVGPUInstructionSelector::selectVOP3OMods	file:
__anonc6d2750d0f02	RVGPUInstructionSelector.cpp	/^      [=](MachineInstrBuilder &MIB) { MIB.addImm(0); }  \/\/ omod$/;"	f	function:RVGPUInstructionSelector::selectVOP3OMods	file:
__anonc6d2750d1002	RVGPUInstructionSelector.cpp	/^      [=](MachineInstrBuilder &MIB) {$/;"	f	function:RVGPUInstructionSelector::selectVOP3Mods	file:
__anonc6d2750d1102	RVGPUInstructionSelector.cpp	/^      [=](MachineInstrBuilder &MIB) { MIB.addImm(Mods); } \/\/ src_mods$/;"	f	function:RVGPUInstructionSelector::selectVOP3Mods	file:
__anonc6d2750d1202	RVGPUInstructionSelector.cpp	/^      [=](MachineInstrBuilder &MIB) {$/;"	f	function:RVGPUInstructionSelector::selectVOP3ModsNonCanonicalizing	file:
__anonc6d2750d1302	RVGPUInstructionSelector.cpp	/^      [=](MachineInstrBuilder &MIB) { MIB.addImm(Mods); } \/\/ src_mods$/;"	f	function:RVGPUInstructionSelector::selectVOP3ModsNonCanonicalizing	file:
__anonc6d2750d1402	RVGPUInstructionSelector.cpp	/^      [=](MachineInstrBuilder &MIB) {$/;"	f	function:RVGPUInstructionSelector::selectVOP3BMods	file:
__anonc6d2750d1502	RVGPUInstructionSelector.cpp	/^      [=](MachineInstrBuilder &MIB) { MIB.addImm(Mods); } \/\/ src_mods$/;"	f	function:RVGPUInstructionSelector::selectVOP3BMods	file:
__anonc6d2750d1602	RVGPUInstructionSelector.cpp	/^      [=](MachineInstrBuilder &MIB) { MIB.addReg(Reg); },$/;"	f	function:RVGPUInstructionSelector::selectVOP3NoMods	file:
__anonc6d2750d1702	RVGPUInstructionSelector.cpp	/^      [=](MachineInstrBuilder &MIB) { MIB.addReg(Src); },$/;"	f	function:RVGPUInstructionSelector::selectVOP3PMods	file:
__anonc6d2750d1802	RVGPUInstructionSelector.cpp	/^      [=](MachineInstrBuilder &MIB) { MIB.addImm(Mods); }  \/\/ src_mods$/;"	f	function:RVGPUInstructionSelector::selectVOP3PMods	file:
__anonc6d2750d1902	RVGPUInstructionSelector.cpp	/^      [=](MachineInstrBuilder &MIB) { MIB.addReg(Src); },$/;"	f	function:RVGPUInstructionSelector::selectVOP3PModsDOT	file:
__anonc6d2750d1a02	RVGPUInstructionSelector.cpp	/^      [=](MachineInstrBuilder &MIB) { MIB.addImm(Mods); }  \/\/ src_mods$/;"	f	function:RVGPUInstructionSelector::selectVOP3PModsDOT	file:
__anonc6d2750d1b02	RVGPUInstructionSelector.cpp	/^      [=](MachineInstrBuilder &MIB) { MIB.addImm(Mods); } \/\/ src_mods$/;"	f	function:RVGPUInstructionSelector::selectDotIUVOP3PMods	file:
__anonc6d2750d1c02	RVGPUInstructionSelector.cpp	/^      [=](MachineInstrBuilder &MIB) { MIB.addImm(Mods); } \/\/ src_mods$/;"	f	function:RVGPUInstructionSelector::selectWMMAOpSelVOP3PMods	file:
__anonc6d2750d1d02	RVGPUInstructionSelector.cpp	/^      [=](MachineInstrBuilder &MIB) { MIB.addReg(Src); },$/;"	f	function:RVGPUInstructionSelector::selectVOP3OpSelMods	file:
__anonc6d2750d1e02	RVGPUInstructionSelector.cpp	/^      [=](MachineInstrBuilder &MIB) { MIB.addImm(Mods); } \/\/ src_mods$/;"	f	function:RVGPUInstructionSelector::selectVOP3OpSelMods	file:
__anonc6d2750d1f02	RVGPUInstructionSelector.cpp	/^      [=](MachineInstrBuilder &MIB) {$/;"	f	function:RVGPUInstructionSelector::selectVINTERPMods	file:
__anonc6d2750d2002	RVGPUInstructionSelector.cpp	/^      [=](MachineInstrBuilder &MIB) { MIB.addImm(Mods); }, \/\/ src0_mods$/;"	f	function:RVGPUInstructionSelector::selectVINTERPMods	file:
__anonc6d2750d2102	RVGPUInstructionSelector.cpp	/^      [=](MachineInstrBuilder &MIB) {$/;"	f	function:RVGPUInstructionSelector::selectVINTERPModsHi	file:
__anonc6d2750d2202	RVGPUInstructionSelector.cpp	/^      [=](MachineInstrBuilder &MIB) { MIB.addImm(Mods); }, \/\/ src0_mods$/;"	f	function:RVGPUInstructionSelector::selectVINTERPModsHi	file:
__anonc6d2750d2302	RVGPUInstructionSelector.cpp	/^  return {{[=](MachineInstrBuilder &MIB) { MIB.addReg(Base); },$/;"	f	function:RVGPUInstructionSelector::selectSmrdImm	file:
__anonc6d2750d2402	RVGPUInstructionSelector.cpp	/^           [=](MachineInstrBuilder &MIB) { MIB.addImm(Offset); }}};$/;"	f	function:RVGPUInstructionSelector::selectSmrdImm	file:
__anonc6d2750d2502	RVGPUInstructionSelector.cpp	/^    [=](MachineInstrBuilder &MIB) { MIB.addReg(PtrReg); },$/;"	f	function:RVGPUInstructionSelector::selectSmrdImm32	file:
__anonc6d2750d2602	RVGPUInstructionSelector.cpp	/^    [=](MachineInstrBuilder &MIB) { MIB.addImm(*EncodedImm); }$/;"	f	function:RVGPUInstructionSelector::selectSmrdImm32	file:
__anonc6d2750d2702	RVGPUInstructionSelector.cpp	/^  return {{[=](MachineInstrBuilder &MIB) { MIB.addReg(Base); },$/;"	f	function:RVGPUInstructionSelector::selectSmrdSgpr	file:
__anonc6d2750d2802	RVGPUInstructionSelector.cpp	/^           [=](MachineInstrBuilder &MIB) { MIB.addReg(SOffset); }}};$/;"	f	function:RVGPUInstructionSelector::selectSmrdSgpr	file:
__anonc6d2750d2902	RVGPUInstructionSelector.cpp	/^  return {{[=](MachineInstrBuilder &MIB) { MIB.addReg(Base); },$/;"	f	function:RVGPUInstructionSelector::selectSmrdSgprImm	file:
__anonc6d2750d2a02	RVGPUInstructionSelector.cpp	/^           [=](MachineInstrBuilder &MIB) { MIB.addReg(SOffset); },$/;"	f	function:RVGPUInstructionSelector::selectSmrdSgprImm	file:
__anonc6d2750d2b02	RVGPUInstructionSelector.cpp	/^           [=](MachineInstrBuilder &MIB) { MIB.addImm(Offset); }}};$/;"	f	function:RVGPUInstructionSelector::selectSmrdSgprImm	file:
__anonc6d2750d2c02	RVGPUInstructionSelector.cpp	/^      [=](MachineInstrBuilder &MIB) { MIB.addReg(PtrWithOffset.first); },$/;"	f	function:RVGPUInstructionSelector::selectFlatOffset	file:
__anonc6d2750d2d02	RVGPUInstructionSelector.cpp	/^      [=](MachineInstrBuilder &MIB) { MIB.addImm(PtrWithOffset.second); },$/;"	f	function:RVGPUInstructionSelector::selectFlatOffset	file:
__anonc6d2750d2e02	RVGPUInstructionSelector.cpp	/^      [=](MachineInstrBuilder &MIB) { MIB.addReg(PtrWithOffset.first); },$/;"	f	function:RVGPUInstructionSelector::selectGlobalOffset	file:
__anonc6d2750d2f02	RVGPUInstructionSelector.cpp	/^      [=](MachineInstrBuilder &MIB) { MIB.addImm(PtrWithOffset.second); },$/;"	f	function:RVGPUInstructionSelector::selectGlobalOffset	file:
__anonc6d2750d3002	RVGPUInstructionSelector.cpp	/^      [=](MachineInstrBuilder &MIB) { MIB.addReg(PtrWithOffset.first); },$/;"	f	function:RVGPUInstructionSelector::selectScratchOffset	file:
__anonc6d2750d3102	RVGPUInstructionSelector.cpp	/^      [=](MachineInstrBuilder &MIB) { MIB.addImm(PtrWithOffset.second); },$/;"	f	function:RVGPUInstructionSelector::selectScratchOffset	file:
__anonc6d2750d3202	RVGPUInstructionSelector.cpp	/^                [=](MachineInstrBuilder &MIB) { MIB.addReg(PtrBase); }, \/\/ saddr$/;"	f	function:RVGPUInstructionSelector::selectGlobalSAddr	file:
__anonc6d2750d3302	RVGPUInstructionSelector.cpp	/^                [=](MachineInstrBuilder &MIB) {$/;"	f	function:RVGPUInstructionSelector::selectGlobalSAddr	file:
__anonc6d2750d3402	RVGPUInstructionSelector.cpp	/^                [=](MachineInstrBuilder &MIB) { MIB.addImm(SplitImmOffset); },$/;"	f	function:RVGPUInstructionSelector::selectGlobalSAddr	file:
__anonc6d2750d3502	RVGPUInstructionSelector.cpp	/^        return {{[=](MachineInstrBuilder &MIB) { \/\/ saddr$/;"	f	function:RVGPUInstructionSelector::selectGlobalSAddr	file:
__anonc6d2750d3602	RVGPUInstructionSelector.cpp	/^                 [=](MachineInstrBuilder &MIB) { \/\/ voffset$/;"	f	function:RVGPUInstructionSelector::selectGlobalSAddr	file:
__anonc6d2750d3702	RVGPUInstructionSelector.cpp	/^                 [=](MachineInstrBuilder &MIB) { \/\/ offset$/;"	f	function:RVGPUInstructionSelector::selectGlobalSAddr	file:
__anonc6d2750d3802	RVGPUInstructionSelector.cpp	/^      [=](MachineInstrBuilder &MIB) { MIB.addReg(AddrDef->Reg); }, \/\/ saddr$/;"	f	function:RVGPUInstructionSelector::selectGlobalSAddr	file:
__anonc6d2750d3902	RVGPUInstructionSelector.cpp	/^      [=](MachineInstrBuilder &MIB) { MIB.addReg(VOffset); },      \/\/ voffset$/;"	f	function:RVGPUInstructionSelector::selectGlobalSAddr	file:
__anonc6d2750d3a02	RVGPUInstructionSelector.cpp	/^      [=](MachineInstrBuilder &MIB) { MIB.addImm(ImmOffset); }     \/\/ offset$/;"	f	function:RVGPUInstructionSelector::selectGlobalSAddr	file:
__anonc6d2750d3b02	RVGPUInstructionSelector.cpp	/^        [=](MachineInstrBuilder &MIB) { MIB.addFrameIndex(FI); }, \/\/ saddr$/;"	f	function:RVGPUInstructionSelector::selectScratchSAddr	file:
__anonc6d2750d3c02	RVGPUInstructionSelector.cpp	/^        [=](MachineInstrBuilder &MIB) { MIB.addImm(ImmOffset); } \/\/ offset$/;"	f	function:RVGPUInstructionSelector::selectScratchSAddr	file:
__anonc6d2750d3d02	RVGPUInstructionSelector.cpp	/^      [=](MachineInstrBuilder &MIB) { MIB.addReg(SAddr); }, \/\/ saddr$/;"	f	function:RVGPUInstructionSelector::selectScratchSAddr	file:
__anonc6d2750d3e02	RVGPUInstructionSelector.cpp	/^      [=](MachineInstrBuilder &MIB) { MIB.addImm(ImmOffset); } \/\/ offset$/;"	f	function:RVGPUInstructionSelector::selectScratchSAddr	file:
__anonc6d2750d3f02	RVGPUInstructionSelector.cpp	/^        [=](MachineInstrBuilder &MIB) { MIB.addReg(RHS); }, \/\/ vaddr$/;"	f	function:RVGPUInstructionSelector::selectScratchSVAddr	file:
__anonc6d2750d4002	RVGPUInstructionSelector.cpp	/^        [=](MachineInstrBuilder &MIB) { MIB.addFrameIndex(FI); }, \/\/ saddr$/;"	f	function:RVGPUInstructionSelector::selectScratchSVAddr	file:
__anonc6d2750d4102	RVGPUInstructionSelector.cpp	/^        [=](MachineInstrBuilder &MIB) { MIB.addImm(ImmOffset); } \/\/ offset$/;"	f	function:RVGPUInstructionSelector::selectScratchSVAddr	file:
__anonc6d2750d4202	RVGPUInstructionSelector.cpp	/^      [=](MachineInstrBuilder &MIB) { MIB.addReg(RHS); }, \/\/ vaddr$/;"	f	function:RVGPUInstructionSelector::selectScratchSVAddr	file:
__anonc6d2750d4302	RVGPUInstructionSelector.cpp	/^      [=](MachineInstrBuilder &MIB) { MIB.addReg(LHS); }, \/\/ saddr$/;"	f	function:RVGPUInstructionSelector::selectScratchSVAddr	file:
__anonc6d2750d4402	RVGPUInstructionSelector.cpp	/^      [=](MachineInstrBuilder &MIB) { MIB.addImm(ImmOffset); } \/\/ offset$/;"	f	function:RVGPUInstructionSelector::selectScratchSVAddr	file:
__anonc6d2750d4502	RVGPUInstructionSelector.cpp	/^    return {{[=](MachineInstrBuilder &MIB) { \/\/ rsrc$/;"	f	function:RVGPUInstructionSelector::selectMUBUFScratchOffen	file:
__anonc6d2750d4602	RVGPUInstructionSelector.cpp	/^             [=](MachineInstrBuilder &MIB) { \/\/ vaddr$/;"	f	function:RVGPUInstructionSelector::selectMUBUFScratchOffen	file:
__anonc6d2750d4702	RVGPUInstructionSelector.cpp	/^             [=](MachineInstrBuilder &MIB) { \/\/ soffset$/;"	f	function:RVGPUInstructionSelector::selectMUBUFScratchOffen	file:
__anonc6d2750d4802	RVGPUInstructionSelector.cpp	/^             [=](MachineInstrBuilder &MIB) { \/\/ offset$/;"	f	function:RVGPUInstructionSelector::selectMUBUFScratchOffen	file:
__anonc6d2750d4902	RVGPUInstructionSelector.cpp	/^  return {{[=](MachineInstrBuilder &MIB) { \/\/ rsrc$/;"	f	function:RVGPUInstructionSelector::selectMUBUFScratchOffen	file:
__anonc6d2750d4a02	RVGPUInstructionSelector.cpp	/^           [=](MachineInstrBuilder &MIB) { \/\/ vaddr$/;"	f	function:RVGPUInstructionSelector::selectMUBUFScratchOffen	file:
__anonc6d2750d4b02	RVGPUInstructionSelector.cpp	/^           [=](MachineInstrBuilder &MIB) { \/\/ soffset$/;"	f	function:RVGPUInstructionSelector::selectMUBUFScratchOffen	file:
__anonc6d2750d4c02	RVGPUInstructionSelector.cpp	/^           [=](MachineInstrBuilder &MIB) { \/\/ offset$/;"	f	function:RVGPUInstructionSelector::selectMUBUFScratchOffen	file:
__anonc6d2750d4d02	RVGPUInstructionSelector.cpp	/^        [=](MachineInstrBuilder &MIB) { \/\/ rsrc$/;"	f	function:RVGPUInstructionSelector::selectMUBUFScratchOffset	file:
__anonc6d2750d4e02	RVGPUInstructionSelector.cpp	/^        [=](MachineInstrBuilder &MIB) { \/\/ soffset$/;"	f	function:RVGPUInstructionSelector::selectMUBUFScratchOffset	file:
__anonc6d2750d4f02	RVGPUInstructionSelector.cpp	/^        [=](MachineInstrBuilder &MIB) { MIB.addImm(0); } \/\/ offset$/;"	f	function:RVGPUInstructionSelector::selectMUBUFScratchOffset	file:
__anonc6d2750d5002	RVGPUInstructionSelector.cpp	/^        [=](MachineInstrBuilder &MIB) { \/\/ rsrc$/;"	f	function:RVGPUInstructionSelector::selectMUBUFScratchOffset	file:
__anonc6d2750d5102	RVGPUInstructionSelector.cpp	/^        [=](MachineInstrBuilder &MIB) { \/\/ soffset$/;"	f	function:RVGPUInstructionSelector::selectMUBUFScratchOffset	file:
__anonc6d2750d5202	RVGPUInstructionSelector.cpp	/^        [=](MachineInstrBuilder &MIB) { MIB.addImm(Offset); } \/\/ offset$/;"	f	function:RVGPUInstructionSelector::selectMUBUFScratchOffset	file:
__anonc6d2750d5302	RVGPUInstructionSelector.cpp	/^      [=](MachineInstrBuilder &MIB) { \/\/ rsrc$/;"	f	function:RVGPUInstructionSelector::selectMUBUFScratchOffset	file:
__anonc6d2750d5402	RVGPUInstructionSelector.cpp	/^      [=](MachineInstrBuilder &MIB) { \/\/ soffset$/;"	f	function:RVGPUInstructionSelector::selectMUBUFScratchOffset	file:
__anonc6d2750d5502	RVGPUInstructionSelector.cpp	/^      [=](MachineInstrBuilder &MIB) { MIB.addImm(Offset); } \/\/ offset$/;"	f	function:RVGPUInstructionSelector::selectMUBUFScratchOffset	file:
__anonc6d2750d5602	RVGPUInstructionSelector.cpp	/^      [=](MachineInstrBuilder &MIB) { MIB.addReg(Reg); },$/;"	f	function:RVGPUInstructionSelector::selectDS1Addr1Offset	file:
__anonc6d2750d5702	RVGPUInstructionSelector.cpp	/^      [=](MachineInstrBuilder &MIB) { MIB.addImm(Offset); }$/;"	f	function:RVGPUInstructionSelector::selectDS1Addr1Offset	file:
__anonc6d2750d5802	RVGPUInstructionSelector.cpp	/^      [=](MachineInstrBuilder &MIB) { MIB.addReg(Reg); },$/;"	f	function:RVGPUInstructionSelector::selectDSReadWrite2	file:
__anonc6d2750d5902	RVGPUInstructionSelector.cpp	/^      [=](MachineInstrBuilder &MIB) { MIB.addImm(Offset); },$/;"	f	function:RVGPUInstructionSelector::selectDSReadWrite2	file:
__anonc6d2750d5a02	RVGPUInstructionSelector.cpp	/^      [=](MachineInstrBuilder &MIB) { MIB.addImm(Offset+1); }$/;"	f	function:RVGPUInstructionSelector::selectDSReadWrite2	file:
__anonc6d2750d5b02	RVGPUInstructionSelector.cpp	/^      [=](MachineInstrBuilder &MIB) {  \/\/ rsrc$/;"	f	function:RVGPUInstructionSelector::selectMUBUFAddr64	file:
__anonc6d2750d5c02	RVGPUInstructionSelector.cpp	/^      [=](MachineInstrBuilder &MIB) { \/\/ vaddr$/;"	f	function:RVGPUInstructionSelector::selectMUBUFAddr64	file:
__anonc6d2750d5d02	RVGPUInstructionSelector.cpp	/^      [=](MachineInstrBuilder &MIB) { \/\/ soffset$/;"	f	function:RVGPUInstructionSelector::selectMUBUFAddr64	file:
__anonc6d2750d5e02	RVGPUInstructionSelector.cpp	/^      [=](MachineInstrBuilder &MIB) { \/\/ offset$/;"	f	function:RVGPUInstructionSelector::selectMUBUFAddr64	file:
__anonc6d2750d5f02	RVGPUInstructionSelector.cpp	/^      [=](MachineInstrBuilder &MIB) {  \/\/ rsrc$/;"	f	function:RVGPUInstructionSelector::selectMUBUFOffset	file:
__anonc6d2750d6002	RVGPUInstructionSelector.cpp	/^      [=](MachineInstrBuilder &MIB) { \/\/ soffset$/;"	f	function:RVGPUInstructionSelector::selectMUBUFOffset	file:
__anonc6d2750d6102	RVGPUInstructionSelector.cpp	/^      [=](MachineInstrBuilder &MIB) { MIB.addImm(Offset); }, \/\/ offset$/;"	f	function:RVGPUInstructionSelector::selectMUBUFOffset	file:
__anonc6d2750d6202	RVGPUInstructionSelector.cpp	/^  return {{[=](MachineInstrBuilder &MIB) { MIB.addReg(SOffset); }}};$/;"	f	function:RVGPUInstructionSelector::selectBUFSOffset	file:
__anonc6d2750d6302	RVGPUInstructionSelector.cpp	/^  return {{ [=](MachineInstrBuilder &MIB) { MIB.addImm(*EncodedImm); }  }};$/;"	f	function:RVGPUInstructionSelector::selectSMRDBufferImm	file:
__anonc6d2750d6402	RVGPUInstructionSelector.cpp	/^  return {{ [=](MachineInstrBuilder &MIB) { MIB.addImm(*EncodedImm); }  }};$/;"	f	function:RVGPUInstructionSelector::selectSMRDBufferImm32	file:
__anonc6d2750d6502	RVGPUInstructionSelector.cpp	/^  return {{[=](MachineInstrBuilder &MIB) { MIB.addReg(SOffset); },$/;"	f	function:RVGPUInstructionSelector::selectSMRDBufferSgprImm	file:
__anonc6d2750d6602	RVGPUInstructionSelector.cpp	/^           [=](MachineInstrBuilder &MIB) { MIB.addImm(*EncodedOffset); }}};$/;"	f	function:RVGPUInstructionSelector::selectSMRDBufferSgprImm	file:
__anonc6d2750d6702	RVGPUInstructionSelector.cpp	/^    const auto CheckAbsNeg = [&]() {$/;"	f	function:RVGPUInstructionSelector::selectVOP3PMadMixModsImpl	file:
__anonc6d2750d6802	RVGPUInstructionSelector.cpp	/^      [=](MachineInstrBuilder &MIB) { MIB.addReg(Src); },$/;"	f	function:RVGPUInstructionSelector::selectVOP3PMadMixModsExt	file:
__anonc6d2750d6902	RVGPUInstructionSelector.cpp	/^      [=](MachineInstrBuilder &MIB) { MIB.addImm(Mods); } \/\/ src_mods$/;"	f	function:RVGPUInstructionSelector::selectVOP3PMadMixModsExt	file:
__anonc6d2750d6a02	RVGPUInstructionSelector.cpp	/^      [=](MachineInstrBuilder &MIB) { MIB.addReg(Src); },$/;"	f	function:RVGPUInstructionSelector::selectVOP3PMadMixMods	file:
__anonc6d2750d6b02	RVGPUInstructionSelector.cpp	/^      [=](MachineInstrBuilder &MIB) { MIB.addImm(Mods); } \/\/ src_mods$/;"	f	function:RVGPUInstructionSelector::selectVOP3PMadMixMods	file:
__anonc72909460111	RVGPUMCInstLower.h	/^namespace {$/;"	n
__anonc7296b900111	RVGPUInsertDelayAlu.cpp	/^namespace {$/;"	n	file:
__anonc7296b900202	RVGPUInsertDelayAlu.cpp	/^      llvm::sort(Order, [](const const_iterator &A, const const_iterator &B) {$/;"	f	function:__anonc7296b900111::RVGPUInsertDelayAlu::DelayState::dump	file:
__anonc82e9e910111	Utils/RVGPUBaseInfo.cpp	/^namespace {$/;"	n	file:
__anonc82e9e910202	Utils/RVGPUBaseInfo.cpp	/^  auto Test = [=](const CustomOperand<T> &Op) { return Op.Name == Name; };$/;"	f	function:llvm::RVGPU::getOprIdx	file:
__anonc82e9e910302	Utils/RVGPUBaseInfo.cpp	/^  auto Test = [=](const CustomOperand<T> &Op) {$/;"	f	function:llvm::RVGPU::getOprIdx	file:
__anonc82e9e910411	Utils/RVGPUBaseInfo.cpp	/^namespace {$/;"	n	namespace:llvm::RVGPU	file:
__anoncc7483b30111	RVGPULowerModuleLDSPass.cpp	/^namespace {$/;"	n	file:
__anoncc7483b30202	RVGPULowerModuleLDSPass.cpp	/^  llvm::sort(V.begin(), V.end(), [](const auto *L, const auto *R) {$/;"	f	function:__anoncc7483b30111::sortByName	file:
__anoncc7483b30302	RVGPULowerModuleLDSPass.cpp	/^        M, [&LocalVarsSet](Constant *C) { return LocalVarsSet.count(C); });$/;"	f	function:__anoncc7483b30111::RVGPULowerModuleLDS::removeLocalVarsFromUsedLists	file:
__anoncc7483b30402	RVGPULowerModuleLDSPass.cpp	/^    auto functionMakesUnknownCall = [&](const Function *F) -> bool {$/;"	f	function:__anoncc7483b30111::RVGPULowerModuleLDS::getTransitiveUsesOfLDS	typeref:typename:bool	file:
__anoncc7483b30502	RVGPULowerModuleLDSPass.cpp	/^        M, ModuleScopeVariables, ModuleScopeReplacement, [&](Use &U) {$/;"	f	function:__anoncc7483b30111::RVGPULowerModuleLDS::lowerModuleScopeStructVariables	file:
__anoncc7483b30602	RVGPULowerModuleLDSPass.cpp	/^            M, ModuleScopeVariables, ModuleScopeReplacement, [&](Use &U) {$/;"	f	function:__anoncc7483b30111::RVGPULowerModuleLDS::lowerModuleScopeStructVariables	file:
__anoncc7483b30702	RVGPULowerModuleLDSPass.cpp	/^          M, KernelUsedVariables, Replacement, [&Func](Use &U) {$/;"	f	function:__anoncc7483b30111::RVGPULowerModuleLDS::lowerKernelScopeStructVariables	file:
__anoncc7483b30802	RVGPULowerModuleLDSPass.cpp	/^    auto UpdateMaxAlignment = [&MaxDynamicAlignment, &DL](GlobalVariable *GV) {$/;"	f	function:__anoncc7483b30111::RVGPULowerModuleLDS::buildRepresentativeDynamicLDSInstance	file:
__anoncc7483b30902	RVGPULowerModuleLDSPass.cpp	/^      replaceLDSVariablesWithStruct(M, Vec, Replacement, [](Use &U) {$/;"	f	function:__anoncc7483b30111::RVGPULowerModuleLDS::runOnModule	file:
__anoncc7483b30a02	RVGPULowerModuleLDSPass.cpp	/^        [](const GlobalVariable *V) -> Type * { return V->getValueType(); });$/;"	f	function:__anoncc7483b30111::RVGPULowerModuleLDS::createLDSVariableReplacement	typeref:typename:Type *	file:
__anond27816180111	SIFixSGPRCopies.cpp	/^namespace {$/;"	n	file:
__anond27816180202	SIFixSGPRCopies.cpp	/^           (const MachineBasicBlock *MBB) { return MBB == MBBFrom; });$/;"	f	function:isReachable	file:
__anond27816180302	SIFixSGPRCopies.cpp	/^                              MachineBasicBlock::iterator To) -> bool {$/;"	f	function:hoistAndMergeSGPRInits	typeref:typename:bool	file:
__anond27816180402	SIFixSGPRCopies.cpp	/^          auto interferes = [&MDT, From, To](MachineInstr* &Clobber) -> bool {$/;"	f	function:hoistAndMergeSGPRInits::__anond27816180302	typeref:typename:bool	file:
__anond27816180502	SIFixSGPRCopies.cpp	/^                 (llvm::any_of(Inits, [&](InitListMap::value_type &C) {$/;"	f	function:hoistAndMergeSGPRInits::__anond27816180302	file:
__anond27816180602	SIFixSGPRCopies.cpp	/^      [&](MachineInstr *A, MachineInstr *B) -> bool {$/;"	f	function:SIFixSGPRCopies::needToBeConvertedToVALU	typeref:typename:bool	file:
__anond27816180702	SIFixSGPRCopies.cpp	/^  Info->Siblings.remove_if([&](unsigned ID) { return ID == Info->ID; });$/;"	f	function:SIFixSGPRCopies::needToBeConvertedToVALU	file:
__anond27816180802	SIFixSGPRCopies.cpp	/^          SI.Siblings.remove_if([&](unsigned ID) { return ID == C.ID; });$/;"	f	function:SIFixSGPRCopies::lowerVGPR2SGPRCopies	file:
__anond35e324e0111	RVGPUCodeGenPrepare.cpp	/^namespace {$/;"	n	file:
__anond67ef0700102	RVFrameLowering.cpp	/^      [&](SmallVectorImpl<std::pair<Register, int>> &WWMRegs) {$/;"	f	function:RVFrameLowering::emitCSRSpillStores	file:
__anond67ef0700202	RVFrameLowering.cpp	/^      [&](SmallVectorImpl<std::pair<Register, int>> &WWMRegs) {$/;"	f	function:RVFrameLowering::emitCSRSpillRestores	file:
__anond67ef0700302	RVFrameLowering.cpp	/^               (count_if(MI.operands(), [](auto Op) { return Op.isReg(); }) ==$/;"	f	function:RVFrameLowering::determineCalleeSaves	file:
__anond67ef0700402	RVFrameLowering.cpp	/^                count_if(ReturnMI->operands(), [](auto Op) { return Op.isReg(); })));$/;"	f	function:RVFrameLowering::determineCalleeSaves	file:
__anond71df4850111	SIAnnotateControlFlow.cpp	/^namespace {$/;"	n	file:
__anond71df4850202	SIAnnotateControlFlow.cpp	/^  auto CreateBreak = [this, Cond, Broken](Instruction *I) -> CallInst * {$/;"	f	function:SIAnnotateControlFlow::handleLoopCondition	typeref:typename:CallInst *	file:
__anondc582c840111	RVGPUAnnotateKernelFeatures.cpp	/^namespace {$/;"	n	file:
__anone16a92980111	SILowerI1Copies.cpp	/^namespace {$/;"	n	file:
__anone16a92980202	SILowerI1Copies.cpp	/^    llvm::sort(Incomings, [this](Incoming LHS, Incoming RHS) {$/;"	f	function:PhiLoweringHelper::lowerPhis	file:
__anone2935c3a0111	MCTargetDesc/RVGPUELFObjectWriter.cpp	/^namespace {$/;"	n	file:
__anonea904d1c0111	RVGPUPromoteAlloca.cpp	/^namespace {$/;"	n	file:
__anonea904d1c0202	RVGPUPromoteAlloca.cpp	/^  const auto GetOrLoadCurrentVectorValue = [&]() -> Value * {$/;"	f	function:promoteAllocaUserToVector	typeref:typename:Value *	file:
__anonea904d1c0302	RVGPUPromoteAlloca.cpp	/^                                                   Type *PtrTy) -> Value * {$/;"	f	function:promoteAllocaUserToVector	typeref:typename:Value *	file:
__anonea904d1c0402	RVGPUPromoteAlloca.cpp	/^  const auto RejectUser = [&](Instruction *Inst, Twine Msg) {$/;"	f	function:RVGPUPromoteAllocaImpl::tryPromoteAllocaToVector	file:
__anonea904d1c0502	RVGPUPromoteAlloca.cpp	/^      auto getPointerIndexOfAlloca = [&](Value *Ptr) -> ConstantInt * {$/;"	f	function:RVGPUPromoteAllocaImpl::tryPromoteAllocaToVector	typeref:typename:ConstantInt *	file:
__anonea904d1c0602	RVGPUPromoteAlloca.cpp	/^    if (isa<ICmpInst>(Inst) && all_of(Inst->users(), [](User *U) {$/;"	f	function:RVGPUPromoteAllocaImpl::tryPromoteAllocaToVector	file:
__anonea904d1c0702	RVGPUPromoteAlloca.cpp	/^  forEachWorkListItem(WorkList, [&](Instruction *I) {$/;"	f	function:RVGPUPromoteAllocaImpl::tryPromoteAllocaToVector	file:
__anonea904d1c0802	RVGPUPromoteAlloca.cpp	/^  forEachWorkListItem(DeferredLoads, [&](Instruction *I) {$/;"	f	function:RVGPUPromoteAllocaImpl::tryPromoteAllocaToVector	file:
__anonea904d1c0902	RVGPUPromoteAlloca.cpp	/^  auto visitUsers = [&](const GlobalVariable *GV, const Constant *Val) -> bool {$/;"	f	function:RVGPUPromoteAllocaImpl::hasSufficientLocalMem	typeref:typename:bool	file:
__anonf03b7d93010a	RVGPUArgumentUsageInfo.h	/^  union {$/;"	u	struct:llvm::ArgDescriptor
__anonf5f1f1fc0111	RVGPUPrintfRuntimeBinding.cpp	/^namespace {$/;"	n	file:
__anonf85f450a0111	RVGPULowerKernelArguments.cpp	/^namespace {$/;"	n	file:
__anonf94dcdde0111	RVGPUPostLegalizerCombiner.cpp	/^namespace {$/;"	n	file:
__anonf94dcdde0202	RVGPUPostLegalizerCombiner.cpp	/^  auto buildNewInst = [&MI, this](unsigned Opc, Register X, Register Y) {$/;"	f	function:__anonf94dcdde0111::RVGPUPostLegalizerCombinerImpl::applySelectFCmpToFMinToFMaxLegacy	file:
__anonf94dcdde0302	RVGPUPostLegalizerCombiner.cpp	/^  auto getRcpSrc = [=](const MachineInstr &MI) -> MachineInstr * {$/;"	f	function:__anonf94dcdde0111::RVGPUPostLegalizerCombinerImpl::matchRcpSqrtToRsq	typeref:typename:MachineInstr *	file:
__anonf94dcdde0402	RVGPUPostLegalizerCombiner.cpp	/^  auto getSqrtSrc = [=](const MachineInstr &MI) -> MachineInstr * {$/;"	f	function:__anonf94dcdde0111::RVGPUPostLegalizerCombinerImpl::matchRcpSqrtToRsq	typeref:typename:MachineInstr *	file:
__anonf94dcdde0502	RVGPUPostLegalizerCombiner.cpp	/^    MatchInfo = [SqrtSrcMI, &MI](MachineIRBuilder &B) {$/;"	f	function:__anonf94dcdde0111::RVGPUPostLegalizerCombinerImpl::matchRcpSqrtToRsq	file:
__anonf94dcdde0602	RVGPUPostLegalizerCombiner.cpp	/^    MatchInfo = [RcpSrcMI, &MI](MachineIRBuilder &B) {$/;"	f	function:__anonf94dcdde0111::RVGPUPostLegalizerCombinerImpl::matchRcpSqrtToRsq	file:
__anonfb0ee92f0102	RVRegisterInfo.cpp	/^  static auto InitializeRegSplitPartsOnce = [this]() {$/;"	f	function:RVRegisterInfo::RVRegisterInfo	file:
__anonfb0ee92f0202	RVRegisterInfo.cpp	/^  static auto InitializeSubRegFromChannelTableOnce = [this]() {$/;"	f	function:RVRegisterInfo::RVRegisterInfo	file:
__anonfb0ee92f0302	RVRegisterInfo.cpp	/^                                int64_t VOffset) {$/;"	f	function:RVRegisterInfo::buildSpillLoadStore	file:
__anonfc3f584b0111	RVGPUSetWavePriority.cpp	/^namespace {$/;"	n	file:
__anonfd3973e90111	MCTargetDesc/RVGPUELFStreamer.cpp	/^namespace {$/;"	n	file:
add	RVGPUIGroupLP.cpp	/^  void add(SUnit &SU) {$/;"	f	class:__anon61b122dc0111::SchedGroup	typeref:typename:void	file:
addCallTargetOperands	RVGPUCallLowering.cpp	/^static bool addCallTargetOperands(MachineInstrBuilder &CallInst,$/;"	f	typeref:typename:bool	file:
addChild	RVGPUMachineCFGStructurizer.cpp	/^  void addChild(MRT *Tree) { Children.insert(Tree); }$/;"	f	class:__anon1695b1f50211::RegionMRT	typeref:typename:void	file:
addClauseInst	GCNHazardRecognizer.cpp	/^void GCNHazardRecognizer::addClauseInst(const MachineInstr &MI) {$/;"	f	class:GCNHazardRecognizer	typeref:typename:void
addCodeGenPrepare	RVGPUTargetMachine.cpp	/^void RVGPUPassConfig::addCodeGenPrepare() {$/;"	f	class:RVGPUPassConfig	typeref:typename:void
addDefsUsesToList	SILoadStoreOptimizer.cpp	/^static void addDefsUsesToList(const MachineInstr &MI,$/;"	f	typeref:typename:void	file:
addDest	RVGPUMachineCFGStructurizer.cpp	/^void PHILinearize::addDest(unsigned DestReg, const DebugLoc &DL) {$/;"	f	class:PHILinearize	typeref:typename:void
addDispatchID	RVMachineFunctionInfo.cpp	/^Register RVMachineFunctionInfo::addDispatchID(const RVRegisterInfo &TRI) {$/;"	f	class:RVMachineFunctionInfo	typeref:typename:Register
addDispatchPtr	RVMachineFunctionInfo.cpp	/^Register RVMachineFunctionInfo::addDispatchPtr(const RVRegisterInfo &TRI) {$/;"	f	class:RVMachineFunctionInfo	typeref:typename:Register
addEarlyCSEOrGVNPass	RVGPUTargetMachine.cpp	/^void RVGPUPassConfig::addEarlyCSEOrGVNPass() {$/;"	f	class:RVGPUPassConfig	typeref:typename:void
addEdges	RVGPUIGroupLP.cpp	/^int PipelineSolver::addEdges($/;"	f	class:__anon61b122dc0111::PipelineSolver	typeref:typename:int
addFastRegAlloc	RVGPUTargetMachine.cpp	/^void GCNPassConfig::addFastRegAlloc() {$/;"	f	class:GCNPassConfig	typeref:typename:void
addFeatureAttributes	RVGPUAnnotateKernelFeatures.cpp	/^bool RVGPUAnnotateKernelFeatures::addFeatureAttributes(Function &F) {$/;"	f	class:RVGPUAnnotateKernelFeatures	typeref:typename:INITIALIZE_PASS (RVGPUAnnotateKernelFeatures,DEBUG_TYPE,"Add RVGPU function attributes",false,false)bool
addFlatScratchInit	RVMachineFunctionInfo.cpp	/^Register RVMachineFunctionInfo::addFlatScratchInit(const RVRegisterInfo &TRI) {$/;"	f	class:RVMachineFunctionInfo	typeref:typename:Register
addGCPasses	RVGPUTargetMachine.cpp	/^bool RVGPUPassConfig::addGCPasses() {$/;"	f	class:RVGPUPassConfig	typeref:typename:bool
addGlobalInstructionSelect	RVGPUTargetMachine.cpp	/^bool GCNPassConfig::addGlobalInstructionSelect() {$/;"	f	class:GCNPassConfig	typeref:typename:bool
addILPOpts	RVGPUTargetMachine.cpp	/^bool GCNPassConfig::addILPOpts() {$/;"	f	class:GCNPassConfig	typeref:typename:bool
addIRPasses	RVGPUTargetMachine.cpp	/^void RVGPUPassConfig::addIRPasses() {$/;"	f	class:RVGPUPassConfig	typeref:typename:void
addIRTranslator	RVGPUTargetMachine.cpp	/^bool GCNPassConfig::addIRTranslator() {$/;"	f	class:GCNPassConfig	typeref:typename:bool
addImmOperands	AsmParser/RVGPUAsmParser.cpp	/^void RVGPUOperand::addImmOperands(MCInst &Inst, unsigned N, bool ApplyModifiers) const {$/;"	f	class:RVGPUOperand	typeref:typename:void
addImplicitBufferPtr	RVMachineFunctionInfo.cpp	/^Register RVMachineFunctionInfo::addImplicitBufferPtr(const RVRegisterInfo &TRI) {$/;"	f	class:RVMachineFunctionInfo	typeref:typename:Register
addInstSelector	RVGPUTargetMachine.cpp	/^bool GCNPassConfig::addInstSelector() {$/;"	f	class:GCNPassConfig	typeref:typename:bool
addInstSelector	RVGPUTargetMachine.cpp	/^bool RVGPUPassConfig::addInstSelector() {$/;"	f	class:RVGPUPassConfig	typeref:typename:bool
addInstToMergeableList	RVGPUImageIntrinsicOptimizer.cpp	/^void addInstToMergeableList($/;"	f	typeref:typename:void
addInstToMergeableList	SILoadStoreOptimizer.cpp	/^void SILoadStoreOptimizer::addInstToMergeableList(const CombineInfo &CI,$/;"	f	class:SILoadStoreOptimizer	typeref:typename:void
addKernargSegmentPtr	RVMachineFunctionInfo.cpp	/^Register RVMachineFunctionInfo::addKernargSegmentPtr(const RVRegisterInfo &TRI) {$/;"	f	class:RVMachineFunctionInfo	typeref:typename:Register
addLDSKernelId	RVMachineFunctionInfo.cpp	/^Register RVMachineFunctionInfo::addLDSKernelId() {$/;"	f	class:RVMachineFunctionInfo	typeref:typename:Register
addLegalizeMachineIR	RVGPUTargetMachine.cpp	/^bool GCNPassConfig::addLegalizeMachineIR() {$/;"	f	class:GCNPassConfig	typeref:typename:bool
addLiteralImmOperand	AsmParser/RVGPUAsmParser.cpp	/^void RVGPUOperand::addLiteralImmOperand(MCInst &Inst, int64_t Val, bool ApplyModifiers) const {$/;"	f	class:RVGPUOperand	typeref:typename:void
addLiveOut	RVGPUMachineCFGStructurizer.cpp	/^void LinearizedRegion::addLiveOut(unsigned VReg) { LiveOuts.insert(VReg); }$/;"	f	class:LinearizedRegion	typeref:typename:void
addLiveRegs	SIMachineScheduler.cpp	/^void SIScheduleBlockScheduler::addLiveRegs(std::set<unsigned> &Regs) {$/;"	f	class:SIScheduleBlockScheduler	typeref:typename:void
addLoopEntries	SILowerI1Copies.cpp	/^  void addLoopEntries(unsigned LoopLevel, MachineSSAUpdater &SSAUpdater,$/;"	f	class:__anone16a92980111::LoopFinder	typeref:typename:void	file:
addMBB	RVGPUMachineCFGStructurizer.cpp	/^void LinearizedRegion::addMBB(MachineBasicBlock *MBB) { MBBs.insert(MBB); }$/;"	f	class:LinearizedRegion	typeref:typename:void
addMBBs	RVGPUMachineCFGStructurizer.cpp	/^void LinearizedRegion::addMBBs(LinearizedRegion *InnerRegion) {$/;"	f	class:LinearizedRegion	typeref:typename:void
addMachineSSAOptimization	RVGPUTargetMachine.cpp	/^void GCNPassConfig::addMachineSSAOptimization() {$/;"	f	class:GCNPassConfig	typeref:typename:void
addMappingFromTable	RVGPURegisterBankInfo.cpp	/^RVGPURegisterBankInfo::addMappingFromTable($/;"	f	class:RVGPURegisterBankInfo	typeref:typename:RegisterBankInfo::InstructionMappings
addOperand	Disassembler/RVGPUDisassembler.cpp	/^addOperand(MCInst &Inst, const MCOperand& Opnd) {$/;"	f	typeref:typename:MCDisassembler::DecodeStatus	file:
addOptimizedRegAlloc	RVGPUTargetMachine.cpp	/^void GCNPassConfig::addOptimizedRegAlloc() {$/;"	f	class:GCNPassConfig	typeref:typename:void
addOptionalImmOperand	AsmParser/RVGPUAsmParser.cpp	/^static void addOptionalImmOperand($/;"	f	typeref:typename:void	file:
addPermMasks	RVISelLowering.cpp	/^static unsigned addPermMasks(unsigned First, unsigned Second) {$/;"	f	typeref:typename:unsigned	file:
addPostRegAlloc	RVGPUTargetMachine.cpp	/^void GCNPassConfig::addPostRegAlloc() {$/;"	f	class:GCNPassConfig	typeref:typename:void
addPreEmitPass	RVGPUTargetMachine.cpp	/^void GCNPassConfig::addPreEmitPass() {$/;"	f	class:GCNPassConfig	typeref:typename:void
addPreGlobalInstructionSelect	RVGPUTargetMachine.cpp	/^void GCNPassConfig::addPreGlobalInstructionSelect() {$/;"	f	class:GCNPassConfig	typeref:typename:void
addPreISel	RVGPUTargetMachine.cpp	/^bool GCNPassConfig::addPreISel() {$/;"	f	class:GCNPassConfig	typeref:typename:bool
addPreISel	RVGPUTargetMachine.cpp	/^bool RVGPUPassConfig::addPreISel() {$/;"	f	class:RVGPUPassConfig	typeref:typename:bool
addPreLegalizeMachineIR	RVGPUTargetMachine.cpp	/^void GCNPassConfig::addPreLegalizeMachineIR() {$/;"	f	class:GCNPassConfig	typeref:typename:void
addPreRegAlloc	RVGPUTargetMachine.cpp	/^void GCNPassConfig::addPreRegAlloc() {$/;"	f	class:GCNPassConfig	typeref:typename:void
addPreRegBankSelect	RVGPUTargetMachine.cpp	/^void GCNPassConfig::addPreRegBankSelect() {$/;"	f	class:GCNPassConfig	typeref:typename:void
addPreRewrite	RVGPUTargetMachine.cpp	/^bool GCNPassConfig::addPreRewrite() {$/;"	f	class:GCNPassConfig	typeref:typename:bool
addPreSched2	RVGPUTargetMachine.cpp	/^void GCNPassConfig::addPreSched2() {$/;"	f	class:GCNPassConfig	typeref:typename:void
addPred	SIMachineScheduler.cpp	/^void SIScheduleBlock::addPred(SIScheduleBlock *Pred) {$/;"	f	class:SIScheduleBlock	typeref:typename:void
addPreloadKernArgHint	RVGPUAttributor.cpp	/^static void addPreloadKernArgHint(Function &F, TargetMachine &TM) {$/;"	f	namespace:__anon512e119a0111	typeref:typename:void	file:
addPreloadedKernArg	RVMachineFunctionInfo.cpp	/^SmallVectorImpl<MCRegister> *RVMachineFunctionInfo::addPreloadedKernArg($/;"	f	class:RVMachineFunctionInfo	typeref:typename:SmallVectorImpl<MCRegister> *
addPrivateSegmentBuffer	RVMachineFunctionInfo.cpp	/^Register RVMachineFunctionInfo::addPrivateSegmentBuffer($/;"	f	class:RVMachineFunctionInfo	typeref:typename:Register
addPrivateSegmentWaveByteOffset	RVMachineFunctionInfo.h	/^  Register addPrivateSegmentWaveByteOffset() {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:Register
addQueuePtr	RVMachineFunctionInfo.cpp	/^Register RVMachineFunctionInfo::addQueuePtr(const RVRegisterInfo &TRI) {$/;"	f	class:RVMachineFunctionInfo	typeref:typename:Register
addRegAssignAndRewriteFast	RVGPUTargetMachine.cpp	/^bool GCNPassConfig::addRegAssignAndRewriteFast() {$/;"	f	class:GCNPassConfig	typeref:typename:bool
addRegAssignAndRewriteOptimized	RVGPUTargetMachine.cpp	/^bool GCNPassConfig::addRegAssignAndRewriteOptimized() {$/;"	f	class:GCNPassConfig	typeref:typename:bool
addRegBankSelect	RVGPUTargetMachine.cpp	/^bool GCNPassConfig::addRegBankSelect() {$/;"	f	class:GCNPassConfig	typeref:typename:bool
addRegOperands	AsmParser/RVGPUAsmParser.cpp	/^void RVGPUOperand::addRegOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:RVGPUOperand	typeref:typename:void
addRegOrImmOperands	AsmParser/RVGPUAsmParser.cpp	/^  void addRegOrImmOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:void	file:
addRegOrImmWithFPInputModsOperands	AsmParser/RVGPUAsmParser.cpp	/^  void addRegOrImmWithFPInputModsOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:void	file:
addRegOrImmWithInputModsOperands	AsmParser/RVGPUAsmParser.cpp	/^  void addRegOrImmWithInputModsOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:void	file:
addRegOrImmWithIntInputModsOperands	AsmParser/RVGPUAsmParser.cpp	/^  void addRegOrImmWithIntInputModsOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:void	file:
addRegUnits	GCNHazardRecognizer.cpp	/^static void addRegUnits(const RVRegisterInfo &TRI, BitVector &BV,$/;"	f	typeref:typename:void	file:
addRegWithFPInputModsOperands	AsmParser/RVGPUAsmParser.cpp	/^  void addRegWithFPInputModsOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:void	file:
addRegWithInputModsOperands	AsmParser/RVGPUAsmParser.cpp	/^  void addRegWithInputModsOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:void	file:
addRegWithIntInputModsOperands	AsmParser/RVGPUAsmParser.cpp	/^  void addRegWithIntInputModsOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:void	file:
addRegsToSet	GCNHazardRecognizer.cpp	/^static void addRegsToSet(const RVRegisterInfo &TRI,$/;"	f	typeref:typename:void	file:
addReservedUserSGPR	RVMachineFunctionInfo.h	/^  Register addReservedUserSGPR() {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:Register
addRule	RVGPUIGroupLP.cpp	/^  void addRule(std::shared_ptr<InstructionRule> NewRule) {$/;"	f	class:__anon61b122dc0111::SchedGroup	typeref:typename:void	file:
addSCCDefUsersToVALUWorklist	RVInstrInfo.cpp	/^void RVInstrInfo::addSCCDefUsersToVALUWorklist(MachineOperand &Op,$/;"	f	class:RVInstrInfo	typeref:typename:void
addSCCDefsToVALUWorklist	RVInstrInfo.cpp	/^void RVInstrInfo::addSCCDefsToVALUWorklist(MachineInstr *SCCUseInst,$/;"	f	class:RVInstrInfo	typeref:typename:void
addSchedBarrierEdges	RVGPUIGroupLP.cpp	/^void IGroupLPDAGMutation::addSchedBarrierEdges(SUnit &SchedBarrier) {$/;"	f	class:__anon61b122dc0111::IGroupLPDAGMutation	typeref:typename:void
addSource	RVGPUMachineCFGStructurizer.cpp	/^void PHILinearize::addSource(unsigned DestReg, unsigned SourceReg,$/;"	f	class:PHILinearize	typeref:typename:void
addStraightLineScalarOptimizationPasses	RVGPUTargetMachine.cpp	/^void RVGPUPassConfig::addStraightLineScalarOptimizationPasses() {$/;"	f	class:RVGPUPassConfig	typeref:typename:void
addSucc	SIMachineScheduler.cpp	/^void SIScheduleBlock::addSucc(SIScheduleBlock *Succ,$/;"	f	class:SIScheduleBlock	typeref:typename:void
addToPrologEpilogSGPRSpills	RVMachineFunctionInfo.h	/^  void addToPrologEpilogSGPRSpills(Register Reg,$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:void
addToSpilledSGPRs	RVMachineFunctionInfo.h	/^  void addToSpilledSGPRs(unsigned num) {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:void
addToSpilledVGPRs	RVMachineFunctionInfo.h	/^  void addToSpilledVGPRs(unsigned num) {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:void
addToWWMSpills	SILowerWWMCopies.cpp	/^void SILowerWWMCopies::addToWWMSpills(MachineFunction &MF, Register Reg) {$/;"	f	class:SILowerWWMCopies	typeref:typename:void
addTokenForArgument	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::addTokenForArgument(SDValue Chain,$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
addUnit	SIMachineScheduler.cpp	/^void SIScheduleBlock::addUnit(SUnit *SU) {$/;"	f	class:SIScheduleBlock	typeref:typename:void
addUsersToMoveToVALUWorklist	RVInstrInfo.cpp	/^void RVInstrInfo::addUsersToMoveToVALUWorklist($/;"	f	class:RVInstrInfo	typeref:typename:void
addWait	SIInsertWaitcnts.cpp	/^void addWait(RVGPU::Waitcnt &Wait, InstCounterType T, unsigned Count) {$/;"	f	namespace:__anona6cbb7940211	typeref:typename:void
addWorkGroupIDX	RVMachineFunctionInfo.h	/^  Register addWorkGroupIDX(bool HasArchitectedSGPRs) {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:Register
addWorkGroupIDY	RVMachineFunctionInfo.h	/^  Register addWorkGroupIDY(bool HasArchitectedSGPRs) {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:Register
addWorkGroupIDZ	RVMachineFunctionInfo.h	/^  Register addWorkGroupIDZ(bool HasArchitectedSGPRs) {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:Register
addWorkGroupInfo	RVMachineFunctionInfo.h	/^  Register addWorkGroupInfo() {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:Register
addZeroImm	RVGPUInstructionSelector.cpp	/^static void addZeroImm(MachineInstrBuilder &MIB) {$/;"	f	typeref:typename:void	file:
addressMayBeAccessedAsPrivate	RVISelLowering.cpp	/^static bool addressMayBeAccessedAsPrivate(const MachineMemOperand *MMO,$/;"	f	typeref:typename:bool	file:
addresses16Bits	RVISelLowering.cpp	/^static bool addresses16Bits(int Mask) {$/;"	f	typeref:typename:bool	file:
addrspacesMayAlias	RVGPU.h	/^static inline bool addrspacesMayAlias(unsigned AS1, unsigned AS2) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
addrspacesMayAlias	RVGPUTargetTransformInfo.h	/^  bool addrspacesMayAlias(unsigned AS0, unsigned AS1) const {$/;"	f	class:llvm::GCNTTIImpl	typeref:typename:bool
adjustAllocatableRegClass	RVInstrInfo.cpp	/^adjustAllocatableRegClass(const GCNSubtarget &ST, const RVRegisterInfo &RI,$/;"	f	typeref:typename:const TargetRegisterClass *	file:
adjustFixupValue	MCTargetDesc/RVGPUAsmBackend.cpp	/^static uint64_t adjustFixupValue(const MCFixup &Fixup, uint64_t Value,$/;"	f	typeref:typename:uint64_t	file:
adjustInliningThreshold	RVGPUTargetTransformInfo.cpp	/^unsigned GCNTTIImpl::adjustInliningThreshold(const CallBase *CB) const {$/;"	f	class:GCNTTIImpl	typeref:typename:unsigned
adjustInliningThresholdUsingCallee	RVGPUTargetTransformInfo.cpp	/^static unsigned adjustInliningThresholdUsingCallee(const CallBase *CB,$/;"	f	typeref:typename:unsigned	file:
adjustLoadValueType	RVISelLowering.cpp	/^SDValue RVTargetLowering::adjustLoadValueType(unsigned Opcode,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
adjustLoadValueTypeImpl	RVISelLowering.cpp	/^static SDValue adjustLoadValueTypeImpl(SDValue Result, EVT LoadVT,$/;"	f	typeref:typename:SDValue	file:
adjustSchedDependency	RVGPUSubtarget.cpp	/^void GCNSubtarget::adjustSchedDependency(SUnit *Def, int DefOpIdx, SUnit *Use,$/;"	f	class:GCNSubtarget	typeref:typename:void
adjustWritemask	RVISelLowering.cpp	/^SDNode *RVTargetLowering::adjustWritemask(MachineSDNode *&Node,$/;"	f	class:RVTargetLowering	typeref:typename:SDNode *
advance	GCNRegPressure.cpp	/^bool GCNDownwardRPTracker::advance() {$/;"	f	class:GCNDownwardRPTracker	typeref:typename:bool
advance	GCNRegPressure.cpp	/^bool GCNDownwardRPTracker::advance(MachineBasicBlock::const_iterator Begin,$/;"	f	class:GCNDownwardRPTracker	typeref:typename:bool
advance	GCNRegPressure.cpp	/^bool GCNDownwardRPTracker::advance(MachineBasicBlock::const_iterator End) {$/;"	f	class:GCNDownwardRPTracker	typeref:typename:bool
advance	RVGPUInsertDelayAlu.cpp	/^    bool advance(DelayType Type, unsigned Cycles) {$/;"	f	struct:__anonc7296b900111::RVGPUInsertDelayAlu::DelayInfo	typeref:typename:bool	file:
advance	RVGPUInsertDelayAlu.cpp	/^    void advance(DelayType Type, unsigned Cycles) {$/;"	f	struct:__anonc7296b900111::RVGPUInsertDelayAlu::DelayState	typeref:typename:void	file:
advanceBeforeNext	GCNRegPressure.cpp	/^bool GCNDownwardRPTracker::advanceBeforeNext() {$/;"	f	class:GCNDownwardRPTracker	typeref:typename:bool
advanceLevel	SILowerI1Copies.cpp	/^  void advanceLevel() {$/;"	f	class:__anone16a92980111::LoopFinder	typeref:typename:void	file:
advancePosition	RVGPUIGroupLP.cpp	/^void PipelineSolver::advancePosition() {$/;"	f	class:__anon61b122dc0111::PipelineSolver	typeref:typename:void
advanceRegion	GCNSchedStrategy.h	/^  void advanceRegion() { RegionIdx++; }$/;"	f	class:llvm::GCNSchedStage	typeref:typename:void
advanceStage	GCNSchedStrategy.cpp	/^bool GCNSchedStrategy::advanceStage() {$/;"	f	class:GCNSchedStrategy	typeref:typename:bool
advanceToCycle	GCNILPSched.cpp	/^void GCNILPScheduler::advanceToCycle(unsigned NextCycle) {$/;"	f	class:GCNILPScheduler	typeref:typename:void
advanceToNext	GCNRegPressure.cpp	/^void GCNDownwardRPTracker::advanceToNext() {$/;"	f	class:GCNDownwardRPTracker	typeref:typename:void
aggressivelyPreferBuildVectorSources	RVGPUISelLowering.cpp	/^bool RVGPUTargetLowering::aggressivelyPreferBuildVectorSources(EVT VecVT) const {$/;"	f	class:RVGPUTargetLowering	typeref:typename:bool
alias	RVGPUAliasAnalysis.cpp	/^AliasResult RVGPUAAResult::alias(const MemoryLocation &LocA,$/;"	f	class:RVGPUAAResult	typeref:typename:AliasResult
allOpsDefaultValue	MCTargetDesc/RVGPUInstPrinter.cpp	/^static bool allOpsDefaultValue(const int* Ops, int NumOps, int Mod,$/;"	f	typeref:typename:bool	file:
allSGPRSpillsAreDead	RVFrameLowering.cpp	/^static bool allSGPRSpillsAreDead(const MachineFunction &MF) {$/;"	f	typeref:typename:bool	file:
allStackObjectsAreDead	RVFrameLowering.cpp	/^static bool allStackObjectsAreDead(const MachineFrameInfo &MFI) {$/;"	f	typeref:typename:bool	file:
allUsesHaveSourceMods	RVGPUCombinerHelper.cpp	/^static bool allUsesHaveSourceMods(MachineInstr &MI, MachineRegisterInfo &MRI,$/;"	f	typeref:typename:bool	file:
allUsesHaveSourceMods	RVGPUISelLowering.cpp	/^bool RVGPUTargetLowering::allUsesHaveSourceMods(const SDNode *N,$/;"	f	class:RVGPUTargetLowering	typeref:typename:bool
allZero	Utils/RVGPUBaseInfo.h	/^  static Waitcnt allZero(bool HasVscnt) {$/;"	f	struct:llvm::RVGPU::Waitcnt	typeref:typename:Waitcnt
allZeroExceptVsCnt	Utils/RVGPUBaseInfo.h	/^  static Waitcnt allZeroExceptVsCnt() { return Waitcnt(0, 0, 0, ~0u); }$/;"	f	struct:llvm::RVGPU::Waitcnt	typeref:typename:Waitcnt
allocKernargPreloadSGPRs	RVGPUSubtarget.cpp	/^void GCNUserSGPRUsageInfo::allocKernargPreloadSGPRs(unsigned NumSGPRs) {$/;"	f	class:GCNUserSGPRUsageInfo	typeref:typename:void
allocateFixedSGPRInputImpl	RVISelLowering.cpp	/^static void allocateFixedSGPRInputImpl(CCState &CCInfo,$/;"	f	typeref:typename:void	file:
allocateHSAUserSGPRs	RVGPUCallLowering.cpp	/^static void allocateHSAUserSGPRs(CCState &CCInfo,$/;"	f	typeref:typename:void	file:
allocateHSAUserSGPRs	RVISelLowering.cpp	/^void RVTargetLowering::allocateHSAUserSGPRs(CCState &CCInfo,$/;"	f	class:RVTargetLowering	typeref:typename:void
allocateLDSGlobal	RVGPUMachineFunction.cpp	/^unsigned RVGPUMachineFunction::allocateLDSGlobal(const DataLayout &DL,$/;"	f	class:RVGPUMachineFunction	typeref:typename:unsigned
allocateLDSGlobal	RVGPUMachineFunction.h	/^  unsigned allocateLDSGlobal(const DataLayout &DL, const GlobalVariable &GV) {$/;"	f	class:llvm::RVGPUMachineFunction	typeref:typename:unsigned
allocateLDSKernelId	RVISelLowering.cpp	/^void RVTargetLowering::allocateLDSKernelId(CCState &CCInfo, MachineFunction &MF,$/;"	f	class:RVTargetLowering	typeref:typename:void
allocatePhysicalVGPRForSGPRSpills	RVMachineFunctionInfo.cpp	/^bool RVMachineFunctionInfo::allocatePhysicalVGPRForSGPRSpills($/;"	f	class:RVMachineFunctionInfo	typeref:typename:bool
allocatePreloadKernArgSGPRs	RVISelLowering.cpp	/^void RVTargetLowering::allocatePreloadKernArgSGPRs($/;"	f	class:RVTargetLowering	typeref:typename:void
allocateSGPR32Input	RVISelLowering.cpp	/^static void allocateSGPR32Input(CCState &CCInfo, ArgDescriptor &Arg) {$/;"	f	typeref:typename:void	file:
allocateSGPR32InputImpl	RVISelLowering.cpp	/^static ArgDescriptor allocateSGPR32InputImpl(CCState &CCInfo,$/;"	f	typeref:typename:ArgDescriptor	file:
allocateSGPR64Input	RVISelLowering.cpp	/^static void allocateSGPR64Input(CCState &CCInfo, ArgDescriptor &Arg) {$/;"	f	typeref:typename:void	file:
allocateSGPRSpillToVGPRLane	RVMachineFunctionInfo.cpp	/^bool RVMachineFunctionInfo::allocateSGPRSpillToVGPRLane(MachineFunction &MF,$/;"	f	class:RVMachineFunctionInfo	typeref:typename:bool
allocateScavengingFrameIndexesNearIncomingSP	RVFrameLowering.cpp	/^bool RVFrameLowering::allocateScavengingFrameIndexesNearIncomingSP($/;"	f	class:RVFrameLowering	typeref:typename:bool
allocateSpecialEntryInputVGPRs	RVISelLowering.cpp	/^void RVTargetLowering::allocateSpecialEntryInputVGPRs(CCState &CCInfo,$/;"	f	class:RVTargetLowering	typeref:typename:void
allocateSpecialInputSGPRs	RVISelLowering.cpp	/^void RVTargetLowering::allocateSpecialInputSGPRs($/;"	f	class:RVTargetLowering	typeref:typename:void
allocateSpecialInputVGPRs	RVISelLowering.cpp	/^void RVTargetLowering::allocateSpecialInputVGPRs($/;"	f	class:RVTargetLowering	typeref:typename:void
allocateSpecialInputVGPRsFixed	RVISelLowering.cpp	/^void RVTargetLowering::allocateSpecialInputVGPRsFixed($/;"	f	class:RVTargetLowering	typeref:typename:void
allocateSystemSGPRs	RVISelLowering.cpp	/^void RVTargetLowering::allocateSystemSGPRs(CCState &CCInfo,$/;"	f	class:RVTargetLowering	typeref:typename:void
allocateVGPR32Input	RVISelLowering.cpp	/^static ArgDescriptor allocateVGPR32Input(CCState &CCInfo, unsigned Mask = ~0u,$/;"	f	typeref:typename:ArgDescriptor	file:
allocateVGPRSpillToAGPR	RVMachineFunctionInfo.cpp	/^bool RVMachineFunctionInfo::allocateVGPRSpillToAGPR(MachineFunction &MF,$/;"	f	class:RVMachineFunctionInfo	typeref:typename:bool
allocateVirtualVGPRForSGPRSpills	RVMachineFunctionInfo.cpp	/^bool RVMachineFunctionInfo::allocateVirtualVGPRForSGPRSpills($/;"	f	class:RVMachineFunctionInfo	typeref:typename:bool
allocateWWMSpill	RVMachineFunctionInfo.cpp	/^void RVMachineFunctionInfo::allocateWWMSpill(MachineFunction &MF, Register VGPR,$/;"	f	class:RVMachineFunctionInfo	typeref:typename:void
allowApproxFunc	RVGPUISelLowering.cpp	/^bool RVGPUTargetLowering::allowApproxFunc(const SelectionDAG &DAG,$/;"	f	class:RVGPUTargetLowering	typeref:typename:bool
allowApproxFunc	RVGPULegalizerInfo.cpp	/^static bool allowApproxFunc(const MachineFunction &MF, unsigned Flags) {$/;"	f	typeref:typename:bool	file:
allowNegativeFlatOffset	RVInstrInfo.cpp	/^bool RVInstrInfo::allowNegativeFlatOffset(uint64_t FlatVariant) const {$/;"	f	class:RVInstrInfo	typeref:typename:bool
allowedByRules	RVGPUIGroupLP.cpp	/^  bool allowedByRules(const SUnit *SU,$/;"	f	class:__anon61b122dc0111::SchedGroup	typeref:typename:bool	file:
allowsMisalignedMemoryAccesses	RVISelLowering.cpp	/^bool RVTargetLowering::allowsMisalignedMemoryAccesses($/;"	f	class:RVTargetLowering	typeref:typename:bool
allowsMisalignedMemoryAccesses	RVISelLowering.h	/^  bool allowsMisalignedMemoryAccesses($/;"	f	class:llvm::RVTargetLowering	typeref:typename:bool
allowsMisalignedMemoryAccessesImpl	RVISelLowering.cpp	/^bool RVTargetLowering::allowsMisalignedMemoryAccessesImpl($/;"	f	class:RVTargetLowering	typeref:typename:bool
alwaysInlineImpl	RVGPUAlwaysInlinePass.cpp	/^static bool alwaysInlineImpl(Module &M, bool GlobalOpt) {$/;"	f	typeref:typename:bool	file:
analyze	SILowerI1Copies.cpp	/^  void analyze(MachineBasicBlock &DefBlock, ArrayRef<Incoming> Incomings) {$/;"	f	class:__anone16a92980111::PhiIncomingAnalysis	typeref:typename:void	file:
analyzeBranch	RVInstrInfo.cpp	/^bool RVInstrInfo::analyzeBranch(MachineBasicBlock &MBB, MachineBasicBlock *&TBB,$/;"	f	class:RVInstrInfo	typeref:typename:bool
analyzeBranchImpl	RVInstrInfo.cpp	/^bool RVInstrInfo::analyzeBranchImpl(MachineBasicBlock &MBB,$/;"	f	class:RVInstrInfo	typeref:typename:bool
analyzeCompare	RVInstrInfo.cpp	/^bool RVInstrInfo::analyzeCompare(const MachineInstr &MI, Register &SrcReg,$/;"	f	class:RVInstrInfo	typeref:typename:bool
analyzeFormalArgumentsCompute	RVGPUISelLowering.cpp	/^void RVGPUTargetLowering::analyzeFormalArgumentsCompute($/;"	f	class:RVGPUTargetLowering	typeref:typename:void
analyzeFunction	SIWholeQuadMode.cpp	/^char SIWholeQuadMode::analyzeFunction(MachineFunction &MF) {$/;"	f	class:SIWholeQuadMode	typeref:typename:char
analyzeResourceUsage	RVGPUResourceUsageAnalysis.cpp	/^RVGPUResourceUsageAnalysis::analyzeResourceUsage($/;"	f	class:RVGPUResourceUsageAnalysis	typeref:typename:RVGPUResourceUsageAnalysis::SIFunctionResourceInfo
analyzeVGPRToSGPRCopy	SIFixSGPRCopies.cpp	/^void SIFixSGPRCopies::analyzeVGPRToSGPRCopy(MachineInstr* MI) {$/;"	f	class:SIFixSGPRCopies	typeref:typename:void
appendFoldCandidate	SIFoldOperands.cpp	/^static void appendFoldCandidate(SmallVectorImpl<FoldCandidate> &FoldList,$/;"	f	typeref:typename:void	file:
apply	GCNVOPDUtils.cpp	/^  void apply(ScheduleDAGInstrs *DAG) override {$/;"	f	struct:__anonc08c76180411::VOPDPairingMutation	typeref:typename:void	file:
apply	RVGPUExportClustering.cpp	/^void ExportClustering::apply(ScheduleDAGInstrs *DAG) {$/;"	f	class:__anonbb53b5ac0111::ExportClustering	typeref:typename:void
apply	RVGPUIGroupLP.cpp	/^    bool apply(const SUnit *SU, const ArrayRef<SUnit *> Collection,$/;"	f	class:__anon61b122dc0111::MFMASmallGemmSingleWaveOpt::EnablesInitialMFMA	typeref:typename:bool	file:
apply	RVGPUIGroupLP.cpp	/^    bool apply(const SUnit *SU, const ArrayRef<SUnit *> Collection,$/;"	f	class:__anon61b122dc0111::MFMASmallGemmSingleWaveOpt::IsPermForDSW	typeref:typename:bool	file:
apply	RVGPUIGroupLP.cpp	/^    bool apply(const SUnit *SU, const ArrayRef<SUnit *> Collection,$/;"	f	class:__anon61b122dc0111::MFMASmallGemmSingleWaveOpt::IsSuccOfPrevGroup	typeref:typename:bool	file:
apply	RVGPUIGroupLP.cpp	/^    bool apply(const SUnit *SU, const ArrayRef<SUnit *> Collection,$/;"	f	class:__anon61b122dc0111::MFMASmallGemmSingleWaveOpt::SharesPredWithPrevNthGroup	typeref:typename:bool	file:
apply	RVGPUIGroupLP.cpp	/^    bool apply(const SUnit *SU, const ArrayRef<SUnit *> Collection,$/;"	f	class:__anon61b122dc0111::MFMASmallGemmSingleWaveOpt::VMEMSize	typeref:typename:bool	file:
apply	RVGPUIGroupLP.cpp	/^  apply(const SUnit *, const ArrayRef<SUnit *>,$/;"	f	class:__anon61b122dc0111::InstructionRule	typeref:typename:bool	file:
apply	RVGPUIGroupLP.cpp	/^void IGroupLPDAGMutation::apply(ScheduleDAGInstrs *DAGInstrs) {$/;"	f	class:__anon61b122dc0111::IGroupLPDAGMutation	typeref:typename:void
apply	RVGPUSubtarget.cpp	/^  void apply(ScheduleDAGInstrs *DAGInstrs) override {$/;"	f	struct:__anon4eb125fb0111::FillMFMAShadowMutation	typeref:typename:void	file:
applyBank	RVGPURegisterBankInfo.cpp	/^  void applyBank(MachineInstr &MI) {$/;"	f	class:__anon0a1a7df70111::ApplyRegBankMapping	typeref:typename:void	file:
applyClamp	RVGPURegBankCombiner.cpp	/^void RVGPURegBankCombinerImpl::applyClamp(MachineInstr &MI,$/;"	f	class:__anon00ae19330111::RVGPURegBankCombinerImpl	typeref:typename:void
applyClampI64ToI16	RVGPUPreLegalizerCombiner.cpp	/^void RVGPUPreLegalizerCombinerImpl::applyClampI64ToI16($/;"	f	class:__anonb779c2ff0111::RVGPUPreLegalizerCombinerImpl	typeref:typename:void
applyCombineSignExtendInReg	RVGPUPostLegalizerCombiner.cpp	/^void RVGPUPostLegalizerCombinerImpl::applyCombineSignExtendInReg($/;"	f	class:__anonf94dcdde0111::RVGPUPostLegalizerCombinerImpl	typeref:typename:void
applyCvtF32UByteN	RVGPUPostLegalizerCombiner.cpp	/^void RVGPUPostLegalizerCombinerImpl::applyCvtF32UByteN($/;"	f	class:__anonf94dcdde0111::RVGPUPostLegalizerCombinerImpl	typeref:typename:void
applyExpandPromotedF16FMed3	RVGPUCombinerHelper.cpp	/^void RVGPUCombinerHelper::applyExpandPromotedF16FMed3(MachineInstr &MI,$/;"	f	class:RVGPUCombinerHelper	typeref:typename:void
applyFixup	MCTargetDesc/RVGPUAsmBackend.cpp	/^void RVGPUAsmBackend::applyFixup(const MCAssembler &Asm, const MCFixup &Fixup,$/;"	f	class:RVGPUAsmBackend	typeref:typename:void
applyFoldableFneg	RVGPUCombinerHelper.cpp	/^void RVGPUCombinerHelper::applyFoldableFneg(MachineInstr &MI,$/;"	f	class:RVGPUCombinerHelper	typeref:typename:void
applyFractPat	RVGPUCodeGenPrepare.cpp	/^Value *RVGPUCodeGenPrepareImpl::applyFractPat(IRBuilder<> &Builder,$/;"	f	class:RVGPUCodeGenPrepareImpl	typeref:typename:Value *
applyIGLPStrategy	RVGPUIGroupLP.cpp	/^void MFMASmallGemmOpt::applyIGLPStrategy($/;"	f	class:__anon61b122dc0111::MFMASmallGemmOpt	typeref:typename:void
applyIGLPStrategy	RVGPUIGroupLP.cpp	/^void MFMASmallGemmSingleWaveOpt::applyIGLPStrategy($/;"	f	class:__anon61b122dc0111::MFMASmallGemmSingleWaveOpt	typeref:typename:void
applyInputFPModifiers	AsmParser/RVGPUAsmParser.cpp	/^uint64_t RVGPUOperand::applyInputFPModifiers(uint64_t Val, unsigned Size) const$/;"	f	class:RVGPUOperand	typeref:typename:uint64_t
applyMappingBFE	RVGPURegisterBankInfo.cpp	/^bool RVGPURegisterBankInfo::applyMappingBFE(MachineIRBuilder &B,$/;"	f	class:RVGPURegisterBankInfo	typeref:typename:bool
applyMappingDynStackAlloc	RVGPURegisterBankInfo.cpp	/^bool RVGPURegisterBankInfo::applyMappingDynStackAlloc($/;"	f	class:RVGPURegisterBankInfo	typeref:typename:bool
applyMappingImage	RVGPURegisterBankInfo.cpp	/^bool RVGPURegisterBankInfo::applyMappingImage($/;"	f	class:RVGPURegisterBankInfo	typeref:typename:bool
applyMappingImpl	RVGPURegisterBankInfo.cpp	/^void RVGPURegisterBankInfo::applyMappingImpl($/;"	f	class:RVGPURegisterBankInfo	typeref:typename:void
applyMappingLoad	RVGPURegisterBankInfo.cpp	/^bool RVGPURegisterBankInfo::applyMappingLoad($/;"	f	class:RVGPURegisterBankInfo	typeref:typename:bool
applyMappingMAD_64_32	RVGPURegisterBankInfo.cpp	/^bool RVGPURegisterBankInfo::applyMappingMAD_64_32($/;"	f	class:RVGPURegisterBankInfo	typeref:typename:bool
applyMappingSBufferLoad	RVGPURegisterBankInfo.cpp	/^bool RVGPURegisterBankInfo::applyMappingSBufferLoad($/;"	f	class:RVGPURegisterBankInfo	typeref:typename:bool
applyMed3	RVGPURegBankCombiner.cpp	/^void RVGPURegBankCombinerImpl::applyMed3(MachineInstr &MI,$/;"	f	class:__anon00ae19330111::RVGPURegBankCombinerImpl	typeref:typename:void
applyPreexistingWaitcnt	SIInsertWaitcnts.cpp	/^bool SIInsertWaitcnts::applyPreexistingWaitcnt($/;"	f	class:SIInsertWaitcnts	typeref:typename:bool
applySelectFCmpToFMinToFMaxLegacy	RVGPUPostLegalizerCombiner.cpp	/^void RVGPUPostLegalizerCombinerImpl::applySelectFCmpToFMinToFMaxLegacy($/;"	f	class:__anonf94dcdde0111::RVGPUPostLegalizerCombinerImpl	typeref:typename:void
applyUCharToFloat	RVGPUPostLegalizerCombiner.cpp	/^void RVGPUPostLegalizerCombinerImpl::applyUCharToFloat($/;"	f	class:__anonf94dcdde0111::RVGPUPostLegalizerCombinerImpl	typeref:typename:void
applyWaitcnt	SIInsertWaitcnts.cpp	/^void WaitcntBrackets::applyWaitcnt(InstCounterType T, unsigned Count) {$/;"	f	class:WaitcntBrackets	typeref:typename:void
applyWaitcnt	SIInsertWaitcnts.cpp	/^void WaitcntBrackets::applyWaitcnt(const RVGPU::Waitcnt &Wait) {$/;"	f	class:WaitcntBrackets	typeref:typename:void
areCalleeOutgoingArgsTailCallable	RVGPUCallLowering.cpp	/^bool RVGPUCallLowering::areCalleeOutgoingArgsTailCallable($/;"	f	class:RVGPUCallLowering	typeref:typename:bool
areInSameBB	RVGPUCodeGenPrepare.cpp	/^static bool areInSameBB(const Value *A, const Value *B) {$/;"	f	typeref:typename:bool	file:
areInlineCompatible	RVGPUTargetTransformInfo.cpp	/^bool GCNTTIImpl::areInlineCompatible(const Function *Caller,$/;"	f	class:GCNTTIImpl	typeref:typename:bool
areLoadsFromSameBasePtr	RVInstrInfo.cpp	/^bool RVInstrInfo::areLoadsFromSameBasePtr(SDNode *Load0, SDNode *Load1,$/;"	f	class:RVInstrInfo	typeref:typename:bool
areMemAccessesTriviallyDisjoint	RVInstrInfo.cpp	/^bool RVInstrInfo::areMemAccessesTriviallyDisjoint(const MachineInstr &MIa,$/;"	f	class:RVInstrInfo	typeref:typename:bool
assignCalleeSavedSpillSlots	RVFrameLowering.cpp	/^bool RVFrameLowering::assignCalleeSavedSpillSlots($/;"	f	class:RVFrameLowering	typeref:typename:bool
assignLDSKernelIDToEachKernel	RVGPULowerModuleLDSPass.cpp	/^  static std::vector<Function *> assignLDSKernelIDToEachKernel($/;"	f	class:__anoncc7483b30111::RVGPULowerModuleLDS	typeref:typename:std::vector<Function * >	file:
assignValueToAddress	RVGPUCallLowering.cpp	/^  void assignValueToAddress(Register ValVReg, Register Addr, LLT MemTy,$/;"	f	struct:__anonad2fb0ad0111::RVGPUIncomingArgHandler	typeref:typename:void	file:
assignValueToAddress	RVGPUCallLowering.cpp	/^  void assignValueToAddress(Register ValVReg, Register Addr, LLT MemTy,$/;"	f	struct:__anonad2fb0ad0111::RVGPUOutgoingArgHandler	typeref:typename:void	file:
assignValueToAddress	RVGPUCallLowering.cpp	/^  void assignValueToAddress(Register ValVReg, Register Addr, LLT MemTy,$/;"	f	struct:__anonad2fb0ad0111::RVGPUOutgoingValueHandler	typeref:typename:void	file:
assignValueToAddress	RVGPUCallLowering.cpp	/^  void assignValueToAddress(const CallLowering::ArgInfo &Arg,$/;"	f	struct:__anonad2fb0ad0111::RVGPUOutgoingArgHandler	typeref:typename:void	file:
assignValueToReg	RVGPUCallLowering.cpp	/^  void assignValueToReg(Register ValVReg, Register PhysReg,$/;"	f	struct:__anonad2fb0ad0111::RVGPUIncomingArgHandler	typeref:typename:void	file:
assignValueToReg	RVGPUCallLowering.cpp	/^  void assignValueToReg(Register ValVReg, Register PhysReg,$/;"	f	struct:__anonad2fb0ad0111::RVGPUOutgoingArgHandler	typeref:typename:void	file:
assignValueToReg	RVGPUCallLowering.cpp	/^  void assignValueToReg(Register ValVReg, Register PhysReg,$/;"	f	struct:__anonad2fb0ad0111::RVGPUOutgoingValueHandler	typeref:typename:void	file:
atIssueLimit	GCNHazardRecognizer.h	/^  bool atIssueLimit() const override { return true; }$/;"	f	class:llvm::GCNHazardRecognizer	typeref:typename:bool
basicRegAllocSGPR	RVGPUTargetMachine.cpp	/^static SGPRRegisterRegAlloc basicRegAllocSGPR($/;"	v	namespace:__anon565c6f860111	typeref:typename:SGPRRegisterRegAlloc	file:
basicRegAllocVGPR	RVGPUTargetMachine.cpp	/^static VGPRRegisterRegAlloc basicRegAllocVGPR($/;"	v	namespace:__anon565c6f860111	typeref:typename:VGPRRegisterRegAlloc	file:
begin	RVGPUHSAMetadataStreamer.cpp	/^void MetadataStreamerMsgPackV4::begin(const Module &Mod,$/;"	f	class:llvm::RVGPU::HSRV::MetadataStreamerMsgPackV4	typeref:typename:void
binaryOpIsDerivedFromSameAlloca	RVGPUPromoteAlloca.cpp	/^bool RVGPUPromoteAllocaImpl::binaryOpIsDerivedFromSameAlloca($/;"	f	class:RVGPUPromoteAllocaImpl	typeref:typename:bool
bitOpWithConstantIsReducible	RVISelLowering.cpp	/^static bool bitOpWithConstantIsReducible(unsigned Opc, uint32_t Val) {$/;"	f	typeref:typename:bool	file:
bitcastToRegisterType	RVGPULegalizerInfo.cpp	/^static LegalizeMutation bitcastToRegisterType(unsigned TypeIdx) {$/;"	f	typeref:typename:LegalizeMutation	file:
bitcastToVectorElement32	RVGPULegalizerInfo.cpp	/^static LegalizeMutation bitcastToVectorElement32(unsigned TypeIdx) {$/;"	f	typeref:typename:LegalizeMutation	file:
blockScheduled	SIMachineScheduler.cpp	/^void SIScheduleBlockScheduler::blockScheduled(SIScheduleBlock *Block) {$/;"	f	class:SIScheduleBlockScheduler	typeref:typename:void
breaksSMEMSoftClause	GCNHazardRecognizer.cpp	/^static bool breaksSMEMSoftClause(MachineInstr *MI) {$/;"	f	typeref:typename:bool	file:
breaksVMEMSoftClause	GCNHazardRecognizer.cpp	/^static bool breaksVMEMSoftClause(MachineInstr *MI) {$/;"	f	typeref:typename:bool	file:
bufferRsrcPtrToVector	RVISelLowering.cpp	/^SDValue RVTargetLowering::bufferRsrcPtrToVector(SDValue MaybePointer,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
buildAbsGlobalAddress	RVGPULegalizerInfo.cpp	/^void RVGPULegalizerInfo::buildAbsGlobalAddress($/;"	f	class:RVGPULegalizerInfo	typeref:typename:void
buildAddr64RSrc	RVGPUInstructionSelector.cpp	/^static Register buildAddr64RSrc(MachineIRBuilder &B, MachineRegisterInfo &MRI,$/;"	f	typeref:typename:Register	file:
buildBufferLoad	RVGPULegalizerInfo.cpp	/^static void buildBufferLoad(unsigned Opc, Register LoadDstReg, Register RSrc,$/;"	f	typeref:typename:void	file:
buildCluster	RVGPUExportClustering.cpp	/^static void buildCluster(ArrayRef<SUnit *> Exports, ScheduleDAGInstrs *DAG) {$/;"	f	namespace:__anonbb53b5ac0111	typeref:typename:void	file:
buildEpilogRestore	RVFrameLowering.cpp	/^static void buildEpilogRestore(const GCNSubtarget &ST,$/;"	f	typeref:typename:void	file:
buildExtractSubReg	RVInstrInfo.cpp	/^unsigned RVInstrInfo::buildExtractSubReg($/;"	f	class:RVInstrInfo	typeref:typename:unsigned
buildExtractSubRegOrImm	RVInstrInfo.cpp	/^MachineOperand RVInstrInfo::buildExtractSubRegOrImm($/;"	f	class:RVInstrInfo	typeref:typename:MachineOperand
buildGitPtr	RVFrameLowering.cpp	/^static void buildGitPtr(MachineBasicBlock &MBB, MachineBasicBlock::iterator I,$/;"	f	typeref:typename:void	file:
buildLookupTable	RVGPULowerModuleLDSPass.cpp	/^  static GlobalVariable *buildLookupTable($/;"	f	class:__anoncc7483b30111::RVGPULowerModuleLDS	typeref:typename:GlobalVariable *	file:
buildMRT	RVGPUMachineCFGStructurizer.cpp	/^RegionMRT *MRT::buildMRT(MachineFunction &MF,$/;"	f	class:MRT	typeref:typename:RegionMRT *
buildMUBUFOffsetLoadStore	RVRegisterInfo.cpp	/^static bool buildMUBUFOffsetLoadStore(const GCNSubtarget &ST,$/;"	f	typeref:typename:bool	file:
buildManglingRulesMap	RVGPULibFunc.cpp	/^StringMap<int> ManglingRule::buildManglingRulesMap() {$/;"	f	class:ManglingRule	typeref:typename:StringMap<int>
buildMergeLaneMasks	SILowerI1Copies.cpp	/^void Vreg1LoweringHelper::buildMergeLaneMasks(MachineBasicBlock &MBB,$/;"	f	class:Vreg1LoweringHelper	typeref:typename:void
buildMul	RVGPUAtomicOptimizer.cpp	/^static Value *buildMul(IRBuilder<> &B, Value *LHS, Value *RHS) {$/;"	f	typeref:typename:Value *	file:
buildMultiply	RVGPULegalizerInfo.cpp	/^void RVGPULegalizerInfo::buildMultiply(LegalizerHelper &Helper,$/;"	f	class:RVGPULegalizerInfo	typeref:typename:void
buildNameMap	RVGPULibFunc.cpp	/^StringMap<unsigned> UnmangledFuncInfo::buildNameMap() {$/;"	f	class:UnmangledFuncInfo	typeref:typename:StringMap<unsigned>
buildNonAtomicBinOp	RVGPUAtomicOptimizer.cpp	/^static Value *buildNonAtomicBinOp(IRBuilder<> &B, AtomicRMWInst::BinOp Op,$/;"	f	typeref:typename:Value *	file:
buildOffsetSrc	RVGPUInstructionSelector.cpp	/^static Register buildOffsetSrc(MachineIRBuilder &B, MachineRegisterInfo &MRI,$/;"	f	typeref:typename:Register	file:
buildPCRelGlobalAddress	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::buildPCRelGlobalAddress(Register DstReg, LLT PtrTy,$/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
buildPCRelGlobalAddress	RVISelLowering.cpp	/^buildPCRelGlobalAddress(SelectionDAG &DAG, const GlobalValue *GV,$/;"	f	typeref:typename:SDValue	file:
buildPrologSpill	RVFrameLowering.cpp	/^static void buildPrologSpill(const GCNSubtarget &ST, const RVRegisterInfo &TRI,$/;"	f	typeref:typename:void	file:
buildRSRC	RVGPUInstructionSelector.cpp	/^static Register buildRSRC(MachineIRBuilder &B, MachineRegisterInfo &MRI,$/;"	f	typeref:typename:Register	file:
buildRSRC	RVISelLowering.cpp	/^MachineSDNode *RVTargetLowering::buildRSRC(SelectionDAG &DAG, const SDLoc &DL,$/;"	f	class:RVTargetLowering	typeref:typename:MachineSDNode *
buildReadFirstLane	RVGPURegisterBankInfo.cpp	/^Register RVGPURegisterBankInfo::buildReadFirstLane(MachineIRBuilder &B,$/;"	f	class:RVGPURegisterBankInfo	typeref:typename:Register
buildReduction	RVGPUAtomicOptimizer.cpp	/^Value *RVGPUAtomicOptimizerImpl::buildReduction(IRBuilder<> &B,$/;"	f	class:RVGPUAtomicOptimizerImpl	typeref:typename:Value *
buildRepresentativeDynamicLDSInstance	RVGPULowerModuleLDSPass.cpp	/^  buildRepresentativeDynamicLDSInstance(Module &M, LDSUsesInfoTy &LDSUsesInfo,$/;"	f	class:__anoncc7483b30111::RVGPULowerModuleLDS	typeref:typename:GlobalVariable *	file:
buildSMovImm32	RVISelLowering.cpp	/^static SDValue buildSMovImm32(SelectionDAG &DAG, const SDLoc &DL,$/;"	f	typeref:typename:SDValue	file:
buildSMovImm64	RVGPUISelDAGToDAG.cpp	/^MachineSDNode *RVGPUDAGToDAGISel::buildSMovImm64(SDLoc &DL, uint64_t Imm,$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:MachineSDNode *
buildScan	RVGPUAtomicOptimizer.cpp	/^Value *RVGPUAtomicOptimizerImpl::buildScan(IRBuilder<> &B,$/;"	f	class:RVGPUAtomicOptimizerImpl	typeref:typename:Value *
buildScanIteratively	RVGPUAtomicOptimizer.cpp	/^std::pair<Value *, Value *> RVGPUAtomicOptimizerImpl::buildScanIteratively($/;"	f	class:RVGPUAtomicOptimizerImpl	typeref:typename:std::pair<Value *,Value * >
buildScratchExecCopy	RVFrameLowering.cpp	/^static Register buildScratchExecCopy(LiveRegUnits &LiveUnits,$/;"	f	typeref:typename:Register	file:
buildShiftRight	RVGPUAtomicOptimizer.cpp	/^Value *RVGPUAtomicOptimizerImpl::buildShiftRight(IRBuilder<> &B, Value *V,$/;"	f	class:RVGPUAtomicOptimizerImpl	typeref:typename:Value *
buildShrunkInst	RVInstrInfo.cpp	/^MachineInstr *RVInstrInfo::buildShrunkInst(MachineInstr &MI,$/;"	f	class:RVInstrInfo	typeref:typename:MachineInstr *
buildSpillLoadStore	RVRegisterInfo.cpp	/^void RVRegisterInfo::buildSpillLoadStore($/;"	f	class:RVRegisterInfo	typeref:typename:void
buildVCopy	RVGPURegisterBankInfo.cpp	/^bool RVGPURegisterBankInfo::buildVCopy(MachineIRBuilder &B, Register DstReg,$/;"	f	class:RVGPURegisterBankInfo	typeref:typename:bool
buildVGPRSpillLoadStore	RVRegisterInfo.cpp	/^void RVRegisterInfo::buildVGPRSpillLoadStore(SGPRSpillBuilder &SB, int Index,$/;"	f	class:RVRegisterInfo	typeref:typename:void
bumpPredsPriority	GCNMinRegStrategy.cpp	/^void GCNMinRegScheduler::bumpPredsPriority(const SUnit *SchedSU, int Priority) {$/;"	f	class:GCNMinRegScheduler	typeref:typename:void
bundleInstWithWaitcnt	RVISelLowering.cpp	/^void RVTargetLowering::bundleInstWithWaitcnt(MachineInstr &MI) const {$/;"	f	class:RVTargetLowering	typeref:typename:void
calcMaxScratches	GCNILPSched.cpp	/^static unsigned calcMaxScratches(const SUnit *SU) {$/;"	f	typeref:typename:unsigned	file:
calculateByteProvider	RVISelLowering.cpp	/^calculateByteProvider(const SDValue &Op, unsigned Index, unsigned Depth,$/;"	f	typeref:typename:const std::optional<ByteProvider<SDValue>>	file:
calculateGPRBlocks	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::calculateGPRBlocks($/;"	f	class:RVGPUAsmParser	typeref:typename:bool
calculateSaveRestoreBlocks	SILowerSGPRSpills.cpp	/^void SILowerSGPRSpills::calculateSaveRestoreBlocks(MachineFunction &MF) {$/;"	f	class:SILowerSGPRSpills	typeref:typename:void
calculateSrcByte	RVISelLowering.cpp	/^calculateSrcByte(const SDValue Op, uint64_t DestByte, uint64_t SrcIndex = 0,$/;"	f	typeref:typename:const std::optional<ByteProvider<SDValue>>	file:
calculateVectorIndex	RVGPUPromoteAlloca.cpp	/^calculateVectorIndex(Value *Ptr,$/;"	f	typeref:typename:Value *	file:
callWaitsOnFunctionEntry	SIInsertWaitcnts.cpp	/^static bool callWaitsOnFunctionEntry(const MachineInstr &MI) {$/;"	f	typeref:typename:bool	file:
callWaitsOnFunctionReturn	SIInsertWaitcnts.cpp	/^static bool callWaitsOnFunctionReturn(const MachineInstr &MI) {$/;"	f	typeref:typename:bool	file:
call_convention	RVKernelCodeT.h	/^  int32_t call_convention;$/;"	m	struct:rv_kernel_code_t	typeref:typename:int32_t
canAddMI	RVGPUIGroupLP.cpp	/^bool SchedGroup::canAddMI(const MachineInstr &MI) const {$/;"	f	class:__anon61b122dc0111::SchedGroup	typeref:typename:bool
canAddSU	RVGPUIGroupLP.cpp	/^bool SchedGroup::canAddSU(SUnit &SU) const {$/;"	f	class:__anon61b122dc0111::SchedGroup	typeref:typename:bool
canAssign	GCNNSAReassign.cpp	/^bool GCNNSAReassign::canAssign(unsigned StartReg, unsigned NumRegs) const {$/;"	f	class:GCNNSAReassign	typeref:typename:bool
canBreakPHINode	RVGPUCodeGenPrepare.cpp	/^bool RVGPUCodeGenPrepareImpl::canBreakPHINode(const PHINode &I) {$/;"	f	class:RVGPUCodeGenPrepareImpl	typeref:typename:bool
canBundle	SIFormMemoryClauses.cpp	/^bool SIFormMemoryClauses::canBundle(const MachineInstr &MI, const RegUse &Defs,$/;"	f	class:SIFormMemoryClauses	typeref:typename:bool
canBundle	SIPostRABundler.cpp	/^bool SIPostRABundler::canBundle(const MachineInstr &MI,$/;"	f	class:SIPostRABundler	typeref:typename:bool
canContractSqrtToRsq	RVGPUInstCombineIntrinsic.cpp	/^static bool canContractSqrtToRsq(const FPMathOperator *SqrtOp) {$/;"	f	typeref:typename:bool	file:
canGuaranteeTCO	RVGPUCallLowering.cpp	/^static bool canGuaranteeTCO(CallingConv::ID CC) {$/;"	f	typeref:typename:bool	file:
canGuaranteeTCO	RVISelLowering.cpp	/^static bool canGuaranteeTCO(CallingConv::ID CC) {$/;"	f	typeref:typename:bool	file:
canHaveNonUndefGlobalInitializerInAddressSpace	RVGPUTargetTransformInfo.h	/^  bool canHaveNonUndefGlobalInitializerInAddressSpace(unsigned AS) const {$/;"	f	class:llvm::GCNTTIImpl	typeref:typename:bool
canIgnoreDenormalInput	RVGPUCodeGenPrepare.cpp	/^  bool canIgnoreDenormalInput(const Value *V, const Instruction *CtxI) const {$/;"	f	class:__anond35e324e0111::RVGPUCodeGenPrepareImpl	typeref:typename:bool	file:
canIncreasePrecisionOfConstantFold	RVGPULibCalls.cpp	/^bool RVGPULibCalls::canIncreasePrecisionOfConstantFold($/;"	f	class:RVGPULibCalls	typeref:typename:bool
canInsertSelect	RVInstrInfo.cpp	/^bool RVInstrInfo::canInsertSelect(const MachineBasicBlock &MBB,$/;"	f	class:RVInstrInfo	typeref:typename:bool
canLosslesslyConvertToFPType	AsmParser/RVGPUAsmParser.cpp	/^static bool canLosslesslyConvertToFPType(APFloat &FPLiteral, MVT VT) {$/;"	f	typeref:typename:bool	file:
canLowerReturn	RVGPUCallLowering.cpp	/^bool RVGPUCallLowering::canLowerReturn(MachineFunction &MF,$/;"	f	class:RVGPUCallLowering	typeref:typename:bool
canMergeStoresTo	RVISelLowering.cpp	/^bool RVTargetLowering::canMergeStoresTo(unsigned AS, EVT MemVT,$/;"	f	class:RVTargetLowering	typeref:typename:bool
canOptimizeWithRsq	RVGPUCodeGenPrepare.cpp	/^bool RVGPUCodeGenPrepareImpl::canOptimizeWithRsq(const FPMathOperator *SqrtOp,$/;"	f	class:RVGPUCodeGenPrepareImpl	typeref:typename:bool
canRemat	RVInstrInfo.cpp	/^static bool canRemat(const MachineInstr &MI) {$/;"	f	typeref:typename:bool	file:
canSafelyConvertTo16Bit	RVGPUInstCombineIntrinsic.cpp	/^static bool canSafelyConvertTo16Bit(Value &V, bool IsFloat) {$/;"	f	typeref:typename:bool	file:
canShrink	RVInstrInfo.cpp	/^bool RVInstrInfo::canShrink(const MachineInstr &MI,$/;"	f	class:RVInstrInfo	typeref:typename:bool
canSimplifyLegacyMulToMul	RVGPUInstCombineIntrinsic.cpp	/^bool GCNTTIImpl::canSimplifyLegacyMulToMul(const Instruction &I,$/;"	f	class:GCNTTIImpl	typeref:typename:bool
canSwapInstructions	SILoadStoreOptimizer.cpp	/^bool SILoadStoreOptimizer::canSwapInstructions($/;"	f	class:SILoadStoreOptimizer	typeref:typename:bool
canUseImmWithOpSel	SIFoldOperands.cpp	/^bool SIFoldOperands::canUseImmWithOpSel(FoldCandidate &Fold) const {$/;"	f	class:SIFoldOperands	typeref:typename:bool
canWidenScalarExtLoad	RVGPUCodeGenPrepare.cpp	/^bool RVGPUCodeGenPrepareImpl::canWidenScalarExtLoad(LoadInst &I) const {$/;"	f	class:RVGPUCodeGenPrepareImpl	typeref:typename:bool
canWidenScalarExtLoad	RVGPULateCodeGenPrepare.cpp	/^bool RVGPULateCodeGenPrepare::canWidenScalarExtLoad(LoadInst &LI) const {$/;"	f	class:RVGPULateCodeGenPrepare	typeref:typename:bool
castBufferRsrcArgToV4I32	RVGPULegalizerInfo.cpp	/^static void castBufferRsrcArgToV4I32(MachineInstr &MI, MachineIRBuilder &B,$/;"	f	typeref:typename:void	file:
castBufferRsrcFromV4I32	RVGPULegalizerInfo.cpp	/^static LLT castBufferRsrcFromV4I32(MachineInstr &MI, MachineIRBuilder &B,$/;"	f	typeref:typename:LLT	file:
castBufferRsrcToV4I32	RVGPULegalizerInfo.cpp	/^static Register castBufferRsrcToV4I32(Register Pointer, MachineIRBuilder &B) {$/;"	f	typeref:typename:Register	file:
castRequiresQueuePtr	RVGPUAttributor.cpp	/^static bool castRequiresQueuePtr(unsigned SrcAS) {$/;"	f	typeref:typename:bool	file:
changedInstr	RVGPURegisterBankInfo.cpp	/^  void changedInstr(MachineInstr &MI) override {$/;"	f	class:__anon0a1a7df70111::ApplyRegBankMapping	typeref:typename:void	file:
changesVGPRIndexingMode	RVInstrInfo.cpp	/^static bool changesVGPRIndexingMode(const MachineInstr &MI) {$/;"	f	typeref:typename:bool	file:
changingInstr	RVGPURegisterBankInfo.cpp	/^  void changingInstr(MachineInstr &MI) override {}$/;"	f	class:__anon0a1a7df70111::ApplyRegBankMapping	typeref:typename:void	file:
checkAndPrepareMerge	SILoadStoreOptimizer.cpp	/^SILoadStoreOptimizer::checkAndPrepareMerge(CombineInfo &CI,$/;"	f	class:SILoadStoreOptimizer	typeref:typename:SILoadStoreOptimizer::CombineInfo *
checkAsmConstraintVal	RVISelLowering.cpp	/^bool RVTargetLowering::checkAsmConstraintVal(SDValue Op, StringRef Constraint,$/;"	f	class:RVTargetLowering	typeref:typename:bool
checkAsmConstraintValA	RVISelLowering.cpp	/^bool RVTargetLowering::checkAsmConstraintValA(SDValue Op,$/;"	f	class:RVTargetLowering	typeref:typename:bool
checkComputeRegisters	Utils/RVGPUPALMetadata.cpp	/^bool RVGPUPALMetadata::checkComputeRegisters(StringRef field, bool Val) {$/;"	f	class:RVGPUPALMetadata	typeref:typename:bool
checkComputeRegisters	Utils/RVGPUPALMetadata.cpp	/^bool RVGPUPALMetadata::checkComputeRegisters(StringRef field, unsigned Val) {$/;"	f	class:RVGPUPALMetadata	typeref:typename:bool
checkCustomHazard	MCA/RVGPUCustomBehaviour.cpp	/^unsigned RVGPUCustomBehaviour::checkCustomHazard(ArrayRef<InstRef> IssuedInst,$/;"	f	class:llvm::mca::RVGPUCustomBehaviour	typeref:typename:unsigned
checkDPPHazards	GCNHazardRecognizer.cpp	/^int GCNHazardRecognizer::checkDPPHazards(MachineInstr *DPP) {$/;"	f	class:GCNHazardRecognizer	typeref:typename:int
checkDivFMasHazards	GCNHazardRecognizer.cpp	/^int GCNHazardRecognizer::checkDivFMasHazards(MachineInstr *DivFMas) {$/;"	f	class:GCNHazardRecognizer	typeref:typename:int
checkDot4MulSignedness	RVISelLowering.cpp	/^checkDot4MulSignedness(const SDValue &N, ByteProvider<SDValue> &Src0,$/;"	f	typeref:typename:std::optional<bool>	file:
checkFPAtomicToDenormModeHazard	GCNHazardRecognizer.cpp	/^int GCNHazardRecognizer::checkFPAtomicToDenormModeHazard(MachineInstr *MI) {$/;"	f	class:GCNHazardRecognizer	typeref:typename:int
checkFlag	RVMachineFunctionInfo.h	/^  bool checkFlag(Register Reg, uint8_t Flag) const {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:bool
checkFlatScratchSVSSwizzleBug	RVGPUISelDAGToDAG.cpp	/^bool RVGPUDAGToDAGISel::checkFlatScratchSVSSwizzleBug($/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
checkFlatScratchSVSSwizzleBug	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::checkFlatScratchSVSSwizzleBug($/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
checkForPhysRegDependency	RVISelLowering.cpp	/^bool RVTargetLowering::checkForPhysRegDependency($/;"	f	class:RVTargetLowering	typeref:typename:bool
checkForQueuePtr	RVGPUAttributor.cpp	/^  bool checkForQueuePtr(Attributor &A) {$/;"	f	struct:__anon512e119a0111::AARVAttributesFunction	typeref:typename:bool	file:
checkFunction	RVGPURemoveIncompatibleFunctions.cpp	/^bool RVGPURemoveIncompatibleFunctions::checkFunction(Function &F) {$/;"	f	class:RVGPURemoveIncompatibleFunctions	typeref:typename:bool
checkGetRegHazards	GCNHazardRecognizer.cpp	/^int GCNHazardRecognizer::checkGetRegHazards(MachineInstr *GetRegInstr) {$/;"	f	class:GCNHazardRecognizer	typeref:typename:int
checkIndexInPrologEpilogSGPRSpills	RVMachineFunctionInfo.h	/^  bool checkIndexInPrologEpilogSGPRSpills(int FI) const {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:bool
checkInlineAsmHazards	GCNHazardRecognizer.cpp	/^int GCNHazardRecognizer::checkInlineAsmHazards(MachineInstr *IA) {$/;"	f	class:GCNHazardRecognizer	typeref:typename:int
checkInstOffsetsDoNotOverlap	RVInstrInfo.cpp	/^bool RVInstrInfo::checkInstOffsetsDoNotOverlap(const MachineInstr &MIa,$/;"	f	class:RVInstrInfo	typeref:typename:bool
checkMAIHazards	GCNHazardRecognizer.cpp	/^int GCNHazardRecognizer::checkMAIHazards(MachineInstr *MI) {$/;"	f	class:GCNHazardRecognizer	typeref:typename:int
checkMAIHazards908	GCNHazardRecognizer.cpp	/^int GCNHazardRecognizer::checkMAIHazards908(MachineInstr *MI) {$/;"	f	class:GCNHazardRecognizer	typeref:typename:int
checkMAIHazards90A	GCNHazardRecognizer.cpp	/^int GCNHazardRecognizer::checkMAIHazards90A(MachineInstr *MI) {$/;"	f	class:GCNHazardRecognizer	typeref:typename:int
checkMAILdStHazards	GCNHazardRecognizer.cpp	/^int GCNHazardRecognizer::checkMAILdStHazards(MachineInstr *MI) {$/;"	f	class:GCNHazardRecognizer	typeref:typename:int
checkMAIVALUHazards	GCNHazardRecognizer.cpp	/^int GCNHazardRecognizer::checkMAIVALUHazards(MachineInstr *MI) {$/;"	f	class:GCNHazardRecognizer	typeref:typename:int
checkMFMAPadding	GCNHazardRecognizer.cpp	/^int GCNHazardRecognizer::checkMFMAPadding(MachineInstr *MI) {$/;"	f	class:GCNHazardRecognizer	typeref:typename:int
checkNSAtoVMEMHazard	GCNHazardRecognizer.cpp	/^int GCNHazardRecognizer::checkNSAtoVMEMHazard(MachineInstr *MI) {$/;"	f	class:GCNHazardRecognizer	typeref:typename:int
checkOptimal	RVGPUIGroupLP.cpp	/^bool PipelineSolver::checkOptimal() {$/;"	f	class:__anon61b122dc0111::PipelineSolver	typeref:typename:bool
checkPressure	SIFormMemoryClauses.cpp	/^bool SIFormMemoryClauses::checkPressure(const MachineInstr &MI,$/;"	f	class:SIFormMemoryClauses	typeref:typename:bool
checkRFEHazards	GCNHazardRecognizer.cpp	/^int GCNHazardRecognizer::checkRFEHazards(MachineInstr *RFE) {$/;"	f	class:GCNHazardRecognizer	typeref:typename:int
checkRWLaneHazards	GCNHazardRecognizer.cpp	/^int GCNHazardRecognizer::checkRWLaneHazards(MachineInstr *RWLane) {$/;"	f	class:GCNHazardRecognizer	typeref:typename:int
checkReadM0Hazards	GCNHazardRecognizer.cpp	/^int GCNHazardRecognizer::checkReadM0Hazards(MachineInstr *MI) {$/;"	f	class:GCNHazardRecognizer	typeref:typename:int
checkRegOnlyPHIInputs	RVGPUMachineCFGStructurizer.cpp	/^static void checkRegOnlyPHIInputs(MachineFunction &MF) {$/;"	f	typeref:typename:void	file:
checkRegUsageImpact	SIMachineScheduler.cpp	/^SIScheduleBlockScheduler::checkRegUsageImpact(std::set<unsigned> &InRegs,$/;"	f	class:SIScheduleBlockScheduler	typeref:typename:std::vector<int>
checkSMRDHazards	GCNHazardRecognizer.cpp	/^int GCNHazardRecognizer::checkSMRDHazards(MachineInstr *SMRD) {$/;"	f	class:GCNHazardRecognizer	typeref:typename:int
checkScheduling	GCNSchedStrategy.cpp	/^void GCNSchedStage::checkScheduling() {$/;"	f	class:GCNSchedStage	typeref:typename:void
checkSetRegHazards	GCNHazardRecognizer.cpp	/^int GCNHazardRecognizer::checkSetRegHazards(MachineInstr *SetRegInstr) {$/;"	f	class:GCNHazardRecognizer	typeref:typename:int
checkSoftClauseHazards	GCNHazardRecognizer.cpp	/^int GCNHazardRecognizer::checkSoftClauseHazards(MachineInstr *MEM) {$/;"	f	class:GCNHazardRecognizer	typeref:typename:int
checkTargetMatchPredicate	AsmParser/RVGPUAsmParser.cpp	/^unsigned RVGPUAsmParser::checkTargetMatchPredicate(MCInst &Inst) {$/;"	f	class:RVGPUAsmParser	typeref:typename:unsigned
checkUnsupportedInstruction	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::checkUnsupportedInstruction(StringRef Mnemo,$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
checkVALUHazards	GCNHazardRecognizer.cpp	/^int GCNHazardRecognizer::checkVALUHazards(MachineInstr *VALU) {$/;"	f	class:GCNHazardRecognizer	typeref:typename:int
checkVALUHazardsHelper	GCNHazardRecognizer.cpp	/^GCNHazardRecognizer::checkVALUHazardsHelper(const MachineOperand &Def,$/;"	f	class:GCNHazardRecognizer	typeref:typename:int
checkVMEMHazards	GCNHazardRecognizer.cpp	/^int GCNHazardRecognizer::checkVMEMHazards(MachineInstr* VMEM) {$/;"	f	class:GCNHazardRecognizer	typeref:typename:int
checkVOPDRegConstraints	GCNVOPDUtils.cpp	/^bool llvm::checkVOPDRegConstraints(const RVInstrInfo &TII,$/;"	f	class:llvm	typeref:typename:bool
chooseBestVariableForModuleStrategy	RVGPULowerModuleLDSPass.cpp	/^  chooseBestVariableForModuleStrategy(const DataLayout &DL,$/;"	f	class:__anoncc7483b30111::RVGPULowerModuleLDS	typeref:typename:GlobalVariable *	file:
classof	RVGPUAttributor.cpp	/^  static bool classof(const AbstractAttribute *AA) {$/;"	f	struct:__anon512e119a0111::AARVAttributes	typeref:typename:bool	file:
classof	RVGPUAttributor.cpp	/^  static bool classof(const AbstractAttribute *AA) {$/;"	f	struct:__anon512e119a0111::AARVFlatWorkGroupSize	typeref:typename:bool	file:
classof	RVGPUAttributor.cpp	/^  static bool classof(const AbstractAttribute *AA) {$/;"	f	struct:__anon512e119a0111::AARVWavesPerEU	typeref:typename:bool	file:
classof	RVGPUAttributor.cpp	/^  static bool classof(const AbstractAttribute *AA) {$/;"	f	struct:__anon512e119a0111::AAUniformWorkGroupSize	typeref:typename:bool	file:
classof	RVGPULibFunc.h	/^  static bool classof(const RVGPULibFuncImpl *F) { return !F->isMangled(); }$/;"	f	class:llvm::RVGPUUnmangledLibFunc	typeref:typename:bool
classof	RVGPULibFunc.h	/^  static bool classof(const RVGPULibFuncImpl *F) { return F->isMangled(); }$/;"	f	class:llvm::RVGPUMangledLibFunc	typeref:typename:bool
classof	RVMachineFunctionInfo.h	/^  static bool classof(const PseudoSourceValue *V) {$/;"	f	class:llvm::RVGPUGWSResourcePseudoSourceValue	typeref:typename:bool
cleanConstrainRegs	SILowerI1Copies.cpp	/^bool Vreg1LoweringHelper::cleanConstrainRegs(bool Changed) {$/;"	f	class:__anone16a92980111::Vreg1LoweringHelper	typeref:typename:bool
clear	GCNRegPressure.h	/^  void clear() { std::fill(&Value[0], &Value[TOTAL_KINDS], 0); }$/;"	f	struct:llvm::GCNRegPressure	typeref:typename:void
clear	RVGPUMachineCFGStructurizer.cpp	/^void PHILinearize::clear() { PHIInfo = PHIInfoT(); }$/;"	f	class:PHILinearize	typeref:typename:void
clear	RVInstrInfo.h	/^  void clear() {$/;"	f	struct:llvm::SIInstrWorklist	typeref:typename:void
clearMaxPressure	GCNRegPressure.h	/^  void clearMaxPressure() { MaxPressure.clear(); }$/;"	f	class:llvm::GCNRPTracker	typeref:typename:void
clearUnusedBits	RVISelLowering.cpp	/^static uint64_t clearUnusedBits(uint64_t Val, unsigned Size) {$/;"	f	typeref:typename:uint64_t	file:
clearVgprVmemTypes	SIInsertWaitcnts.cpp	/^  void clearVgprVmemTypes(int GprNo) {$/;"	f	class:__anona6cbb7940211::WaitcntBrackets	typeref:typename:void	file:
clone	RVMachineFunctionInfo.cpp	/^MachineFunctionInfo *RVMachineFunctionInfo::clone($/;"	f	class:RVMachineFunctionInfo	typeref:typename:MachineFunctionInfo *
closeControlFlow	SIAnnotateControlFlow.cpp	/^bool SIAnnotateControlFlow::closeControlFlow(BasicBlock *BB) {$/;"	f	class:SIAnnotateControlFlow	typeref:typename:bool
closestSucc	GCNILPSched.cpp	/^static unsigned closestSucc(const SUnit *SU) {$/;"	f	typeref:typename:unsigned	file:
code_properties	RVKernelCodeT.h	/^  uint32_t code_properties;$/;"	m	struct:rv_kernel_code_t	typeref:typename:uint32_t
collectCandidateRegisters	SIOptimizeVGPRLiveRange.cpp	/^void SIOptimizeVGPRLiveRange::collectCandidateRegisters($/;"	f	class:SIOptimizeVGPRLiveRange	typeref:typename:void
collectElseRegionBlocks	SIOptimizeVGPRLiveRange.cpp	/^void SIOptimizeVGPRLiveRange::collectElseRegionBlocks($/;"	f	class:SIOptimizeVGPRLiveRange	typeref:typename:void
collectFlatAddressOperands	RVGPUTargetTransformInfo.cpp	/^bool GCNTTIImpl::collectFlatAddressOperands(SmallVectorImpl<int> &OpIndexes,$/;"	f	class:GCNTTIImpl	typeref:typename:bool
collectIncomingValuesFromPhi	SILowerI1Copies.cpp	/^void Vreg1LoweringHelper::collectIncomingValuesFromPhi($/;"	f	class:Vreg1LoweringHelper	typeref:typename:void
collectMergeableInsts	RVGPUImageIntrinsicOptimizer.cpp	/^BasicBlock::iterator collectMergeableInsts($/;"	f	typeref:typename:BasicBlock::iterator
collectMergeableInsts	SILoadStoreOptimizer.cpp	/^SILoadStoreOptimizer::collectMergeableInsts($/;"	f	class:SILoadStoreOptimizer	typeref:typename:std::pair<MachineBasicBlock::iterator,bool>
collectPHINodes	RVGPUCodeGenPrepare.cpp	/^static void collectPHINodes(const PHINode &I,$/;"	f	typeref:typename:void	file:
collectPHIs	RVGPUMachineCFGStructurizer.cpp	/^static void collectPHIs(MachineBasicBlock *MBB,$/;"	f	typeref:typename:void	file:
collectRegUses	SIFormMemoryClauses.cpp	/^void SIFormMemoryClauses::collectRegUses(const MachineInstr &MI,$/;"	f	class:SIFormMemoryClauses	typeref:typename:void
collectRematerializableInstructions	GCNSchedStrategy.cpp	/^void PreRARematStage::collectRematerializableInstructions() {$/;"	f	class:PreRARematStage	typeref:typename:void
collectUsedRegUnits	SIPostRABundler.cpp	/^void SIPostRABundler::collectUsedRegUnits(const MachineInstr &MI,$/;"	f	class:SIPostRABundler	typeref:typename:void
collectUsesWithPtrTypes	RVGPUPromoteAlloca.cpp	/^bool RVGPUPromoteAllocaImpl::collectUsesWithPtrTypes($/;"	f	class:RVGPUPromoteAllocaImpl	typeref:typename:bool
collectVOPModifiers	Disassembler/RVGPUDisassembler.cpp	/^static VOPModifiers collectVOPModifiers(const MCInst &MI,$/;"	f	typeref:typename:VOPModifiers	file:
collectVirtualRegUses	GCNRegPressure.cpp	/^collectVirtualRegUses(SmallVectorImpl<RegisterMaskPair> &RegMaskPairs,$/;"	f	typeref:typename:void	file:
collectWaterfallCandidateRegisters	SIOptimizeVGPRLiveRange.cpp	/^void SIOptimizeVGPRLiveRange::collectWaterfallCandidateRegisters($/;"	f	class:SIOptimizeVGPRLiveRange	typeref:typename:void
collectWaterfallOperands	RVGPURegisterBankInfo.cpp	/^bool RVGPURegisterBankInfo::collectWaterfallOperands($/;"	f	class:RVGPURegisterBankInfo	typeref:typename:bool
colorAccordingToReservedDependencies	SIMachineScheduler.cpp	/^void SIScheduleBlockCreator::colorAccordingToReservedDependencies() {$/;"	f	class:SIScheduleBlockCreator	typeref:typename:void
colorComputeReservedDependencies	SIMachineScheduler.cpp	/^void SIScheduleBlockCreator::colorComputeReservedDependencies() {$/;"	f	class:SIScheduleBlockCreator	typeref:typename:void
colorEndsAccordingToDependencies	SIMachineScheduler.cpp	/^void SIScheduleBlockCreator::colorEndsAccordingToDependencies() {$/;"	f	class:SIScheduleBlockCreator	typeref:typename:void
colorExports	SIMachineScheduler.cpp	/^void SIScheduleBlockCreator::colorExports() {$/;"	f	class:SIScheduleBlockCreator	typeref:typename:void
colorForceConsecutiveOrderInGroup	SIMachineScheduler.cpp	/^void SIScheduleBlockCreator::colorForceConsecutiveOrderInGroup() {$/;"	f	class:SIScheduleBlockCreator	typeref:typename:void
colorHighLatenciesAlone	SIMachineScheduler.cpp	/^void SIScheduleBlockCreator::colorHighLatenciesAlone() {$/;"	f	class:SIScheduleBlockCreator	typeref:typename:void
colorHighLatenciesGroups	SIMachineScheduler.cpp	/^void SIScheduleBlockCreator::colorHighLatenciesGroups() {$/;"	f	class:SIScheduleBlockCreator	typeref:typename:void
colorMergeConstantLoadsNextGroup	SIMachineScheduler.cpp	/^void SIScheduleBlockCreator::colorMergeConstantLoadsNextGroup() {$/;"	f	class:SIScheduleBlockCreator	typeref:typename:void
colorMergeIfPossibleNextGroup	SIMachineScheduler.cpp	/^void SIScheduleBlockCreator::colorMergeIfPossibleNextGroup() {$/;"	f	class:SIScheduleBlockCreator	typeref:typename:void
colorMergeIfPossibleNextGroupOnlyForReserved	SIMachineScheduler.cpp	/^void SIScheduleBlockCreator::colorMergeIfPossibleNextGroupOnlyForReserved() {$/;"	f	class:SIScheduleBlockCreator	typeref:typename:void
colorMergeIfPossibleSmallGroupsToNextGroup	SIMachineScheduler.cpp	/^void SIScheduleBlockCreator::colorMergeIfPossibleSmallGroupsToNextGroup() {$/;"	f	class:SIScheduleBlockCreator	typeref:typename:void
combineBallotPattern	RVGPUISelDAGToDAG.cpp	/^static SDValue combineBallotPattern(SDValue VCMP, bool &Negate) {$/;"	f	typeref:typename:SDValue	file:
combineDPPMov	GCNDPPCombine.cpp	/^bool GCNDPPCombine::combineDPPMov(MachineInstr &MovMI) const {$/;"	f	class:GCNDPPCombine	typeref:typename:bool
combineFMinMaxLegacy	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::combineFMinMaxLegacy(const SDLoc &DL, EVT VT,$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
combineFMinMaxLegacyImpl	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::combineFMinMaxLegacyImpl($/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
combineKnownAdjacentMMOs	SILoadStoreOptimizer.cpp	/^SILoadStoreOptimizer::combineKnownAdjacentMMOs(const CombineInfo &CI,$/;"	f	class:SILoadStoreOptimizer	typeref:typename:MachineMemOperand *
combineMasks	SILowerControlFlow.cpp	/^void SILowerControlFlow::combineMasks(MachineInstr &MI) {$/;"	f	class:SILowerControlFlow	typeref:typename:void
combineRepeatedFPDivisors	RVISelLowering.h	/^  unsigned combineRepeatedFPDivisors() const override {$/;"	f	class:llvm::RVTargetLowering	typeref:typename:unsigned
combined	Utils/RVGPUBaseInfo.h	/^  Waitcnt combined(const Waitcnt &Other) const {$/;"	f	struct:llvm::RVGPU::Waitcnt	typeref:typename:Waitcnt
commuteInstructionImpl	RVInstrInfo.cpp	/^MachineInstr *RVInstrInfo::commuteInstructionImpl(MachineInstr &MI, bool NewMI,$/;"	f	class:RVInstrInfo	typeref:typename:MachineInstr *
commuteOpcode	RVInstrInfo.cpp	/^int RVInstrInfo::commuteOpcode(unsigned Opcode) const {$/;"	f	class:RVInstrInfo	typeref:typename:int
commuteOpcode	RVInstrInfo.h	/^  inline int commuteOpcode(const MachineInstr &MI) const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:LLVM_READONLY int
compareMachineOp	RVInstrInfo.cpp	/^static bool compareMachineOp(const MachineOperand &Op0,$/;"	f	typeref:typename:bool	file:
computeBase	SILoadStoreOptimizer.cpp	/^Register SILoadStoreOptimizer::computeBase(MachineInstr &MI,$/;"	f	class:SILoadStoreOptimizer	typeref:typename:Register
computeBlockPressure	GCNSchedStrategy.cpp	/^void GCNScheduleDAGMILive::computeBlockPressure(unsigned RegionIdx,$/;"	f	class:GCNScheduleDAGMILive	typeref:typename:void
computeDataLayout	RVGPUTargetMachine.cpp	/^static StringRef computeDataLayout(const Triple &TT) {$/;"	f	typeref:typename:StringRef	file:
computeIndirectRegAndOffset	RVISelLowering.cpp	/^computeIndirectRegAndOffset(const RVRegisterInfo &TRI,$/;"	f	typeref:typename:std::pair<unsigned,int>	file:
computeIndirectRegIndex	RVGPUInstructionSelector.cpp	/^computeIndirectRegIndex(MachineRegisterInfo &MRI, const RVRegisterInfo &TRI,$/;"	f	typeref:typename:std::pair<Register,unsigned>	file:
computeKnownAlignForTargetInstr	RVISelLowering.cpp	/^Align RVTargetLowering::computeKnownAlignForTargetInstr($/;"	f	class:RVTargetLowering	typeref:typename:Align
computeKnownBitsForFrameIndex	RVISelLowering.cpp	/^void RVTargetLowering::computeKnownBitsForFrameIndex($/;"	f	class:RVTargetLowering	typeref:typename:void
computeKnownBitsForTargetInstr	RVISelLowering.cpp	/^void RVTargetLowering::computeKnownBitsForTargetInstr($/;"	f	class:RVTargetLowering	typeref:typename:void
computeKnownBitsForTargetNode	RVGPUISelLowering.cpp	/^void RVGPUTargetLowering::computeKnownBitsForTargetNode($/;"	f	class:RVGPUTargetLowering	typeref:typename:void
computeKnownBitsForTargetNode	RVISelLowering.cpp	/^void RVTargetLowering::computeKnownBitsForTargetNode(const SDValue Op,$/;"	f	class:RVTargetLowering	typeref:typename:void
computeKnownFPClass	RVGPUCodeGenPrepare.cpp	/^  KnownFPClass computeKnownFPClass(const Value *V, FPClassTest Interested,$/;"	f	class:__anond35e324e0111::RVGPUCodeGenPrepareImpl	typeref:typename:KnownFPClass	file:
computeNumSignBitsForTargetInstr	RVGPUISelLowering.cpp	/^unsigned RVGPUTargetLowering::computeNumSignBitsForTargetInstr($/;"	f	class:RVGPUTargetLowering	typeref:typename:unsigned
computeOccupancy	RVGPUSubtarget.cpp	/^unsigned GCNSubtarget::computeOccupancy(const Function &F, unsigned LDSSize,$/;"	f	class:GCNSubtarget	typeref:typename:unsigned
computeProblemSize	RVGPUIGroupLP.cpp	/^unsigned PipelineSolver::computeProblemSize() {$/;"	f	class:__anon61b122dc0111::PipelineSolver	typeref:typename:unsigned
computeSUnitReadyCycle	GCNSchedStrategy.cpp	/^GCNSchedStage::computeSUnitReadyCycle(const SUnit &SU, unsigned CurrCycle,$/;"	f	class:GCNSchedStage	typeref:typename:unsigned
computeWaitCnt	MCA/RVGPUCustomBehaviour.cpp	/^void RVGPUCustomBehaviour::computeWaitCnt(const InstRef &IR, unsigned &Vmcnt,$/;"	f	class:llvm::mca::RVGPUCustomBehaviour	typeref:typename:void
compute_pgm_resource_registers	RVKernelCodeT.h	/^  uint64_t compute_pgm_resource_registers;$/;"	m	struct:rv_kernel_code_t	typeref:typename:uint64_t
constantFoldBFE	RVGPUISelLowering.cpp	/^static SDValue constantFoldBFE(SelectionDAG &DAG, IntTy Src0, uint32_t Offset,$/;"	f	typeref:typename:SDValue	file:
constrainCopyLikeIntrin	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::constrainCopyLikeIntrin(MachineInstr &MI,$/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
constrainIncomingRegisterTakenAsIs	SILowerI1Copies.cpp	/^void Vreg1LoweringHelper::constrainIncomingRegisterTakenAsIs(Incoming &In) {$/;"	f	class:Vreg1LoweringHelper	typeref:typename:void
constrainOpWithReadfirstlane	RVGPURegisterBankInfo.cpp	/^void RVGPURegisterBankInfo::constrainOpWithReadfirstlane($/;"	f	class:RVGPURegisterBankInfo	typeref:typename:void
constrainRegToBank	RVGPURegisterBankInfo.cpp	/^static Register constrainRegToBank(MachineRegisterInfo &MRI,$/;"	f	typeref:typename:Register	file:
constructFromMIWithMMO	SIMemoryLegalizer.cpp	/^std::optional<SIMemOpInfo> SIMemOpAccess::constructFromMIWithMMO($/;"	f	class:SIMemOpAccess	typeref:typename:std::optional<SIMemOpInfo>
constructRetValue	RVISelLowering.cpp	/^static SDValue constructRetValue(SelectionDAG &DAG,$/;"	f	typeref:typename:SDValue	file:
contains	RVGPUMachineCFGStructurizer.cpp	/^  bool contains(MachineBasicBlock *MBB) {$/;"	f	class:__anon1695b1f50211::RegionMRT	typeref:typename:bool	file:
contains	RVGPUMachineCFGStructurizer.cpp	/^bool LinearizedRegion::contains(MachineBasicBlock *MBB) {$/;"	f	class:LinearizedRegion	typeref:typename:bool
containsDef	RVGPUMachineCFGStructurizer.cpp	/^bool RVGPUMachineCFGStructurizer::containsDef(MachineBasicBlock *MBB,$/;"	f	class:RVGPUMachineCFGStructurizer	typeref:typename:bool
containsNewBackedge	RVGPUMachineCFGStructurizer.cpp	/^static bool containsNewBackedge(MRT *Tree,$/;"	f	typeref:typename:bool	file:
containsNewBackedge	RVGPUMachineCFGStructurizer.cpp	/^static bool containsNewBackedge(RegionMRT *Region) {$/;"	f	typeref:typename:bool	file:
control_directives	RVKernelCodeT.h	/^  uint64_t control_directives[16];$/;"	m	struct:rv_kernel_code_t	typeref:typename:uint64_t[16]
convertArgType	RVISelLowering.cpp	/^SDValue RVTargetLowering::convertArgType(SelectionDAG &DAG, EVT VT, EVT MemVT,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
convertArgumentInfo	RVMachineFunctionInfo.cpp	/^convertArgumentInfo(const RVGPUFunctionArgInfo &ArgInfo,$/;"	f	typeref:typename:std::optional<yaml::SIArgumentInfo>	file:
convertDPP8Inst	Disassembler/RVGPUDisassembler.cpp	/^DecodeStatus RVGPUDisassembler::convertDPP8Inst(MCInst &MI) const {$/;"	f	class:RVGPUDisassembler	typeref:typename:DecodeStatus
convertDfmtNfmt2Ufmt	Utils/RVGPUBaseInfo.cpp	/^int64_t convertDfmtNfmt2Ufmt(unsigned Dfmt, unsigned Nfmt,$/;"	f	namespace:llvm::RVGPU::MTBUFFormat	typeref:typename:int64_t
convertDppBoundCtrl	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::convertDppBoundCtrl(int64_t &BoundCtrl) {$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
convertEXPInst	Disassembler/RVGPUDisassembler.cpp	/^DecodeStatus RVGPUDisassembler::convertEXPInst(MCInst &MI) const {$/;"	f	class:RVGPUDisassembler	typeref:typename:DecodeStatus
convertFMAanyK	Disassembler/RVGPUDisassembler.cpp	/^DecodeStatus RVGPUDisassembler::convertFMAanyK(MCInst &MI,$/;"	f	class:RVGPUDisassembler	typeref:typename:DecodeStatus
convertFuncInfoToYAML	RVGPUTargetMachine.cpp	/^GCNTargetMachine::convertFuncInfoToYAML(const MachineFunction &MF) const {$/;"	f	class:GCNTargetMachine	typeref:typename:yaml::MachineFunctionInfo *
convertImageAddrToPacked	RVGPULegalizerInfo.cpp	/^static void convertImageAddrToPacked(MachineIRBuilder &B, MachineInstr &MI,$/;"	f	typeref:typename:void	file:
convertIsaVersionV2	MCTargetDesc/RVGPUTargetStreamer.cpp	/^static void convertIsaVersionV2(uint32_t &Major, uint32_t &Minor,$/;"	f	typeref:typename:void	file:
convertMIMGInst	Disassembler/RVGPUDisassembler.cpp	/^DecodeStatus RVGPUDisassembler::convertMIMGInst(MCInst &MI) const {$/;"	f	class:RVGPUDisassembler	typeref:typename:DecodeStatus
convertMacDPPInst	Disassembler/RVGPUDisassembler.cpp	/^void RVGPUDisassembler::convertMacDPPInst(MCInst &MI) const {$/;"	f	class:RVGPUDisassembler	typeref:typename:void
convertNonUniformIfRegion	RVInstrInfo.cpp	/^void RVInstrInfo::convertNonUniformIfRegion(MachineBasicBlock *IfEntry,$/;"	f	class:RVInstrInfo	typeref:typename:void
convertNonUniformLoopRegion	RVInstrInfo.cpp	/^void RVInstrInfo::convertNonUniformLoopRegion($/;"	f	class:RVInstrInfo	typeref:typename:void
convertSDWAInst	Disassembler/RVGPUDisassembler.cpp	/^DecodeStatus RVGPUDisassembler::convertSDWAInst(MCInst &MI) const {$/;"	f	class:RVGPUDisassembler	typeref:typename:DecodeStatus
convertSMRDOffsetUnits	Utils/RVGPUBaseInfo.cpp	/^uint64_t convertSMRDOffsetUnits(const MCSubtargetInfo &ST,$/;"	f	namespace:llvm::RVGPU	typeref:typename:uint64_t
convertSyncMapsToArrays	RVGPUIGroupLP.cpp	/^void PipelineSolver::convertSyncMapsToArrays() {$/;"	f	class:__anon61b122dc0111::PipelineSolver	typeref:typename:void
convertTo16Bit	RVGPUInstCombineIntrinsic.cpp	/^static Value *convertTo16Bit(Value &V, InstCombiner::BuilderTy &Builder) {$/;"	f	typeref:typename:Value *	file:
convertToSDWA	SIPeepholeSDWA.cpp	/^bool SDWADstOperand::convertToSDWA(MachineInstr &MI, const RVInstrInfo *TII) {$/;"	f	class:SDWADstOperand	typeref:typename:bool
convertToSDWA	SIPeepholeSDWA.cpp	/^bool SDWADstPreserveOperand::convertToSDWA(MachineInstr &MI,$/;"	f	class:SDWADstPreserveOperand	typeref:typename:bool
convertToSDWA	SIPeepholeSDWA.cpp	/^bool SDWASrcOperand::convertToSDWA(MachineInstr &MI, const RVInstrInfo *TII) {$/;"	f	class:SDWASrcOperand	typeref:typename:bool
convertToSDWA	SIPeepholeSDWA.cpp	/^bool SIPeepholeSDWA::convertToSDWA(MachineInstr &MI,$/;"	f	class:SIPeepholeSDWA	typeref:typename:bool
convertToThreeAddress	RVInstrInfo.cpp	/^MachineInstr *RVInstrInfo::convertToThreeAddress(MachineInstr &MI,$/;"	f	class:RVInstrInfo	typeref:typename:MachineInstr *
convertVINTERPInst	Disassembler/RVGPUDisassembler.cpp	/^DecodeStatus RVGPUDisassembler::convertVINTERPInst(MCInst &MI) const {$/;"	f	class:RVGPUDisassembler	typeref:typename:DecodeStatus
convertVOP3DPPInst	Disassembler/RVGPUDisassembler.cpp	/^DecodeStatus RVGPUDisassembler::convertVOP3DPPInst(MCInst &MI) const {$/;"	f	class:RVGPUDisassembler	typeref:typename:DecodeStatus
convertVOP3PDPPInst	Disassembler/RVGPUDisassembler.cpp	/^DecodeStatus RVGPUDisassembler::convertVOP3PDPPInst(MCInst &MI) const {$/;"	f	class:RVGPUDisassembler	typeref:typename:DecodeStatus
convertVOPCDPPInst	Disassembler/RVGPUDisassembler.cpp	/^DecodeStatus RVGPUDisassembler::convertVOPCDPPInst(MCInst &MI) const {$/;"	f	class:RVGPUDisassembler	typeref:typename:DecodeStatus
copyCost	RVGPURegisterBankInfo.cpp	/^unsigned RVGPURegisterBankInfo::copyCost(const RegisterBank &Dst,$/;"	f	class:RVGPURegisterBankInfo	typeref:typename:unsigned
copyExtraImplicitOps	SIShrinkInstructions.cpp	/^void SIShrinkInstructions::copyExtraImplicitOps(MachineInstr &NewMI,$/;"	f	class:SIShrinkInstructions	typeref:typename:void
copyFlagsToImplicitVCC	RVInstrInfo.cpp	/^static void copyFlagsToImplicitVCC(MachineInstr &MI,$/;"	f	typeref:typename:void	file:
copyFromScratchSGPR	RVFrameLowering.cpp	/^  void copyFromScratchSGPR(Register SrcReg) const {$/;"	f	class:llvm::PrologEpilogSGPRSpillBuilder	typeref:typename:void	file:
copyPhysReg	RVInstrInfo.cpp	/^void RVInstrInfo::copyPhysReg(MachineBasicBlock &MBB,$/;"	f	class:RVInstrInfo	typeref:typename:void
copyRegOperand	SIPeepholeSDWA.cpp	/^static void copyRegOperand(MachineOperand &To, const MachineOperand &From) {$/;"	f	typeref:typename:void	file:
copyToM0	RVISelLowering.cpp	/^SDValue RVTargetLowering::copyToM0(SelectionDAG &DAG, SDValue Chain,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
copyToScratchSGPR	RVFrameLowering.cpp	/^  void copyToScratchSGPR(Register DstReg) const {$/;"	f	class:llvm::PrologEpilogSGPRSpillBuilder	typeref:typename:void	file:
copyToVGPRIfSrcFolded	RVGPUInstructionSelector.cpp	/^Register RVGPUInstructionSelector::copyToVGPRIfSrcFolded($/;"	f	class:RVGPUInstructionSelector	typeref:typename:Register
counterOutOfOrder	SIInsertWaitcnts.cpp	/^bool WaitcntBrackets::counterOutOfOrder(InstCounterType T) const {$/;"	f	class:WaitcntBrackets	typeref:typename:bool
create	SIMemoryLegalizer.cpp	/^std::unique_ptr<SICacheControl> SICacheControl::create(const GCNSubtarget &ST) {$/;"	f	class:SICacheControl	typeref:typename:std::unique_ptr<SICacheControl>
createArg	RVGPUArgumentUsageInfo.h	/^  static ArgDescriptor createArg(const ArgDescriptor &Arg, unsigned Mask) {$/;"	f	struct:llvm::ArgDescriptor	typeref:typename:ArgDescriptor
createArgument	RVMachineFunctionInfo.h	/^  static inline SIArgument createArgument(bool IsReg) {$/;"	f	struct:llvm::yaml::SIArgument	typeref:typename:SIArgument
createBBSelectReg	RVGPUMachineCFGStructurizer.cpp	/^static unsigned createBBSelectReg(const RVInstrInfo *TII,$/;"	f	typeref:typename:unsigned	file:
createBasicSGPRRegisterAllocator	RVGPUTargetMachine.cpp	/^static FunctionPass *createBasicSGPRRegisterAllocator() {$/;"	f	namespace:__anon565c6f860111	typeref:typename:FunctionPass *	file:
createBasicVGPRRegisterAllocator	RVGPUTargetMachine.cpp	/^static FunctionPass *createBasicVGPRRegisterAllocator() {$/;"	f	namespace:__anon565c6f860111	typeref:typename:FunctionPass *	file:
createBlocksForVariant	SIMachineScheduler.cpp	/^void SIScheduleBlockCreator::createBlocksForVariant(SISchedulerBlockCreatorVariant BlockVariant)/;"	f	class:SIScheduleBlockCreator	typeref:typename:void
createDPPInst	GCNDPPCombine.cpp	/^MachineInstr *GCNDPPCombine::createDPPInst($/;"	f	class:GCNDPPCombine	typeref:typename:MachineInstr *
createDPPInst	GCNDPPCombine.cpp	/^MachineInstr *GCNDPPCombine::createDPPInst(MachineInstr &OrigMI,$/;"	f	class:GCNDPPCombine	typeref:typename:MachineInstr *
createDefaultFuncInfoYAML	RVGPUTargetMachine.cpp	/^yaml::MachineFunctionInfo *GCNTargetMachine::createDefaultFuncInfoYAML() const {$/;"	f	class:GCNTargetMachine	typeref:typename:yaml::MachineFunctionInfo *
createEntryPHI	RVGPUMachineCFGStructurizer.cpp	/^void RVGPUMachineCFGStructurizer::createEntryPHI(LinearizedRegion *CurrentRegion,$/;"	f	class:RVGPUMachineCFGStructurizer	typeref:typename:void
createEntryPHIs	RVGPUMachineCFGStructurizer.cpp	/^void RVGPUMachineCFGStructurizer::createEntryPHIs(LinearizedRegion *CurrentRegion) {$/;"	f	class:RVGPUMachineCFGStructurizer	typeref:typename:void
createFastSGPRRegisterAllocator	RVGPUTargetMachine.cpp	/^static FunctionPass *createFastSGPRRegisterAllocator() {$/;"	f	namespace:__anon565c6f860111	typeref:typename:FunctionPass *	file:
createFastVGPRRegisterAllocator	RVGPUTargetMachine.cpp	/^static FunctionPass *createFastVGPRRegisterAllocator() {$/;"	f	namespace:__anon565c6f860111	typeref:typename:FunctionPass *	file:
createFillMFMAShadowMutation	RVGPUSubtarget.cpp	/^GCNSubtarget::createFillMFMAShadowMutation(const TargetInstrInfo *TII) const {$/;"	f	class:GCNSubtarget	typeref:typename:std::unique_ptr<ScheduleDAGMutation>
createForPosition	RVGPUAttributor.cpp	/^AARVAttributes &AARVAttributes::createForPosition(const IRPosition &IRP,$/;"	f	class:__anon512e119a0111::AARVAttributes	typeref:typename:AARVAttributes &
createForPosition	RVGPUAttributor.cpp	/^AARVFlatWorkGroupSize::createForPosition(const IRPosition &IRP,$/;"	f	class:__anon512e119a0111::AARVFlatWorkGroupSize	typeref:typename:AARVFlatWorkGroupSize &
createForPosition	RVGPUAttributor.cpp	/^AARVWavesPerEU &AARVWavesPerEU::createForPosition(const IRPosition &IRP,$/;"	f	class:__anon512e119a0111::AARVWavesPerEU	typeref:typename:AARVWavesPerEU &
createForPosition	RVGPUAttributor.cpp	/^AAUniformWorkGroupSize::createForPosition(const IRPosition &IRP,$/;"	f	class:__anon512e119a0111::AAUniformWorkGroupSize	typeref:typename:AAUniformWorkGroupSize &
createGCNDPPCombinePass	GCNDPPCombine.cpp	/^FunctionPass *llvm::createGCNDPPCombinePass() {$/;"	f	class:llvm	typeref:typename:FunctionPass *
createGCNMCRegisterInfo	MCTargetDesc/RVGPUMCTargetDesc.cpp	/^MCRegisterInfo *llvm::createGCNMCRegisterInfo(RVGPUDwarfFlavour DwarfFlavour) {$/;"	f	class:llvm	typeref:typename:MCRegisterInfo *
createGCNMaxILPMachineScheduler	RVGPUTargetMachine.cpp	/^createGCNMaxILPMachineScheduler(MachineSchedContext *C) {$/;"	f	typeref:typename:ScheduleDAGInstrs *	file:
createGCNMaxOccupancyMachineScheduler	RVGPUTargetMachine.cpp	/^createGCNMaxOccupancyMachineScheduler(MachineSchedContext *C) {$/;"	f	typeref:typename:ScheduleDAGInstrs *	file:
createGCNPreRAOptimizationsPass	GCNPreRAOptimizations.cpp	/^FunctionPass *llvm::createGCNPreRAOptimizationsPass() {$/;"	f	class:llvm	typeref:typename:FunctionPass *
createGreedySGPRRegisterAllocator	RVGPUTargetMachine.cpp	/^static FunctionPass *createGreedySGPRRegisterAllocator() {$/;"	f	namespace:__anon565c6f860111	typeref:typename:FunctionPass *	file:
createGreedyVGPRRegisterAllocator	RVGPUTargetMachine.cpp	/^static FunctionPass *createGreedyVGPRRegisterAllocator() {$/;"	f	namespace:__anon565c6f860111	typeref:typename:FunctionPass *	file:
createIGLPStrategy	RVGPUIGroupLP.cpp	/^createIGLPStrategy(IGLPStrategyID ID, ScheduleDAGInstrs *DAG,$/;"	f	namespace:__anon61b122dc0111	typeref:typename:std::unique_ptr<IGLPStrategy>	file:
createIGroupLPDAGMutation	RVGPUIGroupLP.cpp	/^std::unique_ptr<ScheduleDAGMutation> createIGroupLPDAGMutation(bool IsReentry) {$/;"	f	namespace:llvm	typeref:typename:std::unique_ptr<ScheduleDAGMutation>
createIfBlock	RVGPUMachineCFGStructurizer.cpp	/^MachineBasicBlock *RVGPUMachineCFGStructurizer::createIfBlock($/;"	f	class:RVGPUMachineCFGStructurizer	typeref:typename:MachineBasicBlock *
createIfRegion	RVGPUMachineCFGStructurizer.cpp	/^MachineBasicBlock *RVGPUMachineCFGStructurizer::createIfRegion($/;"	f	class:RVGPUMachineCFGStructurizer	typeref:typename:MachineBasicBlock *
createIndexMap	Utils/RVKernelCodeTUtils.cpp	/^static StringMap<int> createIndexMap(const ArrayRef<StringRef> &names,$/;"	f	typeref:typename:StringMap<int>	file:
createInitOrFiniCalls	RVGPUCtorDtorLowering.cpp	/^static void createInitOrFiniCalls(Function &F, bool IsCtor) {$/;"	f	namespace:__anon237d7fe20111	typeref:typename:void	file:
createInitOrFiniKernel	RVGPUCtorDtorLowering.cpp	/^static bool createInitOrFiniKernel(Module &M, StringRef GlobalName,$/;"	f	namespace:__anon237d7fe20111	typeref:typename:bool	file:
createInitOrFiniKernelFunction	RVGPUCtorDtorLowering.cpp	/^static Function *createInitOrFiniKernelFunction(Module &M, bool IsCtor) {$/;"	f	namespace:__anon237d7fe20111	typeref:typename:Function *	file:
createIterativeGCNMaxOccupancyMachineScheduler	RVGPUTargetMachine.cpp	/^createIterativeGCNMaxOccupancyMachineScheduler(MachineSchedContext *C) {$/;"	f	typeref:typename:ScheduleDAGInstrs *	file:
createIterativeILPMachineScheduler	RVGPUTargetMachine.cpp	/^createIterativeILPMachineScheduler(MachineSchedContext *C) {$/;"	f	typeref:typename:ScheduleDAGInstrs *	file:
createLDSVariableReplacement	RVGPULowerModuleLDSPass.cpp	/^  static LDSVariableReplacement createLDSVariableReplacement($/;"	f	class:__anoncc7483b30111::RVGPULowerModuleLDS	typeref:typename:LDSVariableReplacement	file:
createLaneMaskReg	SILowerI1Copies.cpp	/^Register llvm::createLaneMaskReg(MachineRegisterInfo *MRI,$/;"	f	class:llvm	typeref:typename:Register
createLinearizedExitBlock	RVGPUMachineCFGStructurizer.cpp	/^RVGPUMachineCFGStructurizer::createLinearizedExitBlock(RegionMRT *Region) {$/;"	f	class:RVGPUMachineCFGStructurizer	typeref:typename:MachineBasicBlock *
createLinearizedRegion	RVGPUMachineCFGStructurizer.cpp	/^void RVGPUMachineCFGStructurizer::createLinearizedRegion(RegionMRT *Region,$/;"	f	class:RVGPUMachineCFGStructurizer	typeref:typename:void
createMCStreamer	MCTargetDesc/RVGPUMCTargetDesc.cpp	/^static MCStreamer *createMCStreamer(const Triple &T, MCContext &Context,$/;"	f	typeref:typename:MCStreamer *	file:
createMachineFunctionInfo	RVGPUTargetMachine.cpp	/^MachineFunctionInfo *GCNTargetMachine::createMachineFunctionInfo($/;"	f	class:GCNTargetMachine	typeref:typename:MachineFunctionInfo *
createMachineScheduler	RVGPUTargetMachine.cpp	/^RVGPUPassConfig::createMachineScheduler(MachineSchedContext *C) const {$/;"	f	class:RVGPUPassConfig	typeref:typename:llvm::ScheduleDAGInstrs *
createMachineScheduler	RVGPUTargetMachine.cpp	/^ScheduleDAGInstrs *GCNPassConfig::createMachineScheduler($/;"	f	class:GCNPassConfig	typeref:typename:ScheduleDAGInstrs *
createMinRegScheduler	RVGPUTargetMachine.cpp	/^static ScheduleDAGInstrs *createMinRegScheduler(MachineSchedContext *C) {$/;"	f	typeref:typename:ScheduleDAGInstrs *	file:
createObjectTargetWriter	MCTargetDesc/RVGPUAsmBackend.cpp	/^  createObjectTargetWriter() const override {$/;"	f	class:__anon6b905a380211::ELFRVGPUAsmBackend	typeref:typename:std::unique_ptr<MCObjectTargetWriter>	file:
createPHIDestinationCopy	RVInstrInfo.cpp	/^MachineInstr *RVInstrInfo::createPHIDestinationCopy($/;"	f	class:RVInstrInfo	typeref:typename:MachineInstr *
createPHISourceCopy	RVInstrInfo.cpp	/^MachineInstr *RVInstrInfo::createPHISourceCopy($/;"	f	class:RVInstrInfo	typeref:typename:MachineInstr *
createPassConfig	RVGPUTargetMachine.cpp	/^TargetPassConfig *GCNTargetMachine::createPassConfig(PassManagerBase &PM) {$/;"	f	class:GCNTargetMachine	typeref:typename:TargetPassConfig *
createPostMachineScheduler	RVGPUTargetMachine.cpp	/^  createPostMachineScheduler(MachineSchedContext *C) const override {$/;"	f	class:__anon565c6f860a11::GCNPassConfig	typeref:typename:ScheduleDAGInstrs *	file:
createRVGPUAAWrapperPass	RVGPUAliasAnalysis.cpp	/^ImmutablePass *llvm::createRVGPUAAWrapperPass() {$/;"	f	class:llvm
createRVGPUAlwaysInlinePass	RVGPUAlwaysInlinePass.cpp	/^ModulePass *llvm::createRVGPUAlwaysInlinePass(bool GlobalOpt) {$/;"	f	class:llvm	typeref:typename:ModulePass *
createRVGPUAnnotateKernelFeaturesPass	RVGPUAnnotateKernelFeatures.cpp	/^Pass *llvm::createRVGPUAnnotateKernelFeaturesPass() {$/;"	f	class:llvm	typeref:typename:Pass *
createRVGPUAnnotateUniformValues	RVGPUAnnotateUniformValues.cpp	/^llvm::createRVGPUAnnotateUniformValues() {$/;"	f	class:llvm	typeref:typename:FunctionPass *
createRVGPUAsmBackend	MCTargetDesc/RVGPUAsmBackend.cpp	/^MCAsmBackend *llvm::createRVGPUAsmBackend(const Target &T,$/;"	f	class:llvm	typeref:typename:MCAsmBackend *
createRVGPUAsmPrinterPass	RVGPUAsmPrinter.cpp	/^createRVGPUAsmPrinterPass(TargetMachine &tm,$/;"	f	typeref:typename:AsmPrinter *	file:
createRVGPUAsmTargetStreamer	MCTargetDesc/RVGPUMCTargetDesc.cpp	/^static MCTargetStreamer *createRVGPUAsmTargetStreamer(MCStreamer &S,$/;"	f	typeref:typename:MCTargetStreamer *	file:
createRVGPUAttributorLegacyPass	RVGPUAttributor.cpp	/^Pass *llvm::createRVGPUAttributorLegacyPass() {$/;"	f	class:llvm	typeref:typename:Pass *
createRVGPUCodeGenPreparePass	RVGPUCodeGenPrepare.cpp	/^FunctionPass *llvm::createRVGPUCodeGenPreparePass() {$/;"	f	class:llvm	typeref:typename:FunctionPass *
createRVGPUCtorDtorLoweringLegacyPass	RVGPUCtorDtorLowering.cpp	/^ModulePass *llvm::createRVGPUCtorDtorLoweringLegacyPass() {$/;"	f	class:llvm
createRVGPUCustomBehaviour	MCA/RVGPUCustomBehaviour.cpp	/^createRVGPUCustomBehaviour(const MCSubtargetInfo &STI,$/;"	f	typeref:typename:CustomBehaviour *	file:
createRVGPUDisassembler	Disassembler/RVGPUDisassembler.cpp	/^static MCDisassembler *createRVGPUDisassembler(const Target &T,$/;"	f	typeref:typename:MCDisassembler *	file:
createRVGPUELFObjectWriter	MCTargetDesc/RVGPUELFObjectWriter.cpp	/^llvm::createRVGPUELFObjectWriter(bool Is64Bit, uint8_t OSABI,$/;"	f	class:llvm	typeref:typename:std::unique_ptr<MCObjectTargetWriter>
createRVGPUELFStreamer	MCTargetDesc/RVGPUELFStreamer.cpp	/^MCELFStreamer *llvm::createRVGPUELFStreamer($/;"	f	class:llvm	typeref:typename:MCELFStreamer *
createRVGPUExportClusteringDAGMutation	RVGPUExportClustering.cpp	/^std::unique_ptr<ScheduleDAGMutation> createRVGPUExportClusteringDAGMutation() {$/;"	f	namespace:llvm	typeref:typename:std::unique_ptr<ScheduleDAGMutation>
createRVGPUExternalAAWrapperPass	RVGPUAliasAnalysis.cpp	/^ImmutablePass *llvm::createRVGPUExternalAAWrapperPass() {$/;"	f	class:llvm	typeref:typename:ImmutablePass *
createRVGPUGlobalISelDivergenceLoweringPass	RVGPUGlobalISelDivergenceLowering.cpp	/^FunctionPass *llvm::createRVGPUGlobalISelDivergenceLoweringPass() {$/;"	f	class:llvm	typeref:typename:FunctionPass *
createRVGPUImageIntrinsicOptimizerPass	RVGPUImageIntrinsicOptimizer.cpp	/^llvm::createRVGPUImageIntrinsicOptimizerPass(const TargetMachine *TM) {$/;"	f	class:llvm	typeref:typename:FunctionPass *
createRVGPUInstrPostProcess	MCA/RVGPUCustomBehaviour.cpp	/^createRVGPUInstrPostProcess(const MCSubtargetInfo &STI,$/;"	f	typeref:typename:InstrPostProcess *	file:
createRVGPULateCodeGenPreparePass	RVGPULateCodeGenPrepare.cpp	/^FunctionPass *llvm::createRVGPULateCodeGenPreparePass() {$/;"	f	class:llvm	typeref:typename:FunctionPass *
createRVGPULowerKernelArgumentsPass	RVGPULowerKernelArguments.cpp	/^FunctionPass *llvm::createRVGPULowerKernelArgumentsPass() {$/;"	f	class:llvm	typeref:typename:FunctionPass *
createRVGPULowerKernelAttributesPass	RVGPULowerKernelAttributes.cpp	/^ModulePass *llvm::createRVGPULowerKernelAttributesPass() {$/;"	f	class:llvm	typeref:typename:ModulePass *
createRVGPUMCCodeEmitter	MCTargetDesc/RVGPUMCCodeEmitter.cpp	/^MCCodeEmitter *llvm::createRVGPUMCCodeEmitter(const MCInstrInfo &MCII,$/;"	f	class:llvm	typeref:typename:MCCodeEmitter *
createRVGPUMCInstPrinter	MCTargetDesc/RVGPUMCTargetDesc.cpp	/^static MCInstPrinter *createRVGPUMCInstPrinter(const Triple &T,$/;"	f	typeref:typename:MCInstPrinter *	file:
createRVGPUMCInstrAnalysis	MCTargetDesc/RVGPUMCTargetDesc.cpp	/^static MCInstrAnalysis *createRVGPUMCInstrAnalysis(const MCInstrInfo *Info) {$/;"	f	typeref:typename:MCInstrAnalysis *	file:
createRVGPUMCInstrInfo	MCTargetDesc/RVGPUMCTargetDesc.cpp	/^static MCInstrInfo *createRVGPUMCInstrInfo() {$/;"	f	typeref:typename:MCInstrInfo *	file:
createRVGPUMCRegisterInfo	MCTargetDesc/RVGPUMCTargetDesc.cpp	/^static MCRegisterInfo *createRVGPUMCRegisterInfo(const Triple &TT) {$/;"	f	typeref:typename:MCRegisterInfo *	file:
createRVGPUMCSubtargetInfo	MCTargetDesc/RVGPUMCTargetDesc.cpp	/^createRVGPUMCSubtargetInfo(const Triple &TT, StringRef CPU, StringRef FS) {$/;"	f	typeref:typename:MCSubtargetInfo *	file:
createRVGPUMacroFusionDAGMutation	RVGPUMacroFusion.cpp	/^std::unique_ptr<ScheduleDAGMutation> createRVGPUMacroFusionDAGMutation() {$/;"	f	namespace:llvm	typeref:typename:std::unique_ptr<ScheduleDAGMutation>
createRVGPUNullTargetStreamer	MCTargetDesc/RVGPUMCTargetDesc.cpp	/^static MCTargetStreamer *createRVGPUNullTargetStreamer(MCStreamer &S) {$/;"	f	typeref:typename:MCTargetStreamer *	file:
createRVGPUObjectTargetStreamer	MCTargetDesc/RVGPUMCTargetDesc.cpp	/^static MCTargetStreamer * createRVGPUObjectTargetStreamer($/;"	f	typeref:typename:MCTargetStreamer *	file:
createRVGPUOpenCLEnqueuedBlockLoweringPass	RVGPUOpenCLEnqueuedBlockLowering.cpp	/^ModulePass* llvm::createRVGPUOpenCLEnqueuedBlockLoweringPass() {$/;"	f	class:llvm
createRVGPUPostLegalizeCombiner	RVGPUPostLegalizerCombiner.cpp	/^FunctionPass *createRVGPUPostLegalizeCombiner(bool IsOptNone) {$/;"	f	namespace:llvm	typeref:typename:FunctionPass *
createRVGPUPreLegalizeCombiner	RVGPUPreLegalizerCombiner.cpp	/^FunctionPass *createRVGPUPreLegalizeCombiner(bool IsOptNone) {$/;"	f	namespace:llvm	typeref:typename:FunctionPass *
createRVGPUPrintfRuntimeBinding	RVGPUPrintfRuntimeBinding.cpp	/^ModulePass *createRVGPUPrintfRuntimeBinding() {$/;"	f	namespace:llvm	typeref:typename:ModulePass *
createRVGPUPromoteAlloca	RVGPUPromoteAlloca.cpp	/^FunctionPass *llvm::createRVGPUPromoteAlloca() {$/;"	f	class:llvm	typeref:typename:FunctionPass *
createRVGPUPromoteAllocaToVector	RVGPUPromoteAlloca.cpp	/^FunctionPass *llvm::createRVGPUPromoteAllocaToVector() {$/;"	f	class:llvm	typeref:typename:FunctionPass *
createRVGPUPromoteKernelArgumentsPass	RVGPUPromoteKernelArguments.cpp	/^FunctionPass *llvm::createRVGPUPromoteKernelArgumentsPass() {$/;"	f	class:llvm	typeref:typename:FunctionPass *
createRVGPURegBankCombiner	RVGPURegBankCombiner.cpp	/^FunctionPass *createRVGPURegBankCombiner(bool IsOptNone) {$/;"	f	namespace:llvm	typeref:typename:FunctionPass *
createRVGPURemoveIncompatibleFunctionsPass	RVGPURemoveIncompatibleFunctions.cpp	/^llvm::createRVGPURemoveIncompatibleFunctionsPass(const TargetMachine *TM) {$/;"	f	class:llvm	typeref:typename:ModulePass *
createRVGPURewriteOutArgumentsPass	RVGPURewriteOutArguments.cpp	/^FunctionPass *llvm::createRVGPURewriteOutArgumentsPass() {$/;"	f	class:llvm	typeref:typename:FunctionPass *
createRVGPURewriteUndefForPHILegacyPass	RVGPURewriteUndefForPHI.cpp	/^FunctionPass *llvm::createRVGPURewriteUndefForPHILegacyPass() {$/;"	f	class:llvm	typeref:typename:FunctionPass *
createRVGPUSetWavePriorityPass	RVGPUSetWavePriority.cpp	/^FunctionPass *llvm::createRVGPUSetWavePriorityPass() {$/;"	f	class:llvm	typeref:typename:FunctionPass *
createRVGPUSymbolizer	Disassembler/RVGPUDisassembler.cpp	/^static MCSymbolizer *createRVGPUSymbolizer(const Triple &\/*TT*\/,$/;"	f	typeref:typename:MCSymbolizer *	file:
createRVGPUUnifyMetadataPass	RVGPUUnifyMetadata.cpp	/^  ModulePass *llvm::createRVGPUUnifyMetadataPass() {$/;"	f	class:llvm
createRegAllocPass	RVGPUTargetMachine.cpp	/^FunctionPass *GCNPassConfig::createRegAllocPass(bool Optimized) {$/;"	f	class:GCNPassConfig	typeref:typename:FunctionPass *
createRegOperand	Disassembler/RVGPUDisassembler.cpp	/^MCOperand RVGPUDisassembler::createRegOperand(unsigned RegClassID,$/;"	f	class:RVGPUDisassembler	typeref:typename:MCOperand
createRegOperand	Disassembler/RVGPUDisassembler.cpp	/^MCOperand RVGPUDisassembler::createRegOperand(unsigned int RegId) const {$/;"	f	class:RVGPUDisassembler	typeref:typename:MCOperand
createRegOrImm	SILoadStoreOptimizer.cpp	/^SILoadStoreOptimizer::createRegOrImm(int32_t Val, MachineInstr &MI) const {$/;"	f	class:SILoadStoreOptimizer	typeref:typename:MachineOperand
createRegister	RVGPUArgumentUsageInfo.h	/^  static ArgDescriptor createRegister(Register Reg, unsigned Mask = ~0u) {$/;"	f	struct:llvm::ArgDescriptor	typeref:typename:ArgDescriptor
createSGPRAllocPass	RVGPUTargetMachine.cpp	/^FunctionPass *GCNPassConfig::createSGPRAllocPass(bool Optimized) {$/;"	f	class:GCNPassConfig	typeref:typename:FunctionPass *
createSIAnnotateControlFlowPass	SIAnnotateControlFlow.cpp	/^FunctionPass *llvm::createSIAnnotateControlFlowPass() {$/;"	f	class:llvm	typeref:typename:FunctionPass *
createSIFixSGPRCopiesPass	SIFixSGPRCopies.cpp	/^FunctionPass *llvm::createSIFixSGPRCopiesPass() {$/;"	f	class:llvm	typeref:typename:FunctionPass *
createSIFoldOperandsPass	SIFoldOperands.cpp	/^FunctionPass *llvm::createSIFoldOperandsPass() {$/;"	f	class:llvm	typeref:typename:FunctionPass *
createSIFormMemoryClausesPass	SIFormMemoryClauses.cpp	/^FunctionPass *llvm::createSIFormMemoryClausesPass() {$/;"	f	class:llvm	typeref:typename:FunctionPass *
createSIInsertWaitcntsPass	SIInsertWaitcnts.cpp	/^FunctionPass *llvm::createSIInsertWaitcntsPass() {$/;"	f	class:llvm	typeref:typename:FunctionPass *
createSILoadStoreOptimizerPass	SILoadStoreOptimizer.cpp	/^FunctionPass *llvm::createSILoadStoreOptimizerPass() {$/;"	f	class:llvm	typeref:typename:FunctionPass *
createSILowerI1CopiesPass	SILowerI1Copies.cpp	/^FunctionPass *llvm::createSILowerI1CopiesPass() {$/;"	f	class:llvm	typeref:typename:FunctionPass *
createSIMachineScheduler	RVGPUTargetMachine.cpp	/^static ScheduleDAGInstrs *createSIMachineScheduler(MachineSchedContext *C) {$/;"	f	typeref:typename:ScheduleDAGInstrs *	file:
createSIMemoryLegalizerPass	SIMemoryLegalizer.cpp	/^FunctionPass *llvm::createSIMemoryLegalizerPass() {$/;"	f	class:llvm	typeref:typename:FunctionPass *
createSIModeRegisterPass	SIModeRegister.cpp	/^FunctionPass *llvm::createSIModeRegisterPass() { return new SIModeRegister(); }$/;"	f	class:llvm	typeref:typename:FunctionPass *
createSIOptimizeExecMaskingPreRAPass	SIOptimizeExecMaskingPreRA.cpp	/^FunctionPass *llvm::createSIOptimizeExecMaskingPreRAPass() {$/;"	f	class:llvm	typeref:typename:FunctionPass *
createSIOptimizeVGPRLiveRangePass	SIOptimizeVGPRLiveRange.cpp	/^FunctionPass *llvm::createSIOptimizeVGPRLiveRangePass() {$/;"	f	class:llvm	typeref:typename:FunctionPass *
createSIPeepholeSDWAPass	SIPeepholeSDWA.cpp	/^FunctionPass *llvm::createSIPeepholeSDWAPass() {$/;"	f	class:llvm	typeref:typename:FunctionPass *
createSIPostRABundlerPass	SIPostRABundler.cpp	/^FunctionPass *llvm::createSIPostRABundlerPass() {$/;"	f	class:llvm	typeref:typename:FunctionPass *
createSIPreAllocateWWMRegsPass	SIPreAllocateWWMRegs.cpp	/^FunctionPass *llvm::createSIPreAllocateWWMRegsPass() {$/;"	f	class:llvm	typeref:typename:FunctionPass *
createSIShrinkInstructionsPass	SIShrinkInstructions.cpp	/^FunctionPass *llvm::createSIShrinkInstructionsPass() {$/;"	f	class:llvm	typeref:typename:FunctionPass *
createSIWholeQuadModePass	SIWholeQuadMode.cpp	/^FunctionPass *llvm::createSIWholeQuadModePass() {$/;"	f	class:llvm	typeref:typename:FunctionPass *
createSRegOperand	Disassembler/RVGPUDisassembler.cpp	/^MCOperand RVGPUDisassembler::createSRegOperand(unsigned SRegClassID,$/;"	f	class:RVGPUDisassembler	typeref:typename:MCOperand
createSchedStage	GCNSchedStrategy.cpp	/^GCNScheduleDAGMILive::createSchedStage(GCNSchedStageID SchedStageID) {$/;"	f	class:GCNScheduleDAGMILive	typeref:typename:std::unique_ptr<GCNSchedStage>
createStack	RVGPUArgumentUsageInfo.h	/^  static ArgDescriptor createStack(unsigned Offset, unsigned Mask = ~0u) {$/;"	f	struct:llvm::ArgDescriptor	typeref:typename:ArgDescriptor
createTLOF	RVGPUTargetMachine.cpp	/^static std::unique_ptr<TargetLoweringObjectFile> createTLOF(const Triple &TT) {$/;"	f	typeref:typename:std::unique_ptr<TargetLoweringObjectFile>	file:
createVGPR16Operand	Disassembler/RVGPUDisassembler.cpp	/^MCOperand RVGPUDisassembler::createVGPR16Operand(unsigned RegIdx,$/;"	f	class:RVGPUDisassembler	typeref:typename:MCOperand
createVGPRAllocPass	RVGPUTargetMachine.cpp	/^FunctionPass *GCNPassConfig::createVGPRAllocPass(bool Optimized) {$/;"	f	class:GCNPassConfig	typeref:typename:FunctionPass *
createVOPDPairingMutation	GCNVOPDUtils.cpp	/^std::unique_ptr<ScheduleDAGMutation> llvm::createVOPDPairingMutation() {$/;"	f	class:llvm	typeref:typename:std::unique_ptr<ScheduleDAGMutation>
createdInstr	RVGPURegisterBankInfo.cpp	/^  void createdInstr(MachineInstr &MI) override {$/;"	f	class:__anon0a1a7df70111::ApplyRegBankMapping	typeref:typename:void	file:
createsVALUHazard	GCNHazardRecognizer.cpp	/^int GCNHazardRecognizer::createsVALUHazard(const MachineInstr &MI) {$/;"	f	class:GCNHazardRecognizer	typeref:typename:int
cutHugeBlocks	SIMachineScheduler.cpp	/^void SIScheduleBlockCreator::cutHugeBlocks() {$/;"	f	class:SIScheduleBlockCreator	typeref:typename:void
cvtDPP	AsmParser/RVGPUAsmParser.cpp	/^void RVGPUAsmParser::cvtDPP(MCInst &Inst, const OperandVector &Operands, bool IsDPP8) {$/;"	f	class:RVGPUAsmParser	typeref:typename:void
cvtDPP8	AsmParser/RVGPUAsmParser.cpp	/^  void cvtDPP8(MCInst &Inst, const OperandVector &Operands) {$/;"	f	class:__anon672fa8550111::RVGPUAsmParser	typeref:typename:void	file:
cvtExp	AsmParser/RVGPUAsmParser.cpp	/^void RVGPUAsmParser::cvtExp(MCInst &Inst, const OperandVector &Operands) {$/;"	f	class:RVGPUAsmParser	typeref:typename:void
cvtMubuf	AsmParser/RVGPUAsmParser.cpp	/^  void cvtMubuf(MCInst &Inst, const OperandVector &Operands) { cvtMubufImpl(Inst, Operands, fals/;"	f	class:__anon672fa8550111::RVGPUAsmParser	typeref:typename:void	file:
cvtMubufAtomic	AsmParser/RVGPUAsmParser.cpp	/^  void cvtMubufAtomic(MCInst &Inst, const OperandVector &Operands) { cvtMubufImpl(Inst, Operands/;"	f	class:__anon672fa8550111::RVGPUAsmParser	typeref:typename:void	file:
cvtMubufImpl	AsmParser/RVGPUAsmParser.cpp	/^void RVGPUAsmParser::cvtMubufImpl(MCInst &Inst,$/;"	f	class:RVGPUAsmParser	typeref:typename:void
cvtSDWA	AsmParser/RVGPUAsmParser.cpp	/^void RVGPUAsmParser::cvtSDWA(MCInst &Inst, const OperandVector &Operands,$/;"	f	class:RVGPUAsmParser	typeref:typename:void
cvtSdwaVOP1	AsmParser/RVGPUAsmParser.cpp	/^void RVGPUAsmParser::cvtSdwaVOP1(MCInst &Inst, const OperandVector &Operands) {$/;"	f	class:RVGPUAsmParser	typeref:typename:void
cvtSdwaVOP2	AsmParser/RVGPUAsmParser.cpp	/^void RVGPUAsmParser::cvtSdwaVOP2(MCInst &Inst, const OperandVector &Operands) {$/;"	f	class:RVGPUAsmParser	typeref:typename:void
cvtSdwaVOP2b	AsmParser/RVGPUAsmParser.cpp	/^void RVGPUAsmParser::cvtSdwaVOP2b(MCInst &Inst, const OperandVector &Operands) {$/;"	f	class:RVGPUAsmParser	typeref:typename:void
cvtSdwaVOP2e	AsmParser/RVGPUAsmParser.cpp	/^void RVGPUAsmParser::cvtSdwaVOP2e(MCInst &Inst, const OperandVector &Operands) {$/;"	f	class:RVGPUAsmParser	typeref:typename:void
cvtSdwaVOPC	AsmParser/RVGPUAsmParser.cpp	/^void RVGPUAsmParser::cvtSdwaVOPC(MCInst &Inst, const OperandVector &Operands) {$/;"	f	class:RVGPUAsmParser	typeref:typename:void
cvtVINTERP	AsmParser/RVGPUAsmParser.cpp	/^void RVGPUAsmParser::cvtVINTERP(MCInst &Inst, const OperandVector &Operands)$/;"	f	class:RVGPUAsmParser	typeref:typename:void
cvtVOP3	AsmParser/RVGPUAsmParser.cpp	/^void RVGPUAsmParser::cvtVOP3(MCInst &Inst, const OperandVector &Operands) {$/;"	f	class:RVGPUAsmParser	typeref:typename:void
cvtVOP3	AsmParser/RVGPUAsmParser.cpp	/^void RVGPUAsmParser::cvtVOP3(MCInst &Inst, const OperandVector &Operands,$/;"	f	class:RVGPUAsmParser	typeref:typename:void
cvtVOP3DPP	AsmParser/RVGPUAsmParser.cpp	/^void RVGPUAsmParser::cvtVOP3DPP(MCInst &Inst, const OperandVector &Operands,$/;"	f	class:RVGPUAsmParser	typeref:typename:void
cvtVOP3DPP8	AsmParser/RVGPUAsmParser.cpp	/^  void cvtVOP3DPP8(MCInst &Inst, const OperandVector &Operands) {$/;"	f	class:__anon672fa8550111::RVGPUAsmParser	typeref:typename:void	file:
cvtVOP3Interp	AsmParser/RVGPUAsmParser.cpp	/^void RVGPUAsmParser::cvtVOP3Interp(MCInst &Inst, const OperandVector &Operands)$/;"	f	class:RVGPUAsmParser	typeref:typename:void
cvtVOP3OpSel	AsmParser/RVGPUAsmParser.cpp	/^void RVGPUAsmParser::cvtVOP3OpSel(MCInst &Inst, const OperandVector &Operands,$/;"	f	class:RVGPUAsmParser	typeref:typename:void
cvtVOP3OpSel	AsmParser/RVGPUAsmParser.cpp	/^void RVGPUAsmParser::cvtVOP3OpSel(MCInst &Inst,$/;"	f	class:RVGPUAsmParser	typeref:typename:void
cvtVOP3P	AsmParser/RVGPUAsmParser.cpp	/^void RVGPUAsmParser::cvtVOP3P(MCInst &Inst, const OperandVector &Operands) {$/;"	f	class:RVGPUAsmParser	typeref:typename:void
cvtVOP3P	AsmParser/RVGPUAsmParser.cpp	/^void RVGPUAsmParser::cvtVOP3P(MCInst &Inst, const OperandVector &Operands,$/;"	f	class:RVGPUAsmParser	typeref:typename:void
cvtVOPD	AsmParser/RVGPUAsmParser.cpp	/^void RVGPUAsmParser::cvtVOPD(MCInst &Inst, const OperandVector &Operands) {$/;"	f	class:RVGPUAsmParser	typeref:typename:void
d16PreservesUnusedBits	GCNSubtarget.h	/^  bool d16PreservesUnusedBits() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
debug_private_segment_buffer_sgpr	RVKernelCodeT.h	/^  uint16_t debug_private_segment_buffer_sgpr;$/;"	m	struct:rv_kernel_code_t	typeref:typename:uint16_t
debug_wavefront_private_segment_offset_sgpr	RVKernelCodeT.h	/^  uint16_t debug_wavefront_private_segment_offset_sgpr;$/;"	m	struct:rv_kernel_code_t	typeref:typename:uint16_t
decNumPreds	GCNMinRegStrategy.cpp	/^  unsigned decNumPreds(const SUnit *SU) {$/;"	f	class:__anon807286a30111::GCNMinRegScheduler	typeref:typename:unsigned	file:
decode	Utils/RVGPUAsmUtils.h	/^  unsigned decode(unsigned Code) const { return (Code >> Shift) & Mask; }$/;"	f	struct:llvm::RVGPU::CustomOperandVal	typeref:typename:unsigned
decodeBoolReg	Disassembler/RVGPUDisassembler.cpp	/^MCOperand RVGPUDisassembler::decodeBoolReg(unsigned Val) const {$/;"	f	class:RVGPUDisassembler	typeref:typename:MCOperand
decodeBoolReg	Disassembler/RVGPUDisassembler.cpp	/^static DecodeStatus decodeBoolReg(MCInst &Inst, unsigned Val, uint64_t Addr,$/;"	f	typeref:typename:DecodeStatus	file:
decodeCOMPUTE_PGM_RSRC1	Disassembler/RVGPUDisassembler.cpp	/^MCDisassembler::DecodeStatus RVGPUDisassembler::decodeCOMPUTE_PGM_RSRC1($/;"	f	class:RVGPUDisassembler	typeref:typename:MCDisassembler::DecodeStatus
decodeCOMPUTE_PGM_RSRC2	Disassembler/RVGPUDisassembler.cpp	/^MCDisassembler::DecodeStatus RVGPUDisassembler::decodeCOMPUTE_PGM_RSRC2($/;"	f	class:RVGPUDisassembler	typeref:typename:MCDisassembler::DecodeStatus
decodeCOMPUTE_PGM_RSRC3	Disassembler/RVGPUDisassembler.cpp	/^MCDisassembler::DecodeStatus RVGPUDisassembler::decodeCOMPUTE_PGM_RSRC3($/;"	f	class:RVGPUDisassembler	typeref:typename:MCDisassembler::DecodeStatus
decodeCustomOperand	Utils/RVGPUBaseInfo.cpp	/^static bool decodeCustomOperand(const CustomOperandVal *Opr, int Size,$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool	file:
decodeDepCtr	Utils/RVGPUBaseInfo.cpp	/^bool decodeDepCtr(unsigned Code, int &Id, StringRef &Name, unsigned &Val,$/;"	f	namespace:llvm::RVGPU::DepCtr	typeref:typename:bool
decodeDfmtNfmt	Utils/RVGPUBaseInfo.cpp	/^void decodeDfmtNfmt(unsigned Format, unsigned &Dfmt, unsigned &Nfmt) {$/;"	f	namespace:llvm::RVGPU::MTBUFFormat	typeref:typename:void
decodeExpcnt	Utils/RVGPUBaseInfo.cpp	/^unsigned decodeExpcnt(const IsaVersion &Version, unsigned Waitcnt) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:unsigned
decodeFPImmed	Disassembler/RVGPUDisassembler.cpp	/^MCOperand RVGPUDisassembler::decodeFPImmed(unsigned ImmWidth, unsigned Imm) {$/;"	f	class:RVGPUDisassembler	typeref:typename:MCOperand
decodeFieldSaSdst	Utils/RVGPUBaseInfo.cpp	/^unsigned decodeFieldSaSdst(unsigned Encoded) {$/;"	f	namespace:llvm::RVGPU::DepCtr	typeref:typename:unsigned
decodeFieldVaVdst	Utils/RVGPUBaseInfo.cpp	/^unsigned decodeFieldVaVdst(unsigned Encoded) {$/;"	f	namespace:llvm::RVGPU::DepCtr	typeref:typename:unsigned
decodeFieldVmVsrc	Utils/RVGPUBaseInfo.cpp	/^unsigned decodeFieldVmVsrc(unsigned Encoded) {$/;"	f	namespace:llvm::RVGPU::DepCtr	typeref:typename:unsigned
decodeHwreg	Utils/RVGPUBaseInfo.cpp	/^void decodeHwreg(unsigned Val, unsigned &Id, unsigned &Offset, unsigned &Width) {$/;"	f	namespace:llvm::RVGPU::Hwreg	typeref:typename:void
decodeIndexFltRoundConversionTable	SIModeRegisterDefaults.cpp	/^decodeIndexFltRoundConversionTable(uint32_t HWMode) {$/;"	f	typeref:typename:RVGPUFltRounds	file:
decodeIntImmed	Disassembler/RVGPUDisassembler.cpp	/^MCOperand RVGPUDisassembler::decodeIntImmed(unsigned Imm) {$/;"	f	class:RVGPUDisassembler	typeref:typename:MCOperand
decodeKernelDescriptor	Disassembler/RVGPUDisassembler.cpp	/^MCDisassembler::DecodeStatus RVGPUDisassembler::decodeKernelDescriptor($/;"	f	class:RVGPUDisassembler	typeref:typename:MCDisassembler::DecodeStatus
decodeKernelDescriptorDirective	Disassembler/RVGPUDisassembler.cpp	/^RVGPUDisassembler::decodeKernelDescriptorDirective($/;"	f	class:RVGPUDisassembler	typeref:typename:MCDisassembler::DecodeStatus
decodeLgkmcnt	Utils/RVGPUBaseInfo.cpp	/^unsigned decodeLgkmcnt(const IsaVersion &Version, unsigned Waitcnt) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:unsigned
decodeLiteralConstant	Disassembler/RVGPUDisassembler.cpp	/^MCOperand RVGPUDisassembler::decodeLiteralConstant(bool ExtendFP64) const {$/;"	f	class:RVGPUDisassembler	typeref:typename:MCOperand
decodeMandatoryLiteralConstant	Disassembler/RVGPUDisassembler.cpp	/^RVGPUDisassembler::decodeMandatoryLiteralConstant(unsigned Val) const {$/;"	f	class:RVGPUDisassembler	typeref:typename:MCOperand
decodeMsg	Utils/RVGPUBaseInfo.cpp	/^void decodeMsg(unsigned Val, uint16_t &MsgId, uint16_t &OpId,$/;"	f	namespace:llvm::RVGPU::SendMsg	typeref:typename:void
decodeNonVGPRSrcOp	Disassembler/RVGPUDisassembler.cpp	/^MCOperand RVGPUDisassembler::decodeNonVGPRSrcOp(const OpWidthTy Width,$/;"	f	class:RVGPUDisassembler	typeref:typename:MCOperand
decodeOperandVOPDDstY	Disassembler/RVGPUDisassembler.cpp	/^static DecodeStatus decodeOperandVOPDDstY(MCInst &Inst, unsigned Val,$/;"	f	typeref:typename:DecodeStatus	file:
decodeOperand_AVLdSt_Any	Disassembler/RVGPUDisassembler.cpp	/^static DecodeStatus decodeOperand_AVLdSt_Any(MCInst &Inst, unsigned Imm,$/;"	f	typeref:typename:DecodeStatus	file:
decodeOperand_KImmFP	Disassembler/RVGPUDisassembler.cpp	/^static DecodeStatus decodeOperand_KImmFP(MCInst &Inst, unsigned Imm,$/;"	f	typeref:typename:DecodeStatus	file:
decodeOperand_VSrcT16	Disassembler/RVGPUDisassembler.cpp	/^static DecodeStatus decodeOperand_VSrcT16(MCInst &Inst, unsigned Imm,$/;"	f	typeref:typename:DecodeStatus	file:
decodeOperand_VSrcT16_Lo128	Disassembler/RVGPUDisassembler.cpp	/^static DecodeStatus decodeOperand_VSrcT16_Lo128(MCInst &Inst, unsigned Imm,$/;"	f	typeref:typename:DecodeStatus	file:
decodeOperand_VSrc_f64	Disassembler/RVGPUDisassembler.cpp	/^static DecodeStatus decodeOperand_VSrc_f64(MCInst &Inst, unsigned Imm,$/;"	f	typeref:typename:DecodeStatus	file:
decodeSDWASrc	Disassembler/RVGPUDisassembler.cpp	/^MCOperand RVGPUDisassembler::decodeSDWASrc(const OpWidthTy Width,$/;"	f	class:RVGPUDisassembler	typeref:typename:MCOperand
decodeSDWASrc16	Disassembler/RVGPUDisassembler.cpp	/^MCOperand RVGPUDisassembler::decodeSDWASrc16(unsigned Val) const {$/;"	f	class:RVGPUDisassembler	typeref:typename:MCOperand
decodeSDWASrc32	Disassembler/RVGPUDisassembler.cpp	/^MCOperand RVGPUDisassembler::decodeSDWASrc32(unsigned Val) const {$/;"	f	class:RVGPUDisassembler	typeref:typename:MCOperand
decodeSDWAVopcDst	Disassembler/RVGPUDisassembler.cpp	/^MCOperand RVGPUDisassembler::decodeSDWAVopcDst(unsigned Val) const {$/;"	f	class:RVGPUDisassembler	typeref:typename:MCOperand
decodeSMEMOffset	Disassembler/RVGPUDisassembler.cpp	/^static DecodeStatus decodeSMEMOffset(MCInst &Inst, unsigned Imm, uint64_t Addr,$/;"	f	typeref:typename:DecodeStatus	file:
decodeSOPPBrTarget	Disassembler/RVGPUDisassembler.cpp	/^static DecodeStatus decodeSOPPBrTarget(MCInst &Inst, unsigned Imm,$/;"	f	typeref:typename:DecodeStatus	file:
decodeSpecialReg32	Disassembler/RVGPUDisassembler.cpp	/^MCOperand RVGPUDisassembler::decodeSpecialReg32(unsigned Val) const {$/;"	f	class:RVGPUDisassembler	typeref:typename:MCOperand
decodeSpecialReg64	Disassembler/RVGPUDisassembler.cpp	/^MCOperand RVGPUDisassembler::decodeSpecialReg64(unsigned Val) const {$/;"	f	class:RVGPUDisassembler	typeref:typename:MCOperand
decodeSplitBarrier	Disassembler/RVGPUDisassembler.cpp	/^MCOperand RVGPUDisassembler::decodeSplitBarrier(unsigned Val) const {$/;"	f	class:RVGPUDisassembler	typeref:typename:MCOperand
decodeSplitBarrier	Disassembler/RVGPUDisassembler.cpp	/^static DecodeStatus decodeSplitBarrier(MCInst &Inst, unsigned Val,$/;"	f	typeref:typename:DecodeStatus	file:
decodeSrcOp	Disassembler/RVGPUDisassembler.cpp	/^MCOperand RVGPUDisassembler::decodeSrcOp(const OpWidthTy Width, unsigned Val,$/;"	f	class:RVGPUDisassembler	typeref:typename:MCOperand
decodeVOPDDstYOp	Disassembler/RVGPUDisassembler.cpp	/^MCOperand RVGPUDisassembler::decodeVOPDDstYOp(MCInst &Inst,$/;"	f	class:RVGPUDisassembler	typeref:typename:MCOperand
decodeVmcnt	Utils/RVGPUBaseInfo.cpp	/^unsigned decodeVmcnt(const IsaVersion &Version, unsigned Waitcnt) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:unsigned
decodeWaitcnt	Utils/RVGPUBaseInfo.cpp	/^Waitcnt decodeWaitcnt(const IsaVersion &Version, unsigned Encoded) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:Waitcnt
decodeWaitcnt	Utils/RVGPUBaseInfo.cpp	/^void decodeWaitcnt(const IsaVersion &Version, unsigned Waitcnt,$/;"	f	namespace:llvm::RVGPU	typeref:typename:void
decomposeMachineOperandsTargetFlags	RVInstrInfo.cpp	/^RVInstrInfo::decomposeMachineOperandsTargetFlags(unsigned TF) const {$/;"	f	class:RVInstrInfo	typeref:typename:std::pair<unsigned,unsigned>
decreaseLiveRegs	SIMachineScheduler.cpp	/^void SIScheduleBlockScheduler::decreaseLiveRegs(SIScheduleBlock *Block,$/;"	f	class:SIScheduleBlockScheduler	typeref:typename:void
defaultSGPRRegAlloc	RVGPUTargetMachine.cpp	/^defaultSGPRRegAlloc("default",$/;"	v	namespace:__anon565c6f860111	typeref:typename:SGPRRegisterRegAlloc	file:
deleteDef	RVGPUMachineCFGStructurizer.cpp	/^void PHILinearize::deleteDef(unsigned DestReg) {$/;"	f	class:PHILinearize	typeref:typename:void
delta	SIModeRegister.cpp	/^  Status delta(const Status &S) const {$/;"	f	struct:Status	typeref:typename:Status	file:
denormalModeIsFlushAllF32	RVISelLowering.cpp	/^static bool denormalModeIsFlushAllF32(const MachineFunction &MF) {$/;"	f	typeref:typename:bool	file:
denormalModeIsFlushAllF64F16	RVISelLowering.cpp	/^static bool denormalModeIsFlushAllF64F16(const MachineFunction &MF) {$/;"	f	typeref:typename:bool	file:
denormalsEnabledForType	RVISelLowering.cpp	/^bool RVTargetLowering::denormalsEnabledForType(LLT Ty,$/;"	f	class:RVTargetLowering	typeref:typename:bool
denormalsEnabledForType	RVISelLowering.cpp	/^bool RVTargetLowering::denormalsEnabledForType(const SelectionDAG &DAG,$/;"	f	class:RVTargetLowering	typeref:typename:bool
depCtrError	AsmParser/RVGPUAsmParser.cpp	/^void RVGPUAsmParser::depCtrError(SMLoc Loc, int ErrorId,$/;"	f	class:RVGPUAsmParser	typeref:typename:void
dependsOnLocalPhi	RVGPUTargetTransformInfo.cpp	/^static bool dependsOnLocalPhi(const Loop *L, const Value *Cond,$/;"	f	typeref:typename:bool	file:
dest_iterator	RVGPUMachineCFGStructurizer.cpp	/^  using dest_iterator = PHILinearizeDestIterator;$/;"	t	class:__anon1695b1f50111::PHILinearize	typeref:typename:PHILinearizeDestIterator	file:
dests_begin	RVGPUMachineCFGStructurizer.cpp	/^PHILinearize::dest_iterator PHILinearize::dests_begin() {$/;"	f	class:PHILinearize	typeref:typename:PHILinearize::dest_iterator
dests_end	RVGPUMachineCFGStructurizer.cpp	/^PHILinearize::dest_iterator PHILinearize::dests_end() {$/;"	f	class:PHILinearize	typeref:typename:PHILinearize::dest_iterator
detachSchedule	GCNIterativeScheduler.cpp	/^GCNIterativeScheduler::detachSchedule(ScheduleRef Schedule) const {$/;"	f	class:GCNIterativeScheduler	typeref:typename:std::vector<MachineInstr * >
determineCalleeSaves	RVFrameLowering.cpp	/^void RVFrameLowering::determineCalleeSaves(MachineFunction &MF,$/;"	f	class:RVFrameLowering	typeref:typename:void
determineCalleeSavesSGPR	RVFrameLowering.cpp	/^void RVFrameLowering::determineCalleeSavesSGPR(MachineFunction &MF,$/;"	f	class:RVFrameLowering	typeref:typename:void
determinePrologEpilogSGPRSaves	RVFrameLowering.cpp	/^void RVFrameLowering::determinePrologEpilogSGPRSaves($/;"	f	class:RVFrameLowering	typeref:typename:void
determineWait	SIInsertWaitcnts.cpp	/^void WaitcntBrackets::determineWait(InstCounterType T, int RegNo,$/;"	f	class:WaitcntBrackets	typeref:typename:void
diagnoseInvalidFormatString	RVGPUPrintfRuntimeBinding.cpp	/^static void diagnoseInvalidFormatString(const CallBase *CI) {$/;"	f	typeref:typename:void	file:
direct_access	RVGPULowerModuleLDSPass.cpp	/^    FunctionVariableMap direct_access;$/;"	m	struct:__anoncc7483b30111::RVGPULowerModuleLDS::LDSUsesInfoTy	typeref:typename:FunctionVariableMap	file:
distributeOpThroughSelect	RVGPUISelLowering.cpp	/^static SDValue distributeOpThroughSelect(TargetLowering::DAGCombinerInfo &DCI,$/;"	f	typeref:typename:SDValue	file:
divHasSpecialOptimization	RVGPUCodeGenPrepare.cpp	/^bool RVGPUCodeGenPrepareImpl::divHasSpecialOptimization(BinaryOperator &I,$/;"	f	class:RVGPUCodeGenPrepareImpl	typeref:typename:bool
dmasksCanBeCombined	SILoadStoreOptimizer.cpp	/^bool SILoadStoreOptimizer::dmasksCanBeCombined(const CombineInfo &CI,$/;"	f	class:SILoadStoreOptimizer	typeref:typename:bool
doCallerAndCalleePassArgsTheSameWay	RVGPUCallLowering.cpp	/^bool RVGPUCallLowering::doCallerAndCalleePassArgsTheSameWay($/;"	f	class:RVGPUCallLowering	typeref:typename:bool
doFinalization	RVGPUAliasAnalysis.h	/^  bool doFinalization(Module &M) override {$/;"	f	class:llvm::RVGPUAAWrapperPass	typeref:typename:bool
doFinalization	RVGPUArgumentUsageInfo.cpp	/^bool RVGPUArgumentUsageInfo::doFinalization(Module &M) {$/;"	f	class:RVGPUArgumentUsageInfo	typeref:typename:bool
doFinalization	RVGPUAsmPrinter.cpp	/^bool RVGPUAsmPrinter::doFinalization(Module &M) {$/;"	f	class:RVGPUAsmPrinter	typeref:typename:bool
doInitialization	RVGPUAliasAnalysis.h	/^  bool doInitialization(Module &M) override {$/;"	f	class:llvm::RVGPUAAWrapperPass	typeref:typename:bool
doInitialization	RVGPUAnnotateKernelFeatures.cpp	/^bool RVGPUAnnotateKernelFeatures::doInitialization(CallGraph &CG) {$/;"	f	class:RVGPUAnnotateKernelFeatures	typeref:typename:bool
doInitialization	RVGPUAnnotateUniformValues.cpp	/^bool RVGPUAnnotateUniformValues::doInitialization(Module &M) {$/;"	f	class:RVGPUAnnotateUniformValues	typeref:typename:bool
doInitialization	RVGPUArgumentUsageInfo.cpp	/^bool RVGPUArgumentUsageInfo::doInitialization(Module &M) {$/;"	f	class:RVGPUArgumentUsageInfo	typeref:typename:bool
doInitialization	RVGPUAsmPrinter.cpp	/^bool RVGPUAsmPrinter::doInitialization(Module &M) {$/;"	f	class:RVGPUAsmPrinter	typeref:typename:bool
doInitialization	RVGPUAttributor.cpp	/^  bool doInitialization(Module &) override {$/;"	f	class:__anon512e119a0111::RVGPUAttributorLegacy	typeref:typename:bool	file:
doInitialization	RVGPUCodeGenPrepare.cpp	/^bool RVGPUCodeGenPrepare::doInitialization(Module &M) {$/;"	f	class:RVGPUCodeGenPrepare	typeref:typename:bool
doInitialization	RVGPULateCodeGenPrepare.cpp	/^bool RVGPULateCodeGenPrepare::doInitialization(Module &M) {$/;"	f	class:RVGPULateCodeGenPrepare	typeref:typename:bool
doInitialization	RVGPUResourceUsageAnalysis.h	/^  bool doInitialization(Module &M) override {$/;"	f	struct:llvm::RVGPUResourceUsageAnalysis	typeref:typename:bool
doInitialization	RVGPURewriteOutArguments.cpp	/^bool RVGPURewriteOutArguments::doInitialization(Module &M) {$/;"	f	class:RVGPURewriteOutArguments	typeref:typename:bool
doReplace	GCNCreateVOPD.cpp	/^  bool doReplace(const RVInstrInfo *SII, VOPDCombineInfo &CI) {$/;"	f	class:__anon7e59fb9b0111::GCNCreateVOPD	typeref:typename:bool	file:
doesNotReadTiedSource	RVInstrInfo.h	/^  bool doesNotReadTiedSource(uint16_t Opcode) const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
doesNotReadTiedSource	RVInstrInfo.h	/^  static bool doesNotReadTiedSource(const MachineInstr &MI) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
dropInstructionKeepingImpDefs	SIShrinkInstructions.cpp	/^void SIShrinkInstructions::dropInstructionKeepingImpDefs($/;"	f	class:SIShrinkInstructions	typeref:typename:void
drop_front	RVGPULibFunc.cpp	/^inline static void drop_front(StringRef& str, size_t n = 1) {$/;"	f	namespace:__anona5afe38d0111	typeref:typename:void	file:
dump	GCNRegPressure.cpp	/^void GCNRegPressure::dump() const { dbgs() << print(*this); }$/;"	f	class:GCNRegPressure	typeref:typename:void
dump	RVGPUHSAMetadataStreamer.cpp	/^void MetadataStreamerMsgPackV4::dump(StringRef HSAMetadataString) const {$/;"	f	class:llvm::RVGPU::HSRV::MetadataStreamerMsgPackV4	typeref:typename:void
dump	RVGPUInsertDelayAlu.cpp	/^    void dump() const {$/;"	f	struct:__anonc7296b900111::RVGPUInsertDelayAlu::DelayInfo	typeref:typename:void	file:
dump	RVGPUInsertDelayAlu.cpp	/^    void dump(const TargetRegisterInfo *TRI) const {$/;"	f	struct:__anonc7296b900111::RVGPUInsertDelayAlu::DelayState	typeref:typename:void	file:
dump	RVGPUMachineCFGStructurizer.cpp	/^  void dump(const TargetRegisterInfo *TRI, int depth = 0) override {$/;"	f	class:__anon1695b1f50211::MBBMRT	typeref:typename:void	file:
dump	RVGPUMachineCFGStructurizer.cpp	/^  void dump(const TargetRegisterInfo *TRI, int depth = 0) override {$/;"	f	class:__anon1695b1f50211::RegionMRT	typeref:typename:void	file:
dump	RVGPUMachineCFGStructurizer.cpp	/^LLVM_DUMP_METHOD void PHILinearize::dump(MachineRegisterInfo *MRI) {$/;"	f	class:PHILinearize	typeref:typename:LLVM_DUMP_METHOD void
dump	SIFixSGPRCopies.cpp	/^  void dump() {$/;"	f	class:__anond27816180111::V2SCopyInfo	typeref:typename:void	file:
dump	SIInsertWaitcnts.cpp	/^  void dump() { print(dbgs()); }$/;"	f	class:__anona6cbb7940211::WaitcntBrackets	typeref:typename:void	file:
dump	SIPeepholeSDWA.cpp	/^  void dump() const { print(dbgs()); }$/;"	f	class:__anon00bd52b30111::SDWAOperand	typeref:typename:void	file:
dumpCode	GCNSubtarget.h	/^  bool dumpCode() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
dumpDepth	RVGPUMachineCFGStructurizer.cpp	/^  void dumpDepth(int depth) {$/;"	f	class:__anon1695b1f50211::MRT	typeref:typename:void	file:
dumpRvKernelCode	Utils/RVKernelCodeTUtils.cpp	/^void llvm::dumpRvKernelCode(const rv_kernel_code_t *C,$/;"	f	class:llvm	typeref:typename:void
earlyTerm	SILateBranchLowering.cpp	/^void SILateBranchLowering::earlyTerm(MachineInstr &MI,$/;"	f	class:SILateBranchLowering	typeref:typename:void
eat12Bytes	Disassembler/RVGPUDisassembler.cpp	/^static inline DecoderUInt128 eat12Bytes(ArrayRef<uint8_t> &Bytes) {$/;"	f	typeref:typename:DecoderUInt128	file:
eatLengthPrefixedName	RVGPULibFunc.cpp	/^static StringRef eatLengthPrefixedName(StringRef& mangledName) {$/;"	f	namespace:__anona5afe38d0111	typeref:typename:StringRef	file:
eatNumber	RVGPULibFunc.cpp	/^static int eatNumber(StringRef& s) {$/;"	f	namespace:__anona5afe38d0111	typeref:typename:int	file:
eatTerm	RVGPULibFunc.cpp	/^static bool eatTerm(StringRef& mangledName, const char (&str)[N]) {$/;"	f	namespace:__anona5afe38d0111	typeref:typename:bool	file:
eatTerm	RVGPULibFunc.cpp	/^static bool eatTerm(StringRef& mangledName, const char c) {$/;"	f	namespace:__anona5afe38d0111	typeref:typename:bool	file:
elementPairIsContiguous	RVISelLowering.cpp	/^static bool elementPairIsContiguous(ArrayRef<int> Mask, int Elt) {$/;"	f	typeref:typename:bool	file:
elementTypeIsLegal	RVGPULegalizerInfo.cpp	/^static LegalityPredicate elementTypeIsLegal(unsigned TypeIdx) {$/;"	f	typeref:typename:LegalityPredicate	file:
elements	Utils/RVGPUBaseInfo.cpp	/^  uint8_t elements;$/;"	m	struct:llvm::RVGPU::MTBUFInfo	typeref:typename:uint8_t	file:
elements	Utils/RVGPUBaseInfo.cpp	/^  uint8_t elements;$/;"	m	struct:llvm::RVGPU::MUBUFInfo	typeref:typename:uint8_t	file:
eliminateCallFramePseudoInstr	RVFrameLowering.cpp	/^MachineBasicBlock::iterator RVFrameLowering::eliminateCallFramePseudoInstr($/;"	f	class:RVFrameLowering	typeref:typename:MachineBasicBlock::iterator
eliminateConstantExprUsesOfLDSFromAllInstructions	RVGPULowerModuleLDSPass.cpp	/^  static bool eliminateConstantExprUsesOfLDSFromAllInstructions(Module &M) {$/;"	f	class:__anoncc7483b30111::RVGPULowerModuleLDS	typeref:typename:bool	file:
eliminateFrameIndex	RVRegisterInfo.cpp	/^bool RVRegisterInfo::eliminateFrameIndex(MachineBasicBlock::iterator MI,$/;"	f	class:RVRegisterInfo	typeref:typename:bool
eliminateSGPRToVGPRSpillFrameIndex	RVRegisterInfo.cpp	/^bool RVRegisterInfo::eliminateSGPRToVGPRSpillFrameIndex($/;"	f	class:RVRegisterInfo	typeref:typename:bool
emitAttributeIfNotDefault	RVGPUAttributor.cpp	/^  ChangeStatus emitAttributeIfNotDefault(Attributor &A, unsigned Min,$/;"	f	struct:__anon512e119a0111::AARVSizeRangeAttribute	typeref:typename:ChangeStatus	file:
emitBasicBlockStart	RVGPUAsmPrinter.cpp	/^void RVGPUAsmPrinter::emitBasicBlockStart(const MachineBasicBlock &MBB) {$/;"	f	class:RVGPUAsmPrinter	typeref:typename:void
emitCSRSpillRestores	RVFrameLowering.cpp	/^void RVFrameLowering::emitCSRSpillRestores($/;"	f	class:RVFrameLowering	typeref:typename:void
emitCSRSpillStores	RVFrameLowering.cpp	/^void RVFrameLowering::emitCSRSpillStores($/;"	f	class:RVFrameLowering	typeref:typename:void
emitClause	SIInsertHardClauses.cpp	/^  bool emitClause(const ClauseInfo &CI, const RVInstrInfo *SII) {$/;"	f	class:__anon09538a560111::SIInsertHardClauses	typeref:typename:bool	file:
emitCommonFunctionComments	RVGPUAsmPrinter.cpp	/^void RVGPUAsmPrinter::emitCommonFunctionComments($/;"	f	class:RVGPUAsmPrinter	typeref:typename:void
emitDelayAlu	RVGPUInsertDelayAlu.cpp	/^  MachineInstr *emitDelayAlu(MachineInstr &MI, DelayInfo Delay,$/;"	f	class:__anonc7296b900111::RVGPUInsertDelayAlu	typeref:typename:MachineInstr *	file:
emitElse	SILowerControlFlow.cpp	/^void SILowerControlFlow::emitElse(MachineInstr &MI) {$/;"	f	class:SILowerControlFlow	typeref:typename:void
emitEndCf	SILowerControlFlow.cpp	/^MachineBasicBlock *SILowerControlFlow::emitEndCf(MachineInstr &MI) {$/;"	f	class:SILowerControlFlow	typeref:typename:MachineBasicBlock *
emitEndOfAsmFile	RVGPUAsmPrinter.cpp	/^void RVGPUAsmPrinter::emitEndOfAsmFile(Module &M) {$/;"	f	class:RVGPUAsmPrinter	typeref:typename:void
emitEntryFunctionFlatScratchInit	RVFrameLowering.cpp	/^void RVFrameLowering::emitEntryFunctionFlatScratchInit($/;"	f	class:RVFrameLowering	typeref:typename:void
emitEntryFunctionPrologue	RVFrameLowering.cpp	/^void RVFrameLowering::emitEntryFunctionPrologue(MachineFunction &MF,$/;"	f	class:RVFrameLowering	typeref:typename:void
emitEntryFunctionScratchRsrcRegSetup	RVFrameLowering.cpp	/^void RVFrameLowering::emitEntryFunctionScratchRsrcRegSetup($/;"	f	class:RVFrameLowering	typeref:typename:void
emitEpilogue	RVFrameLowering.cpp	/^void RVFrameLowering::emitEpilogue(MachineFunction &MF,$/;"	f	class:RVFrameLowering	typeref:typename:void
emitExpandAtomicRMW	RVISelLowering.cpp	/^void RVTargetLowering::emitExpandAtomicRMW(AtomicRMWInst *AI) const {$/;"	f	class:RVTargetLowering	typeref:typename:void
emitFrexpDiv	RVGPUCodeGenPrepare.cpp	/^Value *RVGPUCodeGenPrepareImpl::emitFrexpDiv(IRBuilder<> &Builder, Value *LHS,$/;"	f	class:RVGPUCodeGenPrepareImpl	typeref:typename:Value *
emitFunctionBodyEnd	RVGPUAsmPrinter.cpp	/^void RVGPUAsmPrinter::emitFunctionBodyEnd() {$/;"	f	class:RVGPUAsmPrinter	typeref:typename:void
emitFunctionBodyStart	RVGPUAsmPrinter.cpp	/^void RVGPUAsmPrinter::emitFunctionBodyStart() {$/;"	f	class:RVGPUAsmPrinter	typeref:typename:void
emitFunctionEntryLabel	RVGPUAsmPrinter.cpp	/^void RVGPUAsmPrinter::emitFunctionEntryLabel() {$/;"	f	class:RVGPUAsmPrinter	typeref:typename:void
emitGWSMemViolTestLoop	RVISelLowering.cpp	/^RVTargetLowering::emitGWSMemViolTestLoop(MachineInstr &MI,$/;"	f	class:RVTargetLowering	typeref:typename:MachineBasicBlock *
emitGlobalVariable	RVGPUAsmPrinter.cpp	/^void RVGPUAsmPrinter::emitGlobalVariable(const GlobalVariable *GV) {$/;"	f	class:RVGPUAsmPrinter	typeref:typename:void
emitHiddenKernelArgs	RVGPUHSAMetadataStreamer.cpp	/^void MetadataStreamerMsgPackV4::emitHiddenKernelArgs($/;"	f	class:llvm::RVGPU::HSRV::MetadataStreamerMsgPackV4	typeref:typename:void
emitHiddenKernelArgs	RVGPUHSAMetadataStreamer.cpp	/^void MetadataStreamerMsgPackV5::emitHiddenKernelArgs($/;"	f	class:llvm::RVGPU::HSRV::MetadataStreamerMsgPackV5	typeref:typename:void
emitIf	SILowerControlFlow.cpp	/^void SILowerControlFlow::emitIf(MachineInstr &MI) {$/;"	f	class:SILowerControlFlow	typeref:typename:void
emitIfBreak	SILowerControlFlow.cpp	/^void SILowerControlFlow::emitIfBreak(MachineInstr &MI) {$/;"	f	class:SILowerControlFlow	typeref:typename:void
emitImplicitDef	RVGPUAsmPrinter.cpp	/^void RVGPUAsmPrinter::emitImplicitDef(const MachineInstr *MI) const {$/;"	f	class:RVGPUAsmPrinter	typeref:typename:void
emitIndirectDst	RVISelLowering.cpp	/^static MachineBasicBlock *emitIndirectDst(MachineInstr &MI,$/;"	f	typeref:typename:MachineBasicBlock *	file:
emitIndirectSrc	RVISelLowering.cpp	/^static MachineBasicBlock *emitIndirectSrc(MachineInstr &MI,$/;"	f	typeref:typename:MachineBasicBlock *	file:
emitInstruction	RVGPUMCInstLower.cpp	/^void RVGPUAsmPrinter::emitInstruction(const MachineInstr *MI) {$/;"	f	class:RVGPUAsmPrinter	typeref:typename:void
emitKernel	RVGPUHSAMetadataStreamer.cpp	/^void MetadataStreamerMsgPackV4::emitKernel(const MachineFunction &MF,$/;"	f	class:llvm::RVGPU::HSRV::MetadataStreamerMsgPackV4	typeref:typename:void
emitKernelArg	RVGPUHSAMetadataStreamer.cpp	/^void MetadataStreamerMsgPackV4::emitKernelArg($/;"	f	class:llvm::RVGPU::HSRV::MetadataStreamerMsgPackV4	typeref:typename:void
emitKernelArg	RVGPUHSAMetadataStreamer.cpp	/^void MetadataStreamerMsgPackV4::emitKernelArg(const Argument &Arg,$/;"	f	class:llvm::RVGPU::HSRV::MetadataStreamerMsgPackV4	typeref:typename:void
emitKernelArgs	RVGPUHSAMetadataStreamer.cpp	/^void MetadataStreamerMsgPackV4::emitKernelArgs(const MachineFunction &MF,$/;"	f	class:llvm::RVGPU::HSRV::MetadataStreamerMsgPackV4	typeref:typename:void
emitKernelAttrs	RVGPUHSAMetadataStreamer.cpp	/^void MetadataStreamerMsgPackV4::emitKernelAttrs(const Function &Func,$/;"	f	class:llvm::RVGPU::HSRV::MetadataStreamerMsgPackV4	typeref:typename:void
emitKernelAttrs	RVGPUHSAMetadataStreamer.cpp	/^void MetadataStreamerMsgPackV5::emitKernelAttrs(const Function &Func,$/;"	f	class:llvm::RVGPU::HSRV::MetadataStreamerMsgPackV5	typeref:typename:void
emitKernelLanguage	RVGPUHSAMetadataStreamer.cpp	/^void MetadataStreamerMsgPackV4::emitKernelLanguage(const Function &Func,$/;"	f	class:llvm::RVGPU::HSRV::MetadataStreamerMsgPackV4	typeref:typename:void
emitLoadM0FromVGPRLoop	RVISelLowering.cpp	/^emitLoadM0FromVGPRLoop(const RVInstrInfo *TII, MachineRegisterInfo &MRI,$/;"	f	typeref:typename:MachineBasicBlock::iterator	file:
emitLoadScalarOpsFromVGPRLoop	RVInstrInfo.cpp	/^static void emitLoadScalarOpsFromVGPRLoop($/;"	f	typeref:typename:void	file:
emitLoop	SILowerControlFlow.cpp	/^void SILowerControlFlow::emitLoop(MachineInstr &MI) {$/;"	f	class:SILowerControlFlow	typeref:typename:void
emitNonHSAIntrinsicError	RVISelLowering.cpp	/^static SDValue emitNonHSAIntrinsicError(SelectionDAG &DAG, const SDLoc &DL,$/;"	f	typeref:typename:SDValue	file:
emitPALFunctionMetadata	RVGPUAsmPrinter.cpp	/^void RVGPUAsmPrinter::emitPALFunctionMetadata(const MachineFunction &MF) {$/;"	f	class:RVGPUAsmPrinter	typeref:typename:void
emitPrintf	RVGPUHSAMetadataStreamer.cpp	/^void MetadataStreamerMsgPackV4::emitPrintf(const Module &Mod) {$/;"	f	class:llvm::RVGPU::HSRV::MetadataStreamerMsgPackV4	typeref:typename:void
emitPrologue	RVFrameLowering.cpp	/^void RVFrameLowering::emitPrologue(MachineFunction &MF,$/;"	f	class:RVFrameLowering	typeref:typename:void
emitRVGPULDS	MCTargetDesc/RVGPUTargetStreamer.cpp	/^void RVGPUTargetAsmStreamer::emitRVGPULDS(MCSymbol *Symbol, unsigned Size,$/;"	f	class:RVGPUTargetAsmStreamer	typeref:typename:void
emitRVGPULDS	MCTargetDesc/RVGPUTargetStreamer.cpp	/^void RVGPUTargetELFStreamer::emitRVGPULDS(MCSymbol *Symbol, unsigned Size,$/;"	f	class:RVGPUTargetELFStreamer	typeref:typename:void
emitRVGPULDS	MCTargetDesc/RVGPUTargetStreamer.h	/^  virtual void emitRVGPULDS(MCSymbol *Symbol, unsigned Size, Align Alignment) {$/;"	f	class:llvm::RVGPUTargetStreamer	typeref:typename:void
emitRcpIEEE1ULP	RVGPUCodeGenPrepare.cpp	/^Value *RVGPUCodeGenPrepareImpl::emitRcpIEEE1ULP(IRBuilder<> &Builder,$/;"	f	class:RVGPUCodeGenPrepareImpl	typeref:typename:Value *
emitReciprocalU64	RVGPULegalizerInfo.cpp	/^static std::pair<Register, Register> emitReciprocalU64(MachineIRBuilder &B,$/;"	f	typeref:typename:std::pair<Register,Register>	file:
emitRemovedIntrinsicError	RVISelLowering.cpp	/^static SDValue emitRemovedIntrinsicError(SelectionDAG &DAG, const SDLoc &DL,$/;"	f	typeref:typename:SDValue	file:
emitResourceUsageRemarks	RVGPUAsmPrinter.cpp	/^void RVGPUAsmPrinter::emitResourceUsageRemarks($/;"	f	class:RVGPUAsmPrinter	typeref:typename:void
emitRsqIEEE1ULP	RVGPUCodeGenPrepare.cpp	/^static Value *emitRsqIEEE1ULP(IRBuilder<> &Builder, Value *Src,$/;"	f	typeref:typename:Value *	file:
emitSingleUseVDST	RVGPUInsertSingleUseVDST.cpp	/^  void emitSingleUseVDST(MachineInstr &MI) const {$/;"	f	class:__anon6c17cf8f0111::RVGPUInsertSingleUseVDST	typeref:typename:void	file:
emitSqrtIEEE2ULP	RVGPUCodeGenPrepare.cpp	/^Value *RVGPUCodeGenPrepareImpl::emitSqrtIEEE2ULP(IRBuilder<> &Builder,$/;"	f	class:RVGPUCodeGenPrepareImpl	typeref:typename:Value *
emitStartOfAsmFile	RVGPUAsmPrinter.cpp	/^void RVGPUAsmPrinter::emitStartOfAsmFile(Module &M) {$/;"	f	class:RVGPUAsmPrinter	typeref:typename:void
emitTargetID	RVGPUHSAMetadataStreamer.cpp	/^void MetadataStreamerMsgPackV4::emitTargetID($/;"	f	class:llvm::RVGPU::HSRV::MetadataStreamerMsgPackV4	typeref:typename:void
emitTo	RVGPUHSAMetadataStreamer.cpp	/^bool MetadataStreamerMsgPackV4::emitTo(RVGPUTargetStreamer &TargetStreamer) {$/;"	f	class:llvm::RVGPU::HSRV::MetadataStreamerMsgPackV4	typeref:typename:bool
emitVersion	RVGPUHSAMetadataStreamer.cpp	/^void MetadataStreamerMsgPackV4::emitVersion() {$/;"	f	class:llvm::RVGPU::HSRV::MetadataStreamerMsgPackV4	typeref:typename:void
emitVersion	RVGPUHSAMetadataStreamer.cpp	/^void MetadataStreamerMsgPackV5::emitVersion() {$/;"	f	class:llvm::RVGPU::HSRV::MetadataStreamerMsgPackV5	typeref:typename:void
empty	GCNRegPressure.h	/^  bool empty() const { return getSGPRNum() == 0 && getVGPRNum(false) == 0; }$/;"	f	struct:llvm::GCNRegPressure	typeref:typename:bool
empty	RVInstrInfo.h	/^  bool empty() const { return InstrList.empty(); }$/;"	f	struct:llvm::SIInstrWorklist	typeref:typename:bool
enableAggressiveFMAFusion	RVISelLowering.cpp	/^bool RVTargetLowering::enableAggressiveFMAFusion(EVT VT) const {$/;"	f	class:RVTargetLowering	typeref:typename:bool
enableAggressiveFMAFusion	RVISelLowering.cpp	/^bool RVTargetLowering::enableAggressiveFMAFusion(LLT Ty) const { return true; }$/;"	f	class:RVTargetLowering	typeref:typename:bool
enableDLCBit	SIMemoryLegalizer.cpp	/^  bool enableDLCBit(const MachineBasicBlock::iterator &MI) const {$/;"	f	class:__anon46517b8a0111::SIGfx10CacheControl	typeref:typename:bool	file:
enableEarlyIfConversion	GCNSubtarget.h	/^  bool enableEarlyIfConversion() const override {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
enableFlatScratch	GCNSubtarget.h	/^  bool enableFlatScratch() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
enableGLCBit	SIMemoryLegalizer.cpp	/^  bool enableGLCBit(const MachineBasicBlock::iterator &MI) const {$/;"	f	class:__anon46517b8a0111::SIGfx6CacheControl	typeref:typename:bool	file:
enableLoadCacheBypass	SIMemoryLegalizer.cpp	/^bool SIGfx10CacheControl::enableLoadCacheBypass($/;"	f	class:SIGfx10CacheControl	typeref:typename:bool
enableLoadCacheBypass	SIMemoryLegalizer.cpp	/^bool SIGfx11CacheControl::enableLoadCacheBypass($/;"	f	class:SIGfx11CacheControl	typeref:typename:bool
enableLoadCacheBypass	SIMemoryLegalizer.cpp	/^bool SIGfx6CacheControl::enableLoadCacheBypass($/;"	f	class:SIGfx6CacheControl	typeref:typename:bool
enableLoadCacheBypass	SIMemoryLegalizer.cpp	/^bool SIGfx90ACacheControl::enableLoadCacheBypass($/;"	f	class:SIGfx90ACacheControl	typeref:typename:bool
enableLoadCacheBypass	SIMemoryLegalizer.cpp	/^bool SIGfx940CacheControl::enableLoadCacheBypass($/;"	f	class:SIGfx940CacheControl	typeref:typename:bool
enableMachineScheduler	GCNSubtarget.h	/^  bool enableMachineScheduler() const override {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
enableNTBit	SIMemoryLegalizer.cpp	/^  bool enableNTBit(const MachineBasicBlock::iterator &MI) const {$/;"	f	class:__anon46517b8a0111::SIGfx940CacheControl	typeref:typename:bool	file:
enableNamedBit	SIMemoryLegalizer.cpp	/^bool SICacheControl::enableNamedBit(const MachineBasicBlock::iterator MI,$/;"	f	class:SICacheControl	typeref:typename:bool
enableRMWCacheBypass	SIMemoryLegalizer.cpp	/^bool SIGfx6CacheControl::enableRMWCacheBypass($/;"	f	class:SIGfx6CacheControl	typeref:typename:bool
enableRMWCacheBypass	SIMemoryLegalizer.cpp	/^bool SIGfx90ACacheControl::enableRMWCacheBypass($/;"	f	class:SIGfx90ACacheControl	typeref:typename:bool
enableRMWCacheBypass	SIMemoryLegalizer.cpp	/^bool SIGfx940CacheControl::enableRMWCacheBypass($/;"	f	class:SIGfx940CacheControl	typeref:typename:bool
enableSC0Bit	SIMemoryLegalizer.cpp	/^  bool enableSC0Bit(const MachineBasicBlock::iterator &MI) const {$/;"	f	class:__anon46517b8a0111::SIGfx940CacheControl	typeref:typename:bool	file:
enableSC1Bit	SIMemoryLegalizer.cpp	/^  bool enableSC1Bit(const MachineBasicBlock::iterator &MI) const {$/;"	f	class:__anon46517b8a0111::SIGfx940CacheControl	typeref:typename:bool	file:
enableSIScheduler	GCNSubtarget.h	/^  bool enableSIScheduler() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
enableSLCBit	SIMemoryLegalizer.cpp	/^  bool enableSLCBit(const MachineBasicBlock::iterator &MI) const {$/;"	f	class:__anon46517b8a0111::SIGfx6CacheControl	typeref:typename:bool	file:
enableStoreCacheBypass	SIMemoryLegalizer.cpp	/^bool SIGfx6CacheControl::enableStoreCacheBypass($/;"	f	class:SIGfx6CacheControl	typeref:typename:bool
enableStoreCacheBypass	SIMemoryLegalizer.cpp	/^bool SIGfx90ACacheControl::enableStoreCacheBypass($/;"	f	class:SIGfx90ACacheControl	typeref:typename:bool
enableStoreCacheBypass	SIMemoryLegalizer.cpp	/^bool SIGfx940CacheControl::enableStoreCacheBypass($/;"	f	class:SIGfx940CacheControl	typeref:typename:bool
enableSubRegLiveness	GCNSubtarget.h	/^  bool enableSubRegLiveness() const override {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
enableVolatileAndOrNonTemporal	SIMemoryLegalizer.cpp	/^bool SIGfx10CacheControl::enableVolatileAndOrNonTemporal($/;"	f	class:SIGfx10CacheControl	typeref:typename:bool
enableVolatileAndOrNonTemporal	SIMemoryLegalizer.cpp	/^bool SIGfx11CacheControl::enableVolatileAndOrNonTemporal($/;"	f	class:SIGfx11CacheControl	typeref:typename:bool
enableVolatileAndOrNonTemporal	SIMemoryLegalizer.cpp	/^bool SIGfx6CacheControl::enableVolatileAndOrNonTemporal($/;"	f	class:SIGfx6CacheControl	typeref:typename:bool
enableVolatileAndOrNonTemporal	SIMemoryLegalizer.cpp	/^bool SIGfx90ACacheControl::enableVolatileAndOrNonTemporal($/;"	f	class:SIGfx90ACacheControl	typeref:typename:bool
enableVolatileAndOrNonTemporal	SIMemoryLegalizer.cpp	/^bool SIGfx940CacheControl::enableVolatileAndOrNonTemporal($/;"	f	class:SIGfx940CacheControl	typeref:typename:bool
enable_break_exceptions	RVKernelCodeT.h	/^  hsa_ext_exception_kind16_t enable_break_exceptions;$/;"	m	struct:hsa_ext_control_directives_s	typeref:typename:hsa_ext_exception_kind16_t
enable_detect_exceptions	RVKernelCodeT.h	/^  hsa_ext_exception_kind16_t enable_detect_exceptions;$/;"	m	struct:hsa_ext_control_directives_s	typeref:typename:hsa_ext_exception_kind16_t
enabled_control_directives	RVKernelCodeT.h	/^  hsa_ext_control_directive_present64_t enabled_control_directives;$/;"	m	struct:hsa_ext_control_directives_s	typeref:typename:hsa_ext_control_directive_present64_t
encode	Utils/RVGPUAsmUtils.h	/^  unsigned encode(unsigned Val) const { return (Val & Mask) << Shift; }$/;"	f	struct:llvm::RVGPU::CustomOperandVal	typeref:typename:unsigned
encodeBitmaskPerm	AsmParser/RVGPUAsmParser.cpp	/^encodeBitmaskPerm(const unsigned AndMask,$/;"	f	typeref:typename:LLVM_READNONE unsigned	file:
encodeCnt	AsmParser/RVGPUAsmParser.cpp	/^encodeCnt($/;"	f	typeref:typename:bool	file:
encodeCustomOperand	Utils/RVGPUBaseInfo.cpp	/^static int encodeCustomOperand(const CustomOperandVal *Opr, int Size,$/;"	f	namespace:llvm::RVGPU	typeref:typename:int	file:
encodeCustomOperandVal	Utils/RVGPUBaseInfo.cpp	/^static int encodeCustomOperandVal(const CustomOperandVal &Op,$/;"	f	namespace:llvm::RVGPU	typeref:typename:int	file:
encodeDepCtr	Utils/RVGPUBaseInfo.cpp	/^int encodeDepCtr(const StringRef Name, int64_t Val, unsigned &UsedOprMask,$/;"	f	namespace:llvm::RVGPU::DepCtr	typeref:typename:int
encodeDfmtNfmt	Utils/RVGPUBaseInfo.cpp	/^int64_t encodeDfmtNfmt(unsigned Dfmt, unsigned Nfmt) {$/;"	f	namespace:llvm::RVGPU::MTBUFFormat	typeref:typename:int64_t
encodeExpcnt	Utils/RVGPUBaseInfo.cpp	/^unsigned encodeExpcnt(const IsaVersion &Version, unsigned Waitcnt,$/;"	f	namespace:llvm::RVGPU	typeref:typename:unsigned
encodeFieldSaSdst	Utils/RVGPUBaseInfo.cpp	/^unsigned encodeFieldSaSdst(unsigned Encoded, unsigned SaSdst) {$/;"	f	namespace:llvm::RVGPU::DepCtr	typeref:typename:unsigned
encodeFieldSaSdst	Utils/RVGPUBaseInfo.cpp	/^unsigned encodeFieldSaSdst(unsigned SaSdst) {$/;"	f	namespace:llvm::RVGPU::DepCtr	typeref:typename:unsigned
encodeFieldVaVdst	Utils/RVGPUBaseInfo.cpp	/^unsigned encodeFieldVaVdst(unsigned Encoded, unsigned VaVdst) {$/;"	f	namespace:llvm::RVGPU::DepCtr	typeref:typename:unsigned
encodeFieldVaVdst	Utils/RVGPUBaseInfo.cpp	/^unsigned encodeFieldVaVdst(unsigned VaVdst) {$/;"	f	namespace:llvm::RVGPU::DepCtr	typeref:typename:unsigned
encodeFieldVmVsrc	Utils/RVGPUBaseInfo.cpp	/^unsigned encodeFieldVmVsrc(unsigned Encoded, unsigned VmVsrc) {$/;"	f	namespace:llvm::RVGPU::DepCtr	typeref:typename:unsigned
encodeFieldVmVsrc	Utils/RVGPUBaseInfo.cpp	/^unsigned encodeFieldVmVsrc(unsigned VmVsrc) {$/;"	f	namespace:llvm::RVGPU::DepCtr	typeref:typename:unsigned
encodeFltRoundsTable	SIModeRegisterDefaults.cpp	/^static constexpr uint64_t encodeFltRoundsTable(uint32_t FltRoundsVal,$/;"	f	typeref:typename:uint64_t	file:
encodeFltRoundsTableSame	SIModeRegisterDefaults.cpp	/^encodeFltRoundsTableSame(RVGPUFltRounds FltRoundsMode, uint32_t HWVal) {$/;"	f	typeref:typename:uint64_t	file:
encodeHwreg	Utils/RVGPUBaseInfo.cpp	/^uint64_t encodeHwreg(uint64_t Id, uint64_t Offset, uint64_t Width) {$/;"	f	namespace:llvm::RVGPU::Hwreg	typeref:typename:uint64_t
encodeInstruction	MCTargetDesc/RVGPUMCCodeEmitter.cpp	/^void RVGPUMCCodeEmitter::encodeInstruction(const MCInst &MI,$/;"	f	class:RVGPUMCCodeEmitter	typeref:typename:void
encodeLgkmcnt	Utils/RVGPUBaseInfo.cpp	/^unsigned encodeLgkmcnt(const IsaVersion &Version, unsigned Waitcnt,$/;"	f	namespace:llvm::RVGPU	typeref:typename:unsigned
encodeMsg	Utils/RVGPUBaseInfo.cpp	/^uint64_t encodeMsg(uint64_t MsgId,$/;"	f	namespace:llvm::RVGPU::SendMsg	typeref:typename:uint64_t
encodeVmcnt	Utils/RVGPUBaseInfo.cpp	/^unsigned encodeVmcnt(const IsaVersion &Version, unsigned Waitcnt,$/;"	f	namespace:llvm::RVGPU	typeref:typename:unsigned
encodeWaitcnt	Utils/RVGPUBaseInfo.cpp	/^unsigned encodeWaitcnt(const IsaVersion &Version, const Waitcnt &Decoded) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:unsigned
encodeWaitcnt	Utils/RVGPUBaseInfo.cpp	/^unsigned encodeWaitcnt(const IsaVersion &Version,$/;"	f	namespace:llvm::RVGPU	typeref:typename:unsigned
end	RVGPUHSAMetadataStreamer.cpp	/^void MetadataStreamerMsgPackV4::end() {$/;"	f	class:llvm::RVGPU::HSRV::MetadataStreamerMsgPackV4	typeref:typename:void
enforceOperandRCAlignment	RVInstrInfo.cpp	/^void RVInstrInfo::enforceOperandRCAlignment(MachineInstr &MI,$/;"	f	class:RVInstrInfo	typeref:typename:void
enqueueUsers	RVGPUPromoteKernelArguments.cpp	/^void RVGPUPromoteKernelArguments::enqueueUsers(Value *Ptr) {$/;"	f	class:RVGPUPromoteKernelArguments	typeref:typename:void
ensureCondIsNotKilled	RVGPUMachineCFGStructurizer.cpp	/^void RVGPUMachineCFGStructurizer::ensureCondIsNotKilled($/;"	f	class:RVGPUMachineCFGStructurizer	typeref:typename:void
enterRegion	GCNIterativeScheduler.cpp	/^void GCNIterativeScheduler::enterRegion(MachineBasicBlock *BB, \/\/ overridden$/;"	f	class:GCNIterativeScheduler	typeref:typename:void
enum_iteration_traits	SIInsertWaitcnts.cpp	/^template <> struct enum_iteration_traits<InstCounterType> {$/;"	s	namespace:llvm	file:
eraseIfUnused	SIAnnotateControlFlow.cpp	/^bool SIAnnotateControlFlow::eraseIfUnused(PHINode *Phi) {$/;"	f	class:SIAnnotateControlFlow	typeref:typename:bool
erase_top	RVInstrInfo.h	/^  void erase_top() {$/;"	f	struct:llvm::SIInstrWorklist	typeref:typename:void
erasingInstr	RVGPURegisterBankInfo.cpp	/^  void erasingInstr(MachineInstr &MI) override {}$/;"	f	class:__anon0a1a7df70111::ApplyRegBankMapping	typeref:typename:void	file:
errOperand	Disassembler/RVGPUDisassembler.cpp	/^MCOperand RVGPUDisassembler::errOperand(unsigned V,$/;"	f	class:RVGPUDisassembler	typeref:typename:MCOperand
evalBinaryInstruction	SIFoldOperands.cpp	/^static bool evalBinaryInstruction(unsigned Opcode, int32_t &Result,$/;"	f	typeref:typename:bool	file:
evaluateBranch	MCTargetDesc/RVGPUMCTargetDesc.cpp	/^  bool evaluateBranch(const MCInst &Inst, uint64_t Addr, uint64_t Size,$/;"	f	class:__anon9509ab050111::RVGPUMCInstrAnalysis	typeref:typename:bool	file:
evaluateCall	RVGPULibCalls.cpp	/^bool RVGPULibCalls::evaluateCall(CallInst *aCI, const FuncInfo &FInfo) {$/;"	f	class:RVGPULibCalls	typeref:typename:bool
evaluateScalarMathFunc	RVGPULibCalls.cpp	/^bool RVGPULibCalls::evaluateScalarMathFunc(const FuncInfo &FInfo, double &Res0,$/;"	f	class:RVGPULibCalls	typeref:typename:bool
eventCounter	SIInsertWaitcnts.cpp	/^  InstCounterType eventCounter(WaitEventType E) const {$/;"	f	class:__anona6cbb7940211::WaitcntBrackets	typeref:typename:InstCounterType	file:
execMayBeModifiedBeforeAnyUse	RVInstrInfo.cpp	/^bool llvm::execMayBeModifiedBeforeAnyUse(const MachineRegisterInfo &MRI,$/;"	f	class:llvm	typeref:typename:bool
execMayBeModifiedBeforeUse	RVInstrInfo.cpp	/^bool llvm::execMayBeModifiedBeforeUse(const MachineRegisterInfo &MRI,$/;"	f	class:llvm	typeref:typename:bool
executeInWaterfallLoop	RVGPURegisterBankInfo.cpp	/^bool RVGPURegisterBankInfo::executeInWaterfallLoop($/;"	f	class:RVGPURegisterBankInfo	typeref:typename:bool
expandAtomicCmpxchgOrRmw	SIMemoryLegalizer.cpp	/^bool SIMemoryLegalizer::expandAtomicCmpxchgOrRmw(const SIMemOpInfo &MOI,$/;"	f	class:SIMemoryLegalizer	typeref:typename:bool
expandAtomicFence	SIMemoryLegalizer.cpp	/^bool SIMemoryLegalizer::expandAtomicFence(const SIMemOpInfo &MOI,$/;"	f	class:SIMemoryLegalizer	typeref:typename:bool
expandChainCall	SILateBranchLowering.cpp	/^void SILateBranchLowering::expandChainCall(MachineInstr &MI) {$/;"	f	class:SILateBranchLowering	typeref:typename:void
expandDivRem24	RVGPUCodeGenPrepare.cpp	/^Value *RVGPUCodeGenPrepareImpl::expandDivRem24(IRBuilder<> &Builder,$/;"	f	class:RVGPUCodeGenPrepareImpl	typeref:typename:Value *
expandDivRem24Impl	RVGPUCodeGenPrepare.cpp	/^Value *RVGPUCodeGenPrepareImpl::expandDivRem24Impl($/;"	f	class:RVGPUCodeGenPrepareImpl	typeref:typename:Value *
expandDivRem32	RVGPUCodeGenPrepare.cpp	/^Value *RVGPUCodeGenPrepareImpl::expandDivRem32(IRBuilder<> &Builder,$/;"	f	class:RVGPUCodeGenPrepareImpl	typeref:typename:Value *
expandDivRem64	RVGPUCodeGenPrepare.cpp	/^void RVGPUCodeGenPrepareImpl::expandDivRem64(BinaryOperator &I) const {$/;"	f	class:RVGPUCodeGenPrepareImpl	typeref:typename:void
expandImpliedFeatures	RVGPURemoveIncompatibleFunctions.cpp	/^FeatureBitset expandImpliedFeatures(const FeatureBitset &Features) {$/;"	f	namespace:__anonbd23f2080111	typeref:typename:FeatureBitset
expandLoad	SIMemoryLegalizer.cpp	/^bool SIMemoryLegalizer::expandLoad(const SIMemOpInfo &MOI,$/;"	f	class:SIMemoryLegalizer	typeref:typename:bool
expandMovDPP64	RVInstrInfo.cpp	/^RVInstrInfo::expandMovDPP64(MachineInstr &MI) const {$/;"	f	class:RVInstrInfo	typeref:typename:std::pair<MachineInstr *,MachineInstr * >
expandPostRAPseudo	RVInstrInfo.cpp	/^bool RVInstrInfo::expandPostRAPseudo(MachineInstr &MI) const {$/;"	f	class:RVInstrInfo	typeref:typename:bool
expandSGPRCopy	RVInstrInfo.cpp	/^static void expandSGPRCopy(const RVInstrInfo &TII, MachineBasicBlock &MBB,$/;"	f	typeref:typename:void	file:
expandStore	SIMemoryLegalizer.cpp	/^bool SIMemoryLegalizer::expandStore(const SIMemOpInfo &MOI,$/;"	f	class:SIMemoryLegalizer	typeref:typename:bool
expectAbsExpression	Utils/RVKernelCodeTUtils.cpp	/^static bool expectAbsExpression(MCAsmParser &MCParser, int64_t &Value, raw_ostream& Err) {$/;"	f	typeref:typename:bool	file:
extOpcodeToISDExtOpcode	RVGPUCallLowering.cpp	/^static ISD::NodeType extOpcodeToISDExtOpcode(unsigned MIOpc) {$/;"	f	typeref:typename:ISD::NodeType	file:
extendLow32IntoHigh32	RVGPURegisterBankInfo.cpp	/^static void extendLow32IntoHigh32(MachineIRBuilder &B,$/;"	f	typeref:typename:void	file:
extendRegisterMin32	RVGPUCallLowering.cpp	/^static Register extendRegisterMin32(CallLowering::ValueHandler &Handler,$/;"	f	namespace:__anonad2fb0ad0111	typeref:typename:Register	file:
extendWWMVirtRegLiveness	SILowerSGPRSpills.cpp	/^void SILowerSGPRSpills::extendWWMVirtRegLiveness(MachineFunction &MF,$/;"	f	class:SILowerSGPRSpills	typeref:typename:void
extractBitsAsZExtValue	Disassembler/RVGPUDisassembler.h	/^  uint64_t extractBitsAsZExtValue(unsigned NumBits,$/;"	f	class:llvm::DecoderUInt128	typeref:typename:uint64_t
extractConstOffset	SILoadStoreOptimizer.cpp	/^SILoadStoreOptimizer::extractConstOffset(const MachineOperand &Op) const {$/;"	f	class:SILoadStoreOptimizer	typeref:typename:std::optional<int32_t>
extractF64Exponent	RVGPUISelLowering.cpp	/^static SDValue extractF64Exponent(SDValue Hi, const SDLoc &SL,$/;"	f	typeref:typename:SDValue	file:
extractF64Exponent	RVGPULegalizerInfo.cpp	/^static MachineInstrBuilder extractF64Exponent(Register Hi,$/;"	f	typeref:typename:MachineInstrBuilder	file:
extractKilledPHIs	RVGPUMachineCFGStructurizer.cpp	/^void RVGPUMachineCFGStructurizer::extractKilledPHIs(MachineBasicBlock *MBB) {$/;"	f	class:RVGPUMachineCFGStructurizer	typeref:typename:void
extractRsrcPtr	RVInstrInfo.cpp	/^extractRsrcPtr(const RVInstrInfo &TII, MachineInstr &MI, MachineOperand &Rsrc) {$/;"	f	typeref:typename:std::tuple<unsigned,unsigned>	file:
extractValues	RVGPUCodeGenPrepare.cpp	/^static void extractValues(IRBuilder<> &Builder,$/;"	f	typeref:typename:void	file:
fastRegAllocSGPR	RVGPUTargetMachine.cpp	/^static SGPRRegisterRegAlloc fastRegAllocSGPR($/;"	v	namespace:__anon565c6f860111	typeref:typename:SGPRRegisterRegAlloc	file:
fastRegAllocVGPR	RVGPUTargetMachine.cpp	/^static VGPRRegisterRegAlloc fastRegAllocVGPR($/;"	v	namespace:__anon565c6f860111	typeref:typename:VGPRRegisterRegAlloc	file:
fastSchedule	SIMachineScheduler.cpp	/^void SIScheduleBlock::fastSchedule() {$/;"	f	class:SIScheduleBlock	typeref:typename:void
fewerEltsToSize64Vector	RVGPULegalizerInfo.cpp	/^static LegalizeMutation fewerEltsToSize64Vector(unsigned TypeIdx) {$/;"	f	typeref:typename:LegalizeMutation	file:
fillStats	SIMachineScheduler.cpp	/^void SIScheduleBlockCreator::fillStats() {$/;"	f	class:SIScheduleBlockCreator	typeref:typename:void
fillVgprSgprCost	SIMachineScheduler.cpp	/^SIScheduleDAGMI::fillVgprSgprCost(_Iterator First, _Iterator End,$/;"	f	class:SIScheduleDAGMI	typeref:typename:void
finalizeGCNRegion	GCNSchedStrategy.cpp	/^void GCNSchedStage::finalizeGCNRegion() {$/;"	f	class:GCNSchedStage	typeref:typename:void
finalizeGCNSchedStage	GCNSchedStrategy.cpp	/^void GCNSchedStage::finalizeGCNSchedStage() {$/;"	f	class:GCNSchedStage	typeref:typename:void
finalizeGCNSchedStage	GCNSchedStrategy.cpp	/^void UnclusteredHighRPStage::finalizeGCNSchedStage() {$/;"	f	class:UnclusteredHighRPStage	typeref:typename:void
finalizeLowering	RVISelLowering.cpp	/^void RVTargetLowering::finalizeLowering(MachineFunction &MF) const {$/;"	f	class:RVTargetLowering	typeref:typename:void
finalizeSchedule	GCNIterativeScheduler.cpp	/^void GCNIterativeScheduler::finalizeSchedule() { \/\/ overridden$/;"	f	class:GCNIterativeScheduler	typeref:typename:void
finalizeSchedule	GCNSchedStrategy.cpp	/^void GCNPostScheduleDAGMILive::finalizeSchedule() {$/;"	f	class:GCNPostScheduleDAGMILive	typeref:typename:void
finalizeSchedule	GCNSchedStrategy.cpp	/^void GCNScheduleDAGMILive::finalizeSchedule() {$/;"	f	class:GCNScheduleDAGMILive	typeref:typename:void
finalizeUnits	SIMachineScheduler.cpp	/^void SIScheduleBlock::finalizeUnits() {$/;"	f	class:SIScheduleBlock	typeref:typename:void
findCommutedOpIndices	RVInstrInfo.cpp	/^bool RVInstrInfo::findCommutedOpIndices(const MCInstrDesc &Desc,$/;"	f	class:RVInstrInfo	typeref:typename:bool
findCommutedOpIndices	RVInstrInfo.cpp	/^bool RVInstrInfo::findCommutedOpIndices(const MachineInstr &MI,$/;"	f	class:RVInstrInfo	typeref:typename:bool
findDest	RVGPUMachineCFGStructurizer.cpp	/^bool PHILinearize::findDest(unsigned SourceReg, MachineBasicBlock *SourceMBB,$/;"	f	class:PHILinearize	typeref:typename:bool
findExecCopy	SIOptimizeExecMasking.cpp	/^MachineBasicBlock::reverse_iterator SIOptimizeExecMasking::findExecCopy($/;"	f	class:SIOptimizeExecMasking	typeref:typename:MachineBasicBlock::reverse_iterator
findFirstFreeSGPR	RVISelLowering.cpp	/^static unsigned findFirstFreeSGPR(CCState &CCInfo) {$/;"	f	typeref:typename:unsigned	file:
findImplicitSGPRRead	RVInstrInfo.cpp	/^static Register findImplicitSGPRRead(const MachineInstr &MI) {$/;"	f	typeref:typename:Register	file:
findImplicitSGPRReadInVOP	AsmParser/RVGPUAsmParser.cpp	/^unsigned RVGPUAsmParser::findImplicitSGPRReadInVOP(const MCInst &Inst) const {$/;"	f	class:RVGPUAsmParser	typeref:typename:unsigned
findInstrBackwards	SIOptimizeExecMasking.cpp	/^MachineInstr *SIOptimizeExecMasking::findInstrBackwards($/;"	f	class:SIOptimizeExecMasking	typeref:typename:MachineInstr *
findLoop	SILowerI1Copies.cpp	/^  unsigned findLoop(MachineBasicBlock *PostDom) {$/;"	f	class:__anone16a92980111::LoopFinder	typeref:typename:unsigned	file:
findMaskOperands	SILowerControlFlow.cpp	/^void SILowerControlFlow::findMaskOperands(MachineInstr &MI, unsigned OpNo,$/;"	f	class:SILowerControlFlow	typeref:typename:void
findMax	GCNMinRegStrategy.cpp	/^unsigned GCNMinRegScheduler::findMax(unsigned Num, Calc C) {$/;"	f	class:GCNMinRegScheduler	typeref:typename:unsigned
findMemSDNode	RVGPUISelDAGToDAG.cpp	/^static MemSDNode* findMemSDNode(SDNode *N) {$/;"	f	typeref:typename:MemSDNode *	file:
findNonPHIUsesInBlock	SIOptimizeVGPRLiveRange.cpp	/^void SIOptimizeVGPRLiveRange::findNonPHIUsesInBlock($/;"	f	class:SIOptimizeVGPRLiveRange	typeref:typename:void
findPHIInfoElement	RVGPUMachineCFGStructurizer.cpp	/^PHILinearize::findPHIInfoElement(unsigned DestReg) {$/;"	f	class:PHILinearize	typeref:typename:PHILinearize::PHIInfoElementT *
findPHIInfoElementFromSource	RVGPUMachineCFGStructurizer.cpp	/^PHILinearize::findPHIInfoElementFromSource(unsigned SourceReg,$/;"	f	class:PHILinearize	typeref:typename:PHILinearize::PHIInfoElementT *
findReachingDef	RVRegisterInfo.cpp	/^MachineInstr *RVRegisterInfo::findReachingDef(Register Reg, unsigned SubReg,$/;"	f	class:RVRegisterInfo	typeref:typename:MachineInstr *
findScratchNonCalleeSaveRegister	RVFrameLowering.cpp	/^static MCRegister findScratchNonCalleeSaveRegister($/;"	f	typeref:typename:MCRegister	file:
findSelectThroughCast	RVGPUCodeGenPrepare.cpp	/^static SelectInst *findSelectThroughCast(Value *V, CastInst *&Cast) {$/;"	f	typeref:typename:SelectInst *	file:
findSingleRegDef	SIPeepholeSDWA.cpp	/^static MachineOperand *findSingleRegDef(const MachineOperand *Reg,$/;"	f	typeref:typename:MachineOperand *	file:
findSingleRegUse	SIPeepholeSDWA.cpp	/^static MachineOperand *findSingleRegUse(const MachineOperand *Reg,$/;"	f	typeref:typename:MachineOperand *	file:
findSourcesFromMBB	RVGPUMachineCFGStructurizer.cpp	/^bool PHILinearize::findSourcesFromMBB(MachineBasicBlock *SourceMBB,$/;"	f	class:PHILinearize	typeref:typename:bool
findSubst	RVGPULibFunc.cpp	/^  int findSubst(const RVGPULibFunc::Param& P) const {$/;"	f	class:__anona5afe38d0311::ItaniumMangler	typeref:typename:int	file:
findUnusedRegister	RVFrameLowering.cpp	/^static MCRegister findUnusedRegister(MachineRegisterInfo &MRI,$/;"	f	typeref:typename:MCRegister	file:
findUnusedRegister	RVRegisterInfo.cpp	/^MCRegister RVRegisterInfo::findUnusedRegister($/;"	f	class:RVRegisterInfo	typeref:typename:MCRegister
findUsedSGPR	RVInstrInfo.cpp	/^Register RVInstrInfo::findUsedSGPR(const MachineInstr &MI,$/;"	f	class:RVInstrInfo	typeref:typename:Register
findUser	RVISelLowering.cpp	/^static SDNode *findUser(SDValue Value, unsigned Opcode) {$/;"	f	typeref:typename:SDNode *	file:
finish	MCTargetDesc/RVGPUTargetStreamer.cpp	/^void RVGPUTargetAsmStreamer::finish() {$/;"	f	class:RVGPUTargetAsmStreamer	typeref:typename:void
finish	MCTargetDesc/RVGPUTargetStreamer.cpp	/^void RVGPUTargetELFStreamer::finish() {$/;"	f	class:RVGPUTargetELFStreamer	typeref:typename:void
fixHazards	GCNHazardRecognizer.cpp	/^void GCNHazardRecognizer::fixHazards(MachineInstr *MI) {$/;"	f	class:GCNHazardRecognizer	typeref:typename:void
fixImplicitOperands	RVInstrInfo.cpp	/^void RVInstrInfo::fixImplicitOperands(MachineInstr &MI) const {$/;"	f	class:RVInstrInfo	typeref:typename:void
fixLdsBranchVmemWARHazard	GCNHazardRecognizer.cpp	/^bool GCNHazardRecognizer::fixLdsBranchVmemWARHazard(MachineInstr *MI) {$/;"	f	class:GCNHazardRecognizer	typeref:typename:bool
fixLdsDirectVALUHazard	GCNHazardRecognizer.cpp	/^bool GCNHazardRecognizer::fixLdsDirectVALUHazard(MachineInstr *MI) {$/;"	f	class:GCNHazardRecognizer	typeref:typename:bool
fixLdsDirectVMEMHazard	GCNHazardRecognizer.cpp	/^bool GCNHazardRecognizer::fixLdsDirectVMEMHazard(MachineInstr *MI) {$/;"	f	class:GCNHazardRecognizer	typeref:typename:bool
fixMBBTerminator	RVGPUMachineCFGStructurizer.cpp	/^static void fixMBBTerminator(MachineBasicBlock *MBB) {$/;"	f	typeref:typename:void	file:
fixMasks	RVISelLowering.cpp	/^static void fixMasks(SmallVectorImpl<std::pair<SDValue, unsigned>> &Srcs,$/;"	f	typeref:typename:void	file:
fixRegionTerminator	RVGPUMachineCFGStructurizer.cpp	/^static void fixRegionTerminator(RegionMRT *Region) {$/;"	f	typeref:typename:void	file:
fixSCCCopies	SIFixSGPRCopies.cpp	/^void SIFixSGPRCopies::fixSCCCopies(MachineFunction &MF) {$/;"	f	class:SIFixSGPRCopies	typeref:typename:void
fixSMEMtoVectorWriteHazards	GCNHazardRecognizer.cpp	/^bool GCNHazardRecognizer::fixSMEMtoVectorWriteHazards(MachineInstr *MI) {$/;"	f	class:GCNHazardRecognizer	typeref:typename:bool
fixShift64HighRegBug	GCNHazardRecognizer.cpp	/^bool GCNHazardRecognizer::fixShift64HighRegBug(MachineInstr *MI) {$/;"	f	class:GCNHazardRecognizer	typeref:typename:bool
fixStoreSourceType	RVGPULegalizerInfo.cpp	/^Register RVGPULegalizerInfo::fixStoreSourceType($/;"	f	class:RVGPULegalizerInfo	typeref:typename:Register
fixTerminators	SIOptimizeExecMasking.cpp	/^SIOptimizeExecMasking::fixTerminators(MachineBasicBlock &MBB) const {$/;"	f	class:SIOptimizeExecMasking	typeref:typename:MachineBasicBlock::reverse_iterator
fixVALUMaskWriteHazard	GCNHazardRecognizer.cpp	/^bool GCNHazardRecognizer::fixVALUMaskWriteHazard(MachineInstr *MI) {$/;"	f	class:GCNHazardRecognizer	typeref:typename:bool
fixVALUPartialForwardingHazard	GCNHazardRecognizer.cpp	/^bool GCNHazardRecognizer::fixVALUPartialForwardingHazard(MachineInstr *MI) {$/;"	f	class:GCNHazardRecognizer	typeref:typename:bool
fixVALUTransUseHazard	GCNHazardRecognizer.cpp	/^bool GCNHazardRecognizer::fixVALUTransUseHazard(MachineInstr *MI) {$/;"	f	class:GCNHazardRecognizer	typeref:typename:bool
fixVMEMtoScalarWriteHazards	GCNHazardRecognizer.cpp	/^bool GCNHazardRecognizer::fixVMEMtoScalarWriteHazards(MachineInstr *MI) {$/;"	f	class:GCNHazardRecognizer	typeref:typename:bool
fixVcmpxExecWARHazard	GCNHazardRecognizer.cpp	/^bool GCNHazardRecognizer::fixVcmpxExecWARHazard(MachineInstr *MI) {$/;"	f	class:GCNHazardRecognizer	typeref:typename:bool
fixVcmpxPermlaneHazards	GCNHazardRecognizer.cpp	/^bool GCNHazardRecognizer::fixVcmpxPermlaneHazards(MachineInstr *MI) {$/;"	f	class:GCNHazardRecognizer	typeref:typename:bool
fixWMMAHazards	GCNHazardRecognizer.cpp	/^bool GCNHazardRecognizer::fixWMMAHazards(MachineInstr *MI) {$/;"	f	class:GCNHazardRecognizer	typeref:typename:bool
fixedABILayout	RVGPUArgumentUsageInfo.cpp	/^RVGPUFunctionArgInfo RVGPUFunctionArgInfo::fixedABILayout() {$/;"	f	class:RVGPUFunctionArgInfo	typeref:typename:RVGPUFunctionArgInfo
fixupNeedsRelaxation	MCTargetDesc/RVGPUAsmBackend.cpp	/^bool RVGPUAsmBackend::fixupNeedsRelaxation(const MCFixup &Fixup,$/;"	f	class:RVGPUAsmBackend	typeref:typename:bool
fixupRegionExits	RVGPUMachineCFGStructurizer.cpp	/^void fixupRegionExits(RegionMRT *Region) {$/;"	f	typeref:typename:void
fixup_si_sopp_br	MCTargetDesc/RVGPUFixupKinds.h	/^  fixup_si_sopp_br = FirstTargetFixupKind,$/;"	e	enum:llvm::RVGPU::Fixups
flatScratchIsArchitected	GCNSubtarget.h	/^  bool flatScratchIsArchitected() const { return HasArchitectedFlatScratch; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
flatScratchIsPointer	GCNSubtarget.h	/^  bool flatScratchIsPointer() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
flow	RVMachineFunctionInfo.h	/^  static const bool flow = true;$/;"	m	struct:llvm::yaml::MappingTraits	typeref:typename:const bool
fmed3RVGPU	RVGPUInstCombineIntrinsic.cpp	/^static APFloat fmed3RVGPU(const APFloat &Src0, const APFloat &Src1,$/;"	f	typeref:typename:APFloat	file:
fnegFoldsIntoMI	RVGPUCombinerHelper.cpp	/^static bool fnegFoldsIntoMI(const MachineInstr &MI) {$/;"	f	typeref:typename:LLVM_READNONE bool	file:
fnegFoldsIntoOp	RVGPUISelLowering.cpp	/^static bool fnegFoldsIntoOp(const SDNode *N) {$/;"	f	typeref:typename:bool	file:
fnegFoldsIntoOpcode	RVGPUISelLowering.cpp	/^static bool fnegFoldsIntoOpcode(unsigned Opc) {$/;"	f	typeref:typename:LLVM_READNONE bool	file:
fold	RVGPULibCalls.cpp	/^bool RVGPULibCalls::fold(CallInst *CI) {$/;"	f	class:RVGPULibCalls	typeref:typename:bool
foldBinOpIntoSelect	RVGPUCodeGenPrepare.cpp	/^bool RVGPUCodeGenPrepareImpl::foldBinOpIntoSelect(BinaryOperator &BO) const {$/;"	f	class:RVGPUCodeGenPrepareImpl	typeref:typename:bool
foldExtractEltToCmpSelect	RVGPURegisterBankInfo.cpp	/^bool RVGPURegisterBankInfo::foldExtractEltToCmpSelect($/;"	f	class:RVGPURegisterBankInfo	typeref:typename:bool
foldFrameIndex	RVGPUISelDAGToDAG.cpp	/^std::pair<SDValue, SDValue> RVGPUDAGToDAGISel::foldFrameIndex(SDValue N) const {$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:std::pair<SDValue,SDValue>
foldFreeOpFromSelect	RVGPUISelLowering.cpp	/^RVGPUTargetLowering::foldFreeOpFromSelect(TargetLowering::DAGCombinerInfo &DCI,$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
foldImmediates	SIShrinkInstructions.cpp	/^bool SIShrinkInstructions::foldImmediates(MachineInstr &MI,$/;"	f	class:SIShrinkInstructions	typeref:typename:bool
foldInsertEltToCmpSelect	RVGPURegisterBankInfo.cpp	/^bool RVGPURegisterBankInfo::foldInsertEltToCmpSelect($/;"	f	class:RVGPURegisterBankInfo	typeref:typename:bool
foldInstOperand	SIFoldOperands.cpp	/^bool SIFoldOperands::foldInstOperand(MachineInstr &MI,$/;"	f	class:SIFoldOperands	typeref:typename:bool
foldMemoryOperandImpl	RVInstrInfo.cpp	/^MachineInstr *RVInstrInfo::foldMemoryOperandImpl($/;"	f	class:RVInstrInfo	typeref:typename:MachineInstr *
foldOperand	SIFoldOperands.cpp	/^void SIFoldOperands::foldOperand($/;"	f	class:SIFoldOperands	typeref:typename:void
foldToImm	SIPeepholeSDWA.cpp	/^SIPeepholeSDWA::foldToImm(const MachineOperand &Op) const {$/;"	f	class:SIPeepholeSDWA	typeref:typename:std::optional<int64_t>
foldVGPRCopyIntoRegSequence	SIFixSGPRCopies.cpp	/^static bool foldVGPRCopyIntoRegSequence(MachineInstr &MI,$/;"	f	typeref:typename:bool	file:
fold_pow	RVGPULibCalls.cpp	/^bool RVGPULibCalls::fold_pow(FPMathOperator *FPOp, IRBuilder<> &B,$/;"	f	class:RVGPULibCalls	typeref:typename:bool
fold_read_write_pipe	RVGPULibCalls.cpp	/^bool RVGPULibCalls::fold_read_write_pipe(CallInst *CI, IRBuilder<> &B,$/;"	f	class:RVGPULibCalls	typeref:typename:bool
fold_rootn	RVGPULibCalls.cpp	/^bool RVGPULibCalls::fold_rootn(FPMathOperator *FPOp, IRBuilder<> &B,$/;"	f	class:RVGPULibCalls	typeref:typename:bool
fold_sincos	RVGPULibCalls.cpp	/^bool RVGPULibCalls::fold_sincos(FPMathOperator *FPOp, IRBuilder<> &B,$/;"	f	class:RVGPULibCalls	typeref:typename:bool
fold_sqrt	RVGPULibCalls.cpp	/^bool RVGPULibCalls::fold_sqrt(FPMathOperator *FPOp, IRBuilder<> &B,$/;"	f	class:RVGPULibCalls	typeref:typename:bool
followSubRegDef	RVInstrInfo.cpp	/^static bool followSubRegDef(MachineInstr &MI,$/;"	f	typeref:typename:bool	file:
forEachWorkListItem	RVGPUPromoteAlloca.cpp	/^static void forEachWorkListItem(const InstContainer &WorkList,$/;"	f	typeref:typename:void	file:
fp16SrcZerosHighBits	RVGPUISelDAGToDAG.cpp	/^bool RVGPUDAGToDAGISel::fp16SrcZerosHighBits(unsigned Opc) const {$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
fpDenormModeDPValue	SIModeRegisterDefaults.h	/^  uint32_t fpDenormModeDPValue() const {$/;"	f	struct:llvm::SIModeRegisterDefaults	typeref:typename:uint32_t
fpDenormModeSPValue	SIModeRegisterDefaults.h	/^  uint32_t fpDenormModeSPValue() const {$/;"	f	struct:llvm::SIModeRegisterDefaults	typeref:typename:uint32_t
fpModeMatchesGlobalFPAtomicMode	RVISelLowering.cpp	/^static bool fpModeMatchesGlobalFPAtomicMode(const AtomicRMWInst *RMW) {$/;"	f	typeref:typename:bool	file:
frameIndexMayFold	SIFoldOperands.cpp	/^bool SIFoldOperands::frameIndexMayFold(const MachineInstr &UseMI, int OpNo,$/;"	f	class:SIFoldOperands	typeref:typename:bool
frameTriviallyRequiresSP	RVFrameLowering.cpp	/^static bool frameTriviallyRequiresSP(const MachineFrameInfo &MFI) {$/;"	f	typeref:typename:bool	file:
fromStrictMode	SIWholeQuadMode.cpp	/^void SIWholeQuadMode::fromStrictMode(MachineBasicBlock &MBB,$/;"	f	class:SIWholeQuadMode	typeref:typename:void
funcRequiresHostcallPtr	RVGPUAttributor.cpp	/^static bool funcRequiresHostcallPtr(const Function &F) {$/;"	f	typeref:typename:bool	file:
funcRetrievesCompletionAction	RVGPUAttributor.cpp	/^  bool funcRetrievesCompletionAction(Attributor &A, unsigned COV) {$/;"	f	struct:__anon512e119a0111::AARVAttributesFunction	typeref:typename:bool	file:
funcRetrievesDefaultQueue	RVGPUAttributor.cpp	/^  bool funcRetrievesDefaultQueue(Attributor &A, unsigned COV) {$/;"	f	struct:__anon512e119a0111::AARVAttributesFunction	typeref:typename:bool	file:
funcRetrievesHeapPtr	RVGPUAttributor.cpp	/^  bool funcRetrievesHeapPtr(Attributor &A, unsigned COV) {$/;"	f	struct:__anon512e119a0111::AARVAttributesFunction	typeref:typename:bool	file:
funcRetrievesHostcallPtr	RVGPUAttributor.cpp	/^  bool funcRetrievesHostcallPtr(Attributor &A, unsigned COV) {$/;"	f	struct:__anon512e119a0111::AARVAttributesFunction	typeref:typename:bool	file:
funcRetrievesImplicitKernelArg	RVGPUAttributor.cpp	/^  bool funcRetrievesImplicitKernelArg(Attributor &A, AA::RangeTy Range) {$/;"	f	struct:__anon512e119a0111::AARVAttributesFunction	typeref:typename:bool	file:
funcRetrievesLDSKernelId	RVGPUAttributor.cpp	/^  bool funcRetrievesLDSKernelId(Attributor &A) {$/;"	f	struct:__anon512e119a0111::AARVAttributesFunction	typeref:typename:bool	file:
funcRetrievesMultigridSyncArg	RVGPUAttributor.cpp	/^  bool funcRetrievesMultigridSyncArg(Attributor &A, unsigned COV) {$/;"	f	struct:__anon512e119a0111::AARVAttributesFunction	typeref:typename:bool	file:
funcRetrievesQueuePtr	RVGPUAttributor.cpp	/^  bool funcRetrievesQueuePtr(Attributor &A, unsigned COV) {$/;"	f	struct:__anon512e119a0111::AARVAttributesFunction	typeref:typename:bool	file:
gds_segment_byte_size	RVKernelCodeT.h	/^  uint32_t gds_segment_byte_size;$/;"	m	struct:rv_kernel_code_t	typeref:typename:uint32_t
generateBlockInfo	GCNPreRALongBranchReg.cpp	/^void GCNPreRALongBranchReg::generateBlockInfo($/;"	f	class:GCNPreRALongBranchReg	typeref:typename:void
generateEndPgm	SILateBranchLowering.cpp	/^static void generateEndPgm(MachineBasicBlock &MBB,$/;"	f	typeref:typename:void	file:
generateWaitCntInfo	MCA/RVGPUCustomBehaviour.cpp	/^void RVGPUCustomBehaviour::generateWaitCntInfo() {$/;"	f	class:llvm::mca::RVGPUCustomBehaviour	typeref:typename:void
generateWaitcnt	SIInsertWaitcnts.cpp	/^bool SIInsertWaitcnts::generateWaitcnt(RVGPU::Waitcnt Wait,$/;"	f	class:SIInsertWaitcnts	typeref:typename:bool
generateWaitcntBlockEnd	SIInsertWaitcnts.cpp	/^bool SIInsertWaitcnts::generateWaitcntBlockEnd(MachineBasicBlock &Block,$/;"	f	class:SIInsertWaitcnts	typeref:typename:bool
generateWaitcntInstBefore	SIInsertWaitcnts.cpp	/^bool SIInsertWaitcnts::generateWaitcntInstBefore(MachineInstr &MI,$/;"	f	class:SIInsertWaitcnts	typeref:typename:bool
get	RVGPUSubtarget.cpp	/^const RVGPUSubtarget &RVGPUSubtarget::get(const MachineFunction &MF) {$/;"	f	class:RVGPUSubtarget	typeref:typename:const RVGPUSubtarget &
get	RVGPUSubtarget.cpp	/^const RVGPUSubtarget &RVGPUSubtarget::get(const TargetMachine &TM, const Function &F) {$/;"	f	class:RVGPUSubtarget	typeref:typename:const RVGPUSubtarget &
get32BitAddressHighBits	RVMachineFunctionInfo.h	/^  uint32_t get32BitAddressHighBits() const {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:uint32_t
get32BitRegister	RVRegisterInfo.cpp	/^MCPhysReg RVRegisterInfo::get32BitRegister(MCPhysReg Reg) const {$/;"	f	class:RVRegisterInfo	typeref:typename:MCPhysReg
get64BitInstrCost	RVGPUTargetTransformInfo.cpp	/^int GCNTTIImpl::get64BitInstrCost(TTI::TargetCostKind CostKind) const {$/;"	f	class:GCNTTIImpl	typeref:typename:int
getAGPRClassForBitWidth	RVRegisterInfo.cpp	/^RVRegisterInfo::getAGPRClassForBitWidth(unsigned BitWidth) const {$/;"	f	class:RVRegisterInfo	typeref:typename:const TargetRegisterClass *
getAGPRNum	GCNRegPressure.h	/^  unsigned getAGPRNum() const { return Value[AGPR32]; }$/;"	f	struct:llvm::GCNRegPressure	typeref:typename:unsigned
getAGPROpMapping	RVGPURegisterBankInfo.cpp	/^RVGPURegisterBankInfo::getAGPROpMapping(Register Reg,$/;"	f	class:RVGPURegisterBankInfo	typeref:typename:const RegisterBankInfo::ValueMapping *
getAGPRSpillRestoreOpcode	RVInstrInfo.cpp	/^static unsigned getAGPRSpillRestoreOpcode(unsigned Size) {$/;"	f	typeref:typename:unsigned	file:
getAGPRSpillSaveOpcode	RVInstrInfo.cpp	/^static unsigned getAGPRSpillSaveOpcode(unsigned Size) {$/;"	f	typeref:typename:unsigned	file:
getAGPRSpillVGPRs	RVMachineFunctionInfo.h	/^  ArrayRef<MCPhysReg> getAGPRSpillVGPRs() const {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:ArrayRef<MCPhysReg>
getAVOperandEncoding	MCTargetDesc/RVGPUMCCodeEmitter.cpp	/^void RVGPUMCCodeEmitter::getAVOperandEncoding($/;"	f	class:RVGPUMCCodeEmitter	typeref:typename:void
getAVSpillRestoreOpcode	RVInstrInfo.cpp	/^static unsigned getAVSpillRestoreOpcode(unsigned Size) {$/;"	f	typeref:typename:unsigned	file:
getAVSpillSaveOpcode	RVInstrInfo.cpp	/^static unsigned getAVSpillSaveOpcode(unsigned Size) {$/;"	f	typeref:typename:unsigned	file:
getAbs	SIPeepholeSDWA.cpp	/^  bool getAbs() const { return Abs; }$/;"	f	class:__anon00bd52b30111::SDWASrcOperand	typeref:typename:bool	file:
getAccessQualifier	RVGPUHSAMetadataStreamer.cpp	/^MetadataStreamerMsgPackV4::getAccessQualifier(StringRef AccQual) const {$/;"	f	class:llvm::RVGPU::HSRV::MetadataStreamerMsgPackV4	typeref:typename:std::optional<StringRef>
getAddNoCarry	RVInstrInfo.cpp	/^MachineInstrBuilder RVInstrInfo::getAddNoCarry(MachineBasicBlock &MBB,$/;"	f	class:RVInstrInfo	typeref:typename:MachineInstrBuilder
getAddNoCarry	RVInstrInfo.cpp	/^RVInstrInfo::getAddNoCarry(MachineBasicBlock &MBB,$/;"	f	class:RVInstrInfo	typeref:typename:MachineInstrBuilder
getAddOneOp	RVGPUISelLowering.cpp	/^static SDValue getAddOneOp(const SDNode *V) {$/;"	f	typeref:typename:SDValue	file:
getAddrModeArguments	RVISelLowering.cpp	/^bool RVTargetLowering::getAddrModeArguments(IntrinsicInst *II,$/;"	f	class:RVTargetLowering	typeref:typename:bool
getAddrModeInfo	RVGPUInstructionSelector.cpp	/^void RVGPUInstructionSelector::getAddrModeInfo(const MachineInstr &Load,$/;"	f	class:RVGPUInstructionSelector	typeref:typename:void
getAddrSizeMIMGOp	Utils/RVGPUBaseInfo.cpp	/^unsigned getAddrSizeMIMGOp(const MIMGBaseOpcodeInfo *BaseOpcode,$/;"	f	namespace:llvm::RVGPU	typeref:typename:unsigned
getAddrSpaceFromEPtrKind	RVGPULibFunc.h	/^  static unsigned getAddrSpaceFromEPtrKind(unsigned Kind) {$/;"	f	class:llvm::RVGPULibFuncBase	typeref:typename:unsigned
getAddressSpaceForPseudoSourceKind	RVGPUTargetMachine.cpp	/^RVGPUTargetMachine::getAddressSpaceForPseudoSourceKind(unsigned Kind) const {$/;"	f	class:RVGPUTargetMachine	typeref:typename:unsigned
getAddressSpaceQualifier	RVGPUHSAMetadataStreamer.cpp	/^std::optional<StringRef> MetadataStreamerMsgPackV4::getAddressSpaceQualifier($/;"	f	class:llvm::RVGPU::HSRV::MetadataStreamerMsgPackV4	typeref:typename:std::optional<StringRef>
getAddressableLocalMemorySize	RVGPUSubtarget.h	/^  unsigned getAddressableLocalMemorySize() const {$/;"	f	class:llvm::RVGPUSubtarget	typeref:typename:unsigned
getAddressableLocalMemorySize	Utils/RVGPUBaseInfo.cpp	/^unsigned getAddressableLocalMemorySize(const MCSubtargetInfo *STI) {$/;"	f	namespace:llvm::RVGPU::IsaInfo	typeref:typename:unsigned
getAddressableNumSGPRs	GCNSubtarget.h	/^  unsigned getAddressableNumSGPRs() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:unsigned
getAddressableNumSGPRs	Utils/RVGPUBaseInfo.cpp	/^unsigned getAddressableNumSGPRs(const MCSubtargetInfo *STI) {$/;"	f	namespace:llvm::RVGPU::IsaInfo	typeref:typename:unsigned
getAddressableNumVGPRs	GCNSubtarget.h	/^  unsigned getAddressableNumVGPRs() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:unsigned
getAddressableNumVGPRs	Utils/RVGPUBaseInfo.cpp	/^unsigned getAddressableNumVGPRs(const MCSubtargetInfo *STI) {$/;"	f	namespace:llvm::RVGPU::IsaInfo	typeref:typename:unsigned
getAddressesOfVariablesInKernel	RVGPULowerModuleLDSPass.cpp	/^  static Constant *getAddressesOfVariablesInKernel($/;"	f	class:__anoncc7483b30111::RVGPULowerModuleLDS	typeref:typename:Constant *	file:
getAgentOneAddressSpaceSSID	RVGPUMachineModuleInfo.h	/^  SyncScope::ID getAgentOneAddressSpaceSSID() const {$/;"	f	class:llvm::RVGPUMachineModuleInfo	typeref:typename:SyncScope::ID
getAgentSSID	RVGPUMachineModuleInfo.h	/^  SyncScope::ID getAgentSSID() const {$/;"	f	class:llvm::RVGPUMachineModuleInfo	typeref:typename:SyncScope::ID
getAgprClassId	Disassembler/RVGPUDisassembler.cpp	/^unsigned RVGPUDisassembler::getAgprClassId(const OpWidthTy Width) const {$/;"	f	class:RVGPUDisassembler	typeref:typename:unsigned
getAlign	Utils/RVGPUMemoryUtils.cpp	/^Align getAlign(DataLayout const &DL, const GlobalVariable *GV) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:Align
getAlignedAGPRClassForBitWidth	RVRegisterInfo.cpp	/^getAlignedAGPRClassForBitWidth(unsigned BitWidth) {$/;"	f	typeref:typename:const TargetRegisterClass *	file:
getAlignedAGPRClassID	RVISelLowering.cpp	/^static int getAlignedAGPRClassID(unsigned UnalignedClassID) {$/;"	f	typeref:typename:int	file:
getAlignedHighSGPRForRC	RVRegisterInfo.cpp	/^RVRegisterInfo::getAlignedHighSGPRForRC(const MachineFunction &MF,$/;"	f	class:RVRegisterInfo	typeref:typename:MCRegister
getAlignedVGPRClassForBitWidth	RVRegisterInfo.cpp	/^getAlignedVGPRClassForBitWidth(unsigned BitWidth) {$/;"	f	typeref:typename:const TargetRegisterClass *	file:
getAlignedVectorSuperClassForBitWidth	RVRegisterInfo.cpp	/^getAlignedVectorSuperClassForBitWidth(unsigned BitWidth) {$/;"	f	typeref:typename:const TargetRegisterClass *	file:
getAlignmentForImplicitArgPtr	RVGPUSubtarget.h	/^  Align getAlignmentForImplicitArgPtr() const {$/;"	f	class:llvm::RVGPUSubtarget	typeref:typename:Align
getAllAGPRRegMask	RVRegisterInfo.cpp	/^const uint32_t *RVRegisterInfo::getAllAGPRRegMask() const {$/;"	f	class:RVRegisterInfo	typeref:typename:const uint32_t *
getAllAllocatableSRegMask	RVRegisterInfo.cpp	/^const uint32_t *RVRegisterInfo::getAllAllocatableSRegMask() const {$/;"	f	class:RVRegisterInfo	typeref:typename:const uint32_t *
getAllSGPR128	RVRegisterInfo.cpp	/^RVRegisterInfo::getAllSGPR128(const MachineFunction &MF) const {$/;"	f	class:RVRegisterInfo	typeref:typename:ArrayRef<MCPhysReg>
getAllSGPR32	RVRegisterInfo.cpp	/^RVRegisterInfo::getAllSGPR32(const MachineFunction &MF) const {$/;"	f	class:RVRegisterInfo	typeref:typename:ArrayRef<MCPhysReg>
getAllSGPR64	RVRegisterInfo.cpp	/^RVRegisterInfo::getAllSGPR64(const MachineFunction &MF) const {$/;"	f	class:RVRegisterInfo	typeref:typename:ArrayRef<MCPhysReg>
getAllScratchSGPRCopyDstRegs	RVMachineFunctionInfo.h	/^  void getAllScratchSGPRCopyDstRegs(SmallVectorImpl<Register> &Regs) const {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:void
getAllVGPRRegMask	RVRegisterInfo.cpp	/^const uint32_t *RVRegisterInfo::getAllVGPRRegMask() const {$/;"	f	class:RVRegisterInfo	typeref:typename:const uint32_t *
getAllVariants	AsmParser/RVGPUAsmParser.cpp	/^static ArrayRef<unsigned> getAllVariants() {$/;"	f	typeref:typename:ArrayRef<unsigned>	file:
getAllVectorRegMask	RVRegisterInfo.cpp	/^const uint32_t *RVRegisterInfo::getAllVectorRegMask() const {$/;"	f	class:RVRegisterInfo	typeref:typename:const uint32_t *
getAllocatableAndAlignedRegClassMask	GCNRewritePartialRegUses.cpp	/^const BitVector &GCNRewritePartialRegUses::getAllocatableAndAlignedRegClassMask($/;"	f	class:GCNRewritePartialRegUses	typeref:typename:const BitVector &
getAnalysisUsage	GCNCreateVOPD.cpp	/^  void getAnalysisUsage(AnalysisUsage &AU) const override {$/;"	f	class:__anon7e59fb9b0111::GCNCreateVOPD	typeref:typename:void	file:
getAnalysisUsage	GCNDPPCombine.cpp	/^  void getAnalysisUsage(AnalysisUsage &AU) const override {$/;"	f	class:__anon46a5cf8f0111::GCNDPPCombine	typeref:typename:void	file:
getAnalysisUsage	GCNNSAReassign.cpp	/^  void getAnalysisUsage(AnalysisUsage &AU) const override {$/;"	f	class:__anon7e838c8c0111::GCNNSAReassign	typeref:typename:void	file:
getAnalysisUsage	GCNPreRALongBranchReg.cpp	/^  void getAnalysisUsage(AnalysisUsage &AU) const override {$/;"	f	class:__anon4605b2240111::GCNPreRALongBranchReg	typeref:typename:void	file:
getAnalysisUsage	GCNPreRAOptimizations.cpp	/^  void getAnalysisUsage(AnalysisUsage &AU) const override {$/;"	f	class:__anon3997f4420111::GCNPreRAOptimizations	typeref:typename:void	file:
getAnalysisUsage	GCNRegPressure.h	/^  void getAnalysisUsage(AnalysisUsage &AU) const override {$/;"	f	struct:llvm::GCNRegPressurePrinter	typeref:typename:void
getAnalysisUsage	GCNRewritePartialRegUses.cpp	/^  void getAnalysisUsage(AnalysisUsage &AU) const override {$/;"	f	class:__anon37bf8c3b0111::GCNRewritePartialRegUses	typeref:typename:void	file:
getAnalysisUsage	RVGPUAliasAnalysis.cpp	/^void RVGPUAAWrapperPass::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:RVGPUAAWrapperPass	typeref:typename:void
getAnalysisUsage	RVGPUAlwaysInlinePass.cpp	/^  void getAnalysisUsage(AnalysisUsage &AU) const override {$/;"	f	class:__anonad1ccdb10111::RVGPUAlwaysInline	typeref:typename:void	file:
getAnalysisUsage	RVGPUAnnotateKernelFeatures.cpp	/^  void getAnalysisUsage(AnalysisUsage &AU) const override {$/;"	f	class:__anondc582c840111::RVGPUAnnotateKernelFeatures	typeref:typename:void	file:
getAnalysisUsage	RVGPUAnnotateUniformValues.cpp	/^  void getAnalysisUsage(AnalysisUsage &AU) const override {$/;"	f	class:__anon9c77d1d40111::RVGPUAnnotateUniformValues	typeref:typename:void	file:
getAnalysisUsage	RVGPUArgumentUsageInfo.h	/^  void getAnalysisUsage(AnalysisUsage &AU) const override {$/;"	f	class:llvm::RVGPUArgumentUsageInfo	typeref:typename:void
getAnalysisUsage	RVGPUAsmPrinter.cpp	/^void RVGPUAsmPrinter::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:RVGPUAsmPrinter	typeref:typename:void
getAnalysisUsage	RVGPUAtomicOptimizer.cpp	/^  void getAnalysisUsage(AnalysisUsage &AU) const override {$/;"	f	class:__anon7bca098a0111::RVGPUAtomicOptimizer	typeref:typename:void	file:
getAnalysisUsage	RVGPUAttributor.cpp	/^  void getAnalysisUsage(AnalysisUsage &AU) const override {$/;"	f	class:__anon512e119a0111::RVGPUAttributorLegacy	typeref:typename:void	file:
getAnalysisUsage	RVGPUCodeGenPrepare.cpp	/^  void getAnalysisUsage(AnalysisUsage &AU) const override {$/;"	f	class:__anond35e324e0111::RVGPUCodeGenPrepare	typeref:typename:void	file:
getAnalysisUsage	RVGPUGlobalISelDivergenceLowering.cpp	/^  void getAnalysisUsage(AnalysisUsage &AU) const override {$/;"	f	class:__anon4d1a276b0111::RVGPUGlobalISelDivergenceLowering	typeref:typename:void	file:
getAnalysisUsage	RVGPUISelDAGToDAG.cpp	/^void RVGPUDAGToDAGISel::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:void
getAnalysisUsage	RVGPUInsertDelayAlu.cpp	/^  void getAnalysisUsage(AnalysisUsage &AU) const override {$/;"	f	class:__anonc7296b900111::RVGPUInsertDelayAlu	typeref:typename:void	file:
getAnalysisUsage	RVGPULateCodeGenPrepare.cpp	/^  void getAnalysisUsage(AnalysisUsage &AU) const override {$/;"	f	class:__anon4d9375140111::RVGPULateCodeGenPrepare	typeref:typename:void	file:
getAnalysisUsage	RVGPULowerKernelArguments.cpp	/^  void getAnalysisUsage(AnalysisUsage &AU) const override {$/;"	f	class:__anonf85f450a0111::RVGPULowerKernelArguments	typeref:typename:void	file:
getAnalysisUsage	RVGPULowerKernelAttributes.cpp	/^  void getAnalysisUsage(AnalysisUsage &AU) const override {$/;"	f	class:__anon7b93ed1b0111::RVGPULowerKernelAttributes	typeref:typename:void	file:
getAnalysisUsage	RVGPULowerModuleLDSPass.cpp	/^  void getAnalysisUsage(AnalysisUsage &AU) const override {$/;"	f	class:__anoncc7483b30111::RVGPULowerModuleLDSLegacy	typeref:typename:void	file:
getAnalysisUsage	RVGPUMachineCFGStructurizer.cpp	/^  void getAnalysisUsage(AnalysisUsage &AU) const override {$/;"	f	class:__anon1695b1f50311::RVGPUMachineCFGStructurizer	typeref:typename:void	file:
getAnalysisUsage	RVGPUPerfHintAnalysis.h	/^  void getAnalysisUsage(AnalysisUsage &AU) const override {$/;"	f	struct:llvm::RVGPUPerfHintAnalysis	typeref:typename:void
getAnalysisUsage	RVGPUPostLegalizerCombiner.cpp	/^void RVGPUPostLegalizerCombiner::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:RVGPUPostLegalizerCombiner	typeref:typename:void
getAnalysisUsage	RVGPUPreLegalizerCombiner.cpp	/^void RVGPUPreLegalizerCombiner::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:RVGPUPreLegalizerCombiner	typeref:typename:void
getAnalysisUsage	RVGPUPromoteAlloca.cpp	/^  void getAnalysisUsage(AnalysisUsage &AU) const override {$/;"	f	class:__anonea904d1c0111::RVGPUPromoteAlloca	typeref:typename:void	file:
getAnalysisUsage	RVGPUPromoteAlloca.cpp	/^  void getAnalysisUsage(AnalysisUsage &AU) const override {$/;"	f	class:__anonea904d1c0111::RVGPUPromoteAllocaToVector	typeref:typename:void	file:
getAnalysisUsage	RVGPUPromoteKernelArguments.cpp	/^  void getAnalysisUsage(AnalysisUsage &AU) const override {$/;"	f	class:__anon281388e70111::RVGPUPromoteKernelArguments	typeref:typename:void	file:
getAnalysisUsage	RVGPURegBankCombiner.cpp	/^void RVGPURegBankCombiner::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:RVGPURegBankCombiner	typeref:typename:void
getAnalysisUsage	RVGPURegBankSelect.cpp	/^void RVGPURegBankSelect::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:RVGPURegBankSelect	typeref:typename:void
getAnalysisUsage	RVGPURemoveIncompatibleFunctions.cpp	/^  void getAnalysisUsage(AnalysisUsage &AU) const override {}$/;"	f	class:__anonbd23f2080111::RVGPURemoveIncompatibleFunctions	typeref:typename:void	file:
getAnalysisUsage	RVGPUResourceUsageAnalysis.h	/^  void getAnalysisUsage(AnalysisUsage &AU) const override {$/;"	f	struct:llvm::RVGPUResourceUsageAnalysis	typeref:typename:void
getAnalysisUsage	RVGPURewriteOutArguments.cpp	/^  void getAnalysisUsage(AnalysisUsage &AU) const override {$/;"	f	class:__anon63899d5a0111::RVGPURewriteOutArguments	typeref:typename:void	file:
getAnalysisUsage	RVGPURewriteUndefForPHI.cpp	/^  void getAnalysisUsage(AnalysisUsage &AU) const override {$/;"	f	class:__anon56776a060111::RVGPURewriteUndefForPHILegacy	typeref:typename:void	file:
getAnalysisUsage	SIAnnotateControlFlow.cpp	/^  void getAnalysisUsage(AnalysisUsage &AU) const override {$/;"	f	class:__anond71df4850111::SIAnnotateControlFlow	typeref:typename:void	file:
getAnalysisUsage	SIFixSGPRCopies.cpp	/^  void getAnalysisUsage(AnalysisUsage &AU) const override {$/;"	f	class:__anond27816180111::SIFixSGPRCopies	typeref:typename:void	file:
getAnalysisUsage	SIFixVGPRCopies.cpp	/^  void getAnalysisUsage(AnalysisUsage &AU) const override {$/;"	f	class:__anon8438c2fb0111::SIFixVGPRCopies	typeref:typename:void	file:
getAnalysisUsage	SIFoldOperands.cpp	/^  void getAnalysisUsage(AnalysisUsage &AU) const override {$/;"	f	class:__anon07e514130111::SIFoldOperands	typeref:typename:void	file:
getAnalysisUsage	SIFormMemoryClauses.cpp	/^  void getAnalysisUsage(AnalysisUsage &AU) const override {$/;"	f	class:__anon8c5c3e4f0111::SIFormMemoryClauses	typeref:typename:void	file:
getAnalysisUsage	SIInsertHardClauses.cpp	/^  void getAnalysisUsage(AnalysisUsage &AU) const override {$/;"	f	class:__anon09538a560111::SIInsertHardClauses	typeref:typename:void	file:
getAnalysisUsage	SIInsertWaitcnts.cpp	/^  void getAnalysisUsage(AnalysisUsage &AU) const override {$/;"	f	class:__anona6cbb7940211::SIInsertWaitcnts	typeref:typename:void	file:
getAnalysisUsage	SILateBranchLowering.cpp	/^  void getAnalysisUsage(AnalysisUsage &AU) const override {$/;"	f	class:__anon4aa55dad0111::SILateBranchLowering	typeref:typename:void	file:
getAnalysisUsage	SILoadStoreOptimizer.cpp	/^  void getAnalysisUsage(AnalysisUsage &AU) const override {$/;"	f	class:__anon677101620111::SILoadStoreOptimizer	typeref:typename:void	file:
getAnalysisUsage	SILowerControlFlow.cpp	/^  void getAnalysisUsage(AnalysisUsage &AU) const override {$/;"	f	class:__anon0ce7c3340111::SILowerControlFlow	typeref:typename:void	file:
getAnalysisUsage	SILowerI1Copies.cpp	/^  void getAnalysisUsage(AnalysisUsage &AU) const override {$/;"	f	class:__anone16a92980111::SILowerI1Copies	typeref:typename:void	file:
getAnalysisUsage	SILowerSGPRSpills.cpp	/^  void getAnalysisUsage(AnalysisUsage &AU) const override {$/;"	f	class:__anon4be335ae0111::SILowerSGPRSpills	typeref:typename:void	file:
getAnalysisUsage	SILowerWWMCopies.cpp	/^  void getAnalysisUsage(AnalysisUsage &AU) const override {$/;"	f	class:__anon4731d9190111::SILowerWWMCopies	typeref:typename:void	file:
getAnalysisUsage	SIMemoryLegalizer.cpp	/^  void getAnalysisUsage(AnalysisUsage &AU) const override {$/;"	f	class:__anon46517b8a0111::SIMemoryLegalizer	typeref:typename:void	file:
getAnalysisUsage	SIModeRegister.cpp	/^  void getAnalysisUsage(AnalysisUsage &AU) const override {$/;"	f	class:__anon070b45bc0111::SIModeRegister	typeref:typename:void	file:
getAnalysisUsage	SIOptimizeExecMasking.cpp	/^  void getAnalysisUsage(AnalysisUsage &AU) const override {$/;"	f	class:__anon15773df20111::SIOptimizeExecMasking	typeref:typename:void	file:
getAnalysisUsage	SIOptimizeExecMaskingPreRA.cpp	/^  void getAnalysisUsage(AnalysisUsage &AU) const override {$/;"	f	class:__anon5760078c0111::SIOptimizeExecMaskingPreRA	typeref:typename:void	file:
getAnalysisUsage	SIOptimizeVGPRLiveRange.cpp	/^  void getAnalysisUsage(AnalysisUsage &AU) const override {$/;"	f	class:__anon3fc4a09f0111::SIOptimizeVGPRLiveRange	typeref:typename:void	file:
getAnalysisUsage	SIPeepholeSDWA.cpp	/^  void getAnalysisUsage(AnalysisUsage &AU) const override {$/;"	f	class:__anon00bd52b30111::SIPeepholeSDWA	typeref:typename:void	file:
getAnalysisUsage	SIPostRABundler.cpp	/^  void getAnalysisUsage(AnalysisUsage &AU) const override {$/;"	f	class:__anona97e3cd70111::SIPostRABundler	typeref:typename:void	file:
getAnalysisUsage	SIPreAllocateWWMRegs.cpp	/^  void getAnalysisUsage(AnalysisUsage &AU) const override {$/;"	f	class:__anon37f997ca0111::SIPreAllocateWWMRegs	typeref:typename:void	file:
getAnalysisUsage	SIShrinkInstructions.cpp	/^  void getAnalysisUsage(AnalysisUsage &AU) const override {$/;"	f	class:__anon665027960111::SIShrinkInstructions	typeref:typename:void	file:
getAnalysisUsage	SIWholeQuadMode.cpp	/^  void getAnalysisUsage(AnalysisUsage &AU) const override {$/;"	f	class:__anon41aff2810111::SIWholeQuadMode	typeref:typename:void	file:
getAnyAGPRClassForBitWidth	RVRegisterInfo.cpp	/^getAnyAGPRClassForBitWidth(unsigned BitWidth) {$/;"	f	typeref:typename:const TargetRegisterClass *	file:
getAnyVGPRClassForBitWidth	RVRegisterInfo.cpp	/^getAnyVGPRClassForBitWidth(unsigned BitWidth) {$/;"	f	typeref:typename:const TargetRegisterClass *	file:
getAnyVectorSuperClassForBitWidth	RVRegisterInfo.cpp	/^getAnyVectorSuperClassForBitWidth(unsigned BitWidth) {$/;"	f	typeref:typename:const TargetRegisterClass *	file:
getArchNameFromElfMach	MCTargetDesc/RVGPUTargetStreamer.cpp	/^StringRef RVGPUTargetStreamer::getArchNameFromElfMach(unsigned ElfMach) {$/;"	f	class:RVGPUTargetStreamer	typeref:typename:StringRef
getArgInfo	RVMachineFunctionInfo.h	/^  RVGPUFunctionArgInfo &getArgInfo() {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:RVGPUFunctionArgInfo &
getArgInfo	RVMachineFunctionInfo.h	/^  const RVGPUFunctionArgInfo &getArgInfo() const {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:const RVGPUFunctionArgInfo &
getArgType	RVGPULibCalls.cpp	/^static inline RVGPULibFunc::EType getArgType(const RVGPULibFunc& FInfo) {$/;"	f	typeref:typename:RVGPULibFunc::EType	file:
getArgumentTypeAlign	RVGPUHSAMetadataStreamer.cpp	/^static std::pair<Type *, Align> getArgumentTypeAlign(const Argument &Arg,$/;"	f	typeref:typename:std::pair<Type *,Align>	file:
getArithmeticInstrCost	RVGPUTargetTransformInfo.cpp	/^InstructionCost GCNTTIImpl::getArithmeticInstrCost($/;"	f	class:GCNTTIImpl	typeref:typename:InstructionCost
getArithmeticReductionCost	RVGPUTargetTransformInfo.cpp	/^GCNTTIImpl::getArithmeticReductionCost(unsigned Opcode, VectorType *Ty,$/;"	f	class:GCNTTIImpl	typeref:typename:InstructionCost
getArtifactRegBank	RVGPUInstructionSelector.cpp	/^const RegisterBank *RVGPUInstructionSelector::getArtifactRegBank($/;"	f	class:RVGPUInstructionSelector	typeref:typename:const RegisterBank *
getAsConstantStr	RVGPUPrintfRuntimeBinding.cpp	/^static StringRef getAsConstantStr(Value *V) {$/;"	f	typeref:typename:StringRef	file:
getAsStr	RVGPUAttributor.cpp	/^  const std::string getAsStr(Attributor *) const override {$/;"	f	struct:__anon512e119a0111::AARVAttributesFunction	typeref:typename:const std::string	file:
getAsStr	RVGPUAttributor.cpp	/^  const std::string getAsStr(Attributor *) const override {$/;"	f	struct:__anon512e119a0111::AARVSizeRangeAttribute	typeref:typename:const std::string	file:
getAsStr	RVGPUAttributor.cpp	/^  const std::string getAsStr(Attributor *) const override {$/;"	f	struct:__anon512e119a0111::AAUniformWorkGroupSizeFunction	typeref:typename:const std::string	file:
getAsVgpr	RVGPURegBankCombiner.cpp	/^Register RVGPURegBankCombinerImpl::getAsVgpr(Register Reg) const {$/;"	f	class:__anon00ae19330111::RVGPURegBankCombinerImpl	typeref:typename:Register
getAsmOperandConstVal	RVISelLowering.cpp	/^bool RVTargetLowering::getAsmOperandConstVal(SDValue Op, uint64_t &Val) const {$/;"	f	class:RVTargetLowering	typeref:typename:bool
getAssignFnsForCC	RVGPUCallLowering.cpp	/^getAssignFnsForCC(CallingConv::ID CC, const RVTargetLowering &TLI) {$/;"	f	typeref:typename:std::pair<CCAssignFn *,CCAssignFn * >	file:
getAssumedAddrSpace	RVGPUTargetMachine.cpp	/^unsigned RVGPUTargetMachine::getAssumedAddrSpace(const Value *V) const {$/;"	f	class:RVGPUTargetMachine	typeref:typename:unsigned
getAtomicCmpxchgOrRmwInfo	SIMemoryLegalizer.cpp	/^std::optional<SIMemOpInfo> SIMemOpAccess::getAtomicCmpxchgOrRmwInfo($/;"	f	class:SIMemOpAccess	typeref:typename:std::optional<SIMemOpInfo>
getAtomicFenceInfo	SIMemoryLegalizer.cpp	/^SIMemOpAccess::getAtomicFenceInfo(const MachineBasicBlock::iterator &MI) const {$/;"	f	class:SIMemOpAccess	typeref:typename:std::optional<SIMemOpInfo>
getBB	SIMachineScheduler.h	/^  MachineBasicBlock *getBB() { return BB; }$/;"	f	class:llvm::SIScheduleDAGMI	typeref:typename:MachineBasicBlock *
getBBLiveInMap	GCNSchedStrategy.cpp	/^GCNScheduleDAGMILive::getBBLiveInMap() const {$/;"	f	class:GCNScheduleDAGMILive	typeref:typename:DenseMap<MachineInstr *,GCNRPTracker::LiveRegSet>
getBBSelectRegIn	RVGPUMachineCFGStructurizer.cpp	/^  unsigned getBBSelectRegIn() { return BBSelectRegIn; }$/;"	f	class:__anon1695b1f50211::MRT	typeref:typename:unsigned	file:
getBBSelectRegIn	RVGPUMachineCFGStructurizer.cpp	/^unsigned LinearizedRegion::getBBSelectRegIn() {$/;"	f	class:LinearizedRegion	typeref:typename:unsigned
getBBSelectRegOut	RVGPUMachineCFGStructurizer.cpp	/^  unsigned getBBSelectRegOut() { return BBSelectRegOut; }$/;"	f	class:__anon1695b1f50211::MRT	typeref:typename:unsigned	file:
getBBSelectRegOut	RVGPUMachineCFGStructurizer.cpp	/^unsigned LinearizedRegion::getBBSelectRegOut() {$/;"	f	class:LinearizedRegion	typeref:typename:unsigned
getBFE32	RVGPUISelDAGToDAG.cpp	/^SDNode *RVGPUDAGToDAGISel::getBFE32(bool IsSigned, const SDLoc &DL,$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:SDNode *
getBLGPLoc	AsmParser/RVGPUAsmParser.cpp	/^SMLoc RVGPUAsmParser::getBLGPLoc(const OperandVector &Operands) const {$/;"	f	class:RVGPUAsmParser	typeref:typename:SMLoc
getBaseElementBitWidth	RVGPUCodeGenPrepare.cpp	/^unsigned RVGPUCodeGenPrepareImpl::getBaseElementBitWidth(const Type *T) const {$/;"	f	class:RVGPUCodeGenPrepareImpl	typeref:typename:unsigned
getBaseMaxNumSGPRs	RVGPUSubtarget.cpp	/^unsigned GCNSubtarget::getBaseMaxNumSGPRs($/;"	f	class:GCNSubtarget	typeref:typename:unsigned
getBaseMaxNumVGPRs	RVGPUSubtarget.cpp	/^unsigned GCNSubtarget::getBaseMaxNumVGPRs($/;"	f	class:GCNSubtarget	typeref:typename:unsigned
getBasePtrIndex	RVISelLowering.cpp	/^static unsigned getBasePtrIndex(const MemSDNode *N) {$/;"	f	typeref:typename:unsigned	file:
getBasePtrIntrinsic	RVGPULowerKernelAttributes.cpp	/^Function *getBasePtrIntrinsic(Module &M, bool IsV5OrAbove) {$/;"	f	namespace:__anon7b93ed1b0111	typeref:typename:Function *
getBaseRegister	RVRegisterInfo.cpp	/^Register RVRegisterInfo::getBaseRegister() const { return RVGPU::SGPR34; }$/;"	f	class:RVRegisterInfo	typeref:typename:Register
getBaseReservedNumSGPRs	RVGPUSubtarget.cpp	/^GCNSubtarget::getBaseReservedNumSGPRs(const bool HasFlatScratch) const {$/;"	f	class:GCNSubtarget	typeref:typename:unsigned
getBaseWithConstantOffset	RVGPUGlobalISelUtils.cpp	/^RVGPU::getBaseWithConstantOffset(MachineRegisterInfo &MRI, Register Reg,$/;"	f	class:RVGPU	typeref:typename:std::pair<Register,unsigned>
getBaseWithConstantOffset	RVGPURegisterBankInfo.cpp	/^getBaseWithConstantOffset(MachineRegisterInfo &MRI, Register Reg) {$/;"	f	typeref:typename:std::pair<Register,unsigned>	file:
getBaseWithOffsetUsingSplitOR	RVGPUISelDAGToDAG.cpp	/^static bool getBaseWithOffsetUsingSplitOR(SelectionDAG &DAG, SDValue Addr,$/;"	f	typeref:typename:bool	file:
getBitMask	Utils/RVGPUBaseInfo.cpp	/^unsigned getBitMask(unsigned Shift, unsigned Width) {$/;"	f	namespace:__anonc82e9e910111	typeref:typename:unsigned
getBitcastRegisterType	RVGPULegalizerInfo.cpp	/^static LLT getBitcastRegisterType(const LLT Ty) {$/;"	f	typeref:typename:LLT	file:
getBlockDestinations	SIPreEmitPeephole.cpp	/^bool SIPreEmitPeephole::getBlockDestinations($/;"	f	class:SIPreEmitPeephole	typeref:typename:bool
getBlocks	SIMachineScheduler.cpp	/^SIScheduleBlockCreator::getBlocks(SISchedulerBlockCreatorVariant BlockVariant) {$/;"	f	class:SIScheduleBlockCreator	typeref:typename:SIScheduleBlocks
getBlocks	SIMachineScheduler.h	/^  std::vector<SIScheduleBlock*> getBlocks() { return BlocksScheduled; }$/;"	f	class:llvm::SIScheduleBlockScheduler	typeref:typename:std::vector<SIScheduleBlock * >
getBoolRC	GCNSubtarget.h	/^  const TargetRegisterClass *getBoolRC() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:const TargetRegisterClass *
getBoolRC	RVRegisterInfo.h	/^  const TargetRegisterClass *getBoolRC() const {$/;"	f	class:llvm::RVRegisterInfo	typeref:typename:const TargetRegisterClass *
getBottomRoots	GCNIterativeScheduler.cpp	/^  ArrayRef<SUnit*> getBottomRoots() const {$/;"	f	class:GCNIterativeScheduler::BuildDAG	typeref:typename:ArrayRef<SUnit * >	file:
getBranchDestBlock	RVInstrInfo.cpp	/^RVInstrInfo::getBranchDestBlock(const MachineInstr &MI) const {$/;"	f	class:RVInstrInfo	typeref:typename:MachineBasicBlock *
getBranchOpcode	RVInstrInfo.cpp	/^unsigned RVInstrInfo::getBranchOpcode(RVInstrInfo::BranchPredicate Cond) {$/;"	f	class:RVInstrInfo	typeref:typename:unsigned
getBranchPredicate	RVInstrInfo.cpp	/^RVInstrInfo::BranchPredicate RVInstrInfo::getBranchPredicate(unsigned Opcode) {$/;"	f	class:RVInstrInfo	typeref:typename:RVInstrInfo::BranchPredicate
getBreakDownCost	RVGPURegisterBankInfo.cpp	/^unsigned RVGPURegisterBankInfo::getBreakDownCost($/;"	f	class:RVGPURegisterBankInfo	typeref:typename:unsigned
getBubbles	GCNSchedStrategy.h	/^  unsigned getBubbles() const { return BubbleCycles; }$/;"	f	class:llvm::ScheduleMetrics	typeref:typename:unsigned
getBufferAtomicPseudo	RVGPULegalizerInfo.cpp	/^static unsigned getBufferAtomicPseudo(Intrinsic::ID IntrID) {$/;"	f	typeref:typename:unsigned	file:
getBufferFormatWithCompCount	SILoadStoreOptimizer.cpp	/^static unsigned getBufferFormatWithCompCount(unsigned OldFormat,$/;"	f	typeref:typename:unsigned	file:
getBufferRsrcRegisterType	RVGPULegalizerInfo.cpp	/^static LLT getBufferRsrcRegisterType(const LLT Ty) {$/;"	f	typeref:typename:LLT	file:
getBufferRsrcScalarType	RVGPULegalizerInfo.cpp	/^static LLT getBufferRsrcScalarType(const LLT Ty) {$/;"	f	typeref:typename:LLT	file:
getBuildDwordsVector	RVISelLowering.cpp	/^static SDValue getBuildDwordsVector(SelectionDAG &DAG, SDLoc DL,$/;"	f	typeref:typename:SDValue	file:
getBytesInStackArgArea	RVMachineFunctionInfo.h	/^  unsigned getBytesInStackArgArea() const {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:unsigned
getCFInstrCost	RVGPUTargetTransformInfo.cpp	/^InstructionCost GCNTTIImpl::getCFInstrCost(unsigned Opcode,$/;"	f	class:GCNTTIImpl	typeref:typename:InstructionCost
getCPolKind	AsmParser/RVGPUAsmParser.cpp	/^unsigned RVGPUAsmParser::getCPolKind(StringRef Id, StringRef Mnemo,$/;"	f	class:RVGPUAsmParser	typeref:typename:unsigned
getCSEConfig	RVGPUTargetMachine.cpp	/^std::unique_ptr<CSEConfigBase> llvm::RVGPUPassConfig::getCSEConfig() const {$/;"	f	class:llvm::RVGPUPassConfig	typeref:typename:std::unique_ptr<CSEConfigBase>
getCSRFirstUseCost	RVRegisterInfo.h	/^  unsigned getCSRFirstUseCost() const override {$/;"	f	class:llvm::RVRegisterInfo	typeref:typename:unsigned
getCacheLineSize	RVGPUTargetTransformInfo.h	/^  unsigned getCacheLineSize() const override { return 128; }$/;"	f	class:llvm::GCNTTIImpl	typeref:typename:unsigned
getCallArgsTotalAllocaSize	RVGPUTargetTransformInfo.cpp	/^static unsigned getCallArgsTotalAllocaSize(const CallBase *CB,$/;"	f	typeref:typename:unsigned	file:
getCallLowering	GCNSubtarget.h	/^  const CallLowering *getCallLowering() const override {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:const CallLowering *
getCallOpcode	RVGPUCallLowering.cpp	/^static unsigned getCallOpcode(const MachineFunction &CallerF, bool IsIndirect,$/;"	f	typeref:typename:unsigned	file:
getCallPreservedMask	RVRegisterInfo.cpp	/^const uint32_t *RVRegisterInfo::getCallPreservedMask(const MachineFunction &MF,$/;"	f	class:RVRegisterInfo	typeref:typename:const uint32_t *
getCalleeFunction	RVGPUResourceUsageAnalysis.cpp	/^static const Function *getCalleeFunction(const MachineOperand &Op) {$/;"	f	typeref:typename:INITIALIZE_PASS (RVGPUResourceUsageAnalysis,DEBUG_TYPE,"Function register usage analysis",true,true)const Function *	file:
getCalleeSavedRegs	RVRegisterInfo.cpp	/^const MCPhysReg *RVRegisterInfo::getCalleeSavedRegs($/;"	f	class:RVRegisterInfo	typeref:typename:const MCPhysReg *
getCalleeSavedRegsViaCopy	RVRegisterInfo.cpp	/^RVRegisterInfo::getCalleeSavedRegsViaCopy(const MachineFunction *MF) const {$/;"	f	class:RVRegisterInfo	typeref:typename:const MCPhysReg *
getCallerAllocaCost	RVGPUTargetTransformInfo.cpp	/^unsigned GCNTTIImpl::getCallerAllocaCost(const CallBase *CB,$/;"	f	class:GCNTTIImpl	typeref:typename:unsigned
getCanBeVOPD	Utils/RVGPUBaseInfo.cpp	/^CanBeVOPD getCanBeVOPD(unsigned Opc) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:CanBeVOPD
getCandidatesForLowering	SILowerI1Copies.cpp	/^void Vreg1LoweringHelper::getCandidatesForLowering($/;"	f	class:Vreg1LoweringHelper	typeref:typename:void
getCanonicalConstantFP	RVISelLowering.cpp	/^SDValue RVTargetLowering::getCanonicalConstantFP($/;"	f	class:RVTargetLowering	typeref:typename:SDValue
getChannelFromSubReg	RVRegisterInfo.h	/^  unsigned getChannelFromSubReg(unsigned SubReg) const {$/;"	f	class:llvm::RVRegisterInfo	typeref:typename:unsigned
getChildren	RVGPUMachineCFGStructurizer.cpp	/^  SetVector<MRT *> *getChildren() { return &Children; }$/;"	f	class:__anon1695b1f50211::RegionMRT	typeref:typename:SetVector<MRT * > *	file:
getClampMask	RVInstrInfo.h	/^  uint64_t getClampMask(const MachineInstr &MI) const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:uint64_t
getClearedProperties	SIFormMemoryClauses.cpp	/^  MachineFunctionProperties getClearedProperties() const override {$/;"	f	class:__anon8c5c3e4f0111::SIFormMemoryClauses	typeref:typename:MachineFunctionProperties	file:
getClearedProperties	SILowerSGPRSpills.cpp	/^  MachineFunctionProperties getClearedProperties() const override {$/;"	f	class:__anon4be335ae0111::SILowerSGPRSpills	typeref:typename:MachineFunctionProperties	file:
getClearedProperties	SIOptimizeVGPRLiveRange.cpp	/^  MachineFunctionProperties getClearedProperties() const override {$/;"	f	class:__anon3fc4a09f0111::SIOptimizeVGPRLiveRange	typeref:typename:MachineFunctionProperties	file:
getClearedProperties	SIWholeQuadMode.cpp	/^  MachineFunctionProperties getClearedProperties() const override {$/;"	f	class:__anon41aff2810111::SIWholeQuadMode	typeref:typename:MachineFunctionProperties	file:
getCodeObjectVersion	RVGPUAttributor.cpp	/^  unsigned getCodeObjectVersion() const {$/;"	f	class:__anon512e119a0111::RVGPUInformationCache	typeref:typename:unsigned	file:
getCodeObjectVersion	Utils/RVGPUBaseInfo.cpp	/^unsigned getCodeObjectVersion(const Module &M) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:unsigned
getCommonInstClass	SILoadStoreOptimizer.cpp	/^SILoadStoreOptimizer::getCommonInstClass(const CombineInfo &CI,$/;"	f	class:__anon677101620111::SILoadStoreOptimizer	typeref:typename:InstClassEnum
getCompParsedSrcOperandsNum	Utils/RVGPUBaseInfo.h	/^  unsigned getCompParsedSrcOperandsNum() const {$/;"	f	class:llvm::RVGPU::VOPD::ComponentProps	typeref:typename:unsigned
getCompSrcOperandsNum	Utils/RVGPUBaseInfo.h	/^  unsigned getCompSrcOperandsNum() const { return SrcOperandsNum; }$/;"	f	class:llvm::RVGPU::VOPD::ComponentProps	typeref:typename:unsigned
getCompatibleSubRegClass	RVRegisterInfo.cpp	/^RVRegisterInfo::getCompatibleSubRegClass(const TargetRegisterClass *SuperRC,$/;"	f	class:RVRegisterInfo	typeref:typename:const TargetRegisterClass *
getCompletionActionImplicitArgPosition	Utils/RVGPUBaseInfo.cpp	/^unsigned getCompletionActionImplicitArgPosition(unsigned CodeObjectVersion) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:unsigned
getComputePGMRSrc1	SIProgramInfo.cpp	/^uint64_t SIProgramInfo::getComputePGMRSrc1(const GCNSubtarget &ST) const {$/;"	f	class:SIProgramInfo	typeref:typename:uint64_t
getComputePGMRSrc2	SIProgramInfo.cpp	/^uint64_t SIProgramInfo::getComputePGMRSrc2() const {$/;"	f	class:SIProgramInfo	typeref:typename:uint64_t
getComputeRegisters	Utils/RVGPUPALMetadata.cpp	/^msgpack::MapDocNode RVGPUPALMetadata::getComputeRegisters() {$/;"	f	class:RVGPUPALMetadata	typeref:typename:msgpack::MapDocNode
getConstLoc	AsmParser/RVGPUAsmParser.cpp	/^RVGPUAsmParser::getConstLoc(const OperandVector &Operands) const {$/;"	f	class:RVGPUAsmParser	typeref:typename:SMLoc
getConstantAccess	RVGPUAttributor.cpp	/^  uint8_t getConstantAccess(const Constant *C,$/;"	f	class:__anon512e119a0111::RVGPUInformationCache	typeref:typename:uint8_t	file:
getConstantBusLimit	AsmParser/RVGPUAsmParser.cpp	/^unsigned RVGPUAsmParser::getConstantBusLimit(unsigned Opcode) const {$/;"	f	class:RVGPUAsmParser	typeref:typename:unsigned
getConstantBusLimit	RVGPUSubtarget.cpp	/^unsigned GCNSubtarget::getConstantBusLimit(unsigned Opcode) const {$/;"	f	class:GCNSubtarget	typeref:typename:unsigned
getConstantNegateCost	RVGPUISelLowering.cpp	/^RVGPUTargetLowering::getConstantNegateCost(const ConstantFPSDNode *C) const {$/;"	f	class:RVGPUTargetLowering	typeref:typename:TargetLowering::NegatibleCost
getConstantPermuteMask	RVISelLowering.cpp	/^static uint32_t getConstantPermuteMask(uint32_t C) {$/;"	f	typeref:typename:uint32_t	file:
getConstantValue	RVGPUISelDAGToDAG.h	/^static inline bool getConstantValue(SDValue N, uint32_t &Out) {$/;"	f	namespace:__anon419d0db70111	typeref:typename:bool
getConstantZext32Val	RVGPUInstructionSelector.cpp	/^getConstantZext32Val(Register Reg, const MachineRegisterInfo &MRI) {$/;"	f	typeref:typename:std::optional<uint64_t>	file:
getConstrainedRegClassForOperand	RVRegisterInfo.cpp	/^RVRegisterInfo::getConstrainedRegClassForOperand(const MachineOperand &MO,$/;"	f	class:RVRegisterInfo	typeref:typename:const TargetRegisterClass *
getConstraintType	RVISelLowering.cpp	/^RVTargetLowering::getConstraintType(StringRef Constraint) const {$/;"	f	class:RVTargetLowering	typeref:typename:RVTargetLowering::ConstraintType
getContext	MCTargetDesc/RVGPUTargetStreamer.h	/^  MCContext &getContext() const { return Streamer.getContext(); }$/;"	f	class:llvm::RVGPUTargetStreamer	typeref:typename:MCContext &
getConversionSpecifiers	RVGPUPrintfRuntimeBinding.cpp	/^void RVGPUPrintfRuntimeBindingImpl::getConversionSpecifiers($/;"	f	class:RVGPUPrintfRuntimeBindingImpl	typeref:typename:void
getCopyRegClasses	SIFixSGPRCopies.cpp	/^getCopyRegClasses(const MachineInstr &Copy,$/;"	f	typeref:typename:std::pair<const TargetRegisterClass *,const TargetRegisterClass * >	file:
getCost	SIMachineScheduler.h	/^  int getCost() { return SUnits.size(); }$/;"	f	class:llvm::SIScheduleBlock	typeref:typename:int
getCrossCopyRegClass	RVRegisterInfo.cpp	/^RVRegisterInfo::getCrossCopyRegClass(const TargetRegisterClass *RC) const {$/;"	f	class:RVRegisterInfo	typeref:typename:const TargetRegisterClass *
getCurrentBottom	SIMachineScheduler.h	/^  MachineBasicBlock::iterator getCurrentBottom() { return CurrentBottom; }$/;"	f	class:llvm::SIScheduleDAGMI	typeref:typename:MachineBasicBlock::iterator
getCurrentStage	GCNSchedStrategy.cpp	/^GCNSchedStageID GCNSchedStrategy::getCurrentStage() {$/;"	f	class:GCNSchedStrategy	typeref:typename:GCNSchedStageID
getCurrentTop	SIMachineScheduler.h	/^  MachineBasicBlock::iterator getCurrentTop() { return CurrentTop; }$/;"	f	class:llvm::SIScheduleDAGMI	typeref:typename:MachineBasicBlock::iterator
getDPPOp	GCNDPPCombine.cpp	/^int GCNDPPCombine::getDPPOp(unsigned Op, bool IsShrinkable) const {$/;"	f	class:GCNDPPCombine	typeref:typename:int
getDSFPAtomicOpcode	RVGPULegalizerInfo.cpp	/^static unsigned getDSFPAtomicOpcode(Intrinsic::ID IID) {$/;"	f	typeref:typename:unsigned	file:
getDSShaderTypeValue	RVInstrInfo.cpp	/^unsigned RVInstrInfo::getDSShaderTypeValue(const MachineFunction &MF) {$/;"	f	class:RVInstrInfo	typeref:typename:unsigned
getDX10Clamp	RVGPURegBankCombiner.cpp	/^bool RVGPURegBankCombinerImpl::getDX10Clamp() const {$/;"	f	class:__anon00ae19330111::RVGPURegBankCombinerImpl	typeref:typename:bool
getDataRegClass	SILoadStoreOptimizer.cpp	/^SILoadStoreOptimizer::getDataRegClass(const MachineInstr &MI) const {$/;"	f	class:SILoadStoreOptimizer	typeref:typename:const TargetRegisterClass *
getDefInstr	RVGPUMachineCFGStructurizer.cpp	/^MachineInstr *RVGPUMachineCFGStructurizer::getDefInstr(unsigned Reg) {$/;"	f	class:RVGPUMachineCFGStructurizer	typeref:typename:MachineInstr *
getDefRegMask	GCNRegPressure.cpp	/^static LaneBitmask getDefRegMask(const MachineOperand &MO,$/;"	f	typeref:typename:LaneBitmask	file:
getDefaultCustomOperandEncoding	Utils/RVGPUBaseInfo.cpp	/^static unsigned getDefaultCustomOperandEncoding(const CustomOperandVal *Opr,$/;"	f	namespace:llvm::RVGPU	typeref:typename:unsigned	file:
getDefaultDepCtrEncoding	Utils/RVGPUBaseInfo.cpp	/^int getDefaultDepCtrEncoding(const MCSubtargetInfo &STI) {$/;"	f	namespace:llvm::RVGPU::DepCtr	typeref:typename:int
getDefaultFlatWorkGroupSize	RVGPUSubtarget.cpp	/^RVGPUSubtarget::getDefaultFlatWorkGroupSize(CallingConv::ID CC) const {$/;"	f	class:RVGPUSubtarget	typeref:typename:std::pair<unsigned,unsigned>
getDefaultForCallingConv	SIModeRegisterDefaults.h	/^  static SIModeRegisterDefaults getDefaultForCallingConv(CallingConv::ID CC) {$/;"	f	struct:llvm::SIModeRegisterDefaults	typeref:typename:SIModeRegisterDefaults
getDefaultFormatEncoding	Utils/RVGPUBaseInfo.cpp	/^unsigned getDefaultFormatEncoding(const MCSubtargetInfo &STI) {$/;"	f	namespace:llvm::RVGPU::MTBUFFormat	typeref:typename:unsigned
getDefaultMappingAllVGPR	RVGPURegisterBankInfo.cpp	/^RVGPURegisterBankInfo::getDefaultMappingAllVGPR(const MachineInstr &MI) const {$/;"	f	class:RVGPURegisterBankInfo	typeref:typename:const RegisterBankInfo::InstructionMapping &
getDefaultMappingSOP	RVGPURegisterBankInfo.cpp	/^RVGPURegisterBankInfo::getDefaultMappingSOP(const MachineInstr &MI) const {$/;"	f	class:RVGPURegisterBankInfo	typeref:typename:const RegisterBankInfo::InstructionMapping &
getDefaultMappingVOP	RVGPURegisterBankInfo.cpp	/^RVGPURegisterBankInfo::getDefaultMappingVOP(const MachineInstr &MI) const {$/;"	f	class:RVGPURegisterBankInfo	typeref:typename:const RegisterBankInfo::InstructionMapping &
getDefaultQueueImplicitArgPosition	Utils/RVGPUBaseInfo.cpp	/^unsigned getDefaultQueueImplicitArgPosition(unsigned CodeObjectVersion) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:unsigned
getDefaultRsrcDataFormat	RVInstrInfo.cpp	/^uint64_t RVInstrInfo::getDefaultRsrcDataFormat() const {$/;"	f	class:RVInstrInfo	typeref:typename:uint64_t
getDefaultRvhsaKernelDescriptor	Utils/RVGPUBaseInfo.cpp	/^rvhsa::kernel_descriptor_t getDefaultRvhsaKernelDescriptor($/;"	f	namespace:llvm::RVGPU	typeref:typename:rvhsa::kernel_descriptor_t
getDeferredList	RVInstrInfo.h	/^  SetVector<MachineInstr *> &getDeferredList() { return DeferredList; }$/;"	f	struct:llvm::SIInstrWorklist	typeref:typename:SetVector<MachineInstr * > &
getDelayType	RVGPUInsertDelayAlu.cpp	/^  static DelayType getDelayType(uint64_t TSFlags) {$/;"	f	class:__anonc7296b900111::RVGPUInsertDelayAlu	typeref:typename:DelayType	file:
getDestEquivalentVGPRClass	RVInstrInfo.cpp	/^const TargetRegisterClass *RVInstrInfo::getDestEquivalentVGPRClass($/;"	f	class:RVInstrInfo	typeref:typename:const TargetRegisterClass *
getDfmt	Utils/RVGPUBaseInfo.cpp	/^int64_t getDfmt(const StringRef Name) {$/;"	f	namespace:llvm::RVGPU::MTBUFFormat	typeref:typename:int64_t
getDfmtName	Utils/RVGPUBaseInfo.cpp	/^StringRef getDfmtName(unsigned Id) {$/;"	f	namespace:llvm::RVGPU::MTBUFFormat	typeref:typename:StringRef
getDivNumBits	RVGPUCodeGenPrepare.cpp	/^int RVGPUCodeGenPrepareImpl::getDivNumBits(BinaryOperator &I, Value *Num,$/;"	f	class:RVGPUCodeGenPrepareImpl	typeref:typename:int
getDstSel	SIPeepholeSDWA.cpp	/^  SdwaSel getDstSel() const { return DstSel; }$/;"	f	class:__anon00bd52b30111::SDWADstOperand	typeref:typename:SdwaSel	file:
getDstUnused	SIPeepholeSDWA.cpp	/^  DstUnused getDstUnused() const { return DstUn; }$/;"	f	class:__anon00bd52b30111::SDWADstOperand	typeref:typename:DstUnused	file:
getDynLDSAlign	RVGPUMachineFunction.h	/^  Align getDynLDSAlign() const { return DynLDSAlign; }$/;"	f	class:llvm::RVGPUMachineFunction	typeref:typename:Align
getEFlags	MCTargetDesc/RVGPUTargetStreamer.cpp	/^unsigned RVGPUTargetELFStreamer::getEFlags() {$/;"	f	class:RVGPUTargetELFStreamer	typeref:typename:unsigned
getEFlagsMesa3D	MCTargetDesc/RVGPUTargetStreamer.cpp	/^unsigned RVGPUTargetELFStreamer::getEFlagsMesa3D() {$/;"	f	class:RVGPUTargetELFStreamer	typeref:typename:unsigned
getEFlagsRVGPU	MCTargetDesc/RVGPUTargetStreamer.cpp	/^unsigned RVGPUTargetELFStreamer::getEFlagsRVGPU() {$/;"	f	class:RVGPUTargetELFStreamer	typeref:typename:unsigned
getEFlagsRVHSA	MCTargetDesc/RVGPUTargetStreamer.cpp	/^unsigned RVGPUTargetELFStreamer::getEFlagsRVHSA() {$/;"	f	class:RVGPUTargetELFStreamer	typeref:typename:unsigned
getEFlagsRVPAL	MCTargetDesc/RVGPUTargetStreamer.cpp	/^unsigned RVGPUTargetELFStreamer::getEFlagsRVPAL() {$/;"	f	class:RVGPUTargetELFStreamer	typeref:typename:unsigned
getEFlagsUnknownOS	MCTargetDesc/RVGPUTargetStreamer.cpp	/^unsigned RVGPUTargetELFStreamer::getEFlagsUnknownOS() {$/;"	f	class:RVGPUTargetELFStreamer	typeref:typename:unsigned
getEFlagsV3	MCTargetDesc/RVGPUTargetStreamer.cpp	/^unsigned RVGPUTargetELFStreamer::getEFlagsV3() {$/;"	f	class:RVGPUTargetELFStreamer	typeref:typename:unsigned
getEFlagsV4	MCTargetDesc/RVGPUTargetStreamer.cpp	/^unsigned RVGPUTargetELFStreamer::getEFlagsV4() {$/;"	f	class:RVGPUTargetELFStreamer	typeref:typename:unsigned
getEPtrKindFromAddrSpace	RVGPULibFunc.h	/^  static unsigned getEPtrKindFromAddrSpace(unsigned AS) {$/;"	f	class:llvm::RVGPULibFuncBase	typeref:typename:unsigned
getEUsPerCU	RVGPUSubtarget.h	/^  unsigned getEUsPerCU() const { return EUsPerCU; }$/;"	f	class:llvm::RVGPUSubtarget	typeref:typename:unsigned
getEUsPerCU	Utils/RVGPUBaseInfo.cpp	/^unsigned getEUsPerCU(const MCSubtargetInfo *STI) {$/;"	f	namespace:llvm::RVGPU::IsaInfo	typeref:typename:unsigned
getEffectiveRelocModel	RVGPUTargetMachine.cpp	/^static Reloc::Model getEffectiveRelocModel(std::optional<Reloc::Model> RM) {$/;"	f	typeref:typename:Reloc::Model	file:
getEffectiveWavesPerEU	RVGPUAttributor.cpp	/^  getEffectiveWavesPerEU(const Function &F,$/;"	f	class:__anon512e119a0111::RVGPUInformationCache	typeref:typename:std::pair<unsigned,unsigned>	file:
getEffectiveWavesPerEU	RVGPUSubtarget.cpp	/^std::pair<unsigned, unsigned> RVGPUSubtarget::getEffectiveWavesPerEU($/;"	f	class:RVGPUSubtarget	typeref:typename:std::pair<unsigned,unsigned>
getElementByteSizeValue	RVGPUAsmPrinter.cpp	/^static rv_element_byte_size_t getElementByteSizeValue(unsigned Size) {$/;"	f	typeref:typename:rv_element_byte_size_t	file:
getElfMach	MCTargetDesc/RVGPUTargetStreamer.cpp	/^unsigned RVGPUTargetStreamer::getElfMach(StringRef GPU) {$/;"	f	class:RVGPUTargetStreamer	typeref:typename:unsigned
getElseTarget	SIOptimizeVGPRLiveRange.cpp	/^SIOptimizeVGPRLiveRange::getElseTarget(MachineBasicBlock *MBB) const {$/;"	f	class:SIOptimizeVGPRLiveRange	typeref:typename:MachineBasicBlock *
getEndLoc	AsmParser/RVGPUAsmParser.cpp	/^  SMLoc getEndLoc() const override {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:SMLoc	file:
getEntry	RVGPUMachineCFGStructurizer.cpp	/^  MachineBasicBlock *getEntry() {$/;"	f	class:__anon1695b1f50211::RegionMRT	typeref:typename:MachineBasicBlock *	file:
getEntry	RVGPUMachineCFGStructurizer.cpp	/^MachineBasicBlock *LinearizedRegion::getEntry() { return Entry; }$/;"	f	class:LinearizedRegion	typeref:typename:MachineBasicBlock *
getEntryFunctionReservedScratchRsrcReg	RVFrameLowering.cpp	/^Register RVFrameLowering::getEntryFunctionReservedScratchRsrcReg($/;"	f	class:RVFrameLowering	typeref:typename:Register
getEntrySU	SIMachineScheduler.h	/^  SUnit &getEntrySU() { return EntrySU; }$/;"	f	class:llvm::SIScheduleDAGMI	typeref:typename:SUnit &
getEntryTree	RVGPUMachineCFGStructurizer.cpp	/^  MRT *getEntryTree() { return Children.back(); }$/;"	f	class:__anon1695b1f50211::RegionMRT	typeref:typename:MRT *	file:
getEquivalentAGPRClass	RVRegisterInfo.cpp	/^RVRegisterInfo::getEquivalentAGPRClass(const TargetRegisterClass *SRC) const {$/;"	f	class:RVRegisterInfo	typeref:typename:const TargetRegisterClass *
getEquivalentMemType	RVGPUISelLowering.cpp	/^EVT RVGPUTargetLowering::getEquivalentMemType(LLVMContext &Ctx, EVT VT) {$/;"	f	class:RVGPUTargetLowering	typeref:typename:EVT
getEquivalentSGPRClass	RVRegisterInfo.cpp	/^RVRegisterInfo::getEquivalentSGPRClass(const TargetRegisterClass *VRC) const {$/;"	f	class:RVRegisterInfo	typeref:typename:const TargetRegisterClass *
getEquivalentVGPRClass	RVRegisterInfo.cpp	/^RVRegisterInfo::getEquivalentVGPRClass(const TargetRegisterClass *SRC) const {$/;"	f	class:RVRegisterInfo	typeref:typename:const TargetRegisterClass *
getExec	RVRegisterInfo.cpp	/^MCRegister RVRegisterInfo::getExec() const {$/;"	f	class:RVRegisterInfo	typeref:typename:MCRegister
getExit	RVGPUMachineCFGStructurizer.cpp	/^  MachineBasicBlock *getExit() {$/;"	f	class:__anon1695b1f50211::RegionMRT	typeref:typename:MachineBasicBlock *	file:
getExit	RVGPUMachineCFGStructurizer.cpp	/^MachineBasicBlock *LinearizedRegion::getExit() { return Exit; }$/;"	f	class:LinearizedRegion	typeref:typename:MachineBasicBlock *
getExitSU	SIMachineScheduler.h	/^  SUnit& getExitSU() { return ExitSU; }$/;"	f	class:llvm::SIScheduleDAGMI	typeref:typename:SUnit &
getExitTree	RVGPUMachineCFGStructurizer.cpp	/^  MRT *getExitTree() { return Children.front(); }$/;"	f	class:__anon1695b1f50211::RegionMRT	typeref:typename:MRT *	file:
getExpcntBitMask	Utils/RVGPUBaseInfo.cpp	/^unsigned getExpcntBitMask(const IsaVersion &Version) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:unsigned
getExpcntBitShift	Utils/RVGPUBaseInfo.cpp	/^unsigned getExpcntBitShift(unsigned VersionMajor) {$/;"	f	namespace:__anonc82e9e910111	typeref:typename:unsigned
getExpcntBitWidth	Utils/RVGPUBaseInfo.cpp	/^unsigned getExpcntBitWidth(unsigned VersionMajor) { return 3; }$/;"	f	namespace:__anonc82e9e910111	typeref:typename:unsigned
getExplicitKernArgSize	RVGPUMachineFunction.h	/^  uint64_t getExplicitKernArgSize() const {$/;"	f	class:llvm::RVGPUMachineFunction	typeref:typename:uint64_t
getExplicitKernArgSize	RVGPUSubtarget.cpp	/^uint64_t RVGPUSubtarget::getExplicitKernArgSize(const Function &F,$/;"	f	class:RVGPUSubtarget	typeref:typename:uint64_t
getExplicitKernelArgOffset	RVGPUSubtarget.h	/^  unsigned getExplicitKernelArgOffset() const {$/;"	f	class:llvm::RVGPUSubtarget	typeref:typename:unsigned
getExplicitSectionGlobal	RVGPUTargetObjectFile.cpp	/^MCSection *RVGPUTargetObjectFile::getExplicitSectionGlobal($/;"	f	class:RVGPUTargetObjectFile	typeref:typename:MCSection *
getExtendOp	RVGPURegisterBankInfo.cpp	/^static unsigned getExtendOp(unsigned Opc) {$/;"	f	typeref:typename:unsigned	file:
getFFBX_U32	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::getFFBX_U32(SelectionDAG &DAG,$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
getFPBinOp	RVISelLowering.cpp	/^static SDValue getFPBinOp(SelectionDAG &DAG, unsigned Opcode, const SDLoc &SL,$/;"	f	typeref:typename:SDValue	file:
getFPExtOrFPRound	RVISelLowering.cpp	/^SDValue RVTargetLowering::getFPExtOrFPRound(SelectionDAG &DAG,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
getFPMode	RVGPUAsmPrinter.cpp	/^static uint32_t getFPMode(SIModeRegisterDefaults Mode) {$/;"	f	typeref:typename:uint32_t	file:
getFPModifiersOperand	AsmParser/RVGPUAsmParser.cpp	/^    int64_t getFPModifiersOperand() const {$/;"	f	struct:__anon672fa8550111::RVGPUOperand::Modifiers	typeref:typename:int64_t	file:
getFPTernOp	RVISelLowering.cpp	/^static SDValue getFPTernOp(SelectionDAG &DAG, unsigned Opcode, const SDLoc &SL,$/;"	f	typeref:typename:SDValue	file:
getFailureOrdering	SIMemoryLegalizer.cpp	/^  AtomicOrdering getFailureOrdering() const {$/;"	f	class:__anon46517b8a0111::SIMemOpInfo	typeref:typename:AtomicOrdering	file:
getFeatureBits	AsmParser/RVGPUAsmParser.cpp	/^  const FeatureBitset &getFeatureBits() const {$/;"	f	class:__anon672fa8550111::RVGPUAsmParser	typeref:typename:const FeatureBitset &	file:
getFeatureName	RVGPURemoveIncompatibleFunctions.cpp	/^StringRef getFeatureName(unsigned Feature) {$/;"	f	namespace:__anonbd23f2080111	typeref:typename:StringRef
getFeatureString	RVGPUTargetMachine.cpp	/^StringRef RVGPUTargetMachine::getFeatureString(const Function &F) const {$/;"	f	class:RVGPUTargetMachine	typeref:typename:StringRef
getFenceOperandTy	RVGPUISelLowering.h	/^  MVT getFenceOperandTy(const DataLayout &DL) const override {$/;"	f	class:llvm::RVGPUTargetLowering	typeref:typename:MVT
getFirstNonPrologue	SIFixSGPRCopies.cpp	/^getFirstNonPrologue(MachineBasicBlock *MBB, const TargetInstrInfo *TII) {$/;"	f	typeref:typename:MachineBasicBlock::iterator	file:
getFixupKind	MCTargetDesc/RVGPUAsmBackend.cpp	/^RVGPUAsmBackend::getFixupKind(StringRef Name) const {$/;"	f	class:RVGPUAsmBackend	typeref:typename:std::optional<MCFixupKind>
getFixupKindInfo	MCTargetDesc/RVGPUAsmBackend.cpp	/^const MCFixupKindInfo &RVGPUAsmBackend::getFixupKindInfo($/;"	f	class:RVGPUAsmBackend	typeref:typename:const MCFixupKindInfo &
getFixupKindNumBytes	MCTargetDesc/RVGPUAsmBackend.cpp	/^static unsigned getFixupKindNumBytes(unsigned Kind) {$/;"	f	typeref:typename:unsigned	file:
getFlatAddressSpace	RVGPUTargetTransformInfo.h	/^  unsigned getFlatAddressSpace() const {$/;"	f	class:llvm::GCNTTIImpl	typeref:typename:unsigned
getFlatOffsetLoc	AsmParser/RVGPUAsmParser.cpp	/^SMLoc RVGPUAsmParser::getFlatOffsetLoc(const OperandVector &Operands) const {$/;"	f	class:RVGPUAsmParser	typeref:typename:SMLoc
getFlatScratchSpillOpcode	RVRegisterInfo.cpp	/^static unsigned getFlatScratchSpillOpcode(const RVInstrInfo *TII,$/;"	f	typeref:typename:unsigned	file:
getFlatWorkGroupSizes	RVGPUAttributor.cpp	/^  std::pair<unsigned, unsigned> getFlatWorkGroupSizes(const Function &F) {$/;"	f	class:__anon512e119a0111::RVGPUInformationCache	typeref:typename:std::pair<unsigned,unsigned>	file:
getFlatWorkGroupSizes	RVGPUSubtarget.cpp	/^std::pair<unsigned, unsigned> RVGPUSubtarget::getFlatWorkGroupSizes($/;"	f	class:RVGPUSubtarget	typeref:typename:std::pair<unsigned,unsigned>
getFlatWorkGroupSizes	RVMachineFunctionInfo.h	/^  std::pair<unsigned, unsigned> getFlatWorkGroupSizes() const {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:std::pair<unsigned,unsigned>
getFltSemantics	AsmParser/RVGPUAsmParser.cpp	/^static const fltSemantics *getFltSemantics(MVT VT) {$/;"	f	typeref:typename:const fltSemantics *	file:
getFltSemantics	AsmParser/RVGPUAsmParser.cpp	/^static const fltSemantics *getFltSemantics(unsigned Size) {$/;"	f	typeref:typename:const fltSemantics *	file:
getFoldableImm	RVInstrInfo.cpp	/^static bool getFoldableImm(Register Reg, const MachineRegisterInfo &MRI,$/;"	f	typeref:typename:bool	file:
getFoldableImm	RVInstrInfo.cpp	/^static bool getFoldableImm(const MachineOperand *MO, int64_t &Imm,$/;"	f	typeref:typename:bool	file:
getForcedEncodingSize	AsmParser/RVGPUAsmParser.cpp	/^  unsigned getForcedEncodingSize() const { return ForcedEncodingSize; }$/;"	f	class:__anon672fa8550111::RVGPUAsmParser	typeref:typename:unsigned	file:
getFrameIndexInstrOffset	RVRegisterInfo.cpp	/^int64_t RVRegisterInfo::getFrameIndexInstrOffset(const MachineInstr *MI,$/;"	f	class:RVRegisterInfo	typeref:typename:int64_t
getFrameIndexReference	RVFrameLowering.cpp	/^StackOffset RVFrameLowering::getFrameIndexReference(const MachineFunction &MF,$/;"	f	class:RVFrameLowering	typeref:typename:StackOffset
getFrameLowering	GCNSubtarget.h	/^  const RVTargetLowering *getFrameLowering() const override {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:const RVTargetLowering *
getFrameOffsetReg	RVMachineFunctionInfo.h	/^  Register getFrameOffsetReg() const {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:Register
getFrameRegister	RVRegisterInfo.cpp	/^Register RVRegisterInfo::getFrameRegister(const MachineFunction &MF) const {$/;"	f	class:RVRegisterInfo	typeref:typename:Register
getFrexpResults	RVGPUCodeGenPrepare.cpp	/^RVGPUCodeGenPrepareImpl::getFrexpResults(IRBuilder<> &Builder,$/;"	f	class:RVGPUCodeGenPrepareImpl	typeref:typename:std::pair<Value *,Value * >
getFromTy	RVGPULibFunc.cpp	/^RVGPULibFuncBase::Param RVGPULibFuncBase::Param::getFromTy(Type *Ty,$/;"	f	class:RVGPULibFuncBase::Param	typeref:typename:RVGPULibFuncBase::Param
getFullRateInstrCost	RVGPUTargetTransformInfo.h	/^  static inline int getFullRateInstrCost() {$/;"	f	class:llvm::GCNTTIImpl	typeref:typename:int
getFunction	RVGPULibCalls.cpp	/^FunctionCallee RVGPULibCalls::getFunction(Module *M, const FuncInfo &fInfo) {$/;"	f	class:RVGPULibCalls	typeref:typename:FunctionCallee
getFunction	RVGPULibFunc.cpp	/^Function *RVGPULibFunc::getFunction(Module *M, const RVGPULibFunc &fInfo) {$/;"	f	class:RVGPULibFunc	typeref:typename:Function *
getFunctionCodeSize	RVGPUAsmPrinter.cpp	/^uint64_t RVGPUAsmPrinter::getFunctionCodeSize(const MachineFunction &MF) const {$/;"	f	class:RVGPUAsmPrinter	typeref:typename:uint64_t
getFunctionType	RVGPULibFunc.cpp	/^FunctionType *RVGPUMangledLibFunc::getFunctionType(Module &M) const {$/;"	f	class:RVGPUMangledLibFunc	typeref:typename:FunctionType *
getFunctionType	RVGPULibFunc.h	/^  FunctionType *getFunctionType(Module &M) const override { return FuncTy; }$/;"	f	class:llvm::RVGPUUnmangledLibFunc	typeref:typename:FunctionType *
getFunctionType	RVGPULibFunc.h	/^  FunctionType *getFunctionType(Module &M) const {$/;"	f	class:llvm::RVGPULibFunc	typeref:typename:FunctionType *
getFusedOpcode	RVISelLowering.cpp	/^unsigned RVTargetLowering::getFusedOpcode(const SelectionDAG &DAG,$/;"	f	class:RVTargetLowering	typeref:typename:unsigned
getGCNTargetMachine	RVGPUTargetMachine.cpp	/^  GCNTargetMachine &getGCNTargetMachine() const {$/;"	f	class:__anon565c6f860a11::GCNPassConfig	typeref:typename:GCNTargetMachine &	file:
getGDSSize	RVGPUMachineFunction.h	/^  uint32_t getGDSSize() const {$/;"	f	class:llvm::RVGPUMachineFunction	typeref:typename:uint32_t
getGITPtrHigh	RVMachineFunctionInfo.h	/^  unsigned getGITPtrHigh() const {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:unsigned
getGITPtrLoReg	RVMachineFunctionInfo.cpp	/^RVMachineFunctionInfo::getGITPtrLoReg(const MachineFunction &MF) const {$/;"	f	class:RVMachineFunctionInfo	typeref:typename:Register
getGPUInfo	RVGPURemoveIncompatibleFunctions.cpp	/^const SubtargetSubTypeKV *getGPUInfo(const GCNSubtarget &ST,$/;"	f	namespace:__anonbd23f2080111	typeref:typename:const SubtargetSubTypeKV *
getGPUName	RVGPUTargetMachine.cpp	/^StringRef RVGPUTargetMachine::getGPUName(const Function &F) const {$/;"	f	class:RVGPUTargetMachine	typeref:typename:StringRef
getGPUOrDefault	RVGPUTargetMachine.cpp	/^static StringRef getGPUOrDefault(const Triple &TT, StringRef GPU) {$/;"	f	typeref:typename:LLVM_READNONE StringRef	file:
getGWSPSV	RVMachineFunctionInfo.h	/^  getGWSPSV(const RVGPUTargetMachine &TM) {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:const RVGPUGWSResourcePseudoSourceValue *
getGcnBufferFormatInfo	Utils/RVGPUBaseInfo.cpp	/^const GcnBufferFormatInfo *getGcnBufferFormatInfo(uint8_t BitsPerComp,$/;"	f	namespace:llvm::RVGPU	typeref:typename:const GcnBufferFormatInfo *
getGcnBufferFormatInfo	Utils/RVGPUBaseInfo.cpp	/^const GcnBufferFormatInfo *getGcnBufferFormatInfo(uint8_t Format,$/;"	f	namespace:llvm::RVGPU	typeref:typename:const GcnBufferFormatInfo *
getGeneration	GCNSubtarget.h	/^  Generation getGeneration() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:Generation
getGenericInstructionUniformity	RVInstrInfo.cpp	/^RVInstrInfo::getGenericInstructionUniformity(const MachineInstr &MI) const {$/;"	f	class:RVInstrInfo	typeref:typename:InstructionUniformity
getGlobalSTI	RVGPUAsmPrinter.cpp	/^const MCSubtargetInfo *RVGPUAsmPrinter::getGlobalSTI() const {$/;"	f	class:RVGPUAsmPrinter	typeref:typename:const MCSubtargetInfo *
getGprCountSymbolName	AsmParser/RVGPUAsmParser.cpp	/^RVGPUAsmParser::getGprCountSymbolName(RegisterKind RegKind) {$/;"	f	class:RVGPUAsmParser	typeref:typename:std::optional<StringRef>
getGraphicsRegisters	Utils/RVGPUPALMetadata.cpp	/^msgpack::MapDocNode RVGPUPALMetadata::getGraphicsRegisters() {$/;"	f	class:RVGPUPALMetadata	typeref:typename:msgpack::MapDocNode
getHSAKernelProps	RVGPUHSAMetadataStreamer.cpp	/^MetadataStreamerMsgPackV4::getHSAKernelProps(const MachineFunction &MF,$/;"	f	class:llvm::RVGPU::HSRV::MetadataStreamerMsgPackV4	typeref:typename:msgpack::MapDocNode
getHSAMetadataRoot	RVGPUHSAMetadataStreamer.h	/^  msgpack::DocNode &getHSAMetadataRoot() {$/;"	f	class:llvm::RVGPU::HSRV::MetadataStreamerMsgPackV4	typeref:typename:msgpack::DocNode &
getHWReg	GCNHazardRecognizer.cpp	/^static unsigned getHWReg(const RVInstrInfo *TII, const MachineInstr &RegInstr) {$/;"	f	typeref:typename:unsigned	file:
getHWRegIndex	RVRegisterInfo.h	/^  unsigned getHWRegIndex(MCRegister Reg) const {$/;"	f	class:llvm::RVRegisterInfo	typeref:typename:unsigned
getHalfRateInstrCost	RVGPUTargetTransformInfo.h	/^  static inline int getHalfRateInstrCost(TTI::TargetCostKind CostKind) {$/;"	f	class:llvm::GCNTTIImpl	typeref:typename:int
getHalfSizedType	RVGPURegisterBankInfo.cpp	/^static LLT getHalfSizedType(LLT Ty) {$/;"	f	typeref:typename:LLT	file:
getHardClauseType	SIInsertHardClauses.cpp	/^  HardClauseType getHardClauseType(const MachineInstr &MI) {$/;"	f	class:__anon09538a560111::SIInsertHardClauses	typeref:typename:HardClauseType	file:
getHasColorExport	Utils/RVGPUBaseInfo.cpp	/^bool getHasColorExport(const Function &F) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
getHasDepthExport	Utils/RVGPUBaseInfo.cpp	/^bool getHasDepthExport(const Function &F) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
getHasLoop	RVGPUMachineCFGStructurizer.cpp	/^bool LinearizedRegion::getHasLoop() { return HasLoop; }$/;"	f	class:LinearizedRegion	typeref:typename:bool
getHazardType	GCNHazardRecognizer.cpp	/^GCNHazardRecognizer::getHazardType(SUnit *SU, int Stalls) {$/;"	f	class:GCNHazardRecognizer	typeref:typename:ScheduleHazardRecognizer::HazardType
getHi16Elt	RVGPUISelDAGToDAG.cpp	/^SDValue RVGPUDAGToDAGISel::getHi16Elt(SDValue In) const {$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:SDValue
getHiHalf64	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::getHiHalf64(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
getHostcallImplicitArgPosition	Utils/RVGPUBaseInfo.cpp	/^unsigned getHostcallImplicitArgPosition(unsigned CodeObjectVersion) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:unsigned
getHsaAbiVersion	Utils/RVGPUBaseInfo.cpp	/^std::optional<uint8_t> getHsaAbiVersion(const MCSubtargetInfo *STI) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:std::optional<uint8_t>
getHwStage	Utils/RVGPUPALMetadata.cpp	/^msgpack::MapDocNode RVGPUPALMetadata::getHwStage(unsigned CC) {$/;"	f	class:RVGPUPALMetadata	typeref:typename:msgpack::MapDocNode
getHwreg	Utils/RVGPUBaseInfo.cpp	/^StringRef getHwreg(unsigned Id, const MCSubtargetInfo &STI) {$/;"	f	namespace:llvm::RVGPU::Hwreg	typeref:typename:StringRef
getHwregId	Utils/RVGPUBaseInfo.cpp	/^int64_t getHwregId(const StringRef Name, const MCSubtargetInfo &STI) {$/;"	f	namespace:llvm::RVGPU::Hwreg	typeref:typename:int64_t
getI32Ty	RVGPUCodeGenPrepare.cpp	/^Type *RVGPUCodeGenPrepareImpl::getI32Ty(IRBuilder<> &B, const Type *T) const {$/;"	f	class:RVGPUCodeGenPrepareImpl	typeref:typename:Type *
getID	SIMachineScheduler.h	/^  unsigned getID() const { return ID; }$/;"	f	class:llvm::SIScheduleBlock	typeref:typename:unsigned
getIEEE	RVGPURegBankCombiner.cpp	/^bool RVGPURegBankCombinerImpl::getIEEE() const { return getMode().IEEE; }$/;"	f	class:__anon00ae19330111::RVGPURegBankCombinerImpl	typeref:typename:bool
getId	AsmParser/RVGPUAsmParser.cpp	/^StringRef RVGPUAsmParser::getId() const {$/;"	f	class:RVGPUAsmParser	typeref:typename:StringRef
getId	RVGPULibFunc.h	/^  EFuncId getId() const { return FuncId; }$/;"	f	class:llvm::RVGPULibFuncImpl	typeref:typename:EFuncId
getId	RVGPULibFunc.h	/^  EFuncId getId() const { return Impl->getId(); }$/;"	f	class:llvm::RVGPULibFunc	typeref:typename:EFuncId
getIdAddr	RVGPUAttributor.cpp	/^  const char *getIdAddr() const override { return &ID; }$/;"	f	struct:__anon512e119a0111::AARVAttributes	typeref:typename:const char *	file:
getIdAddr	RVGPUAttributor.cpp	/^  const char *getIdAddr() const override { return &ID; }$/;"	f	struct:__anon512e119a0111::AARVFlatWorkGroupSize	typeref:typename:const char *	file:
getIdAddr	RVGPUAttributor.cpp	/^  const char *getIdAddr() const override { return &ID; }$/;"	f	struct:__anon512e119a0111::AARVWavesPerEU	typeref:typename:const char *	file:
getIdAddr	RVGPUAttributor.cpp	/^  const char *getIdAddr() const override { return &ID; }$/;"	f	struct:__anon512e119a0111::AAUniformWorkGroupSize	typeref:typename:const char *	file:
getIdentityValueForAtomicOp	RVGPUAtomicOptimizer.cpp	/^static Constant *getIdentityValueForAtomicOp(Type *const Ty,$/;"	f	typeref:typename:Constant *	file:
getIdxEn	RVISelLowering.cpp	/^static unsigned getIdxEn(SDValue VIndex) {$/;"	f	typeref:typename:unsigned	file:
getImageMapping	RVGPURegisterBankInfo.cpp	/^RVGPURegisterBankInfo::getImageMapping(const MachineRegisterInfo &MRI,$/;"	f	class:RVGPURegisterBankInfo	typeref:typename:const RegisterBankInfo::InstructionMapping &
getImm	AsmParser/RVGPUAsmParser.cpp	/^  int64_t getImm() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:int64_t	file:
getImmLoc	AsmParser/RVGPUAsmParser.cpp	/^RVGPUAsmParser::getImmLoc(RVGPUOperand::ImmTy Type,$/;"	f	class:RVGPUAsmParser	typeref:typename:SMLoc
getImmOrMaterializedImm	SIFoldOperands.cpp	/^SIFoldOperands::getImmOrMaterializedImm(MachineOperand &Op) const {$/;"	f	class:SIFoldOperands	typeref:typename:MachineOperand *
getImmTy	AsmParser/RVGPUAsmParser.cpp	/^  ImmTy getImmTy() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:ImmTy	file:
getImplicitArgNumBytes	RVGPUSubtarget.cpp	/^unsigned RVGPUSubtarget::getImplicitArgNumBytes(const Function &F) const {$/;"	f	class:RVGPUSubtarget	typeref:typename:unsigned
getImplicitArgPtr	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::getImplicitArgPtr(Register DstReg,$/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
getImplicitArgPtr	RVISelLowering.cpp	/^SDValue RVTargetLowering::getImplicitArgPtr(SelectionDAG &DAG,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
getImplicitBufferPtrUserSGPR	RVMachineFunctionInfo.h	/^  Register getImplicitBufferPtrUserSGPR() const {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:Register
getImplicitOpSelHiEncoding	MCTargetDesc/RVGPUMCCodeEmitter.cpp	/^uint64_t RVGPUMCCodeEmitter::getImplicitOpSelHiEncoding(int Opcode) const {$/;"	f	class:RVGPUMCCodeEmitter	typeref:typename:uint64_t
getImplicitParameterOffset	RVGPUISelLowering.cpp	/^uint32_t RVGPUTargetLowering::getImplicitParameterOffset($/;"	f	class:RVGPUTargetLowering	typeref:typename:uint32_t
getInRegs	SIMachineScheduler.h	/^  std::set<unsigned> &getInRegs() { return LiveInRegs; }$/;"	f	class:llvm::SIScheduleBlock	typeref:typename:std::set<unsigned> &
getInRegs	SIMachineScheduler.h	/^  std::set<unsigned> getInRegs() {$/;"	f	class:llvm::SIScheduleDAGMI	typeref:typename:std::set<unsigned>
getIndex	RVMachineFunctionInfo.h	/^  int getIndex() const { return Index; }$/;"	f	class:llvm::PrologEpilogSGPRSaveRestoreInfo	typeref:typename:int
getIndexInParsedOperands	Utils/RVGPUBaseInfo.cpp	/^unsigned ComponentInfo::getIndexInParsedOperands(unsigned CompOprIdx) const {$/;"	f	class:llvm::RVGPU::VOPD::ComponentInfo	typeref:typename:unsigned
getIndexOfDstInMCOperands	Utils/RVGPUBaseInfo.h	/^  unsigned getIndexOfDstInMCOperands() const { return MC_DST_IDX[Kind]; }$/;"	f	class:llvm::RVGPU::VOPD::ComponentLayout	typeref:typename:unsigned
getIndexOfDstInParsedOperands	Utils/RVGPUBaseInfo.h	/^  unsigned getIndexOfDstInParsedOperands() const {$/;"	f	class:llvm::RVGPU::VOPD::ComponentLayout	typeref:typename:unsigned
getIndexOfSrcInMCOperands	Utils/RVGPUBaseInfo.h	/^  unsigned getIndexOfSrcInMCOperands(unsigned CompSrcIdx) const {$/;"	f	class:llvm::RVGPU::VOPD::ComponentLayout	typeref:typename:unsigned
getIndexOfSrcInParsedOperands	Utils/RVGPUBaseInfo.h	/^  unsigned getIndexOfSrcInParsedOperands(unsigned CompSrcIdx) const {$/;"	f	class:llvm::RVGPU::VOPD::ComponentLayout	typeref:typename:unsigned
getIndirectGPRIDXPseudo	RVInstrInfo.cpp	/^RVInstrInfo::getIndirectGPRIDXPseudo(unsigned VecSize,$/;"	f	class:RVInstrInfo	typeref:typename:const MCInstrDesc &
getIndirectRegWriteMovRelPseudo	RVInstrInfo.cpp	/^RVInstrInfo::getIndirectRegWriteMovRelPseudo(unsigned VecSize, unsigned EltSize,$/;"	f	class:RVInstrInfo	typeref:typename:const MCInstrDesc &
getIndirectSGPRIdx	RVISelLowering.cpp	/^static Register getIndirectSGPRIdx(const RVInstrInfo *TII,$/;"	f	typeref:typename:Register	file:
getIndirectSGPRWriteMovRelPseudo32	RVInstrInfo.cpp	/^static unsigned getIndirectSGPRWriteMovRelPseudo32(unsigned VecSize) {$/;"	f	typeref:typename:unsigned	file:
getIndirectSGPRWriteMovRelPseudo64	RVInstrInfo.cpp	/^static unsigned getIndirectSGPRWriteMovRelPseudo64(unsigned VecSize) {$/;"	f	typeref:typename:unsigned	file:
getIndirectVGPRWriteMovRelPseudoOpc	RVInstrInfo.cpp	/^static unsigned getIndirectVGPRWriteMovRelPseudoOpc(unsigned VecSize) {$/;"	f	typeref:typename:unsigned	file:
getInitialPSInputAddr	Utils/RVGPUBaseInfo.cpp	/^unsigned getInitialPSInputAddr(const Function &F) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:unsigned
getInlineAsmLowering	GCNSubtarget.h	/^  const InlineAsmLowering *getInlineAsmLowering() const override {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:const InlineAsmLowering *
getInlineImmVal16	Disassembler/RVGPUDisassembler.cpp	/^static int64_t getInlineImmVal16(unsigned Imm) {$/;"	f	typeref:typename:int64_t	file:
getInlineImmVal32	Disassembler/RVGPUDisassembler.cpp	/^static int64_t getInlineImmVal32(unsigned Imm) {$/;"	f	typeref:typename:int64_t	file:
getInlineImmVal64	Disassembler/RVGPUDisassembler.cpp	/^static int64_t getInlineImmVal64(unsigned Imm) {$/;"	f	typeref:typename:int64_t	file:
getInlinerVectorBonusPercent	RVGPUTargetTransformInfo.h	/^  int getInlinerVectorBonusPercent() const { return InlinerVectorBonusPercent; }$/;"	f	class:llvm::GCNTTIImpl	typeref:typename:int
getInliningThresholdMultiplier	RVGPUTargetTransformInfo.h	/^  unsigned getInliningThresholdMultiplier() const { return 11; }$/;"	f	class:llvm::GCNTTIImpl	typeref:typename:unsigned
getInnerOutputRegister	RVGPUMachineCFGStructurizer.cpp	/^  unsigned getInnerOutputRegister() {$/;"	f	class:__anon1695b1f50211::RegionMRT	typeref:typename:unsigned	file:
getInsertPt	RVGPULowerKernelArguments.cpp	/^static BasicBlock::iterator getInsertPt(BasicBlock &BB) {$/;"	f	typeref:typename:BasicBlock::iterator	file:
getInsertPt	RVGPUPromoteKernelArguments.cpp	/^static BasicBlock::iterator getInsertPt(BasicBlock &BB) {$/;"	f	typeref:typename:BasicBlock::iterator	file:
getInstBundleSize	RVInstrInfo.cpp	/^unsigned RVInstrInfo::getInstBundleSize(const MachineInstr &MI) const {$/;"	f	class:RVInstrInfo	typeref:typename:unsigned
getInstClass	SILoadStoreOptimizer.cpp	/^static InstClassEnum getInstClass(unsigned Opc, const RVInstrInfo &TII) {$/;"	f	namespace:__anon677101620111	typeref:typename:InstClassEnum	file:
getInstLoc	AsmParser/RVGPUAsmParser.cpp	/^SMLoc RVGPUAsmParser::getInstLoc(const OperandVector &Operands) const {$/;"	f	class:RVGPUAsmParser	typeref:typename:SMLoc
getInstSizeInBytes	RVInstrInfo.cpp	/^unsigned RVInstrInfo::getInstSizeInBytes(const MachineInstr &MI) const {$/;"	f	class:RVInstrInfo	typeref:typename:unsigned
getInstSubclass	SILoadStoreOptimizer.cpp	/^static unsigned getInstSubclass(unsigned Opc, const RVInstrInfo &TII) {$/;"	f	namespace:__anon677101620111	typeref:typename:unsigned	file:
getInstrAddrSpace	SIMemoryLegalizer.cpp	/^  SIAtomicAddrSpace getInstrAddrSpace() const {$/;"	f	class:__anon46517b8a0111::SIMemOpInfo	typeref:typename:SIAtomicAddrSpace	file:
getInstrAlternativeMappings	RVGPURegisterBankInfo.cpp	/^RVGPURegisterBankInfo::getInstrAlternativeMappings($/;"	f	class:RVGPURegisterBankInfo	typeref:typename:RegisterBankInfo::InstructionMappings
getInstrAlternativeMappingsIntrinsic	RVGPURegisterBankInfo.cpp	/^RVGPURegisterBankInfo::getInstrAlternativeMappingsIntrinsic($/;"	f	class:RVGPURegisterBankInfo	typeref:typename:RegisterBankInfo::InstructionMappings
getInstrAlternativeMappingsIntrinsicWSideEffects	RVGPURegisterBankInfo.cpp	/^RVGPURegisterBankInfo::getInstrAlternativeMappingsIntrinsicWSideEffects($/;"	f	class:RVGPURegisterBankInfo	typeref:typename:RegisterBankInfo::InstructionMappings
getInstrInfo	GCNSubtarget.h	/^  const RVInstrInfo *getInstrInfo() const override {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:const RVInstrInfo *
getInstrItineraryData	GCNSubtarget.h	/^  const InstrItineraryData *getInstrItineraryData() const override {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:const InstrItineraryData *
getInstrLatency	RVInstrInfo.cpp	/^unsigned RVInstrInfo::getInstrLatency(const InstrItineraryData *ItinData,$/;"	f	class:RVInstrInfo	typeref:typename:unsigned
getInstrMapping	RVGPURegisterBankInfo.cpp	/^RVGPURegisterBankInfo::getInstrMapping(const MachineInstr &MI) const {$/;"	f	class:RVGPURegisterBankInfo	typeref:typename:const RegisterBankInfo::InstructionMapping &
getInstrMappingForLoad	RVGPURegisterBankInfo.cpp	/^RVGPURegisterBankInfo::getInstrMappingForLoad(const MachineInstr &MI) const {$/;"	f	class:RVGPURegisterBankInfo	typeref:typename:const RegisterBankInfo::InstructionMapping &
getInstruction	Disassembler/RVGPUDisassembler.cpp	/^DecodeStatus RVGPUDisassembler::getInstruction(MCInst &MI, uint64_t &Size,$/;"	f	class:RVGPUDisassembler	typeref:typename:DecodeStatus
getInstructionMode	SIModeRegister.cpp	/^Status SIModeRegister::getInstructionMode(MachineInstr &MI,$/;"	f	class:SIModeRegister	typeref:typename:Status
getInstructionSelector	GCNSubtarget.h	/^  InstructionSelector *getInstructionSelector() const override {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:InstructionSelector *
getInstructionUniformity	RVInstrInfo.cpp	/^RVInstrInfo::getInstructionUniformity(const MachineInstr &MI) const {$/;"	f	class:RVInstrInfo	typeref:typename:InstructionUniformity
getIntInlineImmEncoding	MCTargetDesc/RVGPUMCCodeEmitter.cpp	/^static uint32_t getIntInlineImmEncoding(IntTy Imm) {$/;"	f	typeref:typename:uint32_t	file:
getIntModifiersOperand	AsmParser/RVGPUAsmParser.cpp	/^    int64_t getIntModifiersOperand() const {$/;"	f	struct:__anon672fa8550111::RVGPUOperand::Modifiers	typeref:typename:int64_t	file:
getIntN	RVGPULibFunc.h	/^    static Param getIntN(unsigned char NumElts) {$/;"	f	struct:llvm::RVGPULibFuncBase::Param	typeref:typename:Param
getIntegerPairAttribute	Utils/RVGPUBaseInfo.cpp	/^getIntegerPairAttribute(const Function &F, StringRef Name,$/;"	f	namespace:llvm::RVGPU	typeref:typename:std::pair<unsigned,unsigned>
getInternalAdditionalRegUsage	SIMachineScheduler.h	/^  std::vector<unsigned> &getInternalAdditionalRegUsage() {$/;"	f	class:llvm::SIScheduleBlock	typeref:typename:std::vector<unsigned> &
getIntrinsicID	RVGPUInstrInfo.cpp	/^Intrinsic::ID RVGPU::getIntrinsicID(const MachineInstr &I) {$/;"	f	class:RVGPU	typeref:typename:Intrinsic::ID
getIntrinsicInstrCost	RVGPUTargetTransformInfo.cpp	/^GCNTTIImpl::getIntrinsicInstrCost(const IntrinsicCostAttributes &ICA,$/;"	f	class:GCNTTIImpl	typeref:typename:InstructionCost
getIntrinsicParamType	RVGPULibFunc.cpp	/^static Type* getIntrinsicParamType($/;"	f	typeref:typename:Type *	file:
getInvalidCompOperandIndex	Utils/RVGPUBaseInfo.cpp	/^std::optional<unsigned> InstInfo::getInvalidCompOperandIndex($/;"	f	class:llvm::RVGPU::VOPD::InstInfo	typeref:typename:std::optional<unsigned>
getIsCrossAddressSpaceOrdering	SIMemoryLegalizer.cpp	/^  bool getIsCrossAddressSpaceOrdering() const {$/;"	f	class:__anon46517b8a0111::SIMemOpInfo	typeref:typename:bool	file:
getIsFinite	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::getIsFinite(SelectionDAG &DAG, SDValue Src,$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
getIsLtSmallestNormal	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::getIsLtSmallestNormal(SelectionDAG &DAG,$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
getItaniumTypeName	RVGPULibFunc.cpp	/^static const char *getItaniumTypeName(RVGPULibFunc::EType T) {$/;"	f	typeref:typename:const char *	file:
getKernArgSegmentSize	RVGPUSubtarget.cpp	/^unsigned RVGPUSubtarget::getKernArgSegmentSize(const Function &F,$/;"	f	class:RVGPUSubtarget	typeref:typename:unsigned
getKernargParameterPtr	RVGPULegalizerInfo.cpp	/^Register RVGPULegalizerInfo::getKernargParameterPtr(MachineIRBuilder &B,$/;"	f	class:RVGPULegalizerInfo	typeref:typename:Register
getKernelDynLDSGlobalFromFunction	RVGPUMachineFunction.cpp	/^getKernelDynLDSGlobalFromFunction(const Function &F) {$/;"	f	typeref:typename:const GlobalVariable *	file:
getKillTerminatorFromPseudo	RVInstrInfo.cpp	/^const MCInstrDesc &RVInstrInfo::getKillTerminatorFromPseudo(unsigned Opcode) const {$/;"	f	class:RVInstrInfo	typeref:typename:const MCInstrDesc &
getKind	RVMachineFunctionInfo.h	/^  SGPRSaveKind getKind() const { return Kind; }$/;"	f	class:llvm::PrologEpilogSGPRSaveRestoreInfo	typeref:typename:SGPRSaveKind
getKnownHighZeroBitsForFrameIndex	GCNSubtarget.h	/^  unsigned getKnownHighZeroBitsForFrameIndex() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:unsigned
getLDSAbsoluteAddress	RVGPUMachineFunction.cpp	/^RVGPUMachineFunction::getLDSAbsoluteAddress(const GlobalValue &GV) {$/;"	f	class:RVGPUMachineFunction	typeref:typename:std::optional<uint32_t>
getLDSBankCount	GCNSubtarget.h	/^  int getLDSBankCount() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:int
getLDSKernelId	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::getLDSKernelId(Register DstReg,$/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
getLDSKernelId	RVISelLowering.cpp	/^SDValue RVTargetLowering::getLDSKernelId(SelectionDAG &DAG,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
getLDSKernelIdMetadata	RVGPUMachineFunction.cpp	/^RVGPUMachineFunction::getLDSKernelIdMetadata(const Function &F) {$/;"	f	class:RVGPUMachineFunction	typeref:typename:std::optional<uint32_t>
getLDSSize	RVGPUMachineFunction.h	/^  uint32_t getLDSSize() const {$/;"	f	class:llvm::RVGPUMachineFunction	typeref:typename:uint32_t
getLIS	SIMachineScheduler.h	/^  LiveIntervals *getLIS() { return LIS; }$/;"	f	class:llvm::SIScheduleDAGMI	typeref:typename:LiveIntervals *
getLargestLegalSuperClass	RVRegisterInfo.cpp	/^RVRegisterInfo::getLargestLegalSuperClass(const TargetRegisterClass *RC,$/;"	f	class:RVRegisterInfo	typeref:typename:const TargetRegisterClass *
getLastTrackedMI	GCNRegPressure.h	/^  const MachineInstr *getLastTrackedMI() const { return LastTrackedMI; }$/;"	f	class:llvm::GCNRPTracker	typeref:typename:const MachineInstr *
getLdexpF32	RVGPUCodeGenPrepare.cpp	/^  Function *getLdexpF32() const {$/;"	f	class:__anond35e324e0111::RVGPUCodeGenPrepareImpl	typeref:typename:Function *	file:
getLeads	RVGPULibFunc.cpp	/^RVGPULibFunc::Param *RVGPULibFunc::getLeads() {$/;"	f	class:RVGPULibFunc	typeref:typename:RVGPULibFunc::Param *
getLeads	RVGPULibFunc.cpp	/^const RVGPULibFunc::Param *RVGPULibFunc::getLeads() const {$/;"	f	class:RVGPULibFunc	typeref:typename:const RVGPULibFunc::Param *
getLegalizerInfo	GCNSubtarget.h	/^  const LegalizerInfo *getLegalizerInfo() const override {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:const LegalizerInfo *
getLength	GCNSchedStrategy.h	/^  unsigned getLength() const { return ScheduleLength; }$/;"	f	class:llvm::ScheduleMetrics	typeref:typename:unsigned
getLgkmcntBitMask	Utils/RVGPUBaseInfo.cpp	/^unsigned getLgkmcntBitMask(const IsaVersion &Version) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:unsigned
getLgkmcntBitShift	Utils/RVGPUBaseInfo.cpp	/^unsigned getLgkmcntBitShift(unsigned VersionMajor) {$/;"	f	namespace:__anonc82e9e910111	typeref:typename:unsigned
getLgkmcntBitWidth	Utils/RVGPUBaseInfo.cpp	/^unsigned getLgkmcntBitWidth(unsigned VersionMajor) {$/;"	f	namespace:__anonc82e9e910111	typeref:typename:unsigned
getLinearizedRegion	RVGPUMachineCFGStructurizer.cpp	/^  LinearizedRegion *getLinearizedRegion() { return LRegion; }$/;"	f	class:__anon1695b1f50211::RegionMRT	typeref:typename:LinearizedRegion *	file:
getLit16Encoding	MCTargetDesc/RVGPUMCCodeEmitter.cpp	/^static uint32_t getLit16Encoding(uint16_t Val, const MCSubtargetInfo &STI) {$/;"	f	typeref:typename:uint32_t	file:
getLit16IntEncoding	MCTargetDesc/RVGPUMCCodeEmitter.cpp	/^static uint32_t getLit16IntEncoding(uint16_t Val, const MCSubtargetInfo &STI) {$/;"	f	typeref:typename:uint32_t	file:
getLit32Encoding	MCTargetDesc/RVGPUMCCodeEmitter.cpp	/^static uint32_t getLit32Encoding(uint32_t Val, const MCSubtargetInfo &STI) {$/;"	f	typeref:typename:uint32_t	file:
getLit64Encoding	MCTargetDesc/RVGPUMCCodeEmitter.cpp	/^static uint32_t getLit64Encoding(uint64_t Val, const MCSubtargetInfo &STI) {$/;"	f	typeref:typename:uint32_t	file:
getLitEncoding	MCTargetDesc/RVGPUMCCodeEmitter.cpp	/^RVGPUMCCodeEmitter::getLitEncoding(const MCOperand &MO,$/;"	f	class:RVGPUMCCodeEmitter	typeref:typename:std::optional<uint32_t>
getLitLoc	AsmParser/RVGPUAsmParser.cpp	/^SMLoc RVGPUAsmParser::getLitLoc(const OperandVector &Operands,$/;"	f	class:RVGPUAsmParser	typeref:typename:SMLoc
getLiveLaneMask	GCNRegPressure.cpp	/^LaneBitmask llvm::getLiveLaneMask(const LiveInterval &LI, SlotIndex SI,$/;"	f	class:llvm	typeref:typename:LaneBitmask
getLiveLaneMask	GCNRegPressure.cpp	/^LaneBitmask llvm::getLiveLaneMask(unsigned Reg, SlotIndex SI,$/;"	f	class:llvm	typeref:typename:LaneBitmask
getLiveOuts	RVGPUMachineCFGStructurizer.cpp	/^DenseSet<unsigned> *LinearizedRegion::getLiveOuts() { return &LiveOuts; }$/;"	f	class:LinearizedRegion	typeref:typename:DenseSet<unsigned> *
getLiveRangeSplitOpcode	RVInstrInfo.cpp	/^unsigned RVInstrInfo::getLiveRangeSplitOpcode(Register SrcReg,$/;"	f	class:RVInstrInfo	typeref:typename:unsigned
getLiveRegMap	GCNRegPressure.h	/^getLiveRegMap(Range &&R, bool After, LiveIntervals &LIS) {$/;"	f	namespace:llvm	typeref:typename:DenseMap<MachineInstr *,GCNRPTracker::LiveRegSet>
getLiveRegs	GCNRegPressure.cpp	/^GCNRPTracker::LiveRegSet llvm::getLiveRegs(SlotIndex SI,$/;"	f	class:llvm	typeref:typename:GCNRPTracker::LiveRegSet
getLiveRegs	GCNRegPressure.h	/^  const decltype(LiveRegs) &getLiveRegs() const { return LiveRegs; }$/;"	f	class:llvm::GCNRPTracker	typeref:typename:const decltype(LiveRegs)&
getLiveRegsAfter	GCNRegPressure.h	/^inline GCNRPTracker::LiveRegSet getLiveRegsAfter(const MachineInstr &MI,$/;"	f	namespace:llvm	typeref:typename:GCNRPTracker::LiveRegSet
getLiveRegsBefore	GCNRegPressure.h	/^inline GCNRPTracker::LiveRegSet getLiveRegsBefore(const MachineInstr &MI,$/;"	f	namespace:llvm	typeref:typename:GCNRPTracker::LiveRegSet
getLoHalf64	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::getLoHalf64(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
getLoadExtOrTrunc	RVISelLowering.cpp	/^static SDValue getLoadExtOrTrunc(SelectionDAG &DAG,$/;"	f	typeref:typename:SDValue	file:
getLoadInfo	SIMemoryLegalizer.cpp	/^SIMemOpAccess::getLoadInfo(const MachineBasicBlock::iterator &MI) const {$/;"	f	class:SIMemOpAccess	typeref:typename:std::optional<SIMemOpInfo>
getLoadStoreVecRegBitWidth	RVGPUTargetTransformInfo.cpp	/^unsigned GCNTTIImpl::getLoadStoreVecRegBitWidth(unsigned AddrSpace) const {$/;"	f	class:GCNTTIImpl	typeref:typename:unsigned
getLoadVectorFactor	RVGPUTargetTransformInfo.cpp	/^unsigned GCNTTIImpl::getLoadVectorFactor(unsigned VF, unsigned LoadSize,$/;"	f	class:GCNTTIImpl	typeref:typename:unsigned
getLoc	AsmParser/RVGPUAsmParser.cpp	/^RVGPUAsmParser::getLoc() const {$/;"	f	class:RVGPUAsmParser	typeref:typename:SMLoc
getLocRange	AsmParser/RVGPUAsmParser.cpp	/^  SMRange getLocRange() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:SMRange	file:
getLocalMemorySize	RVGPUSubtarget.h	/^  unsigned getLocalMemorySize() const {$/;"	f	class:llvm::RVGPUSubtarget	typeref:typename:unsigned
getLocalMemorySize	Utils/RVGPUBaseInfo.cpp	/^unsigned getLocalMemorySize(const MCSubtargetInfo *STI) {$/;"	f	namespace:llvm::RVGPU::IsaInfo	typeref:typename:unsigned
getLocalSizeYZ	RVGPUPromoteAlloca.cpp	/^RVGPUPromoteAllocaImpl::getLocalSizeYZ(IRBuilder<> &Builder) {$/;"	f	class:RVGPUPromoteAllocaImpl	typeref:typename:std::pair<Value *,Value * >
getLogicalBitOpcode	RVGPUInstructionSelector.cpp	/^static unsigned getLogicalBitOpcode(unsigned Opc, bool Is64) {$/;"	f	typeref:typename:unsigned	file:
getLongBranchReservedReg	RVMachineFunctionInfo.h	/^  Register getLongBranchReservedReg() const { return LongBranchReservedReg; }$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:Register
getMAIIsDGEMM	Utils/RVGPUBaseInfo.cpp	/^bool getMAIIsDGEMM(unsigned Opc) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
getMAIIsGFX940XDL	Utils/RVGPUBaseInfo.cpp	/^bool getMAIIsGFX940XDL(unsigned Opc) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
getMBB	RVGPUMachineCFGStructurizer.cpp	/^  MachineBasicBlock *getMBB() { return MBB; }$/;"	f	class:__anon1695b1f50211::MBBMRT	typeref:typename:MachineBasicBlock *	file:
getMBBMRT	RVGPUMachineCFGStructurizer.cpp	/^  MBBMRT *getMBBMRT() override { return this; }$/;"	f	class:__anon1695b1f50211::MBBMRT	typeref:typename:MBBMRT *	file:
getMBBMRT	RVGPUMachineCFGStructurizer.cpp	/^  virtual MBBMRT *getMBBMRT() { return nullptr; }$/;"	f	class:__anon1695b1f50211::MRT	typeref:typename:MBBMRT *	file:
getMCII	Disassembler/RVGPUDisassembler.h	/^  const MCInstrInfo *getMCII() const { return MCII.get(); }$/;"	f	class:llvm::RVGPUDisassembler	typeref:typename:const MCInstrInfo *
getMCOpcode	Utils/RVGPUBaseInfo.cpp	/^int getMCOpcode(uint16_t Opcode, unsigned Gen) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:int
getMCOpcodeFromPseudo	RVInstrInfo.h	/^  const MCInstrDesc &getMCOpcodeFromPseudo(unsigned Opcode) const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:const MCInstrDesc &
getMCReg	Utils/RVGPUBaseInfo.cpp	/^unsigned getMCReg(unsigned Reg, const MCSubtargetInfo &STI) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:unsigned
getMFMAPipelineWaitStates	GCNHazardRecognizer.cpp	/^GCNHazardRecognizer::getMFMAPipelineWaitStates(const MachineInstr &MI) const {$/;"	f	class:GCNHazardRecognizer	typeref:typename:unsigned
getMII	AsmParser/RVGPUAsmParser.cpp	/^  const MCInstrInfo *getMII() const {$/;"	f	class:__anon672fa8550111::RVGPUAsmParser	typeref:typename:const MCInstrInfo *	file:
getMIMGBaseOpcode	Utils/RVGPUBaseInfo.cpp	/^const MIMGBaseOpcodeInfo *getMIMGBaseOpcode(unsigned Opc) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:const MIMGBaseOpcodeInfo *
getMIMGOpcode	Utils/RVGPUBaseInfo.cpp	/^int getMIMGOpcode(unsigned BaseOpcode, unsigned MIMGEncoding,$/;"	f	namespace:llvm::RVGPU	typeref:typename:int
getMIRFormatter	RVInstrInfo.h	/^  const MIRFormatter *getMIRFormatter() const override {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:const MIRFormatter *
getMRI	AsmParser/RVGPUAsmParser.cpp	/^  const MCRegisterInfo *getMRI() const {$/;"	f	class:__anon672fa8550111::RVGPUAsmParser	typeref:typename:const MCRegisterInfo *	file:
getMRI	SIMachineScheduler.h	/^  MachineRegisterInfo *getMRI() { return &MRI; }$/;"	f	class:llvm::SIScheduleDAGMI	typeref:typename:MachineRegisterInfo *
getMRI	SIPeepholeSDWA.cpp	/^  MachineRegisterInfo *getMRI() const {$/;"	f	class:__anon00bd52b30111::SDWAOperand	typeref:typename:MachineRegisterInfo *	file:
getMTBUFBaseOpcode	Utils/RVGPUBaseInfo.cpp	/^int getMTBUFBaseOpcode(unsigned Opc) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:int
getMTBUFElements	Utils/RVGPUBaseInfo.cpp	/^int getMTBUFElements(unsigned Opc) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:int
getMTBUFHasSoffset	Utils/RVGPUBaseInfo.cpp	/^bool getMTBUFHasSoffset(unsigned Opc) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
getMTBUFHasSrsrc	Utils/RVGPUBaseInfo.cpp	/^bool getMTBUFHasSrsrc(unsigned Opc) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
getMTBUFHasVAddr	Utils/RVGPUBaseInfo.cpp	/^bool getMTBUFHasVAddr(unsigned Opc) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
getMTBUFOpcode	Utils/RVGPUBaseInfo.cpp	/^int getMTBUFOpcode(unsigned BaseOpc, unsigned Elements) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:int
getMUBUFBaseOpcode	Utils/RVGPUBaseInfo.cpp	/^int getMUBUFBaseOpcode(unsigned Opc) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:int
getMUBUFElements	Utils/RVGPUBaseInfo.cpp	/^int getMUBUFElements(unsigned Opc) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:int
getMUBUFHasSoffset	Utils/RVGPUBaseInfo.cpp	/^bool getMUBUFHasSoffset(unsigned Opc) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
getMUBUFHasSrsrc	Utils/RVGPUBaseInfo.cpp	/^bool getMUBUFHasSrsrc(unsigned Opc) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
getMUBUFHasVAddr	Utils/RVGPUBaseInfo.cpp	/^bool getMUBUFHasVAddr(unsigned Opc) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
getMUBUFIsBufferInv	Utils/RVGPUBaseInfo.cpp	/^bool getMUBUFIsBufferInv(unsigned Opc) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
getMUBUFOpcode	Utils/RVGPUBaseInfo.cpp	/^int getMUBUFOpcode(unsigned BaseOpc, unsigned Elements) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:int
getMachineCSELookAheadLimit	RVInstrInfo.h	/^  unsigned getMachineCSELookAheadLimit() const override { return 500; }$/;"	f	class:llvm::RVInstrInfo	typeref:typename:unsigned
getMachineInstr	GCNIterativeScheduler.cpp	/^static inline MachineInstr *getMachineInstr(MachineInstr *MI) {$/;"	f	typeref:typename:MachineInstr *	file:
getMachineInstr	GCNIterativeScheduler.cpp	/^static inline MachineInstr *getMachineInstr(const SUnit &SU) {$/;"	f	typeref:typename:MachineInstr *	file:
getMachineInstr	GCNIterativeScheduler.cpp	/^static inline MachineInstr *getMachineInstr(const SUnit *SU) {$/;"	f	typeref:typename:MachineInstr *	file:
getMachineOpValue	MCTargetDesc/RVGPUMCCodeEmitter.cpp	/^void RVGPUMCCodeEmitter::getMachineOpValue(const MCInst &MI,$/;"	f	class:RVGPUMCCodeEmitter	typeref:typename:void
getMachineOpValueCommon	MCTargetDesc/RVGPUMCCodeEmitter.cpp	/^void RVGPUMCCodeEmitter::getMachineOpValueCommon($/;"	f	class:RVGPUMCCodeEmitter	typeref:typename:void
getMachineOpValueT16	MCTargetDesc/RVGPUMCCodeEmitter.cpp	/^void RVGPUMCCodeEmitter::getMachineOpValueT16($/;"	f	class:RVGPUMCCodeEmitter	typeref:typename:void
getMachineOpValueT16Lo128	MCTargetDesc/RVGPUMCCodeEmitter.cpp	/^void RVGPUMCCodeEmitter::getMachineOpValueT16Lo128($/;"	f	class:RVGPUMCCodeEmitter	typeref:typename:void
getMachineRegion	RVGPUMachineCFGStructurizer.cpp	/^  MachineRegion *getMachineRegion() { return Region; }$/;"	f	class:__anon1695b1f50211::RegionMRT	typeref:typename:MachineRegion *	file:
getMad	RVGPUISelLowering.cpp	/^static SDValue getMad(SelectionDAG &DAG, const SDLoc &SL, EVT VT, SDValue X,$/;"	f	typeref:typename:SDValue	file:
getMad	RVGPULegalizerInfo.cpp	/^static Register getMad(MachineIRBuilder &B, LLT Ty, Register X, Register Y,$/;"	f	typeref:typename:Register	file:
getMad64_32	RVISelLowering.cpp	/^static SDValue getMad64_32(SelectionDAG &DAG, const SDLoc &SL,$/;"	f	typeref:typename:SDValue	file:
getMandatoryLitLoc	AsmParser/RVGPUAsmParser.cpp	/^SMLoc RVGPUAsmParser::getMandatoryLitLoc(const OperandVector &Operands) const {$/;"	f	class:RVGPUAsmParser	typeref:typename:SMLoc
getMandatoryLiteralCompOperandIndex	Utils/RVGPUBaseInfo.h	/^  unsigned getMandatoryLiteralCompOperandIndex() const {$/;"	f	class:llvm::RVGPU::VOPD::ComponentProps	typeref:typename:unsigned
getMappingType	RVGPURegisterBankInfo.cpp	/^unsigned RVGPURegisterBankInfo::getMappingType(const MachineRegisterInfo &MRI,$/;"	f	class:RVGPURegisterBankInfo	typeref:typename:unsigned
getMask	RVGPUArgumentUsageInfo.h	/^  unsigned getMask() const {$/;"	f	struct:llvm::ArgDescriptor	typeref:typename:unsigned
getMask	RVGPUIGroupLP.cpp	/^  SchedGroupMask getMask() { return SGMask; }$/;"	f	class:__anon61b122dc0111::SchedGroup	typeref:typename:SchedGroupMask	file:
getMask	Utils/RVGPUAsmUtils.h	/^  unsigned getMask() const { return Mask << Shift; }$/;"	f	struct:llvm::RVGPU::CustomOperandVal	typeref:typename:unsigned
getMaskedMIMGOp	Utils/RVGPUBaseInfo.cpp	/^int getMaskedMIMGOp(unsigned Opc, unsigned NewChannels) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:int
getMatchedVariantName	AsmParser/RVGPUAsmParser.cpp	/^StringRef RVGPUAsmParser::getMatchedVariantName() const {$/;"	f	class:RVGPUAsmParser	typeref:typename:StringRef
getMatchedVariants	AsmParser/RVGPUAsmParser.cpp	/^ArrayRef<unsigned> RVGPUAsmParser::getMatchedVariants() const {$/;"	f	class:RVGPUAsmParser	typeref:typename:ArrayRef<unsigned>
getMaterializedScalarImm32	RVGPUISelDAGToDAG.cpp	/^SDValue RVGPUDAGToDAGISel::getMaterializedScalarImm32(int64_t Val,$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:SDValue
getMaxFlatWorkGroupSize	GCNSubtarget.h	/^  unsigned getMaxFlatWorkGroupSize() const override {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:unsigned
getMaxFlatWorkGroupSize	RVMachineFunctionInfo.h	/^  unsigned getMaxFlatWorkGroupSize() const {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:unsigned
getMaxFlatWorkGroupSize	Utils/RVGPUBaseInfo.cpp	/^unsigned getMaxFlatWorkGroupSize(const MCSubtargetInfo *STI) {$/;"	f	namespace:llvm::RVGPU::IsaInfo	typeref:typename:unsigned
getMaxInstLength	MCTargetDesc/RVGPUMCAsmInfo.cpp	/^unsigned RVGPUMCAsmInfo::getMaxInstLength(const MCSubtargetInfo *STI) const {$/;"	f	class:RVGPUMCAsmInfo	typeref:typename:unsigned
getMaxInterleaveFactor	RVGPUTargetTransformInfo.cpp	/^unsigned GCNTTIImpl::getMaxInterleaveFactor(ElementCount VF) {$/;"	f	class:GCNTTIImpl	typeref:typename:unsigned
getMaxKernArgAlign	RVGPUMachineFunction.h	/^  Align getMaxKernArgAlign() const { return MaxKernArgAlign; }$/;"	f	class:llvm::RVGPUMachineFunction	typeref:typename:Align
getMaxLocalMemSizeWithWaveCount	RVGPUSubtarget.cpp	/^RVGPUSubtarget::getMaxLocalMemSizeWithWaveCount(unsigned NWaves,$/;"	f	class:RVGPUSubtarget	typeref:typename:unsigned
getMaxMUBUFImmOffset	RVInstrInfo.cpp	/^unsigned RVInstrInfo::getMaxMUBUFImmOffset(const GCNSubtarget &ST) {$/;"	f	class:RVInstrInfo	typeref:typename:unsigned
getMaxMemIntrinsicInlineSizeThreshold	RVGPUTargetTransformInfo.cpp	/^int64_t GCNTTIImpl::getMaxMemIntrinsicInlineSizeThreshold() const {$/;"	f	class:GCNTTIImpl	typeref:typename:int64_t
getMaxMemIntrinsicInlineSizeThreshold	RVGPUTargetTransformInfo.cpp	/^int64_t RVGPUTTIImpl::getMaxMemIntrinsicInlineSizeThreshold() const {$/;"	f	class:RVGPUTTIImpl	typeref:typename:int64_t
getMaxNumAGPRs	GCNSubtarget.h	/^  unsigned getMaxNumAGPRs(const Function &F) const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:unsigned
getMaxNumPreloadedSGPRs	RVGPUSubtarget.cpp	/^static unsigned getMaxNumPreloadedSGPRs() {$/;"	f	typeref:typename:unsigned	file:
getMaxNumSGPRs	GCNSubtarget.h	/^  unsigned getMaxNumSGPRs(unsigned WavesPerEU, bool Addressable) const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:unsigned
getMaxNumSGPRs	RVGPUSubtarget.cpp	/^unsigned GCNSubtarget::getMaxNumSGPRs(const Function &F) const {$/;"	f	class:GCNSubtarget	typeref:typename:unsigned
getMaxNumSGPRs	RVGPUSubtarget.cpp	/^unsigned GCNSubtarget::getMaxNumSGPRs(const MachineFunction &MF) const {$/;"	f	class:GCNSubtarget	typeref:typename:unsigned
getMaxNumSGPRs	Utils/RVGPUBaseInfo.cpp	/^unsigned getMaxNumSGPRs(const MCSubtargetInfo *STI, unsigned WavesPerEU,$/;"	f	namespace:llvm::RVGPU::IsaInfo	typeref:typename:unsigned
getMaxNumUserSGPRs	AsmParser/RVGPUAsmParser.cpp	/^  unsigned getMaxNumUserSGPRs() const {$/;"	f	class:__anon672fa8550111::RVGPUAsmParser	typeref:typename:unsigned	file:
getMaxNumUserSGPRs	GCNSubtarget.h	/^  unsigned getMaxNumUserSGPRs() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:unsigned
getMaxNumUserSGPRs	Utils/RVGPUBaseInfo.cpp	/^unsigned getMaxNumUserSGPRs(const MCSubtargetInfo &STI) { return 16; }$/;"	f	namespace:llvm::RVGPU	typeref:typename:unsigned
getMaxNumVGPRs	GCNSubtarget.h	/^  unsigned getMaxNumVGPRs(unsigned WavesPerEU) const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:unsigned
getMaxNumVGPRs	RVGPUSubtarget.cpp	/^unsigned GCNSubtarget::getMaxNumVGPRs(const Function &F) const {$/;"	f	class:GCNSubtarget	typeref:typename:unsigned
getMaxNumVGPRs	RVGPUSubtarget.cpp	/^unsigned GCNSubtarget::getMaxNumVGPRs(const MachineFunction &MF) const {$/;"	f	class:GCNSubtarget	typeref:typename:unsigned
getMaxNumVGPRs	Utils/RVGPUBaseInfo.cpp	/^unsigned getMaxNumVGPRs(const MCSubtargetInfo *STI, unsigned WavesPerEU) {$/;"	f	namespace:llvm::RVGPU::IsaInfo	typeref:typename:unsigned
getMaxPressure	GCNRegPressure.h	/^  const GCNRegPressure &getMaxPressure() const { return MaxPressure; }$/;"	f	class:llvm::GCNUpwardRPTracker	typeref:typename:const GCNRegPressure &
getMaxPressureAndReset	GCNRegPressure.h	/^  GCNRegPressure getMaxPressureAndReset() {$/;"	f	class:llvm::GCNUpwardRPTracker	typeref:typename:GCNRegPressure
getMaxPrivateElementSize	GCNSubtarget.h	/^  unsigned getMaxPrivateElementSize(bool ForBufferRSrc = false) const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:unsigned
getMaxVGPRs	RVGPUPromoteAlloca.cpp	/^unsigned getMaxVGPRs(const TargetMachine &TM, const Function &F) {$/;"	f	namespace:__anonea904d1c0111	typeref:typename:unsigned
getMaxWaveScratchSize	GCNSubtarget.h	/^  unsigned getMaxWaveScratchSize() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:unsigned
getMaxWavesPerEU	RVGPUAttributor.cpp	/^  unsigned getMaxWavesPerEU(const Function &F) {$/;"	f	class:__anon512e119a0111::RVGPUInformationCache	typeref:typename:unsigned	file:
getMaxWavesPerEU	RVGPUSubtarget.h	/^  unsigned getMaxWavesPerEU() const { return MaxWavesPerEU; }$/;"	f	class:llvm::RVGPUSubtarget	typeref:typename:unsigned
getMaxWavesPerEU	RVMachineFunctionInfo.h	/^  unsigned getMaxWavesPerEU() const {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:unsigned
getMaxWavesPerEU	Utils/RVGPUBaseInfo.cpp	/^unsigned getMaxWavesPerEU(const MCSubtargetInfo *STI) {$/;"	f	namespace:llvm::RVGPU::IsaInfo	typeref:typename:unsigned
getMaxWorkGroupsPerCU	GCNSubtarget.h	/^  unsigned getMaxWorkGroupsPerCU(unsigned FlatWorkGroupSize) const override {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:unsigned
getMaxWorkGroupsPerCU	Utils/RVGPUBaseInfo.cpp	/^unsigned getMaxWorkGroupsPerCU(const MCSubtargetInfo *STI,$/;"	f	namespace:llvm::RVGPU::IsaInfo	typeref:typename:unsigned
getMaxWorkitemID	RVGPUSubtarget.cpp	/^unsigned RVGPUSubtarget::getMaxWorkitemID(const Function &Kernel,$/;"	f	class:RVGPUSubtarget	typeref:typename:unsigned
getMaximumFlatWorkGroupRange	RVGPUAttributor.cpp	/^  getMaximumFlatWorkGroupRange(const Function &F) {$/;"	f	class:__anon512e119a0111::RVGPUInformationCache	typeref:typename:std::pair<unsigned,unsigned>	file:
getMaximumVF	RVGPUTargetTransformInfo.cpp	/^unsigned GCNTTIImpl::getMaximumVF(unsigned ElemWidth, unsigned Opcode) const {$/;"	f	class:GCNTTIImpl	typeref:typename:unsigned
getMemIntrinsicNode	RVISelLowering.cpp	/^SDValue RVTargetLowering::getMemIntrinsicNode(unsigned Opcode, const SDLoc &DL,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
getMemOperandsWithOffsetWidth	RVInstrInfo.cpp	/^bool RVInstrInfo::getMemOperandsWithOffsetWidth($/;"	f	class:RVInstrInfo	typeref:typename:bool
getMemcpyLoopLoweringType	RVGPUTargetTransformInfo.cpp	/^Type *GCNTTIImpl::getMemcpyLoopLoweringType($/;"	f	class:GCNTTIImpl	typeref:typename:Type *
getMemcpyLoopResidualLoweringType	RVGPUTargetTransformInfo.cpp	/^void GCNTTIImpl::getMemcpyLoopResidualLoweringType($/;"	f	class:GCNTTIImpl	typeref:typename:void
getMemoryInstrPtrAndType	RVGPUPerfHintAnalysis.cpp	/^static std::pair<const Value *, const Type *> getMemoryInstrPtrAndType($/;"	f	namespace:__anon406ad74e0111	typeref:typename:std::pair<const Value *,const Type * >	file:
getMetric	GCNSchedStrategy.h	/^  unsigned getMetric() const {$/;"	f	class:llvm::ScheduleMetrics	typeref:typename:unsigned
getMinAllowedOccupancy	RVMachineFunctionInfo.h	/^  unsigned getMinAllowedOccupancy() const {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:unsigned
getMinFlatWorkGroupSize	GCNSubtarget.h	/^  unsigned getMinFlatWorkGroupSize() const override {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:unsigned
getMinFlatWorkGroupSize	RVMachineFunctionInfo.h	/^  unsigned getMinFlatWorkGroupSize() const {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:unsigned
getMinFlatWorkGroupSize	Utils/RVGPUBaseInfo.cpp	/^unsigned getMinFlatWorkGroupSize(const MCSubtargetInfo *STI) {$/;"	f	namespace:llvm::RVGPU::IsaInfo	typeref:typename:unsigned
getMinMaxPair	RVGPURegBankCombiner.cpp	/^RVGPURegBankCombinerImpl::getMinMaxPair(unsigned Opc) const {$/;"	f	class:__anon00ae19330111::RVGPURegBankCombinerImpl	typeref:typename:RVGPURegBankCombinerImpl::MinMaxMedOpc
getMinMaxReductionCost	RVGPUTargetTransformInfo.cpp	/^GCNTTIImpl::getMinMaxReductionCost(Intrinsic::ID IID, VectorType *Ty,$/;"	f	class:GCNTTIImpl	typeref:typename:InstructionCost
getMinNumSGPRs	GCNSubtarget.h	/^  unsigned getMinNumSGPRs(unsigned WavesPerEU) const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:unsigned
getMinNumSGPRs	Utils/RVGPUBaseInfo.cpp	/^unsigned getMinNumSGPRs(const MCSubtargetInfo *STI, unsigned WavesPerEU) {$/;"	f	namespace:llvm::RVGPU::IsaInfo	typeref:typename:unsigned
getMinNumVGPRs	GCNSubtarget.h	/^  unsigned getMinNumVGPRs(unsigned WavesPerEU) const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:unsigned
getMinNumVGPRs	Utils/RVGPUBaseInfo.cpp	/^unsigned getMinNumVGPRs(const MCSubtargetInfo *STI, unsigned WavesPerEU) {$/;"	f	namespace:llvm::RVGPU::IsaInfo	typeref:typename:unsigned
getMinSizeReg	GCNRewritePartialRegUses.cpp	/^GCNRewritePartialRegUses::getMinSizeReg(const TargetRegisterClass *RC,$/;"	f	class:GCNRewritePartialRegUses	typeref:typename:const TargetRegisterClass *
getMinVectorRegisterBitWidth	RVGPUTargetTransformInfo.cpp	/^unsigned GCNTTIImpl::getMinVectorRegisterBitWidth() const {$/;"	f	class:GCNTTIImpl	typeref:typename:unsigned
getMinWavesPerEU	GCNSubtarget.h	/^  unsigned getMinWavesPerEU() const override {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:unsigned
getMinWavesPerEU	RVMachineFunctionInfo.h	/^  unsigned getMinWavesPerEU() const {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:unsigned
getMinWavesPerEU	Utils/RVGPUBaseInfo.cpp	/^unsigned getMinWavesPerEU(const MCSubtargetInfo *STI) {$/;"	f	namespace:llvm::RVGPU::IsaInfo	typeref:typename:unsigned
getMinimumNopSize	MCTargetDesc/RVGPUAsmBackend.cpp	/^unsigned RVGPUAsmBackend::getMinimumNopSize() const {$/;"	f	class:RVGPUAsmBackend	typeref:typename:unsigned
getModRefInfoMask	RVGPUAliasAnalysis.cpp	/^ModRefInfo RVGPUAAResult::getModRefInfoMask(const MemoryLocation &Loc,$/;"	f	class:RVGPUAAResult	typeref:typename:ModRefInfo
getMode	RVGPURegBankCombiner.cpp	/^SIModeRegisterDefaults RVGPURegBankCombinerImpl::getMode() const {$/;"	f	class:__anon00ae19330111::RVGPURegBankCombinerImpl	typeref:typename:SIModeRegisterDefaults
getMode	RVMachineFunctionInfo.h	/^  SIModeRegisterDefaults getMode() const { return Mode; }$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:SIModeRegisterDefaults
getModeRegisterRoundMode	SIModeRegisterDefaults.cpp	/^static constexpr uint32_t getModeRegisterRoundMode(uint32_t HWFP32Val,$/;"	f	typeref:typename:uint32_t	file:
getModifiers	AsmParser/RVGPUAsmParser.cpp	/^  Modifiers getModifiers() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:Modifiers	file:
getModifiersOperand	AsmParser/RVGPUAsmParser.cpp	/^    int64_t getModifiersOperand() const {$/;"	f	struct:__anon672fa8550111::RVGPUOperand::Modifiers	typeref:typename:int64_t	file:
getMopState	SIFormMemoryClauses.cpp	/^static unsigned getMopState(const MachineOperand &MO) {$/;"	f	typeref:typename:unsigned	file:
getMovOpc	SIFoldOperands.cpp	/^static unsigned getMovOpc(bool IsScalar) {$/;"	f	typeref:typename:unsigned	file:
getMovOpcode	RVInstrInfo.cpp	/^unsigned RVInstrInfo::getMovOpcode(const TargetRegisterClass *DstRC) const {$/;"	f	class:RVInstrInfo	typeref:typename:unsigned
getMsgId	Utils/RVGPUBaseInfo.cpp	/^int64_t getMsgId(const StringRef Name, const MCSubtargetInfo &STI) {$/;"	f	namespace:llvm::RVGPU::SendMsg	typeref:typename:int64_t
getMsgIdMask	Utils/RVGPUBaseInfo.cpp	/^static uint64_t getMsgIdMask(const MCSubtargetInfo &STI) {$/;"	f	namespace:llvm::RVGPU::SendMsg	typeref:typename:uint64_t	file:
getMsgName	Utils/RVGPUBaseInfo.cpp	/^StringRef getMsgName(int64_t MsgId, const MCSubtargetInfo &STI) {$/;"	f	namespace:llvm::RVGPU::SendMsg	typeref:typename:StringRef
getMsgOpId	Utils/RVGPUBaseInfo.cpp	/^int64_t getMsgOpId(int64_t MsgId, const StringRef Name) {$/;"	f	namespace:llvm::RVGPU::SendMsg	typeref:typename:int64_t
getMsgOpName	Utils/RVGPUBaseInfo.cpp	/^StringRef getMsgOpName(int64_t MsgId, int64_t OpId,$/;"	f	namespace:llvm::RVGPU::SendMsg	typeref:typename:StringRef
getMsgPackDoc	Utils/RVGPUPALMetadata.h	/^  msgpack::Document *getMsgPackDoc() { return &MsgPackDoc; }$/;"	f	class:llvm::RVGPUPALMetadata	typeref:typename:msgpack::Document *
getMul24	RVGPUISelLowering.cpp	/^static SDValue getMul24(SelectionDAG &DAG, const SDLoc &SL,$/;"	f	typeref:typename:SDValue	file:
getMul64	RVGPUCodeGenPrepare.cpp	/^static std::pair<Value*, Value*> getMul64(IRBuilder<> &Builder,$/;"	f	typeref:typename:std::pair<Value *,Value * >	file:
getMulHu	RVGPUCodeGenPrepare.cpp	/^static Value* getMulHu(IRBuilder<> &Builder, Value *LHS, Value *RHS) {$/;"	f	typeref:typename:Value *	file:
getMultigridSyncArgImplicitArgPosition	Utils/RVGPUBaseInfo.cpp	/^unsigned getMultigridSyncArgImplicitArgPosition(unsigned CodeObjectVersion) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:unsigned
getNSAMaxSize	AsmParser/RVGPUAsmParser.cpp	/^  unsigned getNSAMaxSize(bool HasSampler = false) const {$/;"	f	class:__anon672fa8550111::RVGPUAsmParser	typeref:typename:unsigned	file:
getNSAMaxSize	GCNSubtarget.h	/^  unsigned getNSAMaxSize(bool HasSampler = false) const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:unsigned
getNSAMaxSize	Utils/RVGPUBaseInfo.cpp	/^unsigned getNSAMaxSize(const MCSubtargetInfo &STI, bool HasSampler) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:unsigned
getNSAThreshold	RVGPUSubtarget.cpp	/^unsigned GCNSubtarget::getNSAThreshold(const MachineFunction &MF) const {$/;"	f	class:GCNSubtarget	typeref:typename:unsigned
getName	RVGPUAttributor.cpp	/^  const std::string getName() const override { return "AARVAttributes"; }$/;"	f	struct:__anon512e119a0111::AARVAttributes	typeref:typename:const std::string	file:
getName	RVGPUAttributor.cpp	/^  const std::string getName() const override { return "AARVWavesPerEU"; }$/;"	f	struct:__anon512e119a0111::AARVWavesPerEU	typeref:typename:const std::string	file:
getName	RVGPUAttributor.cpp	/^  const std::string getName() const override {$/;"	f	struct:__anon512e119a0111::AARVFlatWorkGroupSize	typeref:typename:const std::string	file:
getName	RVGPUAttributor.cpp	/^  const std::string getName() const override {$/;"	f	struct:__anon512e119a0111::AAUniformWorkGroupSize	typeref:typename:const std::string	file:
getName	RVGPUInstructionSelector.cpp	/^const char *RVGPUInstructionSelector::getName() { return DEBUG_TYPE; }$/;"	f	class:RVGPUInstructionSelector	typeref:typename:const char *
getName	RVGPULibFunc.cpp	/^  static StringRef getName(ID Id) { return Table[toIndex(Id)].Name; }$/;"	f	class:__anona5afe38d0111::UnmangledFuncInfo	typeref:typename:StringRef	file:
getName	RVGPULibFunc.cpp	/^std::string RVGPUMangledLibFunc::getName() const {$/;"	f	class:RVGPUMangledLibFunc	typeref:typename:std::string
getName	RVGPULibFunc.h	/^  std::string getName() const override { return Name; }$/;"	f	class:llvm::RVGPUUnmangledLibFunc	typeref:typename:std::string
getName	RVGPULibFunc.h	/^  std::string getName() const { return Impl->getName(); }$/;"	f	class:llvm::RVGPULibFunc	typeref:typename:std::string
getName	RVGPUPostLegalizerCombiner.cpp	/^  static const char *getName() { return "RVGPUPostLegalizerCombinerImpl"; }$/;"	f	class:__anonf94dcdde0111::RVGPUPostLegalizerCombinerImpl	typeref:typename:const char *	file:
getName	RVGPUPreLegalizerCombiner.cpp	/^  static const char *getName() { return "RVGPUPreLegalizerCombinerImpl"; }$/;"	f	class:__anonb779c2ff0111::RVGPUPreLegalizerCombinerImpl	typeref:typename:const char *	file:
getName	RVGPURegBankCombiner.cpp	/^  static const char *getName() { return "RVGPURegBankCombinerImpl"; }$/;"	f	class:__anon00ae19330111::RVGPURegBankCombinerImpl	typeref:typename:const char *	file:
getNamedBarrierOp	RVGPUInstructionSelector.cpp	/^unsigned getNamedBarrierOp(bool HasInlineConst, Intrinsic::ID IntrID) {$/;"	f	typeref:typename:unsigned
getNamedImmOperand	RVInstrInfo.h	/^  int64_t getNamedImmOperand(const MachineInstr &MI, unsigned OpName) const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:int64_t
getNamedOperand	RVInstrInfo.cpp	/^MachineOperand *RVInstrInfo::getNamedOperand(MachineInstr &MI,$/;"	f	class:RVInstrInfo	typeref:typename:MachineOperand *
getNamedOperand	RVInstrInfo.h	/^  const MachineOperand *getNamedOperand(const MachineInstr &MI,$/;"	f	class:llvm::RVInstrInfo	typeref:typename:LLVM_READONLY const MachineOperand *
getNativeFunction	RVGPULibCalls.cpp	/^FunctionCallee RVGPULibCalls::getNativeFunction(Module *M,$/;"	f	class:RVGPULibCalls	typeref:typename:FunctionCallee
getNeg	SIPeepholeSDWA.cpp	/^  bool getNeg() const { return Neg; }$/;"	f	class:__anon00bd52b30111::SDWASrcOperand	typeref:typename:bool	file:
getNegatedExpression	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::getNegatedExpression($/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
getNewOpcode	SILoadStoreOptimizer.cpp	/^unsigned SILoadStoreOptimizer::getNewOpcode(const CombineInfo &CI,$/;"	f	class:SILoadStoreOptimizer	typeref:typename:unsigned
getNext	GCNRegPressure.h	/^  MachineBasicBlock::const_iterator getNext() const { return NextMI; }$/;"	f	class:llvm::GCNDownwardRPTracker	typeref:typename:MachineBasicBlock::const_iterator
getNextParam	RVGPULibFunc.cpp	/^RVGPULibFunc::Param ParamIterator::getNextParam() {$/;"	f	class:__anona5afe38d0111::ParamIterator	typeref:typename:RVGPULibFunc::Param
getNextStage	GCNSchedStrategy.cpp	/^GCNSchedStageID GCNSchedStrategy::getNextStage() const {$/;"	f	class:GCNSchedStrategy	typeref:typename:GCNSchedStageID
getNextSystemSGPR	RVMachineFunctionInfo.cpp	/^MCPhysReg RVMachineFunctionInfo::getNextSystemSGPR() const {$/;"	f	class:RVMachineFunctionInfo	typeref:typename:MCPhysReg
getNextUserSGPR	RVMachineFunctionInfo.cpp	/^MCPhysReg RVMachineFunctionInfo::getNextUserSGPR() const {$/;"	f	class:RVMachineFunctionInfo	typeref:typename:MCPhysReg
getNextVGPRToSGPRCopyId	SIFixSGPRCopies.cpp	/^  unsigned getNextVGPRToSGPRCopyId() { return ++NextVGPRToSGPRCopyID; }$/;"	f	class:__anond27816180111::SIFixSGPRCopies	typeref:typename:unsigned	file:
getNfmt	Utils/RVGPUBaseInfo.cpp	/^int64_t getNfmt(const StringRef Name, const MCSubtargetInfo &STI) {$/;"	f	namespace:llvm::RVGPU::MTBUFFormat	typeref:typename:int64_t
getNfmtLookupTable	Utils/RVGPUBaseInfo.cpp	/^static StringLiteral const *getNfmtLookupTable(const MCSubtargetInfo &STI) {$/;"	f	namespace:llvm::RVGPU::MTBUFFormat	typeref:typename:StringLiteral const *	file:
getNfmtName	Utils/RVGPUBaseInfo.cpp	/^StringRef getNfmtName(unsigned Id, const MCSubtargetInfo &STI) {$/;"	f	namespace:llvm::RVGPU::MTBUFFormat	typeref:typename:StringRef
getNoPreservedMask	RVRegisterInfo.cpp	/^const uint32_t *RVRegisterInfo::getNoPreservedMask() const {$/;"	f	class:RVRegisterInfo	typeref:typename:const uint32_t *
getNodePriority	GCNILPSched.cpp	/^unsigned GCNILPScheduler::getNodePriority(const SUnit *SU) const {$/;"	f	class:GCNILPScheduler	typeref:typename:unsigned
getNonSoftWaitcntOpcode	RVInstrInfo.h	/^  static unsigned getNonSoftWaitcntOpcode(unsigned Opcode) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:unsigned
getNotReadySuccessors	GCNMinRegStrategy.cpp	/^int GCNMinRegScheduler::getNotReadySuccessors(const SUnit *SU) const {$/;"	f	class:GCNMinRegScheduler	typeref:typename:int
getNullPointerValue	RVGPUTargetMachine.cpp	/^int64_t RVGPUTargetMachine::getNullPointerValue(unsigned AddrSpace) {$/;"	f	class:RVGPUTargetMachine	typeref:typename:int64_t
getNumArgs	RVGPULibFunc.cpp	/^  static unsigned getNumArgs(ID Id) { return Table[toIndex(Id)].NumArgs; }$/;"	f	class:__anona5afe38d0111::UnmangledFuncInfo	typeref:typename:unsigned	file:
getNumArgs	RVGPULibFunc.cpp	/^unsigned ManglingRule::getNumArgs() const {$/;"	f	class:__anona5afe38d0111::ManglingRule	typeref:typename:unsigned
getNumArgs	RVGPULibFunc.cpp	/^unsigned RVGPUMangledLibFunc::getNumArgs() const {$/;"	f	class:RVGPUMangledLibFunc	typeref:typename:unsigned
getNumArgs	RVGPULibFunc.cpp	/^unsigned RVGPUUnmangledLibFunc::getNumArgs() const {$/;"	f	class:RVGPUUnmangledLibFunc	typeref:typename:unsigned
getNumArgs	RVGPULibFunc.h	/^  unsigned getNumArgs() const { return Impl->getNumArgs(); }$/;"	f	class:llvm::RVGPULibFunc	typeref:typename:unsigned
getNumChannelsFromSubReg	RVRegisterInfo.h	/^  unsigned getNumChannelsFromSubReg(unsigned SubReg) const {$/;"	f	class:llvm::RVRegisterInfo	typeref:typename:unsigned
getNumCoveredRegs	RVRegisterInfo.h	/^  static unsigned getNumCoveredRegs(LaneBitmask LM) {$/;"	f	class:llvm::RVRegisterInfo	typeref:typename:unsigned
getNumExtraSGPRs	Utils/RVGPUBaseInfo.cpp	/^unsigned getNumExtraSGPRs(const MCSubtargetInfo *STI, bool VCCUsed,$/;"	f	namespace:llvm::RVGPU::IsaInfo	typeref:typename:unsigned
getNumFixupKinds	MCTargetDesc/RVGPUAsmBackend.cpp	/^  unsigned getNumFixupKinds() const override { return RVGPU::NumTargetFixupKinds; };$/;"	f	class:__anon6b905a380111::RVGPUAsmBackend	typeref:typename:unsigned	file:
getNumFlatOffsetBits	Utils/RVGPUBaseInfo.cpp	/^unsigned getNumFlatOffsetBits(const MCSubtargetInfo &ST) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:unsigned
getNumFreeUserSGPRs	RVGPUSubtarget.cpp	/^unsigned GCNUserSGPRUsageInfo::getNumFreeUserSGPRs() {$/;"	f	class:GCNUserSGPRUsageInfo	typeref:typename:unsigned
getNumHighLatencySuccessors	SIMachineScheduler.h	/^  unsigned getNumHighLatencySuccessors() const {$/;"	f	class:llvm::SIScheduleBlock	typeref:typename:unsigned
getNumKernargPreloadSGPRs	GCNSubtarget.h	/^  unsigned getNumKernargPreloadSGPRs() const { return NumKernargPreloadSGPRs; }$/;"	f	class:llvm::GCNUserSGPRUsageInfo	typeref:typename:unsigned
getNumKernargPreloadedSGPRs	RVMachineFunctionInfo.h	/^  unsigned getNumKernargPreloadedSGPRs() const {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:unsigned
getNumLeads	RVGPULibFunc.cpp	/^   int getNumLeads() const { return (Lead[0] ? 1 : 0) + (Lead[1] ? 1 : 0); }$/;"	f	struct:__anona5afe38d0111::ManglingRule	typeref:typename:int	file:
getNumOperandsNoGlue	RVInstrInfo.cpp	/^static unsigned getNumOperandsNoGlue(SDNode *Node) {$/;"	f	typeref:typename:unsigned	file:
getNumPreds	GCNMinRegStrategy.cpp	/^  unsigned getNumPreds(const SUnit *SU) const {$/;"	f	class:__anon807286a30111::GCNMinRegScheduler	typeref:typename:unsigned	file:
getNumPreloadedSGPRs	RVMachineFunctionInfo.h	/^  unsigned getNumPreloadedSGPRs() const {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:unsigned
getNumRegistersForCallingConv	RVISelLowering.cpp	/^unsigned RVTargetLowering::getNumRegistersForCallingConv(LLVMContext &Context,$/;"	f	class:RVTargetLowering	typeref:typename:unsigned
getNumSGPRBlocks	Utils/RVGPUBaseInfo.cpp	/^unsigned getNumSGPRBlocks(const MCSubtargetInfo *STI, unsigned NumSGPRs) {$/;"	f	namespace:llvm::RVGPU::IsaInfo	typeref:typename:unsigned
getNumSources	RVGPUMachineCFGStructurizer.cpp	/^unsigned PHILinearize::getNumSources(unsigned DestReg) {$/;"	f	class:PHILinearize	typeref:typename:unsigned
getNumSpilledSGPRs	RVMachineFunctionInfo.h	/^  unsigned getNumSpilledSGPRs() const {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:unsigned
getNumSpilledVGPRs	RVMachineFunctionInfo.h	/^  unsigned getNumSpilledVGPRs() const {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:unsigned
getNumSubRegsForSpillOp	RVRegisterInfo.cpp	/^static unsigned getNumSubRegsForSpillOp(unsigned Op) {$/;"	f	typeref:typename:unsigned	file:
getNumUsedUserSGPRs	GCNSubtarget.h	/^  unsigned getNumUsedUserSGPRs() const { return NumUsedUserSGPRs; }$/;"	f	class:llvm::GCNUserSGPRUsageInfo	typeref:typename:unsigned
getNumUserSGPRForField	GCNSubtarget.h	/^  static unsigned getNumUserSGPRForField(UserSGPRID ID) {$/;"	f	class:llvm::GCNUserSGPRUsageInfo	typeref:typename:unsigned
getNumUserSGPRs	RVMachineFunctionInfo.h	/^  unsigned getNumUserSGPRs() const {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:unsigned
getNumVGPRBlocks	Utils/RVGPUBaseInfo.cpp	/^unsigned getNumVGPRBlocks(const MCSubtargetInfo *STI, unsigned NumVGPRs,$/;"	f	namespace:llvm::RVGPU::IsaInfo	typeref:typename:unsigned
getNumWaitStates	RVInstrInfo.cpp	/^unsigned RVInstrInfo::getNumWaitStates(const MachineInstr &MI) {$/;"	f	class:RVInstrInfo	typeref:typename:unsigned
getNumWavesPerEUWithNumVGPRs	Utils/RVGPUBaseInfo.cpp	/^unsigned getNumWavesPerEUWithNumVGPRs(const MCSubtargetInfo *STI,$/;"	f	namespace:llvm::RVGPU::IsaInfo	typeref:typename:unsigned
getNumberOfRegisters	RVGPUTargetTransformInfo.cpp	/^unsigned GCNTTIImpl::getNumberOfRegisters(unsigned RCID) const {$/;"	f	class:GCNTTIImpl	typeref:typename:unsigned
getOModValue	SIFoldOperands.cpp	/^static int getOModValue(unsigned Opc, int64_t Val) {$/;"	f	typeref:typename:int	file:
getObjFileLowering	RVGPUTargetMachine.h	/^  TargetLoweringObjectFile *getObjFileLowering() const override {$/;"	f	class:llvm::RVGPUTargetMachine	typeref:typename:TargetLoweringObjectFile *
getOccupancy	GCNRegPressure.h	/^  unsigned getOccupancy(const GCNSubtarget &ST) const {$/;"	f	struct:llvm::GCNRegPressure	typeref:typename:unsigned
getOccupancy	RVMachineFunctionInfo.h	/^  unsigned getOccupancy() const {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:unsigned
getOccupancyWithLocalMemSize	RVGPUSubtarget.cpp	/^RVGPUSubtarget::getOccupancyWithLocalMemSize(const MachineFunction &MF) const {$/;"	f	class:RVGPUSubtarget	typeref:typename:unsigned
getOccupancyWithLocalMemSize	RVGPUSubtarget.cpp	/^unsigned RVGPUSubtarget::getOccupancyWithLocalMemSize(uint32_t Bytes,$/;"	f	class:RVGPUSubtarget	typeref:typename:unsigned
getOccupancyWithNumSGPRs	RVGPUSubtarget.cpp	/^unsigned GCNSubtarget::getOccupancyWithNumSGPRs(unsigned SGPRs) const {$/;"	f	class:GCNSubtarget	typeref:typename:unsigned
getOccupancyWithNumVGPRs	RVGPUSubtarget.cpp	/^unsigned GCNSubtarget::getOccupancyWithNumVGPRs(unsigned NumVGPRs) const {$/;"	f	class:GCNSubtarget	typeref:typename:unsigned
getOffenMUBUFLoad	RVRegisterInfo.cpp	/^static int getOffenMUBUFLoad(unsigned Opc) {$/;"	f	typeref:typename:int	file:
getOffenMUBUFStore	RVRegisterInfo.cpp	/^static int getOffenMUBUFStore(unsigned Opc) {$/;"	f	typeref:typename:int	file:
getOffsetMUBUFLoad	RVRegisterInfo.cpp	/^static int getOffsetMUBUFLoad(unsigned Opc) {$/;"	f	typeref:typename:int	file:
getOffsetMUBUFStore	RVRegisterInfo.cpp	/^static int getOffsetMUBUFStore(unsigned Opc) {$/;"	f	typeref:typename:int	file:
getOldOpndValue	GCNDPPCombine.cpp	/^MachineOperand *GCNDPPCombine::getOldOpndValue(MachineOperand &OldOpnd) const {$/;"	f	class:GCNDPPCombine	typeref:typename:MachineOperand *
getOpFltSemantics	AsmParser/RVGPUAsmParser.cpp	/^static const fltSemantics *getOpFltSemantics(uint8_t OperandType) {$/;"	f	typeref:typename:const fltSemantics *	file:
getOpRegClass	RVInstrInfo.cpp	/^const TargetRegisterClass *RVInstrInfo::getOpRegClass(const MachineInstr &MI,$/;"	f	class:RVInstrInfo	typeref:typename:const TargetRegisterClass *
getOpSize	RVInstrInfo.h	/^  unsigned getOpSize(const MachineInstr &MI, unsigned OpNo) const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:unsigned
getOpSize	RVInstrInfo.h	/^  unsigned getOpSize(uint16_t Opcode, unsigned OpNo) const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:unsigned
getOpcodeWidth	SILoadStoreOptimizer.cpp	/^static unsigned getOpcodeWidth(const MachineInstr &MI, const RVInstrInfo &TII) {$/;"	f	namespace:__anon677101620111	typeref:typename:unsigned	file:
getOperandLoc	AsmParser/RVGPUAsmParser.cpp	/^RVGPUAsmParser::getOperandLoc(std::function<bool(const RVGPUOperand&)> Test,$/;"	f	class:RVGPUAsmParser	typeref:typename:SMLoc
getOperandRegClass	GCNRewritePartialRegUses.cpp	/^GCNRewritePartialRegUses::getOperandRegClass(MachineOperand &MO) const {$/;"	f	class:GCNRewritePartialRegUses	typeref:typename:const TargetRegisterClass *
getOperandRegClass	RVGPUISelDAGToDAG.cpp	/^const TargetRegisterClass *RVGPUDAGToDAGISel::getOperandRegClass(SDNode *N,$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:const TargetRegisterClass *
getOperandSize	GCNDPPCombine.cpp	/^[[maybe_unused]] static unsigned getOperandSize(MachineInstr &MI, unsigned Idx,$/;"	f	typeref:typename:unsigned	file:
getOperandSize	Utils/RVGPUBaseInfo.h	/^inline unsigned getOperandSize(const MCInstrDesc &Desc, unsigned OpNo) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:LLVM_READNONE unsigned
getOperandSize	Utils/RVGPUBaseInfo.h	/^inline unsigned getOperandSize(const MCOperandInfo &OpInfo) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:LLVM_READNONE unsigned
getOprIdx	Utils/RVGPUBaseInfo.cpp	/^static int getOprIdx(const StringRef Name, const CustomOperand<T> OpInfo[],$/;"	f	namespace:llvm::RVGPU	typeref:typename:int	file:
getOprIdx	Utils/RVGPUBaseInfo.cpp	/^static int getOprIdx(int Id, const CustomOperand<T> OpInfo[], int OpInfoSize,$/;"	f	namespace:llvm::RVGPU	typeref:typename:int	file:
getOprIdx	Utils/RVGPUBaseInfo.cpp	/^static int getOprIdx(std::function<bool(const CustomOperand<T> &)> Test,$/;"	f	namespace:llvm::RVGPU	typeref:typename:int	file:
getOptTable	RVGPULibCalls.cpp	/^static TableRef getOptTable(RVGPULibFunc::EFuncId id) {$/;"	f	typeref:typename:TableRef	file:
getOptimalMemOpType	RVISelLowering.cpp	/^EVT RVTargetLowering::getOptimalMemOpType($/;"	f	class:RVTargetLowering	typeref:typename:EVT
getOptionalScavengeFI	RVMachineFunctionInfo.h	/^  std::optional<int> getOptionalScavengeFI() const { return ScavengeFI; }$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:std::optional<int>
getOrCreateFixedStackObject	RVGPUISelLowering.cpp	/^static int getOrCreateFixedStackObject(MachineFrameInfo &MFI, unsigned Size,$/;"	f	typeref:typename:int	file:
getOrInsertFunction	RVGPULibFunc.cpp	/^FunctionCallee RVGPULibFunc::getOrInsertFunction(Module *M,$/;"	f	class:RVGPULibFunc	typeref:typename:FunctionCallee
getOrdering	SIMemoryLegalizer.cpp	/^  AtomicOrdering getOrdering() const {$/;"	f	class:__anon46517b8a0111::SIMemOpInfo	typeref:typename:AtomicOrdering	file:
getOrderingAddrSpace	SIMemoryLegalizer.cpp	/^  SIAtomicAddrSpace getOrderingAddrSpace() const {$/;"	f	class:__anon46517b8a0111::SIMemOpInfo	typeref:typename:SIAtomicAddrSpace	file:
getOutArgumentType	RVGPURewriteOutArguments.cpp	/^Type *RVGPURewriteOutArguments::getOutArgumentType(Argument &Arg) const {$/;"	f	class:RVGPURewriteOutArguments	typeref:typename:Type *
getOutRegs	SIMachineScheduler.h	/^  std::set<unsigned> &getOutRegs() { return LiveOutRegs; }$/;"	f	class:llvm::SIScheduleBlock	typeref:typename:std::set<unsigned> &
getOutRegs	SIMachineScheduler.h	/^  std::set<unsigned> getOutRegs() {$/;"	f	class:llvm::SIScheduleDAGMI	typeref:typename:std::set<unsigned>
getPALMajorVersion	Utils/RVGPUPALMetadata.cpp	/^unsigned RVGPUPALMetadata::getPALMajorVersion() { return getPALVersion(0); }$/;"	f	class:RVGPUPALMetadata	typeref:typename:unsigned
getPALMetadata	MCTargetDesc/RVGPUTargetStreamer.h	/^  RVGPUPALMetadata *getPALMetadata() { return &PALMetadata; }$/;"	f	class:llvm::RVGPUTargetStreamer	typeref:typename:RVGPUPALMetadata *
getPALMinorVersion	Utils/RVGPUPALMetadata.cpp	/^unsigned RVGPUPALMetadata::getPALMinorVersion() { return getPALVersion(1); }$/;"	f	class:RVGPUPALMetadata	typeref:typename:unsigned
getPALVersion	Utils/RVGPUPALMetadata.cpp	/^unsigned RVGPUPALMetadata::getPALVersion(unsigned idx) {$/;"	f	class:RVGPUPALMetadata	typeref:typename:unsigned
getPGMRSrc1	SIProgramInfo.cpp	/^uint64_t SIProgramInfo::getPGMRSrc1(CallingConv::ID CC,$/;"	f	class:SIProgramInfo	typeref:typename:uint64_t
getPGMRSrc2	SIProgramInfo.cpp	/^uint64_t SIProgramInfo::getPGMRSrc2(CallingConv::ID CC) const {$/;"	f	class:SIProgramInfo	typeref:typename:uint64_t
getPHIDestReg	RVGPUMachineCFGStructurizer.cpp	/^static unsigned getPHIDestReg(MachineInstr &PHI) {$/;"	f	typeref:typename:unsigned	file:
getPHINonRegionIndices	RVGPUMachineCFGStructurizer.cpp	/^void RVGPUMachineCFGStructurizer::getPHINonRegionIndices($/;"	f	class:RVGPUMachineCFGStructurizer	typeref:typename:void
getPHINumInputs	RVGPUMachineCFGStructurizer.cpp	/^static unsigned getPHINumInputs(MachineInstr &PHI) {$/;"	f	typeref:typename:unsigned	file:
getPHIPred	RVGPUMachineCFGStructurizer.cpp	/^static MachineBasicBlock *getPHIPred(MachineInstr &PHI, unsigned Index) {$/;"	f	typeref:typename:MachineBasicBlock *	file:
getPHIRegionIndices	RVGPUMachineCFGStructurizer.cpp	/^void RVGPUMachineCFGStructurizer::getPHIRegionIndices($/;"	f	class:RVGPUMachineCFGStructurizer	typeref:typename:void
getPHISourceReg	RVGPUMachineCFGStructurizer.cpp	/^static unsigned getPHISourceReg(MachineInstr &PHI, unsigned Index) {$/;"	f	typeref:typename:unsigned	file:
getPSInputAddr	RVMachineFunctionInfo.h	/^  unsigned getPSInputAddr() const {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:unsigned
getPSInputEnable	RVMachineFunctionInfo.h	/^  unsigned getPSInputEnable() const {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:unsigned
getParent	RVGPUMachineCFGStructurizer.cpp	/^  LinearizedRegion *getParent() { return Parent; }$/;"	f	class:__anon1695b1f50211::LinearizedRegion	typeref:typename:LinearizedRegion *	file:
getParent	RVGPUMachineCFGStructurizer.cpp	/^  RegionMRT *getParent() { return Parent; }$/;"	f	class:__anon1695b1f50211::MRT	typeref:typename:RegionMRT *	file:
getParentInst	SIPeepholeSDWA.cpp	/^  MachineInstr *getParentInst() const { return Target->getParent(); }$/;"	f	class:__anon00bd52b30111::SDWAOperand	typeref:typename:MachineInstr *	file:
getParserTable	Utils/RVKernelCodeTUtils.cpp	/^static ArrayRef<ParseFx> getParserTable() {$/;"	f	typeref:typename:ArrayRef<ParseFx>	file:
getPassName	GCNCreateVOPD.cpp	/^  StringRef getPassName() const override {$/;"	f	class:__anon7e59fb9b0111::GCNCreateVOPD	typeref:typename:StringRef	file:
getPassName	GCNDPPCombine.cpp	/^  StringRef getPassName() const override { return "GCN DPP Combine"; }$/;"	f	class:__anon46a5cf8f0111::GCNDPPCombine	typeref:typename:StringRef	file:
getPassName	GCNNSAReassign.cpp	/^  StringRef getPassName() const override { return "GCN NSA Reassign"; }$/;"	f	class:__anon7e838c8c0111::GCNNSAReassign	typeref:typename:StringRef	file:
getPassName	GCNPreRALongBranchReg.cpp	/^  StringRef getPassName() const override {$/;"	f	class:__anon4605b2240111::GCNPreRALongBranchReg	typeref:typename:StringRef	file:
getPassName	GCNPreRAOptimizations.cpp	/^  StringRef getPassName() const override {$/;"	f	class:__anon3997f4420111::GCNPreRAOptimizations	typeref:typename:StringRef	file:
getPassName	GCNRewritePartialRegUses.cpp	/^  StringRef getPassName() const override {$/;"	f	class:__anon37bf8c3b0111::GCNRewritePartialRegUses	typeref:typename:StringRef	file:
getPassName	RVGPUAnnotateKernelFeatures.cpp	/^  StringRef getPassName() const override {$/;"	f	class:__anondc582c840111::RVGPUAnnotateKernelFeatures	typeref:typename:StringRef	file:
getPassName	RVGPUAnnotateUniformValues.cpp	/^  StringRef getPassName() const override {$/;"	f	class:__anon9c77d1d40111::RVGPUAnnotateUniformValues	typeref:typename:StringRef	file:
getPassName	RVGPUAsmPrinter.cpp	/^StringRef RVGPUAsmPrinter::getPassName() const {$/;"	f	class:RVGPUAsmPrinter	typeref:typename:StringRef
getPassName	RVGPUAttributor.cpp	/^  StringRef getPassName() const override { return "RVGPU Attributor"; }$/;"	f	class:__anon512e119a0111::RVGPUAttributorLegacy	typeref:typename:StringRef	file:
getPassName	RVGPUCodeGenPrepare.cpp	/^  StringRef getPassName() const override { return "RVGPU IR optimizations"; }$/;"	f	class:__anond35e324e0111::RVGPUCodeGenPrepare	typeref:typename:StringRef	file:
getPassName	RVGPUGlobalISelDivergenceLowering.cpp	/^  StringRef getPassName() const override {$/;"	f	class:__anon4d1a276b0111::RVGPUGlobalISelDivergenceLowering	typeref:typename:StringRef	file:
getPassName	RVGPUISelDAGToDAG.cpp	/^StringRef RVGPUDAGToDAGISel::getPassName() const {$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:StringRef
getPassName	RVGPULateCodeGenPrepare.cpp	/^  StringRef getPassName() const override {$/;"	f	class:__anon4d9375140111::RVGPULateCodeGenPrepare	typeref:typename:StringRef	file:
getPassName	RVGPULowerKernelAttributes.cpp	/^  StringRef getPassName() const override {$/;"	f	class:__anon7b93ed1b0111::RVGPULowerKernelAttributes	typeref:typename:StringRef	file:
getPassName	RVGPUPostLegalizerCombiner.cpp	/^  StringRef getPassName() const override {$/;"	f	class:__anonf94dcdde0111::RVGPUPostLegalizerCombiner	typeref:typename:StringRef	file:
getPassName	RVGPUPreLegalizerCombiner.cpp	/^  StringRef getPassName() const override {$/;"	f	class:__anonb779c2ff0111::RVGPUPreLegalizerCombiner	typeref:typename:StringRef	file:
getPassName	RVGPUPromoteAlloca.cpp	/^  StringRef getPassName() const override { return "RVGPU Promote Alloca"; }$/;"	f	class:__anonea904d1c0111::RVGPUPromoteAlloca	typeref:typename:StringRef	file:
getPassName	RVGPUPromoteAlloca.cpp	/^  StringRef getPassName() const override {$/;"	f	class:__anonea904d1c0111::RVGPUPromoteAllocaToVector	typeref:typename:StringRef	file:
getPassName	RVGPURegBankCombiner.cpp	/^  StringRef getPassName() const override { return "RVGPURegBankCombiner"; }$/;"	f	class:__anon00ae19330111::RVGPURegBankCombiner	typeref:typename:StringRef	file:
getPassName	RVGPURegBankSelect.cpp	/^StringRef RVGPURegBankSelect::getPassName() const {$/;"	f	class:RVGPURegBankSelect	typeref:typename:StringRef
getPassName	RVGPURemoveIncompatibleFunctions.cpp	/^  StringRef getPassName() const override {$/;"	f	class:__anonbd23f2080111::RVGPURemoveIncompatibleFunctions	typeref:typename:StringRef	file:
getPassName	RVGPURewriteUndefForPHI.cpp	/^  StringRef getPassName() const override {$/;"	f	class:__anon56776a060111::RVGPURewriteUndefForPHILegacy	typeref:typename:StringRef	file:
getPassName	RVGPUSetWavePriority.cpp	/^  StringRef getPassName() const override { return "Set wave priority"; }$/;"	f	class:__anonfc3f584b0111::RVGPUSetWavePriority	typeref:typename:StringRef	file:
getPassName	SIAnnotateControlFlow.cpp	/^  StringRef getPassName() const override { return "SI annotate control flow"; }$/;"	f	class:__anond71df4850111::SIAnnotateControlFlow	typeref:typename:StringRef	file:
getPassName	SIFixSGPRCopies.cpp	/^  StringRef getPassName() const override { return "SI Fix SGPR copies"; }$/;"	f	class:__anond27816180111::SIFixSGPRCopies	typeref:typename:StringRef	file:
getPassName	SIFixVGPRCopies.cpp	/^  StringRef getPassName() const override { return "SI Fix VGPR copies"; }$/;"	f	class:__anon8438c2fb0111::SIFixVGPRCopies	typeref:typename:StringRef	file:
getPassName	SIFoldOperands.cpp	/^  StringRef getPassName() const override { return "SI Fold Operands"; }$/;"	f	class:__anon07e514130111::SIFoldOperands	typeref:typename:StringRef	file:
getPassName	SIFormMemoryClauses.cpp	/^  StringRef getPassName() const override {$/;"	f	class:__anon8c5c3e4f0111::SIFormMemoryClauses	typeref:typename:StringRef	file:
getPassName	SIInsertWaitcnts.cpp	/^  StringRef getPassName() const override {$/;"	f	class:__anona6cbb7940211::SIInsertWaitcnts	typeref:typename:StringRef	file:
getPassName	SILateBranchLowering.cpp	/^  StringRef getPassName() const override {$/;"	f	class:__anon4aa55dad0111::SILateBranchLowering	typeref:typename:StringRef	file:
getPassName	SILoadStoreOptimizer.cpp	/^  StringRef getPassName() const override { return "SI Load Store Optimizer"; }$/;"	f	class:__anon677101620111::SILoadStoreOptimizer	typeref:typename:StringRef	file:
getPassName	SILowerControlFlow.cpp	/^  StringRef getPassName() const override {$/;"	f	class:__anon0ce7c3340111::SILowerControlFlow	typeref:typename:StringRef	file:
getPassName	SILowerI1Copies.cpp	/^  StringRef getPassName() const override { return "SI Lower i1 Copies"; }$/;"	f	class:__anone16a92980111::SILowerI1Copies	typeref:typename:StringRef	file:
getPassName	SILowerWWMCopies.cpp	/^  StringRef getPassName() const override { return "SI Lower WWM Copies"; }$/;"	f	class:__anon4731d9190111::SILowerWWMCopies	typeref:typename:StringRef	file:
getPassName	SIMemoryLegalizer.cpp	/^  StringRef getPassName() const override {$/;"	f	class:__anon46517b8a0111::SIMemoryLegalizer	typeref:typename:StringRef	file:
getPassName	SIOptimizeExecMasking.cpp	/^  StringRef getPassName() const override {$/;"	f	class:__anon15773df20111::SIOptimizeExecMasking	typeref:typename:StringRef	file:
getPassName	SIOptimizeExecMaskingPreRA.cpp	/^  StringRef getPassName() const override {$/;"	f	class:__anon5760078c0111::SIOptimizeExecMaskingPreRA	typeref:typename:StringRef	file:
getPassName	SIOptimizeVGPRLiveRange.cpp	/^  StringRef getPassName() const override {$/;"	f	class:__anon3fc4a09f0111::SIOptimizeVGPRLiveRange	typeref:typename:StringRef	file:
getPassName	SIPeepholeSDWA.cpp	/^  StringRef getPassName() const override { return "SI Peephole SDWA"; }$/;"	f	class:__anon00bd52b30111::SIPeepholeSDWA	typeref:typename:StringRef	file:
getPassName	SIPostRABundler.cpp	/^  StringRef getPassName() const override {$/;"	f	class:__anona97e3cd70111::SIPostRABundler	typeref:typename:StringRef	file:
getPassName	SIShrinkInstructions.cpp	/^  StringRef getPassName() const override { return "SI Shrink Instructions"; }$/;"	f	class:__anon665027960111::SIShrinkInstructions	typeref:typename:StringRef	file:
getPassName	SIWholeQuadMode.cpp	/^  StringRef getPassName() const override { return "SI Whole Quad Mode"; }$/;"	f	class:__anon41aff2810111::SIWholeQuadMode	typeref:typename:StringRef	file:
getPeelingPreferences	RVGPUTargetTransformInfo.cpp	/^void GCNTTIImpl::getPeelingPreferences(Loop *L, ScalarEvolution &SE,$/;"	f	class:GCNTTIImpl	typeref:typename:void
getPeelingPreferences	RVGPUTargetTransformInfo.cpp	/^void RVGPUTTIImpl::getPeelingPreferences(Loop *L, ScalarEvolution &SE,$/;"	f	class:RVGPUTTIImpl	typeref:typename:void
getPerVGPRData	RVRegisterInfo.cpp	/^  PerVGPRData getPerVGPRData() {$/;"	f	struct:llvm::SGPRSpillBuilder	typeref:typename:PerVGPRData	file:
getPermuteMask	RVISelLowering.cpp	/^static uint32_t getPermuteMask(SDValue V) {$/;"	f	typeref:typename:uint32_t	file:
getPointerMemTy	RVISelLowering.cpp	/^MVT RVTargetLowering::getPointerMemTy(const DataLayout &DL, unsigned AS) const {$/;"	f	class:RVTargetLowering	typeref:typename:MVT
getPointerRegClass	RVRegisterInfo.cpp	/^const TargetRegisterClass *RVRegisterInfo::getPointerRegClass($/;"	f	class:RVRegisterInfo	typeref:typename:const TargetRegisterClass *
getPointerTy	RVISelLowering.cpp	/^MVT RVTargetLowering::getPointerTy(const DataLayout &DL, unsigned AS) const {$/;"	f	class:RVTargetLowering	typeref:typename:MVT
getPopcntSupport	RVGPUTargetTransformInfo.h	/^  TTI::PopcntSupportKind getPopcntSupport(unsigned TyWidth) {$/;"	f	class:llvm::GCNTTIImpl	typeref:typename:TTI::PopcntSupportKind
getPostRAMutations	RVGPUSubtarget.cpp	/^void GCNSubtarget::getPostRAMutations($/;"	f	class:GCNSubtarget	typeref:typename:void
getPow2ScalarType	RVGPULegalizerInfo.cpp	/^static LLT getPow2ScalarType(LLT Ty) {$/;"	f	typeref:typename:LLT	file:
getPow2VectorType	RVGPULegalizerInfo.cpp	/^static LLT getPow2VectorType(LLT Ty) {$/;"	f	typeref:typename:LLT	file:
getPownType	RVGPULibCalls.cpp	/^static FunctionType *getPownType(FunctionType *FT) {$/;"	f	typeref:typename:FunctionType *	file:
getPredicate	AsmParser/RVGPUAsmParser.cpp	/^  auto getPredicate(std::function<bool(const RVGPUOperand &Op)> P) const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:auto	file:
getPredicatedAddrSpace	RVGPUTargetMachine.cpp	/^RVGPUTargetMachine::getPredicatedAddrSpace(const Value *V) const {$/;"	f	class:RVGPUTargetMachine	typeref:typename:std::pair<const Value *,unsigned>
getPreds	SIMachineScheduler.h	/^  const std::vector<SIScheduleBlock*>& getPreds() const { return Preds; }$/;"	f	class:llvm::SIScheduleBlock	typeref:typename:const std::vector<SIScheduleBlock * > &
getPrefLoopAlignment	RVISelLowering.cpp	/^Align RVTargetLowering::getPrefLoopAlignment(MachineLoop *ML) const {$/;"	f	class:RVTargetLowering	typeref:typename:Align
getPreferredSelectRegClass	RVInstrInfo.cpp	/^RVInstrInfo::getPreferredSelectRegClass(unsigned Size) const {$/;"	f	class:RVInstrInfo	typeref:typename:const TargetRegisterClass *
getPreferredShiftAmountTy	RVISelLowering.cpp	/^LLT RVTargetLowering::getPreferredShiftAmountTy(LLT Ty) const {$/;"	f	class:RVTargetLowering	typeref:typename:LLT
getPreferredVectorAction	RVISelLowering.cpp	/^RVTargetLowering::getPreferredVectorAction(MVT VT) const {$/;"	f	class:RVTargetLowering	typeref:typename:TargetLoweringBase::LegalizeTypeAction
getPrefetchDistance	RVGPUTargetTransformInfo.cpp	/^unsigned GCNTTIImpl::getPrefetchDistance() const {$/;"	f	class:GCNTTIImpl	typeref:typename:unsigned
getPrefix	RVGPULibFunc.h	/^  ENamePrefix getPrefix() const { return FKind; }$/;"	f	class:llvm::RVGPULibFuncImpl	typeref:typename:ENamePrefix
getPrefix	RVGPULibFunc.h	/^  ENamePrefix getPrefix() const { return Impl->getPrefix(); }$/;"	f	class:llvm::RVGPULibFunc	typeref:typename:ENamePrefix
getPreloadedReg	RVMachineFunctionInfo.h	/^  MCRegister getPreloadedReg(RVGPUFunctionArgInfo::PreloadedValue Value) const {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:MCRegister
getPreloadedValue	RVGPUArgumentUsageInfo.cpp	/^RVGPUFunctionArgInfo::getPreloadedValue($/;"	f	class:RVGPUFunctionArgInfo	typeref:typename:std::tuple<const ArgDescriptor *,const TargetRegisterClass *,LLT>
getPreloadedValue	RVISelLowering.cpp	/^SDValue RVTargetLowering::getPreloadedValue(SelectionDAG &DAG,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
getPreloadedValue	RVMachineFunctionInfo.h	/^  getPreloadedValue(RVGPUFunctionArgInfo::PreloadedValue Value) const {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:std::tuple<const ArgDescriptor *,const TargetRegisterClass *,LLT>
getPreservedOperand	SIPeepholeSDWA.cpp	/^  MachineOperand *getPreservedOperand() const { return Preserve; }$/;"	f	class:__anon00bd52b30111::SDWADstPreserveOperand	typeref:typename:MachineOperand *	file:
getPressure	GCNRegPressure.h	/^  GCNRegPressure getPressure() const { return CurPressure; }$/;"	f	class:llvm::GCNRPTracker	typeref:typename:GCNRegPressure
getPrevCompParsedSrcNum	Utils/RVGPUBaseInfo.h	/^  unsigned getPrevCompParsedSrcNum() const {$/;"	f	class:llvm::RVGPU::VOPD::ComponentLayout	typeref:typename:unsigned
getPrevCompSrcNum	Utils/RVGPUBaseInfo.h	/^  unsigned getPrevCompSrcNum() const {$/;"	f	class:llvm::RVGPU::VOPD::ComponentLayout	typeref:typename:unsigned
getPrinterTable	Utils/RVKernelCodeTUtils.cpp	/^static ArrayRef<PrintFx> getPrinterTable() {$/;"	f	typeref:typename:ArrayRef<PrintFx>	file:
getPrivateSegmentWaveByteOffsetSystemSGPR	RVMachineFunctionInfo.h	/^  Register getPrivateSegmentWaveByteOffsetSystemSGPR() const {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:Register
getPrologEpilogSGPRSaveRestoreInfo	RVMachineFunctionInfo.h	/^  getPrologEpilogSGPRSaveRestoreInfo(Register Reg) const {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:const PrologEpilogSGPRSaveRestoreInfo &
getPrologEpilogSGPRSpills	RVMachineFunctionInfo.h	/^  const PrologEpilogSGPRSpillsMap &getPrologEpilogSGPRSpills() const {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:const PrologEpilogSGPRSpillsMap &
getProperlyAlignedRC	RVRegisterInfo.cpp	/^RVRegisterInfo::getProperlyAlignedRC(const TargetRegisterClass *RC) const {$/;"	f	class:RVRegisterInfo	typeref:typename:const TargetRegisterClass *
getPtrBaseWithConstantOffset	RVGPUInstructionSelector.cpp	/^RVGPUInstructionSelector::getPtrBaseWithConstantOffset($/;"	f	class:RVGPUInstructionSelector	typeref:typename:std::pair<Register,int64_t>
getQuarterRateInstrCost	RVGPUTargetTransformInfo.h	/^  static inline int getQuarterRateInstrCost(TTI::TargetCostKind CostKind) {$/;"	f	class:llvm::GCNTTIImpl	typeref:typename:int
getQueuePtrUserSGPR	RVMachineFunctionInfo.h	/^  Register getQueuePtrUserSGPR() const {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:Register
getRVGPUDwarfFlavour	RVGPUSubtarget.cpp	/^RVGPUDwarfFlavour RVGPUSubtarget::getRVGPUDwarfFlavour() const {$/;"	f	class:RVGPUSubtarget	typeref:typename:RVGPUDwarfFlavour
getRVGPUTargetMachine	RVGPUTargetMachine.h	/^  RVGPUTargetMachine &getRVGPUTargetMachine() const {$/;"	f	class:llvm::RVGPUPassConfig	typeref:typename:RVGPUTargetMachine &
getReadySuccessors	GCNMinRegStrategy.cpp	/^int GCNMinRegScheduler::getReadySuccessors(const SUnit *SU) const {$/;"	f	class:GCNMinRegScheduler	typeref:typename:int
getRealRegPressure	GCNSchedStrategy.cpp	/^GCNScheduleDAGMILive::getRealRegPressure(unsigned RegionIdx) const {$/;"	f	class:GCNScheduleDAGMILive	typeref:typename:GCNRegPressure
getReasonStr	SIMachineScheduler.cpp	/^static const char *getReasonStr(SIScheduleCandReason Reason) {$/;"	f	typeref:typename:const char *	file:
getRecipEstimate	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::getRecipEstimate(SDValue Operand,$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
getReferencedAddresses	Disassembler/RVGPUDisassembler.h	/^  ArrayRef<uint64_t> getReferencedAddresses() const override {$/;"	f	class:llvm::RVGPUSymbolizer	typeref:typename:ArrayRef<uint64_t>
getReg	AsmParser/RVGPUAsmParser.cpp	/^  unsigned getReg() const override {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:unsigned	file:
getReg	RVMachineFunctionInfo.h	/^  Register getReg() const { return Reg; }$/;"	f	class:llvm::PrologEpilogSGPRSaveRestoreInfo	typeref:typename:Register
getRegAsmName	RVRegisterInfo.cpp	/^StringRef RVRegisterInfo::getRegAsmName(MCRegister Reg) const {$/;"	f	class:RVRegisterInfo	typeref:typename:StringRef
getRegBankFromRegClass	RVGPURegisterBankInfo.cpp	/^RVGPURegisterBankInfo::getRegBankFromRegClass(const TargetRegisterClass &RC,$/;"	f	class:RVGPURegisterBankInfo	typeref:typename:const RegisterBank &
getRegBankID	RVGPURegisterBankInfo.cpp	/^RVGPURegisterBankInfo::getRegBankID(Register Reg,$/;"	f	class:RVGPURegisterBankInfo	typeref:typename:unsigned
getRegBankInfo	GCNSubtarget.h	/^  const RVGPURegisterBankInfo *getRegBankInfo() const override {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:const RVGPURegisterBankInfo *
getRegBitWidth	RVRegisterInfo.cpp	/^unsigned RVGPU::getRegBitWidth(const TargetRegisterClass &RC) {$/;"	f	class:RVGPU	typeref:typename:unsigned
getRegBitWidth	Utils/RVGPUBaseInfo.cpp	/^unsigned getRegBitWidth(const MCRegisterClass &RC) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:unsigned
getRegBitWidth	Utils/RVGPUBaseInfo.cpp	/^unsigned getRegBitWidth(unsigned RCID) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:unsigned
getRegClass	AsmParser/RVGPUAsmParser.cpp	/^static int getRegClass(RegisterKind Is, unsigned RegWidth) {$/;"	f	typeref:typename:int	file:
getRegClass	RVInstrInfo.cpp	/^const TargetRegisterClass *RVInstrInfo::getRegClass(const MCInstrDesc &TID,$/;"	f	class:RVInstrInfo	typeref:typename:const TargetRegisterClass *
getRegClass	RVRegisterInfo.cpp	/^RVRegisterInfo::getRegClass(unsigned RCID) const {$/;"	f	class:RVRegisterInfo	typeref:typename:const TargetRegisterClass *
getRegClassAlignmentNumBits	RVRegisterInfo.h	/^  unsigned getRegClassAlignmentNumBits(const TargetRegisterClass *RC) const {$/;"	f	class:llvm::RVRegisterInfo	typeref:typename:unsigned
getRegClassFor	RVISelLowering.cpp	/^RVTargetLowering::getRegClassFor(MVT VT, bool isDivergent) const {$/;"	f	class:RVTargetLowering	typeref:typename:const TargetRegisterClass *
getRegClassForOperandReg	RVRegisterInfo.cpp	/^RVRegisterInfo::getRegClassForOperandReg(const MachineRegisterInfo &MRI,$/;"	f	class:RVRegisterInfo	typeref:typename:const TargetRegisterClass *
getRegClassForReg	RVRegisterInfo.cpp	/^RVRegisterInfo::getRegClassForReg(const MachineRegisterInfo &MRI,$/;"	f	class:RVRegisterInfo	typeref:typename:const TargetRegisterClass *
getRegClassForSizeOnBank	RVRegisterInfo.cpp	/^RVRegisterInfo::getRegClassForSizeOnBank(unsigned Size,$/;"	f	class:RVRegisterInfo	typeref:typename:const TargetRegisterClass *
getRegClassForTypeOnBank	RVRegisterInfo.h	/^  getRegClassForTypeOnBank(LLT Ty, const RegisterBank &Bank) const {$/;"	f	class:llvm::RVRegisterInfo	typeref:typename:const TargetRegisterClass *
getRegClassName	Disassembler/RVGPUDisassembler.cpp	/^const char* RVGPUDisassembler::getRegClassName(unsigned RegClassID) const {$/;"	f	class:RVGPUDisassembler	typeref:typename:const char *
getRegClassWithShiftedSubregs	GCNRewritePartialRegUses.cpp	/^GCNRewritePartialRegUses::getRegClassWithShiftedSubregs($/;"	f	class:GCNRewritePartialRegUses	typeref:typename:const TargetRegisterClass *
getRegForInlineAsmConstraint	RVISelLowering.cpp	/^RVTargetLowering::getRegForInlineAsmConstraint(const TargetRegisterInfo *TRI_,$/;"	f	class:RVTargetLowering	typeref:typename:std::pair<unsigned,const TargetRegisterClass * >
getRegIndices	Utils/RVGPUBaseInfo.cpp	/^InstInfo::RegIndices InstInfo::getRegIndices($/;"	f	class:llvm::RVGPU::VOPD::InstInfo	typeref:typename:InstInfo::RegIndices
getRegInterval	SIInsertWaitcnts.cpp	/^RegInterval WaitcntBrackets::getRegInterval(const MachineInstr *MI,$/;"	f	class:WaitcntBrackets	typeref:typename:RegInterval
getRegKind	GCNRegPressure.cpp	/^unsigned GCNRegPressure::getRegKind(Register Reg,$/;"	f	class:GCNRegPressure	typeref:typename:unsigned
getRegLiveThroughMask	GCNRegPressure.cpp	/^getRegLiveThroughMask(const MachineRegisterInfo &MRI, const LiveIntervals &LIS,$/;"	f	file:
getRegLoc	AsmParser/RVGPUAsmParser.cpp	/^RVGPUAsmParser::getRegLoc(unsigned Reg,$/;"	f	class:RVGPUAsmParser	typeref:typename:SMLoc
getRegNum	AsmParser/RVGPUAsmParser.cpp	/^static bool getRegNum(StringRef Str, unsigned& Num) {$/;"	f	typeref:typename:bool	file:
getRegOpRC	SIFoldOperands.cpp	/^static const TargetRegisterClass *getRegOpRC(const MachineRegisterInfo &MRI,$/;"	f	typeref:typename:const TargetRegisterClass *	file:
getRegOperandSize	Utils/RVGPUBaseInfo.cpp	/^unsigned getRegOperandSize(const MCRegisterInfo *MRI, const MCInstrDesc &Desc,$/;"	f	namespace:llvm::RVGPU	typeref:typename:unsigned
getRegOrUndef	RVInstrInfo.cpp	/^TargetInstrInfo::RegSubRegPair getRegOrUndef(const MachineOperand &RegOpnd) {$/;"	f	typeref:typename:TargetInstrInfo::RegSubRegPair	file:
getRegPressure	GCNRegPressure.h	/^GCNRegPressure getRegPressure(const MachineRegisterInfo &MRI,$/;"	f	namespace:llvm	typeref:typename:GCNRegPressure
getRegPressureLimit	RVRegisterInfo.cpp	/^unsigned RVRegisterInfo::getRegPressureLimit(const TargetRegisterClass *RC,$/;"	f	class:RVRegisterInfo	typeref:typename:unsigned
getRegPressureSetLimit	RVRegisterInfo.cpp	/^unsigned RVRegisterInfo::getRegPressureSetLimit(const MachineFunction &MF,$/;"	f	class:RVRegisterInfo	typeref:typename:unsigned
getRegScore	SIInsertWaitcnts.cpp	/^  unsigned getRegScore(int GprNo, InstCounterType T) const {$/;"	f	class:__anona6cbb7940211::WaitcntBrackets	typeref:typename:unsigned	file:
getRegSeqInit	SIFoldOperands.cpp	/^bool SIFoldOperands::getRegSeqInit($/;"	f	class:SIFoldOperands	typeref:typename:bool
getRegSequenceSubReg	RVInstrInfo.cpp	/^llvm::getRegSequenceSubReg(MachineInstr &MI, unsigned SubReg) {$/;"	f	class:llvm	typeref:typename:TargetInstrInfo::RegSubRegPair
getRegSplitParts	RVRegisterInfo.cpp	/^ArrayRef<int16_t> RVRegisterInfo::getRegSplitParts(const TargetRegisterClass *RC,$/;"	f	class:RVRegisterInfo	typeref:typename:ArrayRef<int16_t>
getRegSubRegPair	RVInstrInfo.h	/^TargetInstrInfo::RegSubRegPair getRegSubRegPair(const MachineOperand &O) {$/;"	f	namespace:llvm	typeref:typename:TargetInstrInfo::RegSubRegPair
getRegUnitPressureSets	RVRegisterInfo.cpp	/^const int *RVRegisterInfo::getRegUnitPressureSets(unsigned RegUnit) const {$/;"	f	class:RVRegisterInfo	typeref:typename:const int *
getRegionMRT	RVGPUMachineCFGStructurizer.cpp	/^  RegionMRT *getRegionMRT() override { return this; }$/;"	f	class:__anon1695b1f50211::RegionMRT	typeref:typename:RegionMRT *	file:
getRegionMRT	RVGPUMachineCFGStructurizer.cpp	/^  RegionMRT *getRegionMRT() { return RMRT; }$/;"	f	class:__anon1695b1f50211::LinearizedRegion	typeref:typename:RegionMRT *	file:
getRegionMRT	RVGPUMachineCFGStructurizer.cpp	/^  RegionMRT *getRegionMRT() { return RMRT; }$/;"	f	class:__anon1695b1f50311::RVGPUMachineCFGStructurizer	typeref:typename:RegionMRT *	file:
getRegionMRT	RVGPUMachineCFGStructurizer.cpp	/^  virtual RegionMRT *getRegionMRT() { return nullptr; }$/;"	f	class:__anon1695b1f50211::MRT	typeref:typename:RegionMRT *	file:
getRegionPressure	GCNIterativeScheduler.cpp	/^GCNIterativeScheduler::getRegionPressure(MachineBasicBlock::iterator Begin,$/;"	f	class:GCNIterativeScheduler	typeref:typename:GCNRegPressure
getRegionPressure	GCNIterativeScheduler.h	/^  GCNRegPressure getRegionPressure(const Region &R) const {$/;"	f	class:llvm::GCNIterativeScheduler	typeref:typename:GCNRegPressure
getRegister	RVGPUArgumentUsageInfo.h	/^  MCRegister getRegister() const {$/;"	f	struct:llvm::ArgDescriptor	typeref:typename:MCRegister
getRegister	Utils/RVGPUPALMetadata.cpp	/^unsigned RVGPUPALMetadata::getRegister(unsigned Reg) {$/;"	f	class:RVGPUPALMetadata	typeref:typename:unsigned
getRegisterBitWidth	RVGPUTargetTransformInfo.cpp	/^GCNTTIImpl::getRegisterBitWidth(TargetTransformInfo::RegisterKind K) const {$/;"	f	class:GCNTTIImpl	typeref:typename:TypeSize
getRegisterByName	RVISelLowering.cpp	/^Register RVTargetLowering::getRegisterByName(const char* RegName, LLT VT,$/;"	f	class:RVTargetLowering	typeref:typename:Register
getRegisterInfo	GCNSubtarget.h	/^  const RVRegisterInfo *getRegisterInfo() const override {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:const RVRegisterInfo *
getRegisterInfo	RVInstrInfo.h	/^  const RVRegisterInfo &getRegisterInfo() const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:const RVRegisterInfo &
getRegisterName	Utils/RVGPUPALMetadata.cpp	/^static const char *getRegisterName(unsigned RegNum) {$/;"	f	typeref:typename:const char *	file:
getRegisterTypeForCallingConv	RVISelLowering.cpp	/^MVT RVTargetLowering::getRegisterTypeForCallingConv(LLVMContext &Context,$/;"	f	class:RVTargetLowering	typeref:typename:MVT
getRegisters	Utils/RVGPUPALMetadata.cpp	/^msgpack::MapDocNode RVGPUPALMetadata::getRegisters() {$/;"	f	class:RVGPUPALMetadata	typeref:typename:msgpack::MapDocNode
getRegs	SILoadStoreOptimizer.cpp	/^static AddressRegs getRegs(unsigned Opc, const RVInstrInfo &TII) {$/;"	f	namespace:__anon677101620111	typeref:typename:AddressRegs	file:
getRegularReg	AsmParser/RVGPUAsmParser.cpp	/^RVGPUAsmParser::getRegularReg(RegisterKind RegKind,$/;"	f	class:RVGPUAsmParser	typeref:typename:unsigned
getRegularRegInfo	AsmParser/RVGPUAsmParser.cpp	/^static const RegInfo* getRegularRegInfo(StringRef Str) {$/;"	f	typeref:typename:const RegInfo *	file:
getRelocType	MCTargetDesc/RVGPUELFObjectWriter.cpp	/^unsigned RVGPUELFObjectWriter::getRelocType(MCContext &Ctx,$/;"	f	class:RVGPUELFObjectWriter	typeref:typename:unsigned
getReplacedOperand	SIPeepholeSDWA.cpp	/^  MachineOperand *getReplacedOperand() const { return Replaced; }$/;"	f	class:__anon00bd52b30111::SDWAOperand	typeref:typename:MachineOperand *	file:
getReqdWorkGroupSize	RVGPUSubtarget.cpp	/^static unsigned getReqdWorkGroupSize(const Function &Kernel, unsigned Dim) {$/;"	f	typeref:typename:unsigned	file:
getRequiredProperties	GCNDPPCombine.cpp	/^  MachineFunctionProperties getRequiredProperties() const override {$/;"	f	class:__anon46a5cf8f0111::GCNDPPCombine	typeref:typename:MachineFunctionProperties	file:
getRequiredProperties	SILoadStoreOptimizer.cpp	/^  MachineFunctionProperties getRequiredProperties() const override {$/;"	f	class:__anon677101620111::SILoadStoreOptimizer	typeref:typename:MachineFunctionProperties	file:
getRequiredProperties	SIOptimizeVGPRLiveRange.cpp	/^  MachineFunctionProperties getRequiredProperties() const override {$/;"	f	class:__anon3fc4a09f0111::SIOptimizeVGPRLiveRange	typeref:typename:MachineFunctionProperties	file:
getReservedNumSGPRs	RVGPUSubtarget.cpp	/^unsigned GCNSubtarget::getReservedNumSGPRs(const Function &F) const {$/;"	f	class:GCNSubtarget	typeref:typename:unsigned
getReservedNumSGPRs	RVGPUSubtarget.cpp	/^unsigned GCNSubtarget::getReservedNumSGPRs(const MachineFunction &MF) const {$/;"	f	class:GCNSubtarget	typeref:typename:unsigned
getReservedRegs	RVRegisterInfo.cpp	/^BitVector RVRegisterInfo::getReservedRegs(const MachineFunction &MF) const {$/;"	f	class:RVRegisterInfo	typeref:typename:BitVector
getResourceInfo	RVGPUResourceUsageAnalysis.h	/^  const SIFunctionResourceInfo &getResourceInfo(const Function *F) const {$/;"	f	struct:llvm::RVGPUResourceUsageAnalysis	typeref:typename:const SIFunctionResourceInfo &
getResult	RVGPUAliasAnalysis.h	/^  RVGPUAAResult &getResult() { return *Result; }$/;"	f	class:llvm::RVGPUAAWrapperPass	typeref:typename:RVGPUAAResult &
getResult	RVGPUAliasAnalysis.h	/^  const RVGPUAAResult &getResult() const { return *Result; }$/;"	f	class:llvm::RVGPUAAWrapperPass	typeref:typename:const RVGPUAAResult &
getRetType	RVGPULibFunc.cpp	/^static RVGPULibFunc::Param getRetType(RVGPULibFunc::EFuncId id,$/;"	f	namespace:__anona5afe38d0111	typeref:typename:RVGPULibFunc::Param	file:
getReturnAddressReg	RVRegisterInfo.cpp	/^MCRegister RVRegisterInfo::getReturnAddressReg(const MachineFunction &MF) const {$/;"	f	class:RVRegisterInfo	typeref:typename:MCRegister
getRootMetadata	RVGPUHSAMetadataStreamer.h	/^  msgpack::DocNode &getRootMetadata(StringRef Key) {$/;"	f	class:llvm::RVGPU::HSRV::MetadataStreamerMsgPackV4	typeref:typename:msgpack::DocNode &
getRsrc1Reg	Utils/RVGPUPALMetadata.cpp	/^static unsigned getRsrc1Reg(CallingConv::ID CC) {$/;"	f	typeref:typename:unsigned	file:
getRsrcReg	RVGPUAsmPrinter.cpp	/^static unsigned getRsrcReg(CallingConv::ID CallConv) {$/;"	f	typeref:typename:unsigned	file:
getRvKernelCode	RVGPUAsmPrinter.cpp	/^void RVGPUAsmPrinter::getRvKernelCode(rv_kernel_code_t &Out,$/;"	f	class:RVGPUAsmPrinter	typeref:typename:void
getRvhsaCodeObjectVersion	Utils/RVGPUBaseInfo.cpp	/^unsigned getRvhsaCodeObjectVersion() {$/;"	f	namespace:llvm::RVGPU	typeref:typename:unsigned
getRvhsaKernelCodeProperties	RVGPUAsmPrinter.cpp	/^uint16_t RVGPUAsmPrinter::getRvhsaKernelCodeProperties($/;"	f	class:RVGPUAsmPrinter	typeref:typename:uint16_t
getRvhsaKernelDescriptor	RVGPUAsmPrinter.cpp	/^rvhsa::kernel_descriptor_t RVGPUAsmPrinter::getRvhsaKernelDescriptor($/;"	f	class:RVGPUAsmPrinter	typeref:typename:rvhsa::kernel_descriptor_t
getSDWASrcEncoding	MCTargetDesc/RVGPUMCCodeEmitter.cpp	/^void RVGPUMCCodeEmitter::getSDWASrcEncoding(const MCInst &MI, unsigned OpNo,$/;"	f	class:RVGPUMCCodeEmitter	typeref:typename:void
getSDWAVopcDstEncoding	MCTargetDesc/RVGPUMCCodeEmitter.cpp	/^void RVGPUMCCodeEmitter::getSDWAVopcDstEncoding($/;"	f	class:RVGPUMCCodeEmitter	typeref:typename:void
getSGID	RVGPUIGroupLP.cpp	/^  int getSGID() { return SGID; }$/;"	f	class:__anon61b122dc0111::SchedGroup	typeref:typename:int	file:
getSGPRAllocGranule	GCNSubtarget.h	/^  unsigned getSGPRAllocGranule() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:unsigned
getSGPRAllocGranule	Utils/RVGPUBaseInfo.cpp	/^unsigned getSGPRAllocGranule(const MCSubtargetInfo *STI) {$/;"	f	namespace:llvm::RVGPU::IsaInfo	typeref:typename:unsigned
getSGPRClassForBitWidth	RVRegisterInfo.cpp	/^RVRegisterInfo::getSGPRClassForBitWidth(unsigned BitWidth) {$/;"	f	class:RVRegisterInfo	typeref:typename:const TargetRegisterClass *
getSGPREncodingGranule	GCNSubtarget.h	/^  unsigned getSGPREncodingGranule() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:unsigned
getSGPREncodingGranule	Utils/RVGPUBaseInfo.cpp	/^unsigned getSGPREncodingGranule(const MCSubtargetInfo *STI) {$/;"	f	namespace:llvm::RVGPU::IsaInfo	typeref:typename:unsigned
getSGPRForEXECCopy	RVMachineFunctionInfo.h	/^  Register getSGPRForEXECCopy() const { return SGPRForEXECCopy; }$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:Register
getSGPRNum	GCNRegPressure.h	/^  unsigned getSGPRNum() const { return Value[SGPR32]; }$/;"	f	struct:llvm::GCNRegPressure	typeref:typename:unsigned
getSGPROpMapping	RVGPURegisterBankInfo.cpp	/^RVGPURegisterBankInfo::getSGPROpMapping(Register Reg,$/;"	f	class:RVGPURegisterBankInfo	typeref:typename:const RegisterBankInfo::ValueMapping *
getSGPRSpillRestoreOpcode	RVInstrInfo.cpp	/^static unsigned getSGPRSpillRestoreOpcode(unsigned Size) {$/;"	f	typeref:typename:unsigned	file:
getSGPRSpillSaveOpcode	RVInstrInfo.cpp	/^static unsigned getSGPRSpillSaveOpcode(unsigned Size) {$/;"	f	typeref:typename:unsigned	file:
getSGPRSpillToPhysicalVGPRLanes	RVMachineFunctionInfo.h	/^  getSGPRSpillToPhysicalVGPRLanes(int FrameIndex) const {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:ArrayRef<RVRegisterInfo::SpilledReg>
getSGPRSpillToVirtualVGPRLanes	RVMachineFunctionInfo.h	/^  getSGPRSpillToVirtualVGPRLanes(int FrameIndex) const {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:ArrayRef<RVRegisterInfo::SpilledReg>
getSGPRSpillVGPRs	RVMachineFunctionInfo.h	/^  ArrayRef<Register> getSGPRSpillVGPRs() const { return SpillVGPRs; }$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:ArrayRef<Register>
getSGPRTuplesWeight	GCNRegPressure.h	/^  unsigned getSGPRTuplesWeight() const { return Value[SGPR_TUPLE]; }$/;"	f	struct:llvm::GCNRegPressure	typeref:typename:unsigned
getSGPRUsage	SIMachineScheduler.h	/^  unsigned getSGPRUsage() { return maxSregUsage; }$/;"	f	class:llvm::SIScheduleBlockScheduler	typeref:typename:unsigned
getSIProgramInfo	RVGPUAsmPrinter.cpp	/^void RVGPUAsmPrinter::getSIProgramInfo(SIProgramInfo &ProgInfo,$/;"	f	class:RVGPUAsmPrinter	typeref:typename:void
getSMEMIsBuffer	Utils/RVGPUBaseInfo.cpp	/^bool getSMEMIsBuffer(unsigned Opc) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
getSMEMOffsetEncoding	MCTargetDesc/RVGPUMCCodeEmitter.cpp	/^void RVGPUMCCodeEmitter::getSMEMOffsetEncoding($/;"	f	class:RVGPUMCCodeEmitter	typeref:typename:void
getSMEMOffsetLoc	AsmParser/RVGPUAsmParser.cpp	/^SMLoc RVGPUAsmParser::getSMEMOffsetLoc(const OperandVector &Operands) const {$/;"	f	class:RVGPUAsmParser	typeref:typename:SMLoc
getSMRDEncodedLiteralOffset32	Utils/RVGPUBaseInfo.cpp	/^std::optional<int64_t> getSMRDEncodedLiteralOffset32(const MCSubtargetInfo &ST,$/;"	f	namespace:llvm::RVGPU	typeref:typename:std::optional<int64_t>
getSMRDEncodedOffset	Utils/RVGPUBaseInfo.cpp	/^std::optional<int64_t> getSMRDEncodedOffset(const MCSubtargetInfo &ST,$/;"	f	namespace:llvm::RVGPU	typeref:typename:std::optional<int64_t>
getSOPPBrEncoding	MCTargetDesc/RVGPUMCCodeEmitter.cpp	/^void RVGPUMCCodeEmitter::getSOPPBrEncoding(const MCInst &MI, unsigned OpNo,$/;"	f	class:RVGPUMCCodeEmitter	typeref:typename:void
getSPDenormModeValue	RVISelLowering.cpp	/^static SDValue getSPDenormModeValue(uint32_t SPDenormMode, SelectionDAG &DAG,$/;"	f	typeref:typename:SDValue	file:
getST	RVGPUTargetTransformInfo.h	/^  const GCNSubtarget *getST() const { return ST; }$/;"	f	class:llvm::GCNTTIImpl	typeref:typename:const GCNSubtarget *
getST	RVGPUTargetTransformInfo.h	/^  const TargetSubtargetInfo *getST() const { return ST; }$/;"	f	class:llvm::RVGPUTTIImpl	typeref:typename:const TargetSubtargetInfo *
getS_CMPOpcode	RVGPUInstructionSelector.cpp	/^int RVGPUInstructionSelector::getS_CMPOpcode(CmpInst::Predicate P,$/;"	f	class:RVGPUInstructionSelector	typeref:typename:int
getSaSdstBitShift	Utils/RVGPUBaseInfo.cpp	/^inline unsigned getSaSdstBitShift() { return 0; }$/;"	f	namespace:__anonc82e9e910111	typeref:typename:unsigned
getSaSdstBitWidth	Utils/RVGPUBaseInfo.cpp	/^inline unsigned getSaSdstBitWidth() { return 1; }$/;"	f	namespace:__anonc82e9e910111	typeref:typename:unsigned
getSaluInsertionAtEnd	SILowerI1Copies.cpp	/^PhiLoweringHelper::getSaluInsertionAtEnd(MachineBasicBlock &MBB) const {$/;"	f	class:PhiLoweringHelper	typeref:typename:MachineBasicBlock::iterator
getSaveExecOp	SIOptimizeExecMasking.cpp	/^static unsigned getSaveExecOp(unsigned Opc) {$/;"	f	typeref:typename:unsigned	file:
getScalarShiftAmountTy	RVISelLowering.cpp	/^MVT RVTargetLowering::getScalarShiftAmountTy(const DataLayout &, EVT VT) const {$/;"	f	class:RVTargetLowering	typeref:typename:MVT
getScalarizeGlobalBehavior	GCNSubtarget.h	/^  bool getScalarizeGlobalBehavior() const { return ScalarizeGlobal; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
getScaledLogInput	RVGPUISelLowering.cpp	/^RVGPUTargetLowering::getScaledLogInput(SelectionDAG &DAG, const SDLoc SL,$/;"	f	class:RVGPUTargetLowering	typeref:typename:std::pair<SDValue,SDValue>
getScaledLogInput	RVGPULegalizerInfo.cpp	/^RVGPULegalizerInfo::getScaledLogInput(MachineIRBuilder &B, Register Src,$/;"	f	class:RVGPULegalizerInfo	typeref:typename:std::pair<Register,Register>
getScavengeFI	RVMachineFunctionInfo.cpp	/^int RVMachineFunctionInfo::getScavengeFI(MachineFrameInfo &MFI,$/;"	f	class:RVMachineFunctionInfo	typeref:typename:int
getSchedModel	RVInstrInfo.h	/^  const TargetSchedModel &getSchedModel() const { return SchedModel; }$/;"	f	class:llvm::RVInstrInfo	typeref:typename:const TargetSchedModel &
getScheduleMetrics	GCNSchedStrategy.cpp	/^GCNSchedStage::getScheduleMetrics(const GCNScheduleDAGMILive &DAG) {$/;"	f	class:GCNSchedStage	typeref:typename:ScheduleMetrics
getScheduleMetrics	GCNSchedStrategy.cpp	/^GCNSchedStage::getScheduleMetrics(const std::vector<SUnit> &InputSchedule) {$/;"	f	class:GCNSchedStage	typeref:typename:ScheduleMetrics
getSchedulePressure	GCNIterativeScheduler.cpp	/^GCNIterativeScheduler::getSchedulePressure(const Region &R,$/;"	f	class:GCNIterativeScheduler	typeref:typename:GCNRegPressure
getScheduledUnits	SIMachineScheduler.h	/^  std::vector<SUnit*> getScheduledUnits() { return ScheduledSUnits; }$/;"	f	class:llvm::SIScheduleBlock	typeref:typename:std::vector<SUnit * >
getScope	SIMemoryLegalizer.cpp	/^  SIAtomicScope getScope() const {$/;"	f	class:__anon46517b8a0111::SIMemOpInfo	typeref:typename:SIAtomicScope	file:
getScoreLB	SIInsertWaitcnts.cpp	/^  unsigned getScoreLB(InstCounterType T) const {$/;"	f	class:__anona6cbb7940211::WaitcntBrackets	typeref:typename:unsigned	file:
getScoreRange	SIInsertWaitcnts.cpp	/^  unsigned getScoreRange(InstCounterType T) const {$/;"	f	class:__anona6cbb7940211::WaitcntBrackets	typeref:typename:unsigned	file:
getScoreUB	SIInsertWaitcnts.cpp	/^  unsigned getScoreUB(InstCounterType T) const {$/;"	f	class:__anona6cbb7940211::WaitcntBrackets	typeref:typename:unsigned	file:
getScratchInstrOffset	RVRegisterInfo.cpp	/^int64_t RVRegisterInfo::getScratchInstrOffset(const MachineInstr *MI) const {$/;"	f	class:RVRegisterInfo	typeref:typename:int64_t
getScratchRSrcReg	RVMachineFunctionInfo.h	/^  Register getScratchRSrcReg() const {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:Register
getScratchRsrcWords23	RVInstrInfo.cpp	/^uint64_t RVInstrInfo::getScratchRsrcWords23() const {$/;"	f	class:RVInstrInfo	typeref:typename:uint64_t
getScratchSGPRCopyDstReg	RVMachineFunctionInfo.h	/^  Register getScratchSGPRCopyDstReg(Register Reg) const {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:Register
getScratchScaleFactor	RVFrameLowering.cpp	/^static unsigned getScratchScaleFactor(const GCNSubtarget &ST) {$/;"	f	typeref:typename:unsigned	file:
getScratchSizeKey	Utils/RVGPUPALMetadata.cpp	/^static unsigned getScratchSizeKey(CallingConv::ID CC) {$/;"	f	typeref:typename:unsigned	file:
getSegmentAperture	RVGPULegalizerInfo.cpp	/^Register RVGPULegalizerInfo::getSegmentAperture($/;"	f	class:RVGPULegalizerInfo	typeref:typename:Register
getSegmentAperture	RVISelLowering.cpp	/^SDValue RVTargetLowering::getSegmentAperture(unsigned AS, const SDLoc &DL,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
getSelectionDAGInfo	GCNSubtarget.h	/^  const SelectionDAGTargetInfo *getSelectionDAGInfo() const override {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:const SelectionDAGTargetInfo *
getSerializableDirectMachineOperandTargetFlags	RVInstrInfo.cpp	/^RVInstrInfo::getSerializableDirectMachineOperandTargetFlags() const {$/;"	f	class:RVInstrInfo	typeref:typename:ArrayRef<std::pair<unsigned,const char * >>
getSerializableMachineMemOperandTargetFlags	RVInstrInfo.cpp	/^RVInstrInfo::getSerializableMachineMemOperandTargetFlags() const {$/;"	f	class:RVInstrInfo	typeref:typename:ArrayRef<std::pair<MachineMemOperand::Flags,const char * >>
getSerializableTargetIndices	RVInstrInfo.cpp	/^RVInstrInfo::getSerializableTargetIndices() const {$/;"	f	class:RVInstrInfo	typeref:typename:ArrayRef<std::pair<int,const char * >>
getSetCCResultType	RVISelLowering.cpp	/^EVT RVTargetLowering::getSetCCResultType(const DataLayout &DL, LLVMContext &Ctx,$/;"	f	class:RVTargetLowering	typeref:typename:EVT
getSetRegWaitStates	GCNSubtarget.h	/^  unsigned getSetRegWaitStates() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:unsigned
getSext	SIPeepholeSDWA.cpp	/^  bool getSext() const { return Sext; }$/;"	f	class:__anon00bd52b30111::SDWASrcOperand	typeref:typename:bool	file:
getSgprClassId	Disassembler/RVGPUDisassembler.cpp	/^unsigned RVGPUDisassembler::getSgprClassId(const OpWidthTy Width) const {$/;"	f	class:RVGPUDisassembler	typeref:typename:unsigned
getShaderFunction	Utils/RVGPUPALMetadata.cpp	/^msgpack::MapDocNode RVGPUPALMetadata::getShaderFunction(StringRef Name) {$/;"	f	class:RVGPUPALMetadata	typeref:typename:msgpack::MapDocNode
getShaderFunctions	Utils/RVGPUPALMetadata.cpp	/^msgpack::MapDocNode RVGPUPALMetadata::getShaderFunctions() {$/;"	f	class:RVGPUPALMetadata	typeref:typename:msgpack::MapDocNode
getShuffleCost	RVGPUTargetTransformInfo.cpp	/^InstructionCost GCNTTIImpl::getShuffleCost(TTI::ShuffleKind Kind,$/;"	f	class:GCNTTIImpl	typeref:typename:InstructionCost
getSign32	RVGPUCodeGenPrepare.cpp	/^static Value *getSign32(Value *V, IRBuilder<> &Builder, const DataLayout *DL) {$/;"	f	typeref:typename:Value *	file:
getSingleExitNode	RVGPUMachineCFGStructurizer.cpp	/^static MachineBasicBlock *getSingleExitNode(MachineFunction &MF) {$/;"	f	typeref:typename:MachineBasicBlock *	file:
getSingleThreadOneAddressSpaceSSID	RVGPUMachineModuleInfo.h	/^  SyncScope::ID getSingleThreadOneAddressSpaceSSID() const {$/;"	f	class:llvm::RVGPUMachineModuleInfo	typeref:typename:SyncScope::ID
getSlicedVal	RVGPUCodeGenPrepare.cpp	/^  Value *getSlicedVal(BasicBlock *BB, Value *Inc, StringRef NewValName) {$/;"	f	class:VectorSlice	typeref:typename:Value *	file:
getSpecialRegForName	AsmParser/RVGPUAsmParser.cpp	/^static unsigned getSpecialRegForName(StringRef RegName) {$/;"	f	typeref:typename:unsigned	file:
getSplatConstantFP	RVISelLowering.cpp	/^static ConstantFPSDNode *getSplatConstantFP(SDValue Op) {$/;"	f	typeref:typename:ConstantFPSDNode *	file:
getSplitDestVTs	RVGPUISelLowering.cpp	/^RVGPUTargetLowering::getSplitDestVTs(const EVT &VT, SelectionDAG &DAG) const {$/;"	f	class:RVGPUTargetLowering	typeref:typename:std::pair<EVT,EVT>
getSqrtEstimate	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::getSqrtEstimate(SDValue Operand,$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
getSqrtF32	RVGPUCodeGenPrepare.cpp	/^  Function *getSqrtF32() const {$/;"	f	class:__anond35e324e0111::RVGPUCodeGenPrepareImpl	typeref:typename:Function *	file:
getSramEccSetting	Utils/RVGPUBaseInfo.h	/^  TargetIDSetting getSramEccSetting() const {$/;"	f	class:llvm::RVGPU::IsaInfo::RVGPUTargetID	typeref:typename:TargetIDSetting
getSrcMods	SIPeepholeSDWA.cpp	/^uint64_t SDWASrcOperand::getSrcMods(const RVInstrInfo *TII,$/;"	f	class:SDWASrcOperand	typeref:typename:uint64_t
getSrcOperandIndices	AsmParser/RVGPUAsmParser.cpp	/^static OperandIndices getSrcOperandIndices(unsigned Opcode,$/;"	f	typeref:typename:OperandIndices	file:
getSrcSel	SIPeepholeSDWA.cpp	/^  SdwaSel getSrcSel() const { return SrcSel; }$/;"	f	class:__anon00bd52b30111::SDWASrcOperand	typeref:typename:SdwaSel	file:
getStackAddress	RVGPUCallLowering.cpp	/^  Register getStackAddress(uint64_t Size, int64_t Offset,$/;"	f	struct:__anonad2fb0ad0111::RVGPUIncomingArgHandler	typeref:typename:Register	file:
getStackAddress	RVGPUCallLowering.cpp	/^  Register getStackAddress(uint64_t Size, int64_t Offset,$/;"	f	struct:__anonad2fb0ad0111::RVGPUOutgoingArgHandler	typeref:typename:Register	file:
getStackAddress	RVGPUCallLowering.cpp	/^  Register getStackAddress(uint64_t Size, int64_t Offset,$/;"	f	struct:__anonad2fb0ad0111::RVGPUOutgoingValueHandler	typeref:typename:Register	file:
getStackAlignment	GCNSubtarget.h	/^  Align getStackAlignment() const { return Align(16); }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:Align
getStackOffset	RVGPUArgumentUsageInfo.h	/^  unsigned getStackOffset() const {$/;"	f	struct:llvm::ArgDescriptor	typeref:typename:unsigned
getStackPtrOffsetReg	RVMachineFunctionInfo.h	/^  Register getStackPtrOffsetReg() const {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:Register
getStackWidth	RVGPUFrameLowering.cpp	/^unsigned RVGPUFrameLowering::getStackWidth(const MachineFunction &MF) const {$/;"	f	class:RVGPUFrameLowering	typeref:typename:unsigned
getStageName	Utils/RVGPUPALMetadata.cpp	/^static const char *getStageName(CallingConv::ID CC) {$/;"	f	typeref:typename:const char *	file:
getStartLoc	AsmParser/RVGPUAsmParser.cpp	/^  SMLoc getStartLoc() const override {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:SMLoc	file:
getStoreInfo	SIMemoryLegalizer.cpp	/^SIMemOpAccess::getStoreInfo(const MachineBasicBlock::iterator &MI) const {$/;"	f	class:SIMemOpAccess	typeref:typename:std::optional<SIMemOpInfo>
getStoreVectorFactor	RVGPUTargetTransformInfo.cpp	/^unsigned GCNTTIImpl::getStoreVectorFactor(unsigned VF, unsigned StoreSize,$/;"	f	class:GCNTTIImpl	typeref:typename:unsigned
getStoredType	RVGPURewriteOutArguments.cpp	/^Type *RVGPURewriteOutArguments::getStoredType(Value &Arg) const {$/;"	f	class:RVGPURewriteOutArguments	typeref:typename:Type *
getStreamer	MCTargetDesc/RVGPUTargetStreamer.cpp	/^MCELFStreamer &RVGPUTargetELFStreamer::getStreamer() {$/;"	f	class:RVGPUTargetELFStreamer	typeref:typename:MCELFStreamer &
getSubOperand64	RVGPUInstructionSelector.cpp	/^RVGPUInstructionSelector::getSubOperand64(MachineOperand &MO,$/;"	f	class:RVGPUInstructionSelector	typeref:typename:MachineOperand
getSubReg	GCNRewritePartialRegUses.cpp	/^unsigned GCNRewritePartialRegUses::getSubReg(unsigned Offset,$/;"	f	class:GCNRewritePartialRegUses	typeref:typename:unsigned
getSubRegAlignmentNumBits	RVRegisterInfo.cpp	/^RVRegisterInfo::getSubRegAlignmentNumBits(const TargetRegisterClass *RC,$/;"	f	class:RVRegisterInfo	typeref:typename:unsigned
getSubRegForIndex	SIShrinkInstructions.cpp	/^SIShrinkInstructions::getSubRegForIndex(Register Reg, unsigned Sub,$/;"	f	class:SIShrinkInstructions	typeref:typename:TargetInstrInfo::RegSubRegPair
getSubRegFromChannel	RVRegisterInfo.cpp	/^unsigned RVRegisterInfo::getSubRegFromChannel(unsigned Channel,$/;"	f	class:RVRegisterInfo	typeref:typename:unsigned
getSubRegIdxs	SILoadStoreOptimizer.cpp	/^SILoadStoreOptimizer::getSubRegIdxs(const CombineInfo &CI,$/;"	f	class:SILoadStoreOptimizer	typeref:typename:std::pair<unsigned,unsigned>
getSubtarget	RVISelLowering.cpp	/^const GCNSubtarget *RVTargetLowering::getSubtarget() const {$/;"	f	class:RVTargetLowering	typeref:typename:const GCNSubtarget *
getSubtarget	RVInstrInfo.h	/^  const GCNSubtarget &getSubtarget() const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:const GCNSubtarget &
getSubtargetImpl	RVGPUTargetMachine.cpp	/^GCNTargetMachine::getSubtargetImpl(const Function &F) const {$/;"	f	class:GCNTargetMachine	typeref:typename:const TargetSubtargetInfo *
getSucc	RVGPUMachineCFGStructurizer.cpp	/^  MachineBasicBlock *getSucc() { return Succ; }$/;"	f	class:__anon1695b1f50211::RegionMRT	typeref:typename:MachineBasicBlock *	file:
getSuccs	SIMachineScheduler.h	/^    getSuccs() const { return Succs; }$/;"	f	class:llvm::SIScheduleBlock	typeref:typename:ArrayRef<std::pair<SIScheduleBlock *,SIScheduleBlockLinkKind>>
getSuperRegClassMask	GCNRewritePartialRegUses.cpp	/^GCNRewritePartialRegUses::getSuperRegClassMask(const TargetRegisterClass *RC,$/;"	f	class:GCNRewritePartialRegUses	typeref:typename:const uint32_t *
getSyncID	RVGPUIGroupLP.cpp	/^  int getSyncID() { return SyncID; }$/;"	f	class:__anon61b122dc0111::SchedGroup	typeref:typename:int	file:
getSyncScopeInclusionOrdering	RVGPUMachineModuleInfo.h	/^  getSyncScopeInclusionOrdering(SyncScope::ID SSID) const {$/;"	f	class:llvm::RVGPUMachineModuleInfo	typeref:typename:std::optional<uint8_t>
getSystemOneAddressSpaceSSID	RVGPUMachineModuleInfo.h	/^  SyncScope::ID getSystemOneAddressSpaceSSID() const {$/;"	f	class:llvm::RVGPUMachineModuleInfo	typeref:typename:SyncScope::ID
getTLI	RVGPUTargetTransformInfo.h	/^  const RVTargetLowering *getTLI() const { return TLI; }$/;"	f	class:llvm::GCNTTIImpl	typeref:typename:const RVTargetLowering *
getTLI	RVGPUTargetTransformInfo.h	/^  const TargetLoweringBase *getTLI() const { return TLI; }$/;"	f	class:llvm::RVGPUTTIImpl	typeref:typename:const TargetLoweringBase *
getTM	RVMachineFunctionInfo.cpp	/^const GCNTargetMachine &getTM(const GCNSubtarget *STI) {$/;"	f	typeref:typename:const GCNTargetMachine &
getTRI	SIMachineScheduler.h	/^  const TargetRegisterInfo *getTRI() { return TRI; }$/;"	f	class:llvm::SIScheduleDAGMI	typeref:typename:const TargetRegisterInfo *
getTTmpIdx	Disassembler/RVGPUDisassembler.cpp	/^int RVGPUDisassembler::getTTmpIdx(unsigned Val) const {$/;"	f	class:RVGPUDisassembler	typeref:typename:int
getTableLookupKernelIndex	RVGPULowerModuleLDSPass.cpp	/^  Value *getTableLookupKernelIndex(Module &M, Function *F) {$/;"	f	class:__anoncc7483b30111::RVGPULowerModuleLDS	typeref:typename:Value *	file:
getTargetID	GCNSubtarget.h	/^  const RVGPU::IsaInfo::RVGPUTargetID &getTargetID() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:const RVGPU::IsaInfo::RVGPUTargetID &
getTargetID	MCTargetDesc/RVGPUTargetStreamer.h	/^  const std::optional<RVGPU::IsaInfo::RVGPUTargetID> &getTargetID() const {$/;"	f	class:llvm::RVGPUTargetStreamer	typeref:typename:const std::optional<RVGPU::IsaInfo::RVGPUTargetID> &
getTargetID	MCTargetDesc/RVGPUTargetStreamer.h	/^  std::optional<RVGPU::IsaInfo::RVGPUTargetID> &getTargetID() {$/;"	f	class:llvm::RVGPUTargetStreamer	typeref:typename:std::optional<RVGPU::IsaInfo::RVGPUTargetID> &
getTargetIDSettingFromFeatureString	Utils/RVGPUBaseInfo.cpp	/^getTargetIDSettingFromFeatureString(StringRef FeatureString) {$/;"	f	namespace:llvm::RVGPU::IsaInfo	typeref:typename:TargetIDSetting	file:
getTargetLowering	GCNSubtarget.h	/^  const RVTargetLowering *getTargetLowering() const override {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:const RVTargetLowering *
getTargetMMOFlags	RVISelLowering.cpp	/^RVTargetLowering::getTargetMMOFlags(const Instruction &I) const {$/;"	f	class:RVTargetLowering	typeref:typename:MachineMemOperand::Flags
getTargetNodeName	RVGPUISelLowering.cpp	/^const char* RVGPUTargetLowering::getTargetNodeName(unsigned Opcode) const {$/;"	f	class:RVGPUTargetLowering	typeref:typename:const char *
getTargetOccupancy	GCNSchedStrategy.h	/^  unsigned getTargetOccupancy() { return TargetOccupancy; }$/;"	f	class:llvm::GCNSchedStrategy	typeref:typename:unsigned
getTargetOperand	SIPeepholeSDWA.cpp	/^  MachineOperand *getTargetOperand() const { return Target; }$/;"	f	class:__anon00bd52b30111::SDWAOperand	typeref:typename:MachineOperand *	file:
getTargetRegisterClass	SILoadStoreOptimizer.cpp	/^SILoadStoreOptimizer::getTargetRegisterClass(const CombineInfo &CI,$/;"	f	class:SILoadStoreOptimizer	typeref:typename:const TargetRegisterClass *
getTargetStreamer	AsmParser/RVGPUAsmParser.cpp	/^  RVGPUTargetStreamer &getTargetStreamer() {$/;"	f	class:__anon672fa8550111::RVGPUAsmParser	typeref:typename:RVGPUTargetStreamer &	file:
getTargetStreamer	RVGPUAsmPrinter.cpp	/^RVGPUTargetStreamer* RVGPUAsmPrinter::getTargetStreamer() const {$/;"	f	class:RVGPUAsmPrinter	typeref:typename:RVGPUTargetStreamer *
getTargetTransformInfo	RVGPUTargetMachine.cpp	/^GCNTargetMachine::getTargetTransformInfo(const Function &F) const {$/;"	f	class:GCNTargetMachine	typeref:typename:TargetTransformInfo
getTgtId	Utils/RVGPUBaseInfo.cpp	/^unsigned getTgtId(const StringRef Name) {$/;"	f	namespace:llvm::RVGPU::Exp	typeref:typename:unsigned
getTgtMemIntrinsic	RVGPUTargetTransformInfo.cpp	/^bool GCNTTIImpl::getTgtMemIntrinsic(IntrinsicInst *Inst,$/;"	f	class:GCNTTIImpl	typeref:typename:bool
getTgtMemIntrinsic	RVISelLowering.cpp	/^bool RVTargetLowering::getTgtMemIntrinsic(IntrinsicInfo &Info,$/;"	f	class:RVTargetLowering	typeref:typename:bool
getTgtName	Utils/RVGPUBaseInfo.cpp	/^bool getTgtName(unsigned Id, StringRef &Name, int &Index) {$/;"	f	namespace:llvm::RVGPU::Exp	typeref:typename:bool
getTheRVGPUTarget	TargetInfo/RVGPUTargetInfo.cpp	/^Target &llvm::getTheRVGPUTarget() {$/;"	f	class:llvm	typeref:typename:Target &
getToken	AsmParser/RVGPUAsmParser.cpp	/^  StringRef getToken() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:StringRef	file:
getToken	AsmParser/RVGPUAsmParser.cpp	/^RVGPUAsmParser::getToken() const {$/;"	f	class:RVGPUAsmParser	typeref:typename:AsmToken
getTokenKind	AsmParser/RVGPUAsmParser.cpp	/^RVGPUAsmParser::getTokenKind() const {$/;"	f	class:RVGPUAsmParser	typeref:typename:AsmToken::TokenKind
getTokenStr	AsmParser/RVGPUAsmParser.cpp	/^RVGPUAsmParser::getTokenStr() const {$/;"	f	class:RVGPUAsmParser	typeref:typename:StringRef
getTopRoots	GCNIterativeScheduler.cpp	/^  ArrayRef<const SUnit *> getTopRoots() const {$/;"	f	class:GCNIterativeScheduler::BuildDAG	typeref:typename:ArrayRef<const SUnit * >	file:
getTotalNumSGPRs	GCNSubtarget.h	/^  unsigned getTotalNumSGPRs() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:unsigned
getTotalNumSGPRs	RVGPUResourceUsageAnalysis.cpp	/^int32_t RVGPUResourceUsageAnalysis::SIFunctionResourceInfo::getTotalNumSGPRs($/;"	f	class:RVGPUResourceUsageAnalysis::SIFunctionResourceInfo	typeref:typename:int32_t
getTotalNumSGPRs	Utils/RVGPUBaseInfo.cpp	/^unsigned getTotalNumSGPRs(const MCSubtargetInfo *STI) {$/;"	f	namespace:llvm::RVGPU::IsaInfo	typeref:typename:unsigned
getTotalNumVGPRs	GCNSubtarget.h	/^  unsigned getTotalNumVGPRs() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:unsigned
getTotalNumVGPRs	RVGPUResourceUsageAnalysis.cpp	/^int32_t RVGPUResourceUsageAnalysis::SIFunctionResourceInfo::getTotalNumVGPRs($/;"	f	class:RVGPUResourceUsageAnalysis::SIFunctionResourceInfo	typeref:typename:int32_t
getTotalNumVGPRs	Utils/RVGPUBaseInfo.cpp	/^int32_t getTotalNumVGPRs(bool has90AInsts, int32_t ArgNumAGPR,$/;"	f	namespace:llvm::RVGPU	typeref:typename:int32_t
getTotalNumVGPRs	Utils/RVGPUBaseInfo.cpp	/^unsigned getTotalNumVGPRs(const MCSubtargetInfo *STI) {$/;"	f	namespace:llvm::RVGPU::IsaInfo	typeref:typename:unsigned
getTransitiveUsesOfLDS	RVGPULowerModuleLDSPass.cpp	/^  static LDSUsesInfoTy getTransitiveUsesOfLDS(CallGraph const &CG, Module &M) {$/;"	f	class:__anoncc7483b30111::RVGPULowerModuleLDS	typeref:typename:LDSUsesInfoTy	file:
getTrapHandlerAbi	GCNSubtarget.h	/^  TrapHandlerAbi getTrapHandlerAbi() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:TrapHandlerAbi
getTtmpClassId	Disassembler/RVGPUDisassembler.cpp	/^unsigned RVGPUDisassembler::getTtmpClassId(const OpWidthTy Width) const {$/;"	f	class:RVGPUDisassembler	typeref:typename:unsigned
getType	Utils/RVGPUPALMetadata.cpp	/^unsigned RVGPUPALMetadata::getType() const {$/;"	f	class:RVGPUPALMetadata	typeref:typename:unsigned
getTypeForExtReturn	RVGPUISelLowering.cpp	/^EVT RVGPUTargetLowering::getTypeForExtReturn(LLVMContext &Context, EVT VT,$/;"	f	class:RVGPUTargetLowering	typeref:typename:EVT
getTypeLegalizationCost	RVGPUTargetTransformInfo.cpp	/^GCNTTIImpl::getTypeLegalizationCost(Type *Ty) const {$/;"	f	class:GCNTTIImpl	typeref:typename:std::pair<InstructionCost,MVT>
getTypeName	RVGPUHSAMetadataStreamer.cpp	/^std::string MetadataStreamerMsgPackV4::getTypeName(Type *Ty,$/;"	f	class:llvm::RVGPU::HSRV::MetadataStreamerMsgPackV4	typeref:typename:std::string
getUnifiedFormat	Utils/RVGPUBaseInfo.cpp	/^int64_t getUnifiedFormat(const StringRef Name, const MCSubtargetInfo &STI) {$/;"	f	namespace:llvm::RVGPU::MTBUFFormat	typeref:typename:int64_t
getUnifiedFormatName	Utils/RVGPUBaseInfo.cpp	/^StringRef getUnifiedFormatName(unsigned Id, const MCSubtargetInfo &STI) {$/;"	f	namespace:llvm::RVGPU::MTBUFFormat	typeref:typename:StringRef
getUnmangledName	RVGPULibFunc.cpp	/^StringRef RVGPUMangledLibFunc::getUnmangledName(StringRef mangledName) {$/;"	f	class:RVGPUMangledLibFunc	typeref:typename:StringRef
getUnrollingPreferences	RVGPUTargetTransformInfo.cpp	/^void GCNTTIImpl::getUnrollingPreferences(Loop *L, ScalarEvolution &SE,$/;"	f	class:GCNTTIImpl	typeref:typename:void
getUnrollingPreferences	RVGPUTargetTransformInfo.cpp	/^void RVGPUTTIImpl::getUnrollingPreferences(Loop *L, ScalarEvolution &SE,$/;"	f	class:RVGPUTTIImpl	typeref:typename:void
getUserSGPRInfo	RVMachineFunctionInfo.h	/^  GCNUserSGPRUsageInfo &getUserSGPRInfo() { return UserSGPRInfo; }$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:GCNUserSGPRUsageInfo &
getUserSGPRInfo	RVMachineFunctionInfo.h	/^  const GCNUserSGPRUsageInfo &getUserSGPRInfo() const { return UserSGPRInfo; }$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:const GCNUserSGPRUsageInfo &
getUsesOfLDSByFunction	RVGPULowerModuleLDSPass.cpp	/^  static void getUsesOfLDSByFunction(CallGraph const &CG, Module &M,$/;"	f	class:__anoncc7483b30111::RVGPULowerModuleLDS	typeref:typename:void	file:
getVALUOp	RVInstrInfo.cpp	/^unsigned RVInstrInfo::getVALUOp(const MachineInstr &MI) const {$/;"	f	class:RVInstrInfo	typeref:typename:unsigned
getVCC	RVRegisterInfo.cpp	/^MCRegister RVRegisterInfo::getVCC() const {$/;"	f	class:RVRegisterInfo	typeref:typename:MCRegister
getVGPR64Class	RVRegisterInfo.cpp	/^const TargetRegisterClass *RVRegisterInfo::getVGPR64Class() const {$/;"	f	class:RVRegisterInfo	typeref:typename:const TargetRegisterClass *
getVGPRAllocGranule	GCNSubtarget.h	/^  unsigned getVGPRAllocGranule() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:unsigned
getVGPRAllocGranule	Utils/RVGPUBaseInfo.cpp	/^unsigned getVGPRAllocGranule(const MCSubtargetInfo *STI,$/;"	f	namespace:llvm::RVGPU::IsaInfo	typeref:typename:unsigned
getVGPRClassForBitWidth	RVRegisterInfo.cpp	/^RVRegisterInfo::getVGPRClassForBitWidth(unsigned BitWidth) const {$/;"	f	class:RVRegisterInfo	typeref:typename:const TargetRegisterClass *
getVGPREncodingGranule	GCNSubtarget.h	/^  unsigned getVGPREncodingGranule() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:unsigned
getVGPREncodingGranule	Utils/RVGPUBaseInfo.cpp	/^unsigned getVGPREncodingGranule(const MCSubtargetInfo *STI,$/;"	f	namespace:llvm::RVGPU::IsaInfo	typeref:typename:unsigned
getVGPRForAGPRCopy	RVMachineFunctionInfo.h	/^  Register getVGPRForAGPRCopy() const {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:Register
getVGPRNum	GCNRegPressure.h	/^  unsigned getVGPRNum(bool UnifiedVGPRFile) const {$/;"	f	struct:llvm::GCNRegPressure	typeref:typename:unsigned
getVGPROpMapping	RVGPURegisterBankInfo.cpp	/^RVGPURegisterBankInfo::getVGPROpMapping(Register Reg,$/;"	f	class:RVGPURegisterBankInfo	typeref:typename:const RegisterBankInfo::ValueMapping *
getVGPRSpillAGPRs	RVMachineFunctionInfo.h	/^  ArrayRef<MCPhysReg> getVGPRSpillAGPRs() const {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:ArrayRef<MCPhysReg>
getVGPRSpillLaneOrTempRegister	RVFrameLowering.cpp	/^static void getVGPRSpillLaneOrTempRegister($/;"	f	typeref:typename:void	file:
getVGPRSpillRestoreOpcode	RVInstrInfo.cpp	/^static unsigned getVGPRSpillRestoreOpcode(unsigned Size) {$/;"	f	typeref:typename:unsigned	file:
getVGPRSpillSaveOpcode	RVInstrInfo.cpp	/^static unsigned getVGPRSpillSaveOpcode(unsigned Size) {$/;"	f	typeref:typename:unsigned	file:
getVGPRToAGPRSpill	RVMachineFunctionInfo.h	/^  MCPhysReg getVGPRToAGPRSpill(int FrameIndex, unsigned Lane) const {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:MCPhysReg
getVGPRTuplesWeight	GCNRegPressure.h	/^  unsigned getVGPRTuplesWeight() const { return std::max(Value[VGPR_TUPLE],$/;"	f	struct:llvm::GCNRegPressure	typeref:typename:unsigned
getVGPRUsage	SIMachineScheduler.h	/^  unsigned getVGPRUsage() { return maxVregUsage; }$/;"	f	class:llvm::SIScheduleBlockScheduler	typeref:typename:unsigned
getVOP1IsSingle	Utils/RVGPUBaseInfo.cpp	/^bool getVOP1IsSingle(unsigned Opc) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
getVOP2IsSingle	Utils/RVGPUBaseInfo.cpp	/^bool getVOP2IsSingle(unsigned Opc) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
getVOP3IsSingle	Utils/RVGPUBaseInfo.cpp	/^bool getVOP3IsSingle(unsigned Opc) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
getVOPDComponents	Utils/RVGPUBaseInfo.cpp	/^std::pair<unsigned, unsigned> getVOPDComponents(unsigned VOPDOpcode) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:std::pair<unsigned,unsigned>
getVOPDEncodingFamily	Utils/RVGPUBaseInfo.cpp	/^unsigned getVOPDEncodingFamily(const MCSubtargetInfo &ST) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:unsigned
getVOPDFull	Utils/RVGPUBaseInfo.cpp	/^int getVOPDFull(unsigned OpX, unsigned OpY, unsigned EncodingFamily) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:int
getVOPDInstInfo	Utils/RVGPUBaseInfo.cpp	/^VOPD::InstInfo getVOPDInstInfo(const MCInstrDesc &OpX, const MCInstrDesc &OpY) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:VOPD::InstInfo
getVOPDInstInfo	Utils/RVGPUBaseInfo.cpp	/^VOPD::InstInfo getVOPDInstInfo(unsigned VOPDOpcode,$/;"	f	namespace:llvm::RVGPU	typeref:typename:VOPD::InstInfo
getVOPDOpcode	Utils/RVGPUBaseInfo.cpp	/^unsigned getVOPDOpcode(unsigned Opc) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:unsigned
getVRegSubRegDef	RVInstrInfo.cpp	/^MachineInstr *llvm::getVRegSubRegDef(const TargetInstrInfo::RegSubRegPair &P,$/;"	f	class:llvm	typeref:typename:MachineInstr *
getV_CMPOpcode	RVGPUInstructionSelector.cpp	/^static int getV_CMPOpcode(CmpInst::Predicate P, unsigned Size,$/;"	f	typeref:typename:int	file:
getVaVdstBitShift	Utils/RVGPUBaseInfo.cpp	/^inline unsigned getVaVdstBitShift() { return 12; }$/;"	f	namespace:__anonc82e9e910111	typeref:typename:unsigned
getVaVdstBitWidth	Utils/RVGPUBaseInfo.cpp	/^inline unsigned getVaVdstBitWidth() { return 4; }$/;"	f	namespace:__anonc82e9e910111	typeref:typename:unsigned
getValueKind	RVGPUHSAMetadataStreamer.cpp	/^MetadataStreamerMsgPackV4::getValueKind(Type *Ty, StringRef TypeQual,$/;"	f	class:llvm::RVGPU::HSRV::MetadataStreamerMsgPackV4	typeref:typename:StringRef
getValueMappingForPtr	RVGPURegisterBankInfo.cpp	/^RVGPURegisterBankInfo::getValueMappingForPtr(const MachineRegisterInfo &MRI,$/;"	f	class:RVGPURegisterBankInfo	typeref:typename:const RegisterBankInfo::ValueMapping *
getVariantKind	RVGPUMCInstLower.cpp	/^static MCSymbolRefExpr::VariantKind getVariantKind(unsigned MOFlags) {$/;"	f	typeref:typename:MCSymbolRefExpr::VariantKind	file:
getVecSize	RVGPULibCalls.cpp	/^static inline int getVecSize(const RVGPULibFunc& FInfo) {$/;"	f	typeref:typename:int	file:
getVectorIdxTy	RVGPUISelLowering.cpp	/^MVT RVGPUTargetLowering::getVectorIdxTy(const DataLayout &) const {$/;"	f	class:RVGPUTargetLowering	typeref:typename:MVT
getVectorInstrCost	RVGPUTargetTransformInfo.cpp	/^InstructionCost GCNTTIImpl::getVectorInstrCost(unsigned Opcode, Type *ValTy,$/;"	f	class:GCNTTIImpl	typeref:typename:InstructionCost
getVectorRegSpillRestoreOpcode	RVInstrInfo.cpp	/^getVectorRegSpillRestoreOpcode(Register Reg, const TargetRegisterClass *RC,$/;"	f	typeref:typename:unsigned	file:
getVectorRegSpillSaveOpcode	RVInstrInfo.cpp	/^static unsigned getVectorRegSpillSaveOpcode(Register Reg,$/;"	f	typeref:typename:unsigned	file:
getVectorSplitCost	RVGPUTargetTransformInfo.h	/^  InstructionCost getVectorSplitCost() { return 0; }$/;"	f	class:llvm::GCNTTIImpl	typeref:typename:InstructionCost
getVectorSuperClassForBitWidth	RVRegisterInfo.cpp	/^RVRegisterInfo::getVectorSuperClassForBitWidth(unsigned BitWidth) const {$/;"	f	class:RVRegisterInfo	typeref:typename:const TargetRegisterClass *
getVectorTypeBreakdownForCallingConv	RVISelLowering.cpp	/^unsigned RVTargetLowering::getVectorTypeBreakdownForCallingConv($/;"	f	class:RVTargetLowering	typeref:typename:unsigned
getVendor	Utils/RVGPUPALMetadata.cpp	/^const char *RVGPUPALMetadata::getVendor() const {$/;"	f	class:RVGPUPALMetadata	typeref:typename:const char *
getVgprClassId	Disassembler/RVGPUDisassembler.cpp	/^unsigned RVGPUDisassembler::getVgprClassId(const OpWidthTy Width) const {$/;"	f	class:RVGPUDisassembler	typeref:typename:unsigned
getVmVsrcBitShift	Utils/RVGPUBaseInfo.cpp	/^inline unsigned getVmVsrcBitShift() { return 2; }$/;"	f	namespace:__anonc82e9e910111	typeref:typename:unsigned
getVmVsrcBitWidth	Utils/RVGPUBaseInfo.cpp	/^inline unsigned getVmVsrcBitWidth() { return 3; }$/;"	f	namespace:__anonc82e9e910111	typeref:typename:unsigned
getVmcntBitMask	Utils/RVGPUBaseInfo.cpp	/^unsigned getVmcntBitMask(const IsaVersion &Version) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:unsigned
getVmcntBitShiftHi	Utils/RVGPUBaseInfo.cpp	/^unsigned getVmcntBitShiftHi(unsigned VersionMajor) { return 14; }$/;"	f	namespace:__anonc82e9e910111	typeref:typename:unsigned
getVmcntBitShiftLo	Utils/RVGPUBaseInfo.cpp	/^unsigned getVmcntBitShiftLo(unsigned VersionMajor) {$/;"	f	namespace:__anonc82e9e910111	typeref:typename:unsigned
getVmcntBitWidthHi	Utils/RVGPUBaseInfo.cpp	/^unsigned getVmcntBitWidthHi(unsigned VersionMajor) {$/;"	f	namespace:__anonc82e9e910111	typeref:typename:unsigned
getVmcntBitWidthLo	Utils/RVGPUBaseInfo.cpp	/^unsigned getVmcntBitWidthLo(unsigned VersionMajor) {$/;"	f	namespace:__anonc82e9e910111	typeref:typename:unsigned
getVmemType	SIInsertWaitcnts.cpp	/^VmemType getVmemType(const MachineInstr &Inst) {$/;"	f	namespace:__anona6cbb7940211	typeref:typename:VmemType
getVmemWaitEventType	SIInsertWaitcnts.cpp	/^  WaitEventType getVmemWaitEventType(const MachineInstr &Inst) const {$/;"	f	class:__anona6cbb7940211::SIInsertWaitcnts	typeref:typename:WaitEventType	file:
getWWMRegSpillRestoreOpcode	RVInstrInfo.cpp	/^static unsigned getWWMRegSpillRestoreOpcode(unsigned Size,$/;"	f	typeref:typename:unsigned	file:
getWWMRegSpillSaveOpcode	RVInstrInfo.cpp	/^static unsigned getWWMRegSpillSaveOpcode(unsigned Size,$/;"	f	typeref:typename:unsigned	file:
getWWMReservedRegs	RVMachineFunctionInfo.h	/^  const ReservedRegSet &getWWMReservedRegs() const { return WWMReservedRegs; }$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:const ReservedRegSet &
getWWMSpills	RVMachineFunctionInfo.h	/^  const WWMSpillsMap &getWWMSpills() const { return WWMSpills; }$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:const WWMSpillsMap &
getWaitCountMax	SIInsertWaitcnts.cpp	/^  unsigned getWaitCountMax(InstCounterType T) const {$/;"	f	class:__anona6cbb7940211::WaitcntBrackets	typeref:typename:unsigned	file:
getWaitStatesSince	GCNHazardRecognizer.cpp	/^int GCNHazardRecognizer::getWaitStatesSince(IsHazardFn IsHazard, int Limit) {$/;"	f	class:GCNHazardRecognizer	typeref:typename:int
getWaitStatesSince	GCNHazardRecognizer.cpp	/^static int getWaitStatesSince($/;"	f	typeref:typename:int	file:
getWaitStatesSince	GCNHazardRecognizer.cpp	/^static int getWaitStatesSince(GCNHazardRecognizer::IsHazardFn IsHazard,$/;"	f	typeref:typename:int	file:
getWaitStatesSinceDef	GCNHazardRecognizer.cpp	/^int GCNHazardRecognizer::getWaitStatesSinceDef(unsigned Reg,$/;"	f	class:GCNHazardRecognizer	typeref:typename:int
getWaitStatesSinceSetReg	GCNHazardRecognizer.cpp	/^int GCNHazardRecognizer::getWaitStatesSinceSetReg(IsHazardFn IsHazard,$/;"	f	class:GCNHazardRecognizer	typeref:typename:int
getWaitcntBitMask	Utils/RVGPUBaseInfo.cpp	/^unsigned getWaitcntBitMask(const IsaVersion &Version) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:unsigned
getWaveAddress	RVGPUInstructionSelector.cpp	/^static Register getWaveAddress(const MachineInstr *Def) {$/;"	f	typeref:typename:Register	file:
getWaveMaskRegClass	RVRegisterInfo.h	/^  const TargetRegisterClass *getWaveMaskRegClass() const {$/;"	f	class:llvm::RVRegisterInfo	typeref:typename:const TargetRegisterClass *
getWavefrontOneAddressSpaceSSID	RVGPUMachineModuleInfo.h	/^  SyncScope::ID getWavefrontOneAddressSpaceSSID() const {$/;"	f	class:llvm::RVGPUMachineModuleInfo	typeref:typename:SyncScope::ID
getWavefrontSSID	RVGPUMachineModuleInfo.h	/^  SyncScope::ID getWavefrontSSID() const {$/;"	f	class:llvm::RVGPUMachineModuleInfo	typeref:typename:SyncScope::ID
getWavefrontSize	RVGPUSubtarget.h	/^  unsigned getWavefrontSize() const {$/;"	f	class:llvm::RVGPUSubtarget	typeref:typename:unsigned
getWavefrontSize	Utils/RVGPUBaseInfo.cpp	/^unsigned getWavefrontSize(const MCSubtargetInfo *STI) {$/;"	f	namespace:llvm::RVGPU::IsaInfo	typeref:typename:unsigned
getWavefrontSizeLog2	RVGPUSubtarget.h	/^  unsigned getWavefrontSizeLog2() const {$/;"	f	class:llvm::RVGPUSubtarget	typeref:typename:unsigned
getWavesPerEU	RVGPUAttributor.cpp	/^  getWavesPerEU(const Function &F,$/;"	f	class:__anon512e119a0111::RVGPUInformationCache	typeref:typename:std::pair<unsigned,unsigned>	file:
getWavesPerEU	RVGPUSubtarget.cpp	/^std::pair<unsigned, unsigned> RVGPUSubtarget::getWavesPerEU($/;"	f	class:RVGPUSubtarget	typeref:typename:std::pair<unsigned,unsigned>
getWavesPerEU	RVGPUSubtarget.h	/^  std::pair<unsigned, unsigned> getWavesPerEU(const Function &F) const {$/;"	f	class:llvm::RVGPUSubtarget	typeref:typename:std::pair<unsigned,unsigned>
getWavesPerEU	RVMachineFunctionInfo.h	/^  std::pair<unsigned, unsigned> getWavesPerEU() const {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:std::pair<unsigned,unsigned>
getWavesPerEUForWorkGroup	GCNSubtarget.h	/^  getWavesPerEUForWorkGroup(unsigned FlatWorkGroupSize) const override {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:unsigned
getWavesPerEUForWorkGroup	Utils/RVGPUBaseInfo.cpp	/^unsigned getWavesPerEUForWorkGroup(const MCSubtargetInfo *STI,$/;"	f	namespace:llvm::RVGPU::IsaInfo	typeref:typename:unsigned
getWavesPerWorkGroup	Utils/RVGPUBaseInfo.cpp	/^unsigned getWavesPerWorkGroup(const MCSubtargetInfo *STI,$/;"	f	namespace:llvm::RVGPU::IsaInfo	typeref:typename:unsigned
getWorkGroupDimensions	RVGPUHSAMetadataStreamer.cpp	/^MetadataStreamerMsgPackV4::getWorkGroupDimensions(MDNode *Node) const {$/;"	f	class:llvm::RVGPU::HSRV::MetadataStreamerMsgPackV4	typeref:typename:msgpack::ArrayDocNode
getWorkGroupIDSGPR	RVMachineFunctionInfo.h	/^  Register getWorkGroupIDSGPR(unsigned Dim) const {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:Register
getWorkgroupOneAddressSpaceSSID	RVGPUMachineModuleInfo.h	/^  SyncScope::ID getWorkgroupOneAddressSpaceSSID() const {$/;"	f	class:llvm::RVGPUMachineModuleInfo	typeref:typename:SyncScope::ID
getWorkgroupSSID	RVGPUMachineModuleInfo.h	/^  SyncScope::ID getWorkgroupSSID() const {$/;"	f	class:llvm::RVGPUMachineModuleInfo	typeref:typename:SyncScope::ID
getWorkitemID	RVGPUPromoteAlloca.cpp	/^Value *RVGPUPromoteAllocaImpl::getWorkitemID(IRBuilder<> &Builder,$/;"	f	class:RVGPUPromoteAllocaImpl	typeref:typename:Value *
getXnackSetting	Utils/RVGPUBaseInfo.h	/^  TargetIDSetting getXnackSetting() const {$/;"	f	class:llvm::RVGPU::IsaInfo::RVGPUTargetID	typeref:typename:TargetIDSetting
get_rv_kernel_code_t_FieldIndex	Utils/RVKernelCodeTUtils.cpp	/^static int get_rv_kernel_code_t_FieldIndex(StringRef name) {$/;"	f	typeref:typename:int	file:
get_rv_kernel_code_t_FieldName	Utils/RVKernelCodeTUtils.cpp	/^static StringRef get_rv_kernel_code_t_FieldName(int index) {$/;"	f	typeref:typename:StringRef	file:
get_rv_kernel_code_t_FldAltNames	Utils/RVKernelCodeTUtils.cpp	/^static ArrayRef<StringRef> get_rv_kernel_code_t_FldAltNames() {$/;"	f	typeref:typename:ArrayRef<StringRef>	file:
get_rv_kernel_code_t_FldNames	Utils/RVKernelCodeTUtils.cpp	/^static ArrayRef<StringRef> get_rv_kernel_code_t_FldNames() {$/;"	f	typeref:typename:ArrayRef<StringRef>	file:
glueCopyToM0	RVGPUISelDAGToDAG.cpp	/^SDNode *RVGPUDAGToDAGISel::glueCopyToM0(SDNode *N, SDValue Val) const {$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:SDNode *
glueCopyToM0LDSInit	RVGPUISelDAGToDAG.cpp	/^SDNode *RVGPUDAGToDAGISel::glueCopyToM0LDSInit(SDNode *N) const {$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:SDNode *
glueCopyToOp	RVGPUISelDAGToDAG.cpp	/^SDNode *RVGPUDAGToDAGISel::glueCopyToOp(SDNode *N, SDValue NewChain,$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:SDNode *
greedyFind	RVGPUIGroupLP.cpp	/^void PipelineSolver::greedyFind($/;"	f	class:__anon61b122dc0111::PipelineSolver	typeref:typename:void
greedyRegAllocSGPR	RVGPUTargetMachine.cpp	/^static SGPRRegisterRegAlloc greedyRegAllocSGPR($/;"	v	namespace:__anon565c6f860111	typeref:typename:SGPRRegisterRegAlloc	file:
greedyRegAllocVGPR	RVGPUTargetMachine.cpp	/^static VGPRRegisterRegAlloc greedyRegAllocVGPR($/;"	v	namespace:__anon565c6f860111	typeref:typename:VGPRRegisterRegAlloc	file:
group_segment_alignment	RVKernelCodeT.h	/^  uint8_t group_segment_alignment;$/;"	m	struct:rv_kernel_code_t	typeref:typename:uint8_t
gwsIntrinToOpcode	RVGPUISelDAGToDAG.cpp	/^static unsigned gwsIntrinToOpcode(unsigned IntrID) {$/;"	f	typeref:typename:unsigned	file:
gwsIntrinToOpcode	RVGPUInstructionSelector.cpp	/^static unsigned gwsIntrinToOpcode(unsigned IntrID) {$/;"	f	typeref:typename:unsigned	file:
handleByteShortBufferLoads	RVISelLowering.cpp	/^SDValue RVTargetLowering::handleByteShortBufferLoads(SelectionDAG &DAG,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
handleByteShortBufferStores	RVISelLowering.cpp	/^SDValue RVTargetLowering::handleByteShortBufferStores(SelectionDAG &DAG,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
handleD16VData	RVGPULegalizerInfo.cpp	/^Register RVGPULegalizerInfo::handleD16VData(MachineIRBuilder &B,$/;"	f	class:RVGPULegalizerInfo	typeref:typename:Register
handleD16VData	RVGPURegisterBankInfo.cpp	/^Register RVGPURegisterBankInfo::handleD16VData(MachineIRBuilder &B,$/;"	f	class:RVGPURegisterBankInfo	typeref:typename:Register
handleD16VData	RVISelLowering.cpp	/^SDValue RVTargetLowering::handleD16VData(SDValue VData, SelectionDAG &DAG,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
handleImplicitCallArguments	RVGPUCallLowering.cpp	/^void RVGPUCallLowering::handleImplicitCallArguments($/;"	f	class:RVGPUCallLowering	typeref:typename:void
handleLoop	SIAnnotateControlFlow.cpp	/^bool SIAnnotateControlFlow::handleLoop(BranchInst *Term) {$/;"	f	class:SIAnnotateControlFlow	typeref:typename:bool
handleLoopCondition	SIAnnotateControlFlow.cpp	/^Value *SIAnnotateControlFlow::handleLoopCondition($/;"	f	class:SIAnnotateControlFlow	typeref:typename:Value *
handleMulOperand	RVISelLowering.cpp	/^handleMulOperand(const SDValue &MulOperand) {$/;"	f	typeref:typename:std::optional<ByteProvider<SDValue>>	file:
handleWaitCnt	MCA/RVGPUCustomBehaviour.cpp	/^unsigned RVGPUCustomBehaviour::handleWaitCnt(ArrayRef<InstRef> IssuedInst,$/;"	f	class:llvm::mca::RVGPUCustomBehaviour	typeref:typename:unsigned
has12DWordStoreHazard	GCNSubtarget.h	/^  bool has12DWordStoreHazard() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
has16BitInsts	RVGPUSubtarget.h	/^  bool has16BitInsts() const {$/;"	f	class:llvm::RVGPUSubtarget	typeref:typename:bool
hasA16	AsmParser/RVGPUAsmParser.cpp	/^  bool hasA16() const { return RVGPU::hasA16(getSTI()); }$/;"	f	class:__anon672fa8550111::RVGPUAsmParser	typeref:typename:bool	file:
hasA16	GCNSubtarget.h	/^  bool hasA16() const { return HasA16; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasA16	Utils/RVGPUBaseInfo.cpp	/^bool hasA16(const MCSubtargetInfo &STI) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
hasAGPRs	RVRegisterInfo.h	/^  static bool hasAGPRs(const TargetRegisterClass *RC) {$/;"	f	class:llvm::RVRegisterInfo	typeref:typename:bool
hasAddNoCarry	GCNSubtarget.h	/^  bool hasAddNoCarry() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasAddr64	GCNSubtarget.h	/^  bool hasAddr64() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasAny64BitVGPROperands	Utils/RVGPUBaseInfo.cpp	/^bool hasAny64BitVGPROperands(const MCInstrDesc &OpDesc) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
hasAnyModifiersSet	RVInstrInfo.cpp	/^bool RVInstrInfo::hasAnyModifiersSet(const MachineInstr &MI) const {$/;"	f	class:RVInstrInfo	typeref:typename:bool
hasAnyNonFlatUseOfReg	RVGPUResourceUsageAnalysis.cpp	/^static bool hasAnyNonFlatUseOfReg(const MachineRegisterInfo &MRI,$/;"	f	typeref:typename:bool	file:
hasApertureRegs	GCNSubtarget.h	/^  bool hasApertureRegs() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasApertureRegs	RVGPUAttributor.cpp	/^  bool hasApertureRegs(Function &F) {$/;"	f	class:__anon512e119a0111::RVGPUInformationCache	typeref:typename:bool	file:
hasArchitectedFlatScratch	AsmParser/RVGPUAsmParser.cpp	/^  bool hasArchitectedFlatScratch() const {$/;"	f	class:__anon672fa8550111::RVGPUAsmParser	typeref:typename:bool	file:
hasArchitectedFlatScratch	Disassembler/RVGPUDisassembler.cpp	/^bool RVGPUDisassembler::hasArchitectedFlatScratch() const {$/;"	f	class:RVGPUDisassembler	typeref:typename:bool
hasArchitectedFlatScratch	Utils/RVGPUBaseInfo.cpp	/^bool hasArchitectedFlatScratch(const MCSubtargetInfo &STI) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
hasArchitectedSGPRs	GCNSubtarget.h	/^  bool hasArchitectedSGPRs() const { return HasArchitectedSGPRs; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasAtomicBufferGlobalPkAddF16Insts	GCNSubtarget.h	/^  bool hasAtomicBufferGlobalPkAddF16Insts() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasAtomicBufferGlobalPkAddF16NoRtnInsts	GCNSubtarget.h	/^  bool hasAtomicBufferGlobalPkAddF16NoRtnInsts() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasAtomicCSub	GCNSubtarget.h	/^  bool hasAtomicCSub() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasAtomicCSubNoRtnInsts	GCNSubtarget.h	/^  bool hasAtomicCSubNoRtnInsts() const { return HasAtomicCSubNoRtnInsts; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasAtomicDsPkAdd16Insts	GCNSubtarget.h	/^  bool hasAtomicDsPkAdd16Insts() const { return HasAtomicDsPkAdd16Insts; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasAtomicFaddInsts	GCNSubtarget.h	/^  bool hasAtomicFaddInsts() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasAtomicFaddNoRtnInsts	GCNSubtarget.h	/^  bool hasAtomicFaddNoRtnInsts() const { return HasAtomicFaddNoRtnInsts; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasAtomicFaddRtnForTy	RVGPUGlobalISelUtils.cpp	/^bool RVGPU::hasAtomicFaddRtnForTy(const GCNSubtarget &Subtarget,$/;"	f	class:RVGPU	typeref:typename:bool
hasAtomicFaddRtnForTy	RVISelLowering.cpp	/^bool RVTargetLowering::hasAtomicFaddRtnForTy(SDValue &Op) const {$/;"	f	class:RVTargetLowering	typeref:typename:bool
hasAtomicFaddRtnInsts	GCNSubtarget.h	/^  bool hasAtomicFaddRtnInsts() const { return HasAtomicFaddRtnInsts; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasAtomicFlatPkAdd16Insts	GCNSubtarget.h	/^  bool hasAtomicFlatPkAdd16Insts() const { return HasAtomicFlatPkAdd16Insts; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasAtomicGlobalPkAddBF16Inst	GCNSubtarget.h	/^  bool hasAtomicGlobalPkAddBF16Inst() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasAutoWaitcntBeforeBarrier	GCNSubtarget.h	/^  bool hasAutoWaitcntBeforeBarrier() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasBCNT	GCNSubtarget.h	/^  bool hasBCNT(unsigned Size) const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasBFE	GCNSubtarget.h	/^  bool hasBFE() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasBFI	GCNSubtarget.h	/^  bool hasBFI() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasBFM	GCNSubtarget.h	/^  bool hasBFM() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasBasePointer	RVRegisterInfo.cpp	/^bool RVRegisterInfo::hasBasePointer(const MachineFunction &MF) const {$/;"	f	class:RVRegisterInfo	typeref:typename:bool
hasBranchDivergence	RVGPUTargetTransformInfo.cpp	/^bool GCNTTIImpl::hasBranchDivergence(const Function *F) const {$/;"	f	class:GCNTTIImpl	typeref:typename:bool
hasBufferRsrcWorkaround	RVGPULegalizerInfo.cpp	/^static bool hasBufferRsrcWorkaround(const LLT Ty) {$/;"	f	typeref:typename:bool	file:
hasCARRY	GCNSubtarget.h	/^  bool hasCARRY() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasCFUser	RVISelLowering.cpp	/^static bool hasCFUser(const Value *V, SmallPtrSet<const Value *, 16> &Visited,$/;"	f	typeref:typename:bool	file:
hasCompressedExport	GCNSubtarget.h	/^  bool hasCompressedExport() const { return !GFX11Insts; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasCvtFP8VOP1Bug	GCNSubtarget.h	/^  bool hasCvtFP8VOP1Bug() const { return true; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasD16Images	GCNSubtarget.h	/^  bool hasD16Images() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasD16LoadStore	GCNSubtarget.h	/^  bool hasD16LoadStore() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasDLInsts	GCNSubtarget.h	/^  bool hasDLInsts() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasDOTOpSelHazard	GCNSubtarget.h	/^  bool hasDOTOpSelHazard() const { return false; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasDPALU_DPP	GCNSubtarget.h	/^  bool hasDPALU_DPP() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasDPP	GCNSubtarget.h	/^  bool hasDPP() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasDPP8	GCNSubtarget.h	/^  bool hasDPP8() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasDPPBroadcasts	GCNSubtarget.h	/^  bool hasDPPBroadcasts() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasDPPSrc1SGPR	GCNSubtarget.h	/^  bool hasDPPSrc1SGPR() const { return HasDPPSrc1SGPR; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasDPPSrc1SGPR	Utils/RVGPUBaseInfo.cpp	/^bool hasDPPSrc1SGPR(const MCSubtargetInfo &STI) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
hasDPPWavefrontShifts	GCNSubtarget.h	/^  bool hasDPPWavefrontShifts() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasDS96AndDS128	GCNSubtarget.h	/^  bool hasDS96AndDS128() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasDX10ClampMode	GCNSubtarget.h	/^  bool hasDX10ClampMode() const { return true; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasDataDependencyPred	SIMachineScheduler.cpp	/^hasDataDependencyPred(const SUnit &SU, const SUnit &FromSU) {$/;"	f	typeref:typename:bool	file:
hasDelayAlu	GCNSubtarget.h	/^  bool hasDelayAlu() const { return GFX11Insts; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasDenormModeInst	GCNSubtarget.h	/^  bool hasDenormModeInst() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasDispatchID	GCNSubtarget.h	/^  bool hasDispatchID() const { return DispatchID; }$/;"	f	class:llvm::GCNUserSGPRUsageInfo	typeref:typename:bool
hasDispatchPtr	GCNSubtarget.h	/^  bool hasDispatchPtr() const { return DispatchPtr; }$/;"	f	class:llvm::GCNUserSGPRUsageInfo	typeref:typename:bool
hasDivergentBranch	RVInstrInfo.cpp	/^bool RVInstrInfo::hasDivergentBranch(const MachineBasicBlock *MBB) const {$/;"	f	class:RVInstrInfo	typeref:typename:bool
hasDot10Insts	GCNSubtarget.h	/^  bool hasDot10Insts() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasDot1Insts	GCNSubtarget.h	/^  bool hasDot1Insts() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasDot2Insts	GCNSubtarget.h	/^  bool hasDot2Insts() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasDot3Insts	GCNSubtarget.h	/^  bool hasDot3Insts() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasDot4Insts	GCNSubtarget.h	/^  bool hasDot4Insts() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasDot5Insts	GCNSubtarget.h	/^  bool hasDot5Insts() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasDot6Insts	GCNSubtarget.h	/^  bool hasDot6Insts() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasDot7Insts	GCNSubtarget.h	/^  bool hasDot7Insts() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasDot8Insts	GCNSubtarget.h	/^  bool hasDot8Insts() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasDot9Insts	GCNSubtarget.h	/^  bool hasDot9Insts() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasDsSrc2Insts	RVGPUSubtarget.h	/^  bool hasDsSrc2Insts() const {$/;"	f	class:llvm::RVGPUSubtarget	typeref:typename:bool
hasDstSelForwardingHazard	GCNSubtarget.h	/^  bool hasDstSelForwardingHazard() const { return false; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasDwordx3LoadStores	GCNSubtarget.h	/^  bool hasDwordx3LoadStores() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasExtendedImageInsts	GCNSubtarget.h	/^  bool hasExtendedImageInsts() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasFFBH	GCNSubtarget.h	/^  bool hasFFBH() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasFFBL	GCNSubtarget.h	/^  bool hasFFBL() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasFMA	GCNSubtarget.h	/^  bool hasFMA() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasFP	RVFrameLowering.cpp	/^bool RVFrameLowering::hasFP(const MachineFunction &MF) const {$/;"	f	class:RVFrameLowering	typeref:typename:bool
hasFP64	GCNSubtarget.h	/^  bool hasFP64() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasFP8Insts	GCNSubtarget.h	/^  bool hasFP8Insts() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasFPAtomicToDenormModeHazard	GCNSubtarget.h	/^  bool hasFPAtomicToDenormModeHazard() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasFPClamp	RVInstrInfo.h	/^  bool hasFPClamp(uint16_t Opcode) const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
hasFPClamp	RVInstrInfo.h	/^  static bool hasFPClamp(const MachineInstr &MI) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
hasFPModifiers	AsmParser/RVGPUAsmParser.cpp	/^    bool hasFPModifiers() const { return Abs || Neg; }$/;"	f	struct:__anon672fa8550111::RVGPUOperand::Modifiers	typeref:typename:bool	file:
hasFPModifiers	AsmParser/RVGPUAsmParser.cpp	/^  bool hasFPModifiers() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
hasFastFMAF32	RVGPUSubtarget.h	/^  bool hasFastFMAF32() const {$/;"	f	class:llvm::RVGPUSubtarget	typeref:typename:bool
hasFlat	GCNSubtarget.h	/^  bool hasFlat() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasFlatAddressSpace	GCNSubtarget.h	/^  bool hasFlatAddressSpace() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasFlatAtomicFaddF32Inst	GCNSubtarget.h	/^  bool hasFlatAtomicFaddF32Inst() const { return HasFlatAtomicFaddF32Inst; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasFlatGlobalInsts	GCNSubtarget.h	/^  bool hasFlatGlobalInsts() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasFlatInstOffsets	GCNSubtarget.h	/^  bool hasFlatInstOffsets() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasFlatLgkmVMemCountInOrder	GCNSubtarget.h	/^  bool hasFlatLgkmVMemCountInOrder() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasFlatOffsets	AsmParser/RVGPUAsmParser.cpp	/^  bool hasFlatOffsets() const {$/;"	f	class:__anon672fa8550111::RVGPUAsmParser	typeref:typename:bool	file:
hasFlatScrRegister	GCNSubtarget.h	/^  bool hasFlatScrRegister() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasFlatScratchInit	GCNSubtarget.h	/^  bool hasFlatScratchInit() const { return FlatScratchInit; }$/;"	f	class:llvm::GCNUserSGPRUsageInfo	typeref:typename:bool
hasFlatScratchInsts	GCNSubtarget.h	/^  bool hasFlatScratchInsts() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasFlatScratchSTMode	GCNSubtarget.h	/^  bool hasFlatScratchSTMode() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasFlatScratchSVSMode	GCNSubtarget.h	/^  bool hasFlatScratchSVSMode() const { return true; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasFlatScratchSVSSwizzleBug	GCNSubtarget.h	/^  bool hasFlatScratchSVSSwizzleBug() const { return true; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasFlatSegmentOffsetBug	GCNSubtarget.h	/^  bool hasFlatSegmentOffsetBug() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasFmaMixInsts	GCNSubtarget.h	/^  bool hasFmaMixInsts() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasFmaakFmamkF32Insts	GCNSubtarget.h	/^  bool hasFmaakFmamkF32Insts() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasFmacF64Inst	GCNSubtarget.h	/^  bool hasFmacF64Inst() const { return HasFmacF64Inst; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasFminFmaxLegacy	RVGPUSubtarget.h	/^  bool hasFminFmaxLegacy() const {$/;"	f	class:llvm::RVGPUSubtarget	typeref:typename:bool
hasForceStoreSC0SC1	GCNSubtarget.h	/^  bool hasForceStoreSC0SC1() const { return HasForceStoreSC0SC1; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasFractBug	GCNSubtarget.h	/^  bool hasFractBug() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasFullRate64Ops	GCNSubtarget.h	/^  bool hasFullRate64Ops() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasG16	AsmParser/RVGPUAsmParser.cpp	/^  bool hasG16() const { return RVGPU::hasG16(getSTI()); }$/;"	f	class:__anon672fa8550111::RVGPUAsmParser	typeref:typename:bool	file:
hasG16	GCNSubtarget.h	/^  bool hasG16() const { return HasG16; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasG16	Utils/RVGPUBaseInfo.cpp	/^bool hasG16(const MCSubtargetInfo &STI) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
hasGDS	AsmParser/RVGPUAsmParser.cpp	/^  bool hasGDS() const { return RVGPU::hasGDS(getSTI()); }$/;"	f	class:__anon672fa8550111::RVGPUAsmParser	typeref:typename:bool	file:
hasGDS	GCNSubtarget.h	/^  bool hasGDS() const { return HasGDS; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasGDS	Utils/RVGPUBaseInfo.cpp	/^bool hasGDS(const MCSubtargetInfo &STI) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
hasGFX10_3Insts	GCNSubtarget.h	/^  bool hasGFX10_3Insts() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasGFX10_3Insts	Utils/RVGPUBaseInfo.cpp	/^bool hasGFX10_3Insts(const MCSubtargetInfo &STI) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
hasGFX10_AEncoding	GCNSubtarget.h	/^  bool hasGFX10_AEncoding() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasGFX10_BEncoding	GCNSubtarget.h	/^  bool hasGFX10_BEncoding() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasGFX11FullVGPRs	GCNSubtarget.h	/^  bool hasGFX11FullVGPRs() const { return HasGFX11FullVGPRs; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasGFX90AInsts	GCNSubtarget.h	/^  bool hasGFX90AInsts() const { return GFX90AInsts; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasGFX940Insts	GCNSubtarget.h	/^  bool hasGFX940Insts() const { return GFX940Insts; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasGWS	GCNSubtarget.h	/^  bool hasGWS() const { return HasGWS; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasGWSAutoReplay	GCNSubtarget.h	/^  bool hasGWSAutoReplay() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasGWSSemaReleaseAll	GCNSubtarget.h	/^  bool hasGWSSemaReleaseAll() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasGetWaveIdInst	GCNSubtarget.h	/^  bool hasGetWaveIdInst() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasGlobalAddTidInsts	GCNSubtarget.h	/^  bool hasGlobalAddTidInsts() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasHWFP64	GCNSubtarget.h	/^  bool hasHWFP64() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasHalfRate64Ops	GCNSubtarget.h	/^  bool hasHalfRate64Ops() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasHardClauses	GCNSubtarget.h	/^  bool hasHardClauses() const { return true; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasHazard	GCNHazardRecognizer.cpp	/^hasHazard(StateT State,$/;"	f	typeref:typename:bool	file:
hasIEEEMinMax	GCNSubtarget.h	/^  bool hasIEEEMinMax() const { return false; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasIEEEMode	GCNSubtarget.h	/^  bool hasIEEEMode() const { return true; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasIGLPInstrs	GCNSchedStrategy.cpp	/^static bool hasIGLPInstrs(ScheduleDAGInstrs *DAG) {$/;"	f	typeref:typename:bool	file:
hasImageGather4D16Bug	GCNSubtarget.h	/^  bool hasImageGather4D16Bug() const { return HasImageGather4D16Bug; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasImageInsts	GCNSubtarget.h	/^  bool hasImageInsts() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasImageStoreD16Bug	GCNSubtarget.h	/^  bool hasImageStoreD16Bug() const { return HasImageStoreD16Bug; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasImplicitArgPtr	RVMachineFunctionInfo.h	/^  bool hasImplicitArgPtr() const {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:bool
hasImplicitBufferPtr	GCNSubtarget.h	/^  bool hasImplicitBufferPtr() const { return ImplicitBufferPtr; }$/;"	f	class:llvm::GCNUserSGPRUsageInfo	typeref:typename:bool
hasInstFwdPrefetchBug	GCNSubtarget.h	/^  bool hasInstFwdPrefetchBug() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasInstPrefetch	GCNSubtarget.h	/^  bool hasInstPrefetch() const { return true; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasIntClamp	AsmParser/RVGPUAsmParser.cpp	/^  bool hasIntClamp() const {$/;"	f	class:__anon672fa8550111::RVGPUAsmParser	typeref:typename:bool	file:
hasIntClamp	GCNSubtarget.h	/^  bool hasIntClamp() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasIntClamp	RVInstrInfo.h	/^  static bool hasIntClamp(const MachineInstr &MI) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
hasIntModifiers	AsmParser/RVGPUAsmParser.cpp	/^    bool hasIntModifiers() const { return Sext; }$/;"	f	struct:__anon672fa8550111::RVGPUOperand::Modifiers	typeref:typename:bool	file:
hasIntModifiers	AsmParser/RVGPUAsmParser.cpp	/^  bool hasIntModifiers() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
hasInv2PiInlineImm	AsmParser/RVGPUAsmParser.cpp	/^  bool hasInv2PiInlineImm() const {$/;"	f	class:__anon672fa8550111::RVGPUAsmParser	typeref:typename:bool	file:
hasInv2PiInlineImm	RVGPUSubtarget.h	/^  bool hasInv2PiInlineImm() const {$/;"	f	class:llvm::RVGPUSubtarget	typeref:typename:bool
hasInvalidOperand	Utils/RVGPUBaseInfo.h	/^  bool hasInvalidOperand(std::function<unsigned(unsigned, unsigned)> GetRegIdx,$/;"	f	class:llvm::RVGPU::VOPD::InstInfo	typeref:typename:bool
hasKernargPreload	AsmParser/RVGPUAsmParser.cpp	/^  bool hasKernargPreload() const { return RVGPU::hasKernargPreload(getSTI()); }$/;"	f	class:__anon672fa8550111::RVGPUAsmParser	typeref:typename:bool	file:
hasKernargPreload	Disassembler/RVGPUDisassembler.cpp	/^bool RVGPUDisassembler::hasKernargPreload() const {$/;"	f	class:RVGPUDisassembler	typeref:typename:bool
hasKernargPreload	GCNSubtarget.h	/^  bool hasKernargPreload() const { return KernargPreload; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasKernargPreload	Utils/RVGPUBaseInfo.cpp	/^unsigned hasKernargPreload(const MCSubtargetInfo &STI) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:unsigned
hasKernargSegmentPtr	GCNSubtarget.h	/^  bool hasKernargSegmentPtr() const { return KernargSegmentPtr; }$/;"	f	class:llvm::GCNUserSGPRUsageInfo	typeref:typename:bool
hasKill	SIAnnotateControlFlow.cpp	/^bool SIAnnotateControlFlow::hasKill(const BasicBlock *BB) {$/;"	f	class:SIAnnotateControlFlow	typeref:typename:bool
hasKill	SILowerControlFlow.cpp	/^bool SILowerControlFlow::hasKill(const MachineBasicBlock *Begin,$/;"	f	class:SILowerControlFlow	typeref:typename:bool
hasLDSFPAtomicAdd	GCNSubtarget.h	/^  bool hasLDSFPAtomicAdd() const { return false; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasLDSKernelId	RVMachineFunctionInfo.h	/^  bool hasLDSKernelId() const { return LDSKernelId; }$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:bool
hasLDSMisalignedBug	GCNSubtarget.h	/^  bool hasLDSMisalignedBug() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasLane	RVRegisterInfo.h	/^    bool hasLane() { return Lane != -1; }$/;"	f	struct:llvm::RVRegisterInfo::SpilledReg	typeref:typename:bool
hasLdsBranchVmemWARHazard	GCNSubtarget.h	/^  bool hasLdsBranchVmemWARHazard() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasLdsDirect	GCNSubtarget.h	/^  bool hasLdsDirect() const { return true; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasLegacyGeometry	GCNSubtarget.h	/^  bool hasLegacyGeometry() const { return false; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasLshlAddB64	GCNSubtarget.h	/^  bool hasLshlAddB64() const { return false; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasMADIntraFwdBug	GCNSubtarget.h	/^  bool hasMADIntraFwdBug() const { return HasMADIntraFwdBug; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasMAIInsts	GCNSubtarget.h	/^  bool hasMAIInsts() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasMAIInsts	Utils/RVGPUBaseInfo.cpp	/^bool hasMAIInsts(const MCSubtargetInfo &STI) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
hasMFMAInlineLiteralBug	GCNSubtarget.h	/^  bool hasMFMAInlineLiteralBug() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasMIMG_R128	AsmParser/RVGPUAsmParser.cpp	/^  bool hasMIMG_R128() const {$/;"	f	class:__anon672fa8550111::RVGPUAsmParser	typeref:typename:bool	file:
hasMIMG_R128	GCNSubtarget.h	/^  bool hasMIMG_R128() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasMIMG_R128	Utils/RVGPUBaseInfo.cpp	/^bool hasMIMG_R128(const MCSubtargetInfo &STI) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
hasMSAALoadDstSelBug	GCNSubtarget.h	/^  bool hasMSAALoadDstSelBug() const { return HasMSAALoadDstSelBug; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasMad64_32	GCNSubtarget.h	/^  bool hasMad64_32() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasMadF16	RVGPUSubtarget.cpp	/^bool GCNSubtarget::hasMadF16() const {$/;"	f	class:GCNSubtarget	typeref:typename:bool
hasMadMacF32Insts	RVGPUSubtarget.h	/^  bool hasMadMacF32Insts() const {$/;"	f	class:llvm::RVGPUSubtarget	typeref:typename:bool
hasMadMixInsts	RVGPUSubtarget.h	/^  bool hasMadMixInsts() const {$/;"	f	class:llvm::RVGPUSubtarget	typeref:typename:bool
hasMandatoryLiteral	Utils/RVGPUBaseInfo.h	/^  bool hasMandatoryLiteral() const { return MandatoryLiteralIdx != ~0u; }$/;"	f	class:llvm::RVGPU::VOPD::ComponentProps	typeref:typename:bool
hasMandatoryLiteralAt	Utils/RVGPUBaseInfo.h	/^  bool hasMandatoryLiteralAt(unsigned CompSrcIdx) const {$/;"	f	class:llvm::RVGPU::VOPD::ComponentProps	typeref:typename:bool
hasMed3_16	GCNSubtarget.h	/^  bool hasMed3_16() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasMemSDNodeUser	RVISelLowering.cpp	/^bool RVTargetLowering::hasMemSDNodeUser(SDNode *N) const {$/;"	f	class:RVTargetLowering	typeref:typename:bool
hasMergeableAddress	SILoadStoreOptimizer.cpp	/^    bool hasMergeableAddress(const MachineRegisterInfo &MRI) {$/;"	f	struct:__anon677101620111::SILoadStoreOptimizer::CombineInfo	typeref:typename:bool	file:
hasMergedShaders	GCNSubtarget.h	/^  bool hasMergedShaders() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasMin3Max3_16	GCNSubtarget.h	/^  bool hasMin3Max3_16() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasMixedPendingEvents	SIInsertWaitcnts.cpp	/^  bool hasMixedPendingEvents(InstCounterType T) const {$/;"	f	class:__anona6cbb7940211::WaitcntBrackets	typeref:typename:bool	file:
hasModifiers	AsmParser/RVGPUAsmParser.cpp	/^    bool hasModifiers() const { return hasFPModifiers() || hasIntModifiers(); }$/;"	f	struct:__anon672fa8550111::RVGPUOperand::Modifiers	typeref:typename:bool	file:
hasModifiers	AsmParser/RVGPUAsmParser.cpp	/^  bool hasModifiers() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
hasModifiers	RVInstrInfo.cpp	/^bool RVInstrInfo::hasModifiers(unsigned Opcode) const {$/;"	f	class:RVInstrInfo	typeref:typename:bool
hasModifiersSet	MCA/RVGPUCustomBehaviour.cpp	/^bool RVGPUCustomBehaviour::hasModifiersSet($/;"	f	class:llvm::mca::RVGPUCustomBehaviour	typeref:typename:bool
hasModifiersSet	RVInstrInfo.cpp	/^bool RVInstrInfo::hasModifiersSet(const MachineInstr &MI,$/;"	f	class:RVInstrInfo	typeref:typename:bool
hasMovB64	GCNSubtarget.h	/^  bool hasMovB64() const { return false; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasMovrel	GCNSubtarget.h	/^  bool hasMovrel() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasMulI24	RVGPUSubtarget.h	/^  bool hasMulI24() const {$/;"	f	class:llvm::RVGPUSubtarget	typeref:typename:bool
hasMulU24	RVGPUSubtarget.h	/^  bool hasMulU24() const {$/;"	f	class:llvm::RVGPUSubtarget	typeref:typename:bool
hasMultiDwordFlatScratchAddressing	GCNSubtarget.h	/^  bool hasMultiDwordFlatScratchAddressing() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasNSAClauseBug	GCNSubtarget.h	/^  bool hasNSAClauseBug() const { return HasNSAClauseBug; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasNSAEncoding	GCNSubtarget.h	/^  bool hasNSAEncoding() const { return HasNSAEncoding; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasNSAtoVMEMBug	GCNSubtarget.h	/^  bool hasNSAtoVMEMBug() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasNamedOperand	Utils/RVGPUBaseInfo.h	/^inline bool hasNamedOperand(uint64_t Opcode, uint64_t NamedIdx) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:LLVM_READONLY bool
hasNegativeScratchOffsetBug	GCNSubtarget.h	/^  bool hasNegativeScratchOffsetBug() const { return NegativeScratchOffsetBug; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasNegativeUnalignedScratchOffsetBug	GCNSubtarget.h	/^  bool hasNegativeUnalignedScratchOffsetBug() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasNextStage	GCNSchedStrategy.cpp	/^bool GCNSchedStrategy::hasNextStage() const {$/;"	f	class:GCNSchedStrategy	typeref:typename:bool
hasNoDataDepHazard	GCNSubtarget.h	/^  bool hasNoDataDepHazard() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasNoDef	RVGPUMachineCFGStructurizer.cpp	/^bool LinearizedRegion::hasNoDef(unsigned Reg, MachineRegisterInfo *MRI) {$/;"	f	class:LinearizedRegion	typeref:typename:bool
hasNoImmOrEqual	GCNDPPCombine.cpp	/^bool GCNDPPCombine::hasNoImmOrEqual(MachineInstr &MI, unsigned OpndName,$/;"	f	class:GCNDPPCombine	typeref:typename:bool
hasNoSdstCMPX	GCNSubtarget.h	/^  bool hasNoSdstCMPX() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasNoSignedZerosFPMath	RVGPUMachineFunction.h	/^  bool hasNoSignedZerosFPMath() const {$/;"	f	class:llvm::RVGPUMachineFunction	typeref:typename:bool
hasNon16BitAccesses	RVISelLowering.cpp	/^static bool hasNon16BitAccesses(uint64_t PermMask, SDValue &Op,$/;"	f	typeref:typename:bool	file:
hasNonSpillStackObjects	RVMachineFunctionInfo.h	/^  bool hasNonSpillStackObjects() const {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:bool
hasNullExportTarget	GCNSubtarget.h	/^  bool hasNullExportTarget() const { return !GFX11Insts; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasOffset3fBug	GCNSubtarget.h	/^  bool hasOffset3fBug() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasOneExitNode	RVGPUMachineCFGStructurizer.cpp	/^static bool hasOneExitNode(MachineFunction &MF) {$/;"	f	typeref:typename:bool	file:
hasOnlyRevVALUShifts	GCNSubtarget.h	/^  bool hasOnlyRevVALUShifts() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasOtherPendingVmemTypes	SIInsertWaitcnts.cpp	/^  bool hasOtherPendingVmemTypes(int GprNo, VmemType V) const {$/;"	f	class:__anona6cbb7940211::WaitcntBrackets	typeref:typename:bool	file:
hasPackedD16	AsmParser/RVGPUAsmParser.cpp	/^  bool hasPackedD16() const {$/;"	f	class:__anon672fa8550111::RVGPUAsmParser	typeref:typename:bool	file:
hasPackedD16	Utils/RVGPUBaseInfo.cpp	/^bool hasPackedD16(const MCSubtargetInfo &STI) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
hasPackedFP32Ops	GCNSubtarget.h	/^  bool hasPackedFP32Ops() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasPackedTID	GCNSubtarget.h	/^  bool hasPackedTID() const { return HasPackedTID; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasPartialNSAEncoding	AsmParser/RVGPUAsmParser.cpp	/^  bool hasPartialNSAEncoding() const {$/;"	f	class:__anon672fa8550111::RVGPUAsmParser	typeref:typename:bool	file:
hasPartialNSAEncoding	GCNSubtarget.h	/^  bool hasPartialNSAEncoding() const { return HasPartialNSAEncoding; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasPendingEvent	SIInsertWaitcnts.cpp	/^  unsigned hasPendingEvent() const { return PendingEvents; }$/;"	f	class:__anona6cbb7940211::WaitcntBrackets	typeref:typename:unsigned	file:
hasPendingEvent	SIInsertWaitcnts.cpp	/^  unsigned hasPendingEvent(InstCounterType T) const {$/;"	f	class:__anona6cbb7940211::WaitcntBrackets	typeref:typename:unsigned	file:
hasPendingEvent	SIInsertWaitcnts.cpp	/^  unsigned hasPendingEvent(WaitEventType E) const {$/;"	f	class:__anona6cbb7940211::WaitcntBrackets	typeref:typename:unsigned	file:
hasPendingFlat	SIInsertWaitcnts.cpp	/^  bool hasPendingFlat() const {$/;"	f	class:__anona6cbb7940211::WaitcntBrackets	typeref:typename:bool	file:
hasPermLane64	GCNSubtarget.h	/^  bool hasPermLane64() const { return true; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasPermLaneX16	GCNSubtarget.h	/^  bool hasPermLaneX16() const { return true; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasPkFmacF16Inst	GCNSubtarget.h	/^  bool hasPkFmacF16Inst() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasPkMovB32	GCNSubtarget.h	/^  bool hasPkMovB32() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasPrefetch	GCNSubtarget.h	/^  bool hasPrefetch() const { return false; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasPrivateSegmentBuffer	GCNSubtarget.h	/^  bool hasPrivateSegmentBuffer() const { return PrivateSegmentBuffer; }$/;"	f	class:llvm::GCNUserSGPRUsageInfo	typeref:typename:bool
hasPrivateSegmentWaveByteOffset	RVMachineFunctionInfo.h	/^  bool hasPrivateSegmentWaveByteOffset() const {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:bool
hasPrologEpilogSGPRSpillEntry	RVMachineFunctionInfo.h	/^  bool hasPrologEpilogSGPRSpillEntry(Register Reg) const {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:bool
hasPseudoScalarTrans	GCNSubtarget.h	/^  bool hasPseudoScalarTrans() const { return HasPseudoScalarTrans; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasQueuePtr	GCNSubtarget.h	/^  bool hasQueuePtr() const { return QueuePtr; }$/;"	f	class:llvm::GCNUserSGPRUsageInfo	typeref:typename:bool
hasR128A16	GCNSubtarget.h	/^  bool hasR128A16() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasRFEHazards	GCNSubtarget.h	/^  bool hasRFEHazards() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasReadM0LdsDirectHazard	GCNSubtarget.h	/^  bool hasReadM0LdsDirectHazard() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasReadM0LdsDmaHazard	GCNSubtarget.h	/^  bool hasReadM0LdsDmaHazard() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasReadM0MovRelInterpHazard	GCNSubtarget.h	/^  bool hasReadM0MovRelInterpHazard() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasReadM0SendMsgHazard	GCNSubtarget.h	/^  bool hasReadM0SendMsgHazard() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasReadVCCZBug	GCNSubtarget.h	/^  bool hasReadVCCZBug() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasReg	RVRegisterInfo.h	/^    bool hasReg() { return VGPR != 0; }$/;"	f	struct:llvm::RVRegisterInfo::SpilledReg	typeref:typename:bool
hasRegSrcOperand	Utils/RVGPUBaseInfo.h	/^  bool hasRegSrcOperand(unsigned CompSrcIdx) const {$/;"	f	class:llvm::RVGPU::VOPD::ComponentProps	typeref:typename:bool
hasRestrictedSOffset	GCNSubtarget.h	/^  bool hasRestrictedSOffset() const { return HasRestrictedSOffset; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasRrWGMode	GCNSubtarget.h	/^  bool hasRrWGMode() const { return false; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasSALUFloatInsts	GCNSubtarget.h	/^  bool hasSALUFloatInsts() const { return HasSALUFloatInsts; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasSCmpK	GCNSubtarget.h	/^  bool hasSCmpK() const { return true; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasSDWA	RVGPUSubtarget.h	/^  bool hasSDWA() const {$/;"	f	class:llvm::RVGPUSubtarget	typeref:typename:bool
hasSDWAMac	GCNSubtarget.h	/^  bool hasSDWAMac() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasSDWAOmod	GCNSubtarget.h	/^  bool hasSDWAOmod() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasSDWAOutModsVOPC	GCNSubtarget.h	/^  bool hasSDWAOutModsVOPC() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasSDWAScalar	GCNSubtarget.h	/^  bool hasSDWAScalar() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasSDWASdst	GCNSubtarget.h	/^  bool hasSDWASdst() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasSGPR102_SGPR103	AsmParser/RVGPUAsmParser.cpp	/^  bool hasSGPR102_SGPR103() const {$/;"	f	class:__anon672fa8550111::RVGPUAsmParser	typeref:typename:bool	file:
hasSGPR104_SGPR105	AsmParser/RVGPUAsmParser.cpp	/^  bool hasSGPR104_SGPR105() const { return isGFX10Plus(); }$/;"	f	class:__anon672fa8550111::RVGPUAsmParser	typeref:typename:bool	file:
hasSGPRInitBug	GCNSubtarget.h	/^  bool hasSGPRInitBug() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasSGPRs	RVRegisterInfo.h	/^  static bool hasSGPRs(const TargetRegisterClass *RC) {$/;"	f	class:llvm::RVRegisterInfo	typeref:typename:bool
hasSMEMByteOffset	Utils/RVGPUBaseInfo.cpp	/^static bool hasSMEMByteOffset(const MCSubtargetInfo &ST) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool	file:
hasSMEMtoVectorWriteHazard	GCNSubtarget.h	/^  bool hasSMEMtoVectorWriteHazard() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasSMRDReadVALUDefHazard	GCNSubtarget.h	/^  bool hasSMRDReadVALUDefHazard() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasSMRDSignedImmOffset	Utils/RVGPUBaseInfo.cpp	/^static bool hasSMRDSignedImmOffset(const MCSubtargetInfo &ST) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool	file:
hasSMemRealTime	GCNSubtarget.h	/^  bool hasSMemRealTime() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasSMemTimeInst	GCNSubtarget.h	/^  bool hasSMemTimeInst() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasSMulHi	RVGPUSubtarget.h	/^  bool hasSMulHi() const {$/;"	f	class:llvm::RVGPUSubtarget	typeref:typename:bool
hasSPackHL	GCNSubtarget.h	/^  bool hasSPackHL() const { return GFX11Insts; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasSRAMECC	Utils/RVGPUBaseInfo.cpp	/^bool hasSRAMECC(const MCSubtargetInfo &STI) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
hasSameBaseAddress	SILoadStoreOptimizer.cpp	/^    bool hasSameBaseAddress(const CombineInfo &CI) {$/;"	f	struct:__anon677101620111::SILoadStoreOptimizer::CombineInfo	typeref:typename:bool	file:
hasScalarAddSub64	GCNSubtarget.h	/^  bool hasScalarAddSub64() const { return false; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasScalarAtomics	GCNSubtarget.h	/^  bool hasScalarAtomics() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasScalarCompareEq64	GCNSubtarget.h	/^  bool hasScalarCompareEq64() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasScalarDwordx3Loads	GCNSubtarget.h	/^  bool hasScalarDwordx3Loads() const { return HasScalarDwordx3Loads; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasScalarFlatScratchInsts	GCNSubtarget.h	/^  bool hasScalarFlatScratchInsts() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasScalarMulHiInsts	GCNSubtarget.h	/^  bool hasScalarMulHiInsts() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasScalarPackInsts	GCNSubtarget.h	/^  bool hasScalarPackInsts() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasScalarStores	GCNSubtarget.h	/^  bool hasScalarStores() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasShaderCyclesRegister	GCNSubtarget.h	/^  bool hasShaderCyclesRegister() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasShift64HighRegBug	GCNSubtarget.h	/^  bool hasShift64HighRegBug() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasSourceMods	RVGPUCombinerHelper.cpp	/^static bool hasSourceMods(const MachineInstr &MI) {$/;"	f	typeref:typename:LLVM_READONLY bool	file:
hasSourceMods	RVGPUISelLowering.cpp	/^static bool hasSourceMods(const SDNode *N) {$/;"	f	typeref:typename:LLVM_READONLY bool	file:
hasSpilledSGPRs	RVMachineFunctionInfo.h	/^  bool hasSpilledSGPRs() const {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:bool
hasSpilledVGPRs	RVMachineFunctionInfo.h	/^  bool hasSpilledVGPRs() const {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:bool
hasSplitBarriers	GCNSubtarget.h	/^  bool hasSplitBarriers() const { return false; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasSrc2Acc	Utils/RVGPUBaseInfo.h	/^  bool hasSrc2Acc() const { return HasSrc2Acc; }$/;"	f	class:llvm::RVGPU::VOPD::ComponentProps	typeref:typename:bool
hasSufficientLocalMem	RVGPUPromoteAlloca.cpp	/^bool RVGPUPromoteAllocaImpl::hasSufficientLocalMem(const Function &F) {$/;"	f	class:RVGPUPromoteAllocaImpl	typeref:typename:bool
hasSwap	GCNSubtarget.h	/^  bool hasSwap() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasTransForwardingHazard	GCNSubtarget.h	/^  bool hasTransForwardingHazard() const { return false; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasTrigReducedRange	RVGPUSubtarget.h	/^  bool hasTrigReducedRange() const {$/;"	f	class:llvm::RVGPUSubtarget	typeref:typename:bool
hasTrue16BitInsts	RVGPUSubtarget.h	/^  bool hasTrue16BitInsts() const { return HasTrue16BitInsts; }$/;"	f	class:llvm::RVGPUSubtarget	typeref:typename:bool
hasUnalignedAccessMode	GCNSubtarget.h	/^  bool hasUnalignedAccessMode() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasUnalignedBufferAccess	GCNSubtarget.h	/^  bool hasUnalignedBufferAccess() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasUnalignedBufferAccessEnabled	GCNSubtarget.h	/^  bool hasUnalignedBufferAccessEnabled() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasUnalignedDSAccess	GCNSubtarget.h	/^  bool hasUnalignedDSAccess() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasUnalignedDSAccessEnabled	GCNSubtarget.h	/^  bool hasUnalignedDSAccessEnabled() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasUnalignedScratchAccess	GCNSubtarget.h	/^  bool hasUnalignedScratchAccess() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasUnpackedD16VMem	GCNSubtarget.h	/^  bool hasUnpackedD16VMem() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasUnsafeFPMath	RVGPUCodeGenPrepare.cpp	/^static bool hasUnsafeFPMath(const Function &F) {$/;"	f	typeref:typename:bool	file:
hasUnwantedEffectsWhenEXECEmpty	RVInstrInfo.cpp	/^bool RVInstrInfo::hasUnwantedEffectsWhenEXECEmpty(const MachineInstr &MI) const {$/;"	f	class:RVInstrInfo	typeref:typename:bool
hasUsableDSOffset	GCNSubtarget.h	/^  bool hasUsableDSOffset() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasUsableDivScaleConditionOutput	GCNSubtarget.h	/^  bool hasUsableDivScaleConditionOutput() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasUserSGPRInit16Bug	GCNSubtarget.h	/^  bool hasUserSGPRInit16Bug() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasVALU32BitEncoding	RVInstrInfo.cpp	/^bool RVInstrInfo::hasVALU32BitEncoding(unsigned Opcode) const {$/;"	f	class:RVInstrInfo	typeref:typename:bool
hasVALUMaskWriteHazard	GCNSubtarget.h	/^  bool hasVALUMaskWriteHazard() const { return true; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasVALUPartialForwardingHazard	GCNSubtarget.h	/^  bool hasVALUPartialForwardingHazard() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasVALUTransUseHazard	GCNSubtarget.h	/^  bool hasVALUTransUseHazard() const { return HasVALUTransUseHazard; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasVDecCoExecHazard	GCNSubtarget.h	/^  bool hasVDecCoExecHazard() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasVGPRIndexMode	GCNSubtarget.h	/^  bool hasVGPRIndexMode() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasVGPRSingleUseHintInsts	GCNSubtarget.h	/^  bool hasVGPRSingleUseHintInsts() const { return HasVGPRSingleUseHintInsts; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasVGPRUses	RVInstrInfo.h	/^  bool hasVGPRUses(const MachineInstr &MI) const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
hasVGPRs	RVRegisterInfo.h	/^  static bool hasVGPRs(const TargetRegisterClass *RC) {$/;"	f	class:llvm::RVRegisterInfo	typeref:typename:bool
hasVMEMReadSGPRVALUDefHazard	GCNSubtarget.h	/^  bool hasVMEMReadSGPRVALUDefHazard() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasVMEMtoScalarWriteHazard	GCNSubtarget.h	/^  bool hasVMEMtoScalarWriteHazard() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasVOP3DPP	GCNSubtarget.h	/^  bool hasVOP3DPP() const { return true; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasVOP3Literal	GCNSubtarget.h	/^  bool hasVOP3Literal() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasVOP3PInsts	RVGPUSubtarget.h	/^  bool hasVOP3PInsts() const {$/;"	f	class:llvm::RVGPUSubtarget	typeref:typename:bool
hasVOPD	Utils/RVGPUBaseInfo.cpp	/^bool hasVOPD(const MCSubtargetInfo &STI) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
hasVOPDInsts	GCNSubtarget.h	/^  bool hasVOPDInsts() const { return HasVOPDInsts; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasVRegFlags	RVMachineFunctionInfo.h	/^  bool hasVRegFlags() { return VRegFlags.size(); }$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:bool
hasVcmpxExecWARHazard	GCNSubtarget.h	/^  bool hasVcmpxExecWARHazard() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasVcmpxPermlaneHazard	GCNSubtarget.h	/^  bool hasVcmpxPermlaneHazard() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasVectorRegisters	RVRegisterInfo.h	/^  static bool hasVectorRegisters(const TargetRegisterClass *RC) {$/;"	f	class:llvm::RVRegisterInfo	typeref:typename:bool
hasVgprParts	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::hasVgprParts(ArrayRef<GEPInfo> AddrInfo) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
hasVolatileUser	RVGPUISelLowering.cpp	/^static bool hasVolatileUser(SDNode *Val) {$/;"	f	typeref:typename:bool	file:
hasVscnt	GCNSubtarget.h	/^  bool hasVscnt() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
hasWait	Utils/RVGPUBaseInfo.h	/^  bool hasWait() const {$/;"	f	struct:llvm::RVGPU::Waitcnt	typeref:typename:bool
hasWaitExceptVsCnt	Utils/RVGPUBaseInfo.h	/^  bool hasWaitExceptVsCnt() const {$/;"	f	struct:llvm::RVGPU::Waitcnt	typeref:typename:bool
hasWaitVsCnt	Utils/RVGPUBaseInfo.h	/^  bool hasWaitVsCnt() const {$/;"	f	struct:llvm::RVGPU::Waitcnt	typeref:typename:bool
hasWorkGroupIDX	RVMachineFunctionInfo.h	/^  bool hasWorkGroupIDX() const {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:bool
hasWorkGroupIDY	RVMachineFunctionInfo.h	/^  bool hasWorkGroupIDY() const {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:bool
hasWorkGroupIDZ	RVMachineFunctionInfo.h	/^  bool hasWorkGroupIDZ() const {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:bool
hasWorkGroupInfo	RVMachineFunctionInfo.h	/^  bool hasWorkGroupInfo() const {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:bool
hasWorkItemIDX	RVMachineFunctionInfo.h	/^  bool hasWorkItemIDX() const {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:bool
hasWorkItemIDY	RVMachineFunctionInfo.h	/^  bool hasWorkItemIDY() const {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:bool
hasWorkItemIDZ	RVMachineFunctionInfo.h	/^  bool hasWorkItemIDZ() const {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:bool
hasXNACK	Utils/RVGPUBaseInfo.cpp	/^bool hasXNACK(const MCSubtargetInfo &STI) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
has_soffset	Utils/RVGPUBaseInfo.cpp	/^  bool has_soffset;$/;"	m	struct:llvm::RVGPU::MTBUFInfo	typeref:typename:bool	file:
has_soffset	Utils/RVGPUBaseInfo.cpp	/^  bool has_soffset;$/;"	m	struct:llvm::RVGPU::MUBUFInfo	typeref:typename:bool	file:
has_srsrc	Utils/RVGPUBaseInfo.cpp	/^  bool has_srsrc;$/;"	m	struct:llvm::RVGPU::MTBUFInfo	typeref:typename:bool	file:
has_srsrc	Utils/RVGPUBaseInfo.cpp	/^  bool has_srsrc;$/;"	m	struct:llvm::RVGPU::MUBUFInfo	typeref:typename:bool	file:
has_vaddr	Utils/RVGPUBaseInfo.cpp	/^  bool has_vaddr;$/;"	m	struct:llvm::RVGPU::MTBUFInfo	typeref:typename:bool	file:
has_vaddr	Utils/RVGPUBaseInfo.cpp	/^  bool has_vaddr;$/;"	m	struct:llvm::RVGPU::MUBUFInfo	typeref:typename:bool	file:
haveRoundOpsF64	GCNSubtarget.h	/^  bool haveRoundOpsF64() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
higherOccupancy	GCNRegPressure.h	/^  bool higherOccupancy(const GCNSubtarget &ST, const GCNRegPressure& O) const {$/;"	f	struct:llvm::GCNRegPressure	typeref:typename:bool
hoistAndMergeSGPRInits	SIFixSGPRCopies.cpp	/^static bool hoistAndMergeSGPRInits(unsigned Reg,$/;"	f	typeref:typename:bool	file:
hsa_dim3_s	RVKernelCodeT.h	/^typedef struct hsa_dim3_s {$/;"	s
hsa_dim3_t	RVKernelCodeT.h	/^} hsa_dim3_t;$/;"	t	typeref:struct:hsa_dim3_s
hsa_ext_brig_machine_model8_t	RVKernelCodeT.h	/^typedef uint8_t hsa_ext_brig_machine_model8_t;$/;"	t	typeref:typename:uint8_t
hsa_ext_brig_profile8_t	RVKernelCodeT.h	/^typedef uint8_t hsa_ext_brig_profile8_t;$/;"	t	typeref:typename:uint8_t
hsa_ext_code_kind32_t	RVKernelCodeT.h	/^typedef uint32_t hsa_ext_code_kind32_t;$/;"	t	typeref:typename:uint32_t
hsa_ext_code_kind_t	RVKernelCodeT.h	/^typedef uint32_t hsa_ext_code_kind_t;$/;"	t	typeref:typename:uint32_t
hsa_ext_control_directive_present64_t	RVKernelCodeT.h	/^typedef uint64_t hsa_ext_control_directive_present64_t;$/;"	t	typeref:typename:uint64_t
hsa_ext_control_directives_s	RVKernelCodeT.h	/^typedef struct hsa_ext_control_directives_s {$/;"	s
hsa_ext_control_directives_t	RVKernelCodeT.h	/^} hsa_ext_control_directives_t;$/;"	t	typeref:struct:hsa_ext_control_directives_s
hsa_ext_exception_kind16_t	RVKernelCodeT.h	/^typedef uint16_t hsa_ext_exception_kind16_t;$/;"	t	typeref:typename:uint16_t
hsa_powertwo8_t	RVKernelCodeT.h	/^typedef uint8_t hsa_powertwo8_t;$/;"	t	typeref:typename:uint8_t
hybrid	RVGPULowerModuleLDSPass.cpp	/^enum class LoweringKind { module, table, kernel, hybrid };$/;"	e	enum:__anoncc7483b30111::LoweringKind	file:
imageIntrinsicOptimizerImpl	RVGPUImageIntrinsicOptimizer.cpp	/^static bool imageIntrinsicOptimizerImpl(Function &F, const TargetMachine *TM) {$/;"	f	typeref:typename:bool	file:
inLoopLevel	SILowerI1Copies.cpp	/^  bool inLoopLevel(MachineBasicBlock &MBB, unsigned LoopLevel,$/;"	f	class:__anone16a92980111::LoopFinder	typeref:typename:bool	file:
inc	GCNRegPressure.cpp	/^void GCNRegPressure::inc(unsigned Reg,$/;"	f	class:GCNRegPressure	typeref:typename:void
increaseOccupancy	RVMachineFunctionInfo.h	/^  void increaseOccupancy(const MachineFunction &MF, unsigned Limit) {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:void
indirectCopyToAGPR	RVInstrInfo.cpp	/^static void indirectCopyToAGPR(const RVInstrInfo &TII,$/;"	f	typeref:typename:void	file:
indirect_access	RVGPULowerModuleLDSPass.cpp	/^    FunctionVariableMap indirect_access;$/;"	m	struct:__anoncc7483b30111::RVGPULowerModuleLDS::LDSUsesInfoTy	typeref:typename:FunctionVariableMap	file:
initCandidate	GCNSchedStrategy.cpp	/^void GCNSchedStrategy::initCandidate(SchedCandidate &Cand, SUnit *SU,$/;"	f	class:GCNSchedStrategy	typeref:typename:void
initDefaultRVKernelCodeT	Utils/RVGPUBaseInfo.cpp	/^void initDefaultRVKernelCodeT(rv_kernel_code_t &Header,$/;"	f	namespace:llvm::RVGPU	typeref:typename:void
initFallthroughMap	RVGPUMachineCFGStructurizer.cpp	/^void RVGPUMachineCFGStructurizer::initFallthroughMap(MachineFunction &MF) {$/;"	f	class:RVGPUMachineCFGStructurizer	typeref:typename:void
initFunction	RVGPULibCalls.cpp	/^void RVGPULibCalls::initFunction(Function &F, FunctionAnalysisManager &FAM) {$/;"	f	class:RVGPULibCalls	typeref:typename:void
initGCNRegion	GCNSchedStrategy.cpp	/^bool ClusteredLowOccStage::initGCNRegion() {$/;"	f	class:ClusteredLowOccStage	typeref:typename:bool
initGCNRegion	GCNSchedStrategy.cpp	/^bool GCNSchedStage::initGCNRegion() {$/;"	f	class:GCNSchedStage	typeref:typename:bool
initGCNRegion	GCNSchedStrategy.cpp	/^bool PreRARematStage::initGCNRegion() {$/;"	f	class:PreRARematStage	typeref:typename:bool
initGCNRegion	GCNSchedStrategy.cpp	/^bool UnclusteredHighRPStage::initGCNRegion() {$/;"	f	class:UnclusteredHighRPStage	typeref:typename:bool
initGCNSchedStage	GCNSchedStrategy.cpp	/^bool ClusteredLowOccStage::initGCNSchedStage() {$/;"	f	class:ClusteredLowOccStage	typeref:typename:bool
initGCNSchedStage	GCNSchedStrategy.cpp	/^bool GCNSchedStage::initGCNSchedStage() {$/;"	f	class:GCNSchedStage	typeref:typename:bool
initGCNSchedStage	GCNSchedStrategy.cpp	/^bool PreRARematStage::initGCNSchedStage() {$/;"	f	class:PreRARematStage	typeref:typename:bool
initGCNSchedStage	GCNSchedStrategy.cpp	/^bool UnclusteredHighRPStage::initGCNSchedStage() {$/;"	f	class:UnclusteredHighRPStage	typeref:typename:bool
initIGLPOpt	RVGPUIGroupLP.cpp	/^void IGroupLPDAGMutation::initIGLPOpt(SUnit &SU) {$/;"	f	class:__anon61b122dc0111::IGroupLPDAGMutation	typeref:typename:void
initLinearizedRegion	RVGPUMachineCFGStructurizer.cpp	/^RVGPUMachineCFGStructurizer::initLinearizedRegion(RegionMRT *Region) {$/;"	f	class:RVGPUMachineCFGStructurizer	typeref:typename:LinearizedRegion *
initLiveOut	RVGPUMachineCFGStructurizer.cpp	/^void LinearizedRegion::initLiveOut(RegionMRT *Region,$/;"	f	class:LinearizedRegion	typeref:typename:void
initLiveUnits	RVFrameLowering.cpp	/^static void initLiveUnits(LiveRegUnits &LiveUnits, const RVRegisterInfo &TRI,$/;"	f	typeref:typename:void	file:
initM0	RVGPUInstructionSelector.cpp	/^void RVGPUInstructionSelector::initM0(MachineInstr &I) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:void
initMangled	RVGPULibFunc.cpp	/^void RVGPULibFunc::initMangled() { Impl.reset(new RVGPUMangledLibFunc()); }$/;"	f	class:RVGPULibFunc	typeref:typename:void
initNativeFuncs	RVGPULibCalls.cpp	/^void RVGPULibCalls::initNativeFuncs() {$/;"	f	class:RVGPULibCalls	typeref:typename:void
initNumPreds	GCNMinRegStrategy.cpp	/^void GCNMinRegScheduler::initNumPreds(const decltype(ScheduleDAG::SUnits) &SUnits) {$/;"	f	class:GCNMinRegScheduler	typeref:typename:void
initRPTracker	SIMachineScheduler.h	/^  void initRPTracker(RegPressureTracker &RPTracker) {$/;"	f	class:llvm::SIScheduleDAGMI	typeref:typename:void
initRegPressure	SIMachineScheduler.cpp	/^void SIScheduleBlock::initRegPressure(MachineBasicBlock::iterator BeginBlock,$/;"	f	class:SIScheduleBlock	typeref:typename:void
initSchedGroup	RVGPUIGroupLP.cpp	/^void SchedGroup::initSchedGroup() {$/;"	f	class:__anon61b122dc0111::SchedGroup	typeref:typename:void
initSchedGroup	RVGPUIGroupLP.cpp	/^void SchedGroup::initSchedGroup(SUnitsToCandidateSGsMap &SyncedInstrs) {$/;"	f	class:__anon61b122dc0111::SchedGroup	typeref:typename:void
initSchedGroup	RVGPUIGroupLP.cpp	/^void SchedGroup::initSchedGroup(std::vector<SUnit>::reverse_iterator RIter,$/;"	f	class:__anon61b122dc0111::SchedGroup	typeref:typename:void
initSchedGroupBarrierPipelineStage	RVGPUIGroupLP.cpp	/^void IGroupLPDAGMutation::initSchedGroupBarrierPipelineStage($/;"	f	class:__anon61b122dc0111::IGroupLPDAGMutation	typeref:typename:void
initTargetStreamer	RVGPUAsmPrinter.cpp	/^void RVGPUAsmPrinter::initTargetStreamer(Module &M) {$/;"	f	class:RVGPUAsmPrinter	typeref:typename:void
initialize	AsmParser/RVGPUAsmParser.cpp	/^  void initialize(MCContext &Context) {$/;"	f	class:__anon672fa8550111::KernelScopeInfo	typeref:typename:void	file:
initialize	GCNIterativeScheduler.cpp	/^  void initialize(ScheduleDAGMI *DAG) override {}$/;"	f	class:__anon1e3e8dba0111::SchedStrategyStub	typeref:typename:void	file:
initialize	GCNSchedStrategy.cpp	/^void GCNSchedStrategy::initialize(ScheduleDAGMI *DAG) {$/;"	f	class:GCNSchedStrategy	typeref:typename:void
initialize	RVGPUAttributor.cpp	/^  void initialize(Attributor &A) override {$/;"	f	struct:__anon512e119a0111::AARVAttributesFunction	typeref:typename:void	file:
initialize	RVGPUAttributor.cpp	/^  void initialize(Attributor &A) override {$/;"	f	struct:__anon512e119a0111::AARVFlatWorkGroupSize	typeref:typename:void	file:
initialize	RVGPUAttributor.cpp	/^  void initialize(Attributor &A) override {$/;"	f	struct:__anon512e119a0111::AARVWavesPerEU	typeref:typename:void	file:
initialize	RVGPUAttributor.cpp	/^  void initialize(Attributor &A) override {$/;"	f	struct:__anon512e119a0111::AAUniformWorkGroupSizeFunction	typeref:typename:void	file:
initialize	SIAnnotateControlFlow.cpp	/^void SIAnnotateControlFlow::initialize(Module &M, const GCNSubtarget &ST) {$/;"	f	class:SIAnnotateControlFlow	typeref:typename:void
initialize	SILowerI1Copies.cpp	/^  void initialize(MachineBasicBlock &MBB) {$/;"	f	class:__anone16a92980111::LoopFinder	typeref:typename:void	file:
initializeBaseYamlFields	RVMachineFunctionInfo.cpp	/^bool RVMachineFunctionInfo::initializeBaseYamlFields($/;"	f	class:RVMachineFunctionInfo	typeref:typename:bool
initializeDefaultSGPRRegisterAllocatorOnce	RVGPUTargetMachine.cpp	/^static void initializeDefaultSGPRRegisterAllocatorOnce() {$/;"	f	namespace:__anon565c6f860111	typeref:typename:void	file:
initializeDefaultVGPRRegisterAllocatorOnce	RVGPUTargetMachine.cpp	/^static void initializeDefaultVGPRRegisterAllocatorOnce() {$/;"	f	namespace:__anon565c6f860111	typeref:typename:void	file:
initializeGprCountSymbol	AsmParser/RVGPUAsmParser.cpp	/^void RVGPUAsmParser::initializeGprCountSymbol(RegisterKind RegKind) {$/;"	f	class:RVGPUAsmParser	typeref:typename:void
initializeLaneMaskRegisterAttributes	SILowerI1Copies.h	/^  void initializeLaneMaskRegisterAttributes(Register LaneMask) {$/;"	f	class:llvm::PhiLoweringHelper	typeref:typename:void
initializeMRT	RVGPUMachineCFGStructurizer.cpp	/^MRT::initializeMRT(MachineFunction &MF, const MachineRegionInfo *RegionInfo,$/;"	f	class:MRT	typeref:typename:MachineBasicBlock *
initializeSelectRegisters	RVGPUMachineCFGStructurizer.cpp	/^RVGPUMachineCFGStructurizer::initializeSelectRegisters(MRT *MRT, unsigned SelectOut,$/;"	f	class:RVGPUMachineCFGStructurizer	typeref:typename:unsigned
initializeSplitCSR	RVISelLowering.cpp	/^void RVTargetLowering::initializeSplitCSR(MachineBasicBlock *Entry) const {$/;"	f	class:RVTargetLowering	typeref:typename:void
initializeSubtargetDependencies	RVGPUSubtarget.cpp	/^GCNSubtarget::initializeSubtargetDependencies(const Triple &TT,$/;"	f	class:GCNSubtarget	typeref:typename:GCNSubtarget &
initializeTargetID	MCTargetDesc/RVGPUTargetStreamer.h	/^  void initializeTargetID(const MCSubtargetInfo &STI, StringRef FeatureString,$/;"	f	class:llvm::RVGPUTargetStreamer	typeref:typename:void
initializeTargetID	MCTargetDesc/RVGPUTargetStreamer.h	/^  void initializeTargetID(const MCSubtargetInfo &STI,$/;"	f	class:llvm::RVGPUTargetStreamer	typeref:typename:void
initializeTargetID	RVGPUAsmPrinter.cpp	/^void RVGPUAsmPrinter::initializeTargetID(const Module &M) {$/;"	f	class:RVGPUAsmPrinter	typeref:typename:void
input	RVGPULibCalls.cpp	/^  double   input;$/;"	m	struct:TableEntry	typeref:typename:double	file:
insert	RVInstrInfo.cpp	/^void SIInstrWorklist::insert(MachineInstr *MI) {$/;"	f	class:SIInstrWorklist	typeref:typename:void
insertAcquire	SIMemoryLegalizer.cpp	/^bool SIGfx10CacheControl::insertAcquire(MachineBasicBlock::iterator &MI,$/;"	f	class:SIGfx10CacheControl	typeref:typename:bool
insertAcquire	SIMemoryLegalizer.cpp	/^bool SIGfx6CacheControl::insertAcquire(MachineBasicBlock::iterator &MI,$/;"	f	class:SIGfx6CacheControl	typeref:typename:bool
insertAcquire	SIMemoryLegalizer.cpp	/^bool SIGfx7CacheControl::insertAcquire(MachineBasicBlock::iterator &MI,$/;"	f	class:SIGfx7CacheControl	typeref:typename:bool
insertAcquire	SIMemoryLegalizer.cpp	/^bool SIGfx90ACacheControl::insertAcquire(MachineBasicBlock::iterator &MI,$/;"	f	class:SIGfx90ACacheControl	typeref:typename:bool
insertAcquire	SIMemoryLegalizer.cpp	/^bool SIGfx940CacheControl::insertAcquire(MachineBasicBlock::iterator &MI,$/;"	f	class:SIGfx940CacheControl	typeref:typename:bool
insertBits	Disassembler/RVGPUDisassembler.h	/^  void insertBits(uint64_t SubBits, unsigned BitPosition, unsigned NumBits) {$/;"	f	class:llvm::DecoderUInt128	typeref:typename:void
insertBranch	RVInstrInfo.cpp	/^unsigned RVInstrInfo::insertBranch(MachineBasicBlock &MBB,$/;"	f	class:RVInstrInfo	typeref:typename:unsigned
insertCSRRestores	SILowerSGPRSpills.cpp	/^static void insertCSRRestores(MachineBasicBlock &RestoreBlock,$/;"	f	typeref:typename:void	file:
insertCSRSaves	SILowerSGPRSpills.cpp	/^static void insertCSRSaves(MachineBasicBlock &SaveBlock,$/;"	f	typeref:typename:void	file:
insertChainedPHI	RVGPUMachineCFGStructurizer.cpp	/^void RVGPUMachineCFGStructurizer::insertChainedPHI(MachineBasicBlock *IfBB,$/;"	f	class:RVGPUMachineCFGStructurizer	typeref:typename:void
insertCopiesSplitCSR	RVISelLowering.cpp	/^void RVTargetLowering::insertCopiesSplitCSR($/;"	f	class:RVTargetLowering	typeref:typename:void
insertEQ	RVInstrInfo.cpp	/^Register RVInstrInfo::insertEQ(MachineBasicBlock *MBB,$/;"	f	class:RVInstrInfo	typeref:typename:Register
insertElse	SIAnnotateControlFlow.cpp	/^bool SIAnnotateControlFlow::insertElse(BranchInst *Term) {$/;"	f	class:SIAnnotateControlFlow	typeref:typename:bool
insertIndirectBranch	RVInstrInfo.cpp	/^void RVInstrInfo::insertIndirectBranch(MachineBasicBlock &MBB,$/;"	f	class:RVInstrInfo	typeref:typename:void
insertMergePHI	RVGPUMachineCFGStructurizer.cpp	/^void RVGPUMachineCFGStructurizer::insertMergePHI(MachineBasicBlock *IfBB,$/;"	f	class:RVGPUMachineCFGStructurizer	typeref:typename:void
insertNE	RVInstrInfo.cpp	/^Register RVInstrInfo::insertNE(MachineBasicBlock *MBB,$/;"	f	class:RVInstrInfo	typeref:typename:Register
insertNamedMCOperand	Disassembler/RVGPUDisassembler.cpp	/^static int insertNamedMCOperand(MCInst &MI, const MCOperand &Op,$/;"	f	typeref:typename:int	file:
insertNoop	RVInstrInfo.cpp	/^void RVInstrInfo::insertNoop(MachineBasicBlock &MBB,$/;"	f	class:RVInstrInfo	typeref:typename:void
insertNoops	RVInstrInfo.cpp	/^void RVInstrInfo::insertNoops(MachineBasicBlock &MBB,$/;"	f	class:RVInstrInfo	typeref:typename:void
insertNoopsInBundle	GCNHazardRecognizer.cpp	/^static void insertNoopsInBundle(MachineInstr *MI, const RVInstrInfo &TII,$/;"	f	typeref:typename:void	file:
insertRelease	SIMemoryLegalizer.cpp	/^bool SIGfx6CacheControl::insertRelease(MachineBasicBlock::iterator &MI,$/;"	f	class:SIGfx6CacheControl	typeref:typename:bool
insertRelease	SIMemoryLegalizer.cpp	/^bool SIGfx90ACacheControl::insertRelease(MachineBasicBlock::iterator &MI,$/;"	f	class:SIGfx90ACacheControl	typeref:typename:bool
insertRelease	SIMemoryLegalizer.cpp	/^bool SIGfx940CacheControl::insertRelease(MachineBasicBlock::iterator &MI,$/;"	f	class:SIGfx940CacheControl	typeref:typename:bool
insertReturn	RVInstrInfo.cpp	/^void RVInstrInfo::insertReturn(MachineBasicBlock &MBB) const {$/;"	f	class:RVInstrInfo	typeref:typename:void
insertScratchExecCopy	RVInstrInfo.cpp	/^void RVInstrInfo::insertScratchExecCopy(MachineFunction &MF,$/;"	f	class:RVInstrInfo	typeref:typename:void
insertSelect	RVInstrInfo.cpp	/^void RVInstrInfo::insertSelect(MachineBasicBlock &MBB,$/;"	f	class:RVInstrInfo	typeref:typename:void
insertSetreg	SIModeRegister.cpp	/^void SIModeRegister::insertSetreg(MachineBasicBlock &MBB, MachineInstr *MI,$/;"	f	class:SIModeRegister	typeref:typename:void
insertSinCos	RVGPULibCalls.cpp	/^RVGPULibCalls::insertSinCos(Value *Arg, FastMathFlags FMF, IRBuilder<> &B,$/;"	f	class:RVGPULibCalls	typeref:typename:std::tuple<Value *,Value *,Value * >
insertUnconditionalBranch	RVGPUMachineCFGStructurizer.cpp	/^void RVGPUMachineCFGStructurizer::insertUnconditionalBranch(MachineBasicBlock *MBB,$/;"	f	class:RVGPUMachineCFGStructurizer	typeref:typename:void
insertUndefLaneMask	SILowerI1Copies.cpp	/^static Register insertUndefLaneMask(MachineBasicBlock *MBB,$/;"	f	typeref:typename:Register	file:
insertValues	RVGPUCodeGenPrepare.cpp	/^static Value *insertValues(IRBuilder<> &Builder,$/;"	f	typeref:typename:Value *	file:
insertVectorSelect	RVInstrInfo.cpp	/^void RVInstrInfo::insertVectorSelect(MachineBasicBlock &MBB,$/;"	f	class:RVInstrInfo	typeref:typename:void
insertWait	SIMemoryLegalizer.cpp	/^bool SIGfx10CacheControl::insertWait(MachineBasicBlock::iterator &MI,$/;"	f	class:SIGfx10CacheControl	typeref:typename:bool
insertWait	SIMemoryLegalizer.cpp	/^bool SIGfx6CacheControl::insertWait(MachineBasicBlock::iterator &MI,$/;"	f	class:SIGfx6CacheControl	typeref:typename:bool
insertWait	SIMemoryLegalizer.cpp	/^bool SIGfx90ACacheControl::insertWait(MachineBasicBlock::iterator &MI,$/;"	f	class:SIGfx90ACacheControl	typeref:typename:bool
insertWaitcntInBlock	SIInsertWaitcnts.cpp	/^bool SIInsertWaitcnts::insertWaitcntInBlock(MachineFunction &MF,$/;"	f	class:SIInsertWaitcnts	typeref:typename:bool
instAccessReg	SIShrinkInstructions.cpp	/^bool SIShrinkInstructions::instAccessReg($/;"	f	class:SIShrinkInstructions	typeref:typename:bool
instCombineIntrinsic	RVGPUInstCombineIntrinsic.cpp	/^GCNTTIImpl::instCombineIntrinsic(InstCombiner &IC, IntrinsicInst &II) const {$/;"	f	class:GCNTTIImpl	typeref:typename:std::optional<Instruction * >
instModifiesReg	SIShrinkInstructions.cpp	/^bool SIShrinkInstructions::instModifiesReg(const MachineInstr *MI, unsigned Reg,$/;"	f	class:SIShrinkInstructions	typeref:typename:bool
instReadsReg	SIShrinkInstructions.cpp	/^bool SIShrinkInstructions::instReadsReg(const MachineInstr *MI, unsigned Reg,$/;"	f	class:SIShrinkInstructions	typeref:typename:bool
inst_counter_types	SIInsertWaitcnts.cpp	/^auto inst_counter_types() { return enum_seq(VM_CNT, NUM_INST_CNTS); }$/;"	f	namespace:__anona6cbb7940211	typeref:typename:auto
instrDefsUsesSCC	SILowerI1Copies.cpp	/^static void instrDefsUsesSCC(const MachineInstr &MI, bool &Def, bool &Use) {$/;"	f	typeref:typename:void	file:
instructionWaitsForVALU	RVGPUInsertDelayAlu.cpp	/^  static bool instructionWaitsForVALU(const MachineInstr &MI) {$/;"	f	class:__anonc7296b900111::RVGPUInsertDelayAlu	typeref:typename:bool	file:
intersect	SIModeRegister.cpp	/^  Status intersect(const Status &S) const {$/;"	f	struct:Status	typeref:typename:Status	file:
intrinsicHasPackedVectorBenefit	RVGPUTargetTransformInfo.cpp	/^static bool intrinsicHasPackedVectorBenefit(Intrinsic::ID ID) {$/;"	f	typeref:typename:bool	file:
intrinsicToAttrMask	RVGPUAttributor.cpp	/^intrinsicToAttrMask(Intrinsic::ID ID, bool &NonKernelOnly, bool &NeedsImplicit,$/;"	f	typeref:typename:ImplicitArgumentMask	file:
invalidate	RVGPUAliasAnalysis.h	/^  bool invalidate(Function &, const PreservedAnalyses &,$/;"	f	class:llvm::RVGPUAAResult	typeref:typename:bool
inverseMinMax	RVGPUCombinerHelper.cpp	/^static unsigned inverseMinMax(unsigned Opc) {$/;"	f	typeref:typename:unsigned	file:
inverseMinMax	RVGPUISelLowering.cpp	/^static unsigned inverseMinMax(unsigned Opc) {$/;"	f	typeref:typename:unsigned	file:
invertSchedBarrierMask	RVGPUIGroupLP.cpp	/^IGroupLPDAGMutation::invertSchedBarrierMask(SchedGroupMask Mask) const {$/;"	f	class:__anon61b122dc0111::IGroupLPDAGMutation	typeref:typename:SchedGroupMask
isABID	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUOperand::isABID() const {$/;"	f	class:RVGPUOperand	typeref:typename:bool
isAGPR	RVRegisterInfo.cpp	/^bool RVRegisterInfo::isAGPR(const MachineRegisterInfo &MRI,$/;"	f	class:RVRegisterInfo	typeref:typename:bool
isAGPRClass	RVRegisterInfo.h	/^  static bool isAGPRClass(const TargetRegisterClass *RC) {$/;"	f	class:llvm::RVRegisterInfo	typeref:typename:bool
isAGPRCopy	SIFoldOperands.cpp	/^static bool isAGPRCopy(const RVRegisterInfo &TRI,$/;"	f	typeref:typename:bool	file:
isAISrcB16	AsmParser/RVGPUAsmParser.cpp	/^  bool isAISrcB16() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isAISrcB32	AsmParser/RVGPUAsmParser.cpp	/^  bool isAISrcB32() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isAISrcF16	AsmParser/RVGPUAsmParser.cpp	/^  bool isAISrcF16() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isAISrcF32	AsmParser/RVGPUAsmParser.cpp	/^  bool isAISrcF32() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isAISrcV2B16	AsmParser/RVGPUAsmParser.cpp	/^  bool isAISrcV2B16() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isAISrcV2F16	AsmParser/RVGPUAsmParser.cpp	/^  bool isAISrcV2F16() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isAISrc_1024B16	AsmParser/RVGPUAsmParser.cpp	/^  bool isAISrc_1024B16() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isAISrc_1024B32	AsmParser/RVGPUAsmParser.cpp	/^  bool isAISrc_1024B32() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isAISrc_1024F16	AsmParser/RVGPUAsmParser.cpp	/^  bool isAISrc_1024F16() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isAISrc_1024F32	AsmParser/RVGPUAsmParser.cpp	/^  bool isAISrc_1024F32() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isAISrc_1024V2B16	AsmParser/RVGPUAsmParser.cpp	/^  bool isAISrc_1024V2B16() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isAISrc_1024V2F16	AsmParser/RVGPUAsmParser.cpp	/^  bool isAISrc_1024V2F16() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isAISrc_128B16	AsmParser/RVGPUAsmParser.cpp	/^  bool isAISrc_128B16() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isAISrc_128B32	AsmParser/RVGPUAsmParser.cpp	/^  bool isAISrc_128B32() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isAISrc_128F16	AsmParser/RVGPUAsmParser.cpp	/^  bool isAISrc_128F16() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isAISrc_128F32	AsmParser/RVGPUAsmParser.cpp	/^  bool isAISrc_128F32() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isAISrc_128V2B16	AsmParser/RVGPUAsmParser.cpp	/^  bool isAISrc_128V2B16() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isAISrc_128V2F16	AsmParser/RVGPUAsmParser.cpp	/^  bool isAISrc_128V2F16() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isAISrc_256B64	AsmParser/RVGPUAsmParser.cpp	/^  bool isAISrc_256B64() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isAISrc_256F64	AsmParser/RVGPUAsmParser.cpp	/^  bool isAISrc_256F64() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isAISrc_512B16	AsmParser/RVGPUAsmParser.cpp	/^  bool isAISrc_512B16() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isAISrc_512B32	AsmParser/RVGPUAsmParser.cpp	/^  bool isAISrc_512B32() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isAISrc_512F16	AsmParser/RVGPUAsmParser.cpp	/^  bool isAISrc_512F16() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isAISrc_512F32	AsmParser/RVGPUAsmParser.cpp	/^  bool isAISrc_512F32() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isAISrc_512V2B16	AsmParser/RVGPUAsmParser.cpp	/^  bool isAISrc_512V2B16() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isAISrc_512V2F16	AsmParser/RVGPUAsmParser.cpp	/^  bool isAISrc_512V2F16() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isAISrc_64B64	AsmParser/RVGPUAsmParser.cpp	/^  bool isAISrc_64B64() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isAISrc_64F64	AsmParser/RVGPUAsmParser.cpp	/^  bool isAISrc_64F64() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isAddr64	AsmParser/RVGPUAsmParser.cpp	/^  bool isAddr64() const { return isImmTy(ImmTyAddr64); }$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isAliased	RVMachineFunctionInfo.h	/^  bool isAliased(const MachineFrameInfo *) const override {$/;"	f	class:llvm::RVGPUGWSResourcePseudoSourceValue	typeref:typename:bool
isAliased	RVMachineFunctionInfo.h	/^  bool isAliased(const MachineFrameInfo *) const override {$/;"	f	class:llvm::RVGPUPseudoSourceValue	typeref:typename:bool
isAlwaysGDS	MCA/RVGPUCustomBehaviour.cpp	/^bool RVGPUCustomBehaviour::isAlwaysGDS(uint16_t Opcode) const {$/;"	f	class:llvm::mca::RVGPUCustomBehaviour	typeref:typename:bool
isAlwaysGDS	RVInstrInfo.cpp	/^bool RVInstrInfo::isAlwaysGDS(uint16_t Opcode) const {$/;"	f	class:RVInstrInfo	typeref:typename:bool
isAlwaysUniform	RVGPUTargetTransformInfo.cpp	/^bool GCNTTIImpl::isAlwaysUniform(const Value *V) const {$/;"	f	class:GCNTTIImpl	typeref:typename:bool
isArgPassedInSGPR	Utils/RVGPUBaseInfo.cpp	/^bool isArgPassedInSGPR(const Argument *A) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isArgPassedInSGPR	Utils/RVGPUBaseInfo.cpp	/^bool isArgPassedInSGPR(const CallBase *CB, unsigned ArgNo) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isAsmClobberable	RVRegisterInfo.cpp	/^bool RVRegisterInfo::isAsmClobberable(const MachineFunction &MF,$/;"	f	class:RVRegisterInfo	typeref:typename:bool
isAsmOnlyOpcode	RVInstrInfo.cpp	/^bool RVInstrInfo::isAsmOnlyOpcode(int MCOp) const {$/;"	f	class:RVInstrInfo	typeref:typename:bool
isAtomic	RVInstrInfo.h	/^  bool isAtomic(uint16_t Opcode) const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isAtomic	RVInstrInfo.h	/^  static bool isAtomic(const MachineInstr &MI) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isAtomic	SIMemoryLegalizer.cpp	/^  bool isAtomic() const {$/;"	f	class:__anon46517b8a0111::SIMemOpInfo	typeref:typename:bool	file:
isAtomicNoRet	RVInstrInfo.h	/^  bool isAtomicNoRet(uint16_t Opcode) const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isAtomicNoRet	RVInstrInfo.h	/^  static bool isAtomicNoRet(const MachineInstr &MI) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isAtomicRet	RVInstrInfo.h	/^  bool isAtomicRet(uint16_t Opcode) const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isAtomicRet	RVInstrInfo.h	/^  static bool isAtomicRet(const MachineInstr &MI) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isAtomicRet	SIMemoryLegalizer.cpp	/^  bool isAtomicRet(const MachineInstr &MI) const {$/;"	f	class:__anon46517b8a0111::SIMemoryLegalizer	typeref:typename:bool	file:
isBLGP	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUOperand::isBLGP() const {$/;"	f	class:RVGPUOperand	typeref:typename:bool
isBaseWithConstantOffset64	RVGPUISelDAGToDAG.cpp	/^bool RVGPUDAGToDAGISel::isBaseWithConstantOffset64(SDValue Addr, SDValue &LHS,$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
isBasicBlockPrologue	RVInstrInfo.cpp	/^bool RVInstrInfo::isBasicBlockPrologue(const MachineInstr &MI,$/;"	f	class:RVInstrInfo	typeref:typename:bool
isBoolReg	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUOperand::isBoolReg() const {$/;"	f	class:RVGPUOperand	typeref:typename:bool
isBoolSGPR	RVISelLowering.cpp	/^bool llvm::isBoolSGPR(SDValue V) {$/;"	f	class:llvm	typeref:typename:bool
isBottomOfStack	RVGPUMachineFunction.h	/^  bool isBottomOfStack() const {$/;"	f	class:llvm::RVGPUMachineFunction	typeref:typename:bool
isBranchOffsetInRange	RVInstrInfo.cpp	/^bool RVInstrInfo::isBranchOffsetInRange(unsigned BranchOp,$/;"	f	class:RVInstrInfo	typeref:typename:bool
isBufferSMRD	RVInstrInfo.cpp	/^bool RVInstrInfo::isBufferSMRD(const MachineInstr &MI) const {$/;"	f	class:RVInstrInfo	typeref:typename:bool
isBundleCandidate	SIPostRABundler.cpp	/^bool SIPostRABundler::isBundleCandidate(const MachineInstr &MI) const {$/;"	f	class:SIPostRABundler	typeref:typename:bool
isCBSZ	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUOperand::isCBSZ() const {$/;"	f	class:RVGPUOperand	typeref:typename:bool
isCBranchSCC	RVGPUISelDAGToDAG.cpp	/^bool RVGPUDAGToDAGISel::isCBranchSCC(const SDNode *N) const {$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
isCFIntrinsic	RVISelLowering.cpp	/^unsigned RVTargetLowering::isCFIntrinsic(const SDNode *Intr) const {$/;"	f	class:RVTargetLowering	typeref:typename:unsigned
isCI	AsmParser/RVGPUAsmParser.cpp	/^  bool isCI() const {$/;"	f	class:__anon672fa8550111::RVGPUAsmParser	typeref:typename:bool	file:
isCI	Utils/RVGPUBaseInfo.cpp	/^bool isCI(const MCSubtargetInfo &STI) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isCPol	AsmParser/RVGPUAsmParser.cpp	/^  bool isCPol() const { return isImmTy(ImmTyCPol); }$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isCallPromotable	RVGPUPromoteAlloca.cpp	/^static bool isCallPromotable(CallInst *CI) {$/;"	f	typeref:typename:bool	file:
isCalleeSavedReg	RVMachineFunctionInfo.cpp	/^bool RVMachineFunctionInfo::isCalleeSavedReg(const MCPhysReg *CSRegs,$/;"	f	class:RVMachineFunctionInfo	typeref:typename:bool
isCanonicalized	RVISelLowering.cpp	/^bool RVTargetLowering::isCanonicalized(Register Reg, MachineFunction &MF,$/;"	f	class:RVTargetLowering	typeref:typename:bool
isCanonicalized	RVISelLowering.cpp	/^bool RVTargetLowering::isCanonicalized(SelectionDAG &DAG, SDValue Op,$/;"	f	class:RVTargetLowering	typeref:typename:bool
isChainCC	Utils/RVGPUBaseInfo.cpp	/^bool isChainCC(CallingConv::ID CC) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isChainCallOpcode	RVInstrInfo.h	/^  static bool isChainCallOpcode(uint64_t Opcode) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isChainFunction	RVGPUMachineFunction.h	/^  bool isChainFunction() const { return IsChainFunction; }$/;"	f	class:llvm::RVGPUMachineFunction	typeref:typename:bool
isChainScratchRegister	RVRegisterInfo.cpp	/^bool RVRegisterInfo::isChainScratchRegister(Register VGPR) {$/;"	f	class:RVRegisterInfo	typeref:typename:bool
isCheapToSpeculateCtlz	RVGPUISelLowering.cpp	/^bool RVGPUTargetLowering::isCheapToSpeculateCtlz(Type *Ty) const {$/;"	f	class:RVGPUTargetLowering	typeref:typename:bool
isCheapToSpeculateCttz	RVGPUISelLowering.cpp	/^bool RVGPUTargetLowering::isCheapToSpeculateCttz(Type *Ty) const {$/;"	f	class:RVGPUTargetLowering	typeref:typename:bool
isClamp	SIFoldOperands.cpp	/^const MachineOperand *SIFoldOperands::isClamp(const MachineInstr &MI) const {$/;"	f	class:SIFoldOperands	typeref:typename:const MachineOperand *
isClampZeroToOne	RVGPURegBankCombiner.cpp	/^bool RVGPURegBankCombinerImpl::isClampZeroToOne(MachineInstr *K0,$/;"	f	class:__anon00ae19330111::RVGPURegBankCombinerImpl	typeref:typename:bool
isClampZeroToOne	RVISelLowering.cpp	/^static bool isClampZeroToOne(SDValue A, SDValue B) {$/;"	f	typeref:typename:bool	file:
isClobberedInFunction	Utils/RVGPUMemoryUtils.cpp	/^bool isClobberedInFunction(const LoadInst *Load, MemorySSA *MSSA,$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isCombinable	SIModeRegister.cpp	/^  bool isCombinable(Status &S) { return !(Mask & S.Mask) || isCompatible(S); }$/;"	f	struct:Status	typeref:typename:bool	file:
isCompatible	SIModeRegister.cpp	/^  bool isCompatible(Status &S) {$/;"	f	struct:Status	typeref:typename:bool	file:
isCompatibleSignature	RVGPULibFunc.cpp	/^bool RVGPULibFunc::isCompatibleSignature(const FunctionType *FuncTy) const {$/;"	f	class:RVGPULibFunc	typeref:typename:bool
isCompute	Utils/RVGPUBaseInfo.cpp	/^bool isCompute(CallingConv::ID cc) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isConstant	RVGPUInstructionSelector.cpp	/^static bool isConstant(const MachineInstr &MI) {$/;"	f	typeref:typename:bool	file:
isConstant	RVMachineFunctionInfo.h	/^  bool isConstant(const MachineFrameInfo *) const override {$/;"	f	class:llvm::RVGPUPseudoSourceValue	typeref:typename:bool
isConstantCheaperToNegate	RVGPUISelLowering.cpp	/^bool RVGPUTargetLowering::isConstantCheaperToNegate(SDValue N) const {$/;"	f	class:RVGPUTargetLowering	typeref:typename:bool
isConstantCostlierToNegate	RVGPUCombinerHelper.cpp	/^static bool isConstantCostlierToNegate(MachineInstr &MI, Register Reg,$/;"	f	typeref:typename:bool	file:
isConstantCostlierToNegate	RVGPUISelLowering.cpp	/^bool RVGPUTargetLowering::isConstantCostlierToNegate(SDValue N) const {$/;"	f	class:RVGPUTargetLowering	typeref:typename:bool
isConstantLaneMask	SILowerI1Copies.cpp	/^bool PhiLoweringHelper::isConstantLaneMask(Register Reg, bool &Val) const {$/;"	f	class:PhiLoweringHelper	typeref:typename:bool
isConvertibleToSDWA	SIPeepholeSDWA.cpp	/^bool SIPeepholeSDWA::isConvertibleToSDWA(MachineInstr &MI,$/;"	f	class:SIPeepholeSDWA	typeref:typename:bool
isCopyFromExec	SIOptimizeExecMasking.cpp	/^Register SIOptimizeExecMasking::isCopyFromExec(const MachineInstr &MI) const {$/;"	f	class:SIOptimizeExecMasking	typeref:typename:Register
isCopyFromRegOfInlineAsm	RVISelLowering.cpp	/^static bool isCopyFromRegOfInlineAsm(const SDNode *N) {$/;"	f	typeref:typename:LLVM_ATTRIBUTE_UNUSED bool	file:
isCopyInstrImpl	RVInstrInfo.cpp	/^RVInstrInfo::isCopyInstrImpl(const MachineInstr &MI) const {$/;"	f	class:RVInstrInfo	typeref:typename:std::optional<DestSourcePair>
isCopyToExec	SIOptimizeExecMasking.cpp	/^Register SIOptimizeExecMasking::isCopyToExec(const MachineInstr &MI) const {$/;"	f	class:SIOptimizeExecMasking	typeref:typename:Register
isCtlzOpc	RVGPUISelLowering.cpp	/^static bool isCtlzOpc(unsigned Opc) {$/;"	f	typeref:typename:bool	file:
isCttzOpc	RVGPUISelLowering.cpp	/^static bool isCttzOpc(unsigned Opc) {$/;"	f	typeref:typename:bool	file:
isCuModeEnabled	GCNSubtarget.h	/^  bool isCuModeEnabled() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
isDGEMM	GCNHazardRecognizer.cpp	/^static bool isDGEMM(unsigned Opcode) {$/;"	f	typeref:typename:bool	file:
isDMask	AsmParser/RVGPUAsmParser.cpp	/^  bool isDMask() const { return isImmTy(ImmTyDMask); }$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isDOT	RVInstrInfo.h	/^  bool isDOT(uint16_t Opcode) const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isDOT	RVInstrInfo.h	/^  static bool isDOT(const MachineInstr &MI) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isDPALU_DPP	Utils/RVGPUBaseInfo.cpp	/^bool isDPALU_DPP(const MCInstrDesc &OpDesc) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isDPP	RVInstrInfo.h	/^  bool isDPP(uint16_t Opcode) const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isDPP	RVInstrInfo.h	/^  static bool isDPP(const MachineInstr &MI) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isDPP8	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUOperand::isDPP8() const {$/;"	f	class:RVGPUOperand	typeref:typename:bool
isDPPCtrl	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUOperand::isDPPCtrl() const {$/;"	f	class:RVGPUOperand	typeref:typename:bool
isDS	RVInstrInfo.h	/^  bool isDS(uint16_t Opcode) const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isDS	RVInstrInfo.h	/^  static bool isDS(const MachineInstr &MI) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isDSAddress	RVGPUAttributor.cpp	/^static bool isDSAddress(const Constant *C) {$/;"	f	typeref:typename:bool	file:
isDSOffset2Legal	RVGPUISelDAGToDAG.cpp	/^bool RVGPUDAGToDAGISel::isDSOffset2Legal(SDValue Base, unsigned Offset0,$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
isDSOffset2Legal	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::isDSOffset2Legal(Register Base, int64_t Offset0,$/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
isDSOffsetLegal	RVGPUISelDAGToDAG.cpp	/^bool RVGPUDAGToDAGISel::isDSOffsetLegal(SDValue Base, unsigned Offset) const {$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
isDSOffsetLegal	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::isDSOffsetLegal(Register Base,$/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
isDWORDAligned	RVGPULateCodeGenPrepare.cpp	/^  bool isDWORDAligned(const Value *V) const {$/;"	f	class:__anon4d9375140111::RVGPULateCodeGenPrepare	typeref:typename:bool	file:
isDefBetween	SIMachineScheduler.cpp	/^static bool isDefBetween(unsigned Reg,$/;"	f	typeref:typename:bool	file:
isDefBetween	SIOptimizeExecMaskingPreRA.cpp	/^static bool isDefBetween(const LiveRange &LR, SlotIndex AndIdx,$/;"	f	typeref:typename:bool	file:
isDefBetween	SIOptimizeExecMaskingPreRA.cpp	/^static bool isDefBetween(const RVRegisterInfo &TRI,$/;"	f	typeref:typename:bool	file:
isDeferred	RVInstrInfo.cpp	/^bool SIInstrWorklist::isDeferred(MachineInstr *MI) {$/;"	f	class:SIInstrWorklist	typeref:typename:bool
isDepCtr	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUOperand::isDepCtr() const { return isS16Imm(); }$/;"	f	class:RVGPUOperand	typeref:typename:bool
isDependentLoad	SIPostRABundler.cpp	/^bool SIPostRABundler::isDependentLoad(const MachineInstr &MI) const {$/;"	f	class:SIPostRABundler	typeref:typename:bool
isDesirableToCommuteWithShift	RVGPUISelLowering.cpp	/^bool RVGPUTargetLowering::isDesirableToCommuteWithShift($/;"	f	class:RVGPUTargetLowering	typeref:typename:bool
isDim	AsmParser/RVGPUAsmParser.cpp	/^  bool isDim() const { return isImmTy(ImmTyDim); }$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isDisableWQM	RVInstrInfo.h	/^  bool isDisableWQM(uint16_t Opcode) const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isDisableWQM	RVInstrInfo.h	/^  static bool isDisableWQM(const MachineInstr &MI) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isDivFMas	GCNHazardRecognizer.cpp	/^static bool isDivFMas(unsigned Opcode) {$/;"	f	typeref:typename:bool	file:
isDivergentRegBank	RVGPURegisterBankInfo.cpp	/^bool RVGPURegisterBankInfo::isDivergentRegBank(const RegisterBank *RB) const {$/;"	f	class:RVGPURegisterBankInfo	typeref:typename:bool
isDivergentRegClass	RVRegisterInfo.h	/^  bool isDivergentRegClass(const TargetRegisterClass *RC) const override {$/;"	f	class:llvm::RVRegisterInfo	typeref:typename:bool
isDppBankMask	AsmParser/RVGPUAsmParser.cpp	/^  bool isDppBankMask() const { return isImmTy(ImmTyDppBankMask); }$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isDppBoundCtrl	AsmParser/RVGPUAsmParser.cpp	/^  bool isDppBoundCtrl() const { return isImmTy(ImmTyDppBoundCtrl); }$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isDppFI	AsmParser/RVGPUAsmParser.cpp	/^  bool isDppFI() const { return isImmTy(ImmTyDppFI); }$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isDppRowMask	AsmParser/RVGPUAsmParser.cpp	/^  bool isDppRowMask() const { return isImmTy(ImmTyDppRowMask); }$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isDualSourceBlendEXP	RVInstrInfo.h	/^  static bool isDualSourceBlendEXP(const MachineInstr &MI) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isDwordAligned	Utils/RVGPUBaseInfo.cpp	/^static bool isDwordAligned(uint64_t ByteOffset) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool	file:
isDynamicLDS	Utils/RVGPUMemoryUtils.cpp	/^bool isDynamicLDS(const GlobalVariable &GV) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isEXP	RVInstrInfo.h	/^  bool isEXP(uint16_t Opcode) const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isEXP	RVInstrInfo.h	/^  static bool isEXP(const MachineInstr &MI) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isEligibleForTailCallOptimization	RVGPUCallLowering.cpp	/^bool RVGPUCallLowering::isEligibleForTailCallOptimization($/;"	f	class:RVGPUCallLowering	typeref:typename:bool
isEligibleForTailCallOptimization	RVISelLowering.cpp	/^bool RVTargetLowering::isEligibleForTailCallOptimization($/;"	f	class:RVTargetLowering	typeref:typename:bool
isElse	SIAnnotateControlFlow.cpp	/^bool SIAnnotateControlFlow::isElse(PHINode *Phi) {$/;"	f	class:SIAnnotateControlFlow	typeref:typename:bool
isEndpgm	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUOperand::isEndpgm() const { return isImmTy(ImmTyEndpgm); }$/;"	f	class:RVGPUOperand	typeref:typename:bool
isEntryFunc	RVGPUAnnotateUniformValues.cpp	/^  bool isEntryFunc;$/;"	m	class:__anon9c77d1d40111::RVGPUAnnotateUniformValues	typeref:typename:bool	file:
isEntryFunction	RVGPUMachineFunction.h	/^  bool isEntryFunction() const {$/;"	f	class:llvm::RVGPUMachineFunction	typeref:typename:bool
isEntryFunctionCC	Utils/RVGPUBaseInfo.cpp	/^bool isEntryFunctionCC(CallingConv::ID CC) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isEqual	GCNRegPressure.cpp	/^bool llvm::isEqual(const GCNRPTracker::LiveRegSet &S1,$/;"	f	class:llvm	typeref:typename:bool
isExpTgt	AsmParser/RVGPUAsmParser.cpp	/^  bool isExpTgt() const { return isImmTy(ImmTyExpTgt); }$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isExport	RVGPUExportClustering.cpp	/^static bool isExport(const SUnit &SU) {$/;"	f	namespace:__anonbb53b5ac0111	typeref:typename:bool	file:
isExpr	AsmParser/RVGPUAsmParser.cpp	/^  bool isExpr() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isExtendedFrom16Bits	RVISelLowering.cpp	/^static bool isExtendedFrom16Bits(SDValue &Operand) {$/;"	f	typeref:typename:bool	file:
isExtendedGlobalAddrSpace	RVGPU.h	/^inline bool isExtendedGlobalAddrSpace(unsigned AS) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isExtractHiElt	RVGPUISelDAGToDAG.cpp	/^static bool isExtractHiElt(SDValue In, SDValue &Out) {$/;"	f	namespace:__anon1d1751120111	typeref:typename:bool	file:
isExtractHiElt	RVGPUInstructionSelector.cpp	/^static MachineInstr *isExtractHiElt(MachineInstr *Inst,$/;"	f	typeref:typename:MachineInstr *	file:
isExtractHiElt	RVGPUInstructionSelector.cpp	/^static bool isExtractHiElt(MachineRegisterInfo &MRI, Register In,$/;"	f	typeref:typename:bool	file:
isExtractSubvectorCheap	RVISelLowering.cpp	/^bool RVTargetLowering::isExtractSubvectorCheap(EVT ResVT, EVT SrcVT,$/;"	f	class:RVTargetLowering	typeref:typename:bool
isFAbsFree	RVGPUISelLowering.cpp	/^bool RVGPUTargetLowering::isFAbsFree(EVT VT) const {$/;"	f	class:RVGPUTargetLowering	typeref:typename:bool
isFCst	RVGPURegBankCombiner.cpp	/^bool RVGPURegBankCombinerImpl::isFCst(MachineInstr *MI) const {$/;"	f	class:__anon00ae19330111::RVGPURegBankCombinerImpl	typeref:typename:bool
isFI	SIFoldOperands.cpp	/^  bool isFI() const {$/;"	f	struct:__anon07e514130111::FoldCandidate	typeref:typename:bool	file:
isFLAT	RVInstrInfo.h	/^  bool isFLAT(uint16_t Opcode) const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isFLAT	RVInstrInfo.h	/^  static bool isFLAT(const MachineInstr &MI) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isFLATGlobal	RVInstrInfo.h	/^  bool isFLATGlobal(uint16_t Opcode) const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isFLATGlobal	RVInstrInfo.h	/^  static bool isFLATGlobal(const MachineInstr &MI) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isFLATScratch	RVInstrInfo.h	/^  bool isFLATScratch(uint16_t Opcode) const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isFLATScratch	RVInstrInfo.h	/^  static bool isFLATScratch(const MachineInstr &MI) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isFMADLegal	RVISelLowering.cpp	/^bool RVTargetLowering::isFMADLegal(const MachineInstr &MI, LLT Ty) const {$/;"	f	class:RVTargetLowering	typeref:typename:bool
isFMADLegal	RVISelLowering.cpp	/^bool RVTargetLowering::isFMADLegal(const SelectionDAG &DAG,$/;"	f	class:RVTargetLowering	typeref:typename:bool
isFMAFasterThanFMulAndFAdd	RVISelLowering.cpp	/^bool RVTargetLowering::isFMAFasterThanFMulAndFAdd(const MachineFunction &MF,$/;"	f	class:RVTargetLowering	typeref:typename:bool
isFNegFree	RVGPUISelLowering.cpp	/^bool RVGPUTargetLowering::isFNegFree(EVT VT) const {$/;"	f	class:RVGPUTargetLowering	typeref:typename:bool
isFORMAT	AsmParser/RVGPUAsmParser.cpp	/^  bool isFORMAT() const { return isImmTy(ImmTyFORMAT) && isUInt<7>(getImm()); }$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isFPAtomic	RVInstrInfo.h	/^  bool isFPAtomic(uint16_t Opcode) const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isFPAtomic	RVInstrInfo.h	/^  static bool isFPAtomic(const MachineInstr &MI) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isFPExtFoldable	RVISelLowering.cpp	/^bool RVTargetLowering::isFPExtFoldable(const MachineInstr &MI, unsigned Opcode,$/;"	f	class:RVTargetLowering	typeref:typename:bool
isFPExtFoldable	RVISelLowering.cpp	/^bool RVTargetLowering::isFPExtFoldable(const SelectionDAG &DAG, unsigned Opcode,$/;"	f	class:RVTargetLowering	typeref:typename:bool
isFPExtFromF16OrConst	RVGPUCombinerHelper.cpp	/^static bool isFPExtFromF16OrConst(const MachineRegisterInfo &MRI,$/;"	f	typeref:typename:bool	file:
isFPImmLegal	RVGPUISelLowering.cpp	/^bool RVGPUTargetLowering::isFPImmLegal(const APFloat &Imm, EVT VT,$/;"	f	class:RVGPUTargetLowering	typeref:typename:bool
isFixedSize	RVInstrInfo.h	/^  bool isFixedSize(uint16_t Opcode) const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isFixedSize	RVInstrInfo.h	/^  static bool isFixedSize(const MachineInstr &MI) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isFlatGlobalAddrSpace	RVGPU.h	/^inline bool isFlatGlobalAddrSpace(unsigned AS) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isFlatOffset	AsmParser/RVGPUAsmParser.cpp	/^  bool isFlatOffset() const { return isImmTy(ImmTyOffset) || isImmTy(ImmTyInstOffset); }$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isFlatScratchBaseLegal	RVGPUISelDAGToDAG.cpp	/^bool RVGPUDAGToDAGISel::isFlatScratchBaseLegal(SDValue Addr) const {$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
isFlatScratchBaseLegal	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::isFlatScratchBaseLegal(Register Addr) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
isFlatScratchBaseLegalSV	RVGPUISelDAGToDAG.cpp	/^bool RVGPUDAGToDAGISel::isFlatScratchBaseLegalSV(SDValue Addr) const {$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
isFlatScratchBaseLegalSV	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::isFlatScratchBaseLegalSV(Register Addr) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
isFlatScratchBaseLegalSVImm	RVGPUISelDAGToDAG.cpp	/^bool RVGPUDAGToDAGISel::isFlatScratchBaseLegalSVImm(SDValue Addr) const {$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
isFlatScratchBaseLegalSVImm	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::isFlatScratchBaseLegalSVImm($/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
isFminnumIeee	RVGPURegBankCombiner.cpp	/^bool RVGPURegBankCombinerImpl::isFminnumIeee(const MachineInstr &MI) const {$/;"	f	class:__anon00ae19330111::RVGPURegBankCombinerImpl	typeref:typename:bool
isFoldableCopy	RVInstrInfo.cpp	/^bool RVInstrInfo::isFoldableCopy(const MachineInstr &MI) {$/;"	f	class:RVInstrInfo	typeref:typename:bool
isFoldableLiteralV216	Utils/RVGPUBaseInfo.cpp	/^bool isFoldableLiteralV216(int32_t Literal, bool HasInv2Pi) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isForceEmitWaitcnt	SIInsertWaitcnts.cpp	/^  bool isForceEmitWaitcnt() const {$/;"	f	class:__anona6cbb7940211::SIInsertWaitcnts	typeref:typename:bool	file:
isForcedDPP	AsmParser/RVGPUAsmParser.cpp	/^  bool isForcedDPP() const { return ForcedDPP; }$/;"	f	class:__anon672fa8550111::RVGPUAsmParser	typeref:typename:bool	file:
isForcedSDWA	AsmParser/RVGPUAsmParser.cpp	/^  bool isForcedSDWA() const { return ForcedSDWA; }$/;"	f	class:__anon672fa8550111::RVGPUAsmParser	typeref:typename:bool	file:
isForcedVOP3	AsmParser/RVGPUAsmParser.cpp	/^  bool isForcedVOP3() const { return ForcedEncodingSize == 64; }$/;"	f	class:__anon672fa8550111::RVGPUAsmParser	typeref:typename:bool	file:
isFrameIndexOp	RVISelLowering.cpp	/^static bool isFrameIndexOp(SDValue Op) {$/;"	f	typeref:typename:bool	file:
isFrameOffsetLegal	RVRegisterInfo.cpp	/^bool RVRegisterInfo::isFrameOffsetLegal(const MachineInstr *MI,$/;"	f	class:RVRegisterInfo	typeref:typename:bool
isFreeAddrSpaceCast	RVISelLowering.cpp	/^bool RVTargetLowering::isFreeAddrSpaceCast(unsigned SrcAS,$/;"	f	class:RVTargetLowering	typeref:typename:bool
isFsqrtCheap	RVGPUISelLowering.h	/^  bool isFsqrtCheap(SDValue Operand, SelectionDAG &DAG) const override {$/;"	f	class:llvm::RVGPUTargetLowering	typeref:typename:bool
isFull	RVGPUIGroupLP.cpp	/^  bool isFull() const { return MaxSize && Collection.size() >= *MaxSize; }$/;"	f	class:__anon61b122dc0111::SchedGroup	typeref:typename:bool	file:
isFunctionEntryBlock	RVGPUMachineCFGStructurizer.cpp	/^static bool isFunctionEntryBlock(MachineBasicBlock *MBB) {$/;"	f	typeref:typename:bool	file:
isGCN	RVGPUSubtarget.h	/^  bool isGCN() const {$/;"	f	class:llvm::RVGPUSubtarget	typeref:typename:bool
isGCN3Encoding	RVGPUSubtarget.h	/^  bool isGCN3Encoding() const {$/;"	f	class:llvm::RVGPUSubtarget	typeref:typename:bool
isGCN3Encoding	Utils/RVGPUBaseInfo.cpp	/^bool isGCN3Encoding(const MCSubtargetInfo &STI) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isGDS	AsmParser/RVGPUAsmParser.cpp	/^  bool isGDS() const { return isImmTy(ImmTyGDS); }$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isGFX10	AsmParser/RVGPUAsmParser.cpp	/^  bool isGFX10() const {$/;"	f	class:__anon672fa8550111::RVGPUAsmParser	typeref:typename:bool	file:
isGFX10	Disassembler/RVGPUDisassembler.cpp	/^bool RVGPUDisassembler::isGFX10() const { return RVGPU::isGFX10(STI); }$/;"	f	class:RVGPUDisassembler	typeref:typename:bool
isGFX10	Utils/RVGPUBaseInfo.cpp	/^bool isGFX10(const MCSubtargetInfo &STI) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isGFX10Before1030	Utils/RVGPUBaseInfo.cpp	/^bool isGFX10Before1030(const MCSubtargetInfo &STI) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isGFX10Plus	AsmParser/RVGPUAsmParser.cpp	/^  bool isGFX10Plus() const { return RVGPU::isGFX10Plus(getSTI()); }$/;"	f	class:__anon672fa8550111::RVGPUAsmParser	typeref:typename:bool	file:
isGFX10Plus	Disassembler/RVGPUDisassembler.cpp	/^bool RVGPUDisassembler::isGFX10Plus() const {$/;"	f	class:RVGPUDisassembler	typeref:typename:bool
isGFX10Plus	Utils/RVGPUBaseInfo.cpp	/^bool isGFX10Plus(const MCSubtargetInfo &STI) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isGFX10_3_GFX11	Utils/RVGPUBaseInfo.cpp	/^bool isGFX10_3_GFX11(const MCSubtargetInfo &STI) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isGFX10_AEncoding	AsmParser/RVGPUAsmParser.cpp	/^  bool isGFX10_AEncoding() const { return RVGPU::isGFX10_AEncoding(getSTI()); }$/;"	f	class:__anon672fa8550111::RVGPUAsmParser	typeref:typename:bool	file:
isGFX10_AEncoding	Utils/RVGPUBaseInfo.cpp	/^bool isGFX10_AEncoding(const MCSubtargetInfo &STI) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isGFX10_BEncoding	AsmParser/RVGPUAsmParser.cpp	/^  bool isGFX10_BEncoding() const {$/;"	f	class:__anon672fa8550111::RVGPUAsmParser	typeref:typename:bool	file:
isGFX10_BEncoding	Utils/RVGPUBaseInfo.cpp	/^bool isGFX10_BEncoding(const MCSubtargetInfo &STI) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isGFX10_GFX11	Utils/RVGPUBaseInfo.cpp	/^bool isGFX10_GFX11(const MCSubtargetInfo &STI) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isGFX11	AsmParser/RVGPUAsmParser.cpp	/^  bool isGFX11() const {$/;"	f	class:__anon672fa8550111::RVGPUAsmParser	typeref:typename:bool	file:
isGFX11	Disassembler/RVGPUDisassembler.cpp	/^bool RVGPUDisassembler::isGFX11() const {$/;"	f	class:RVGPUDisassembler	typeref:typename:bool
isGFX11	Utils/RVGPUBaseInfo.cpp	/^bool isGFX11(const MCSubtargetInfo &STI) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isGFX11Plus	AsmParser/RVGPUAsmParser.cpp	/^  bool isGFX11Plus() const {$/;"	f	class:__anon672fa8550111::RVGPUAsmParser	typeref:typename:bool	file:
isGFX11Plus	Disassembler/RVGPUDisassembler.cpp	/^bool RVGPUDisassembler::isGFX11Plus() const {$/;"	f	class:RVGPUDisassembler	typeref:typename:bool
isGFX11Plus	Utils/RVGPUBaseInfo.cpp	/^bool isGFX11Plus(const MCSubtargetInfo &STI) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isGFX12	AsmParser/RVGPUAsmParser.cpp	/^  bool isGFX12() const { return RVGPU::isGFX12(getSTI()); }$/;"	f	class:__anon672fa8550111::RVGPUAsmParser	typeref:typename:bool	file:
isGFX12	Utils/RVGPUBaseInfo.cpp	/^bool isGFX12(const MCSubtargetInfo &STI) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isGFX12Plus	AsmParser/RVGPUAsmParser.cpp	/^  bool isGFX12Plus() const { return RVGPU::isGFX12Plus(getSTI()); }$/;"	f	class:__anon672fa8550111::RVGPUAsmParser	typeref:typename:bool	file:
isGFX12Plus	Disassembler/RVGPUDisassembler.cpp	/^bool RVGPUDisassembler::isGFX12Plus() const {$/;"	f	class:RVGPUDisassembler	typeref:typename:bool
isGFX12Plus	Utils/RVGPUBaseInfo.cpp	/^bool isGFX12Plus(const MCSubtargetInfo &STI) { return isGFX12(STI); }$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isGFX8Plus	Utils/RVGPUBaseInfo.cpp	/^bool isGFX8Plus(const MCSubtargetInfo &STI) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isGFX8_GFX9_GFX10	Utils/RVGPUBaseInfo.cpp	/^bool isGFX8_GFX9_GFX10(const MCSubtargetInfo &STI) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isGFX9	AsmParser/RVGPUAsmParser.cpp	/^  bool isGFX9() const {$/;"	f	class:__anon672fa8550111::RVGPUAsmParser	typeref:typename:bool	file:
isGFX9	Disassembler/RVGPUDisassembler.cpp	/^bool RVGPUDisassembler::isGFX9() const { return RVGPU::isGFX9(STI); }$/;"	f	class:RVGPUDisassembler	typeref:typename:bool
isGFX9	Utils/RVGPUBaseInfo.cpp	/^bool isGFX9(const MCSubtargetInfo &STI) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isGFX90A	AsmParser/RVGPUAsmParser.cpp	/^  bool isGFX90A() const {$/;"	f	class:__anon672fa8550111::RVGPUAsmParser	typeref:typename:bool	file:
isGFX90A	Disassembler/RVGPUDisassembler.cpp	/^bool RVGPUDisassembler::isGFX90A() const {$/;"	f	class:RVGPUDisassembler	typeref:typename:bool
isGFX90A	Utils/RVGPUBaseInfo.cpp	/^bool isGFX90A(const MCSubtargetInfo &STI) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isGFX940	AsmParser/RVGPUAsmParser.cpp	/^  bool isGFX940() const {$/;"	f	class:__anon672fa8550111::RVGPUAsmParser	typeref:typename:bool	file:
isGFX940	Utils/RVGPUBaseInfo.cpp	/^bool isGFX940(const MCSubtargetInfo &STI) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isGFX9Plus	AsmParser/RVGPUAsmParser.cpp	/^  bool isGFX9Plus() const {$/;"	f	class:__anon672fa8550111::RVGPUAsmParser	typeref:typename:bool	file:
isGFX9Plus	Disassembler/RVGPUDisassembler.cpp	/^bool RVGPUDisassembler::isGFX9Plus() const { return RVGPU::isGFX9Plus(STI); }$/;"	f	class:RVGPUDisassembler	typeref:typename:bool
isGFX9Plus	Utils/RVGPUBaseInfo.cpp	/^bool isGFX9Plus(const MCSubtargetInfo &STI) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isGFX9_GFX10	Utils/RVGPUBaseInfo.cpp	/^bool isGFX9_GFX10(const MCSubtargetInfo &STI) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isGFX9_GFX10_GFX11	Utils/RVGPUBaseInfo.cpp	/^bool isGFX9_GFX10_GFX11(const MCSubtargetInfo &STI) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isGPRIdxMode	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUOperand::isGPRIdxMode() const {$/;"	f	class:RVGPUOperand	typeref:typename:bool
isGWS	MCA/RVGPUCustomBehaviour.cpp	/^bool RVGPUCustomBehaviour::isGWS(uint16_t Opcode) const {$/;"	f	class:llvm::mca::RVGPUCustomBehaviour	typeref:typename:bool
isGWS	RVInstrInfo.h	/^  bool isGWS(uint16_t Opcode) const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isGWS	RVInstrInfo.h	/^  static bool isGWS(const MachineInstr &MI) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isGather4	RVInstrInfo.h	/^  bool isGather4(uint16_t Opcode) const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isGather4	RVInstrInfo.h	/^  static bool isGather4(const MachineInstr &MI) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isGenericAtomic	Utils/RVGPUBaseInfo.cpp	/^bool isGenericAtomic(unsigned Opc) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isGlobal	SIFoldOperands.cpp	/^  bool isGlobal() const { return Kind == MachineOperand::MO_GlobalAddress; }$/;"	f	struct:__anon07e514130111::FoldCandidate	typeref:typename:bool	file:
isGlobalAddr	RVGPUPerfHintAnalysis.cpp	/^bool RVGPUPerfHint::isGlobalAddr(const Value *V) const {$/;"	f	class:__anon406ad74e0111::RVGPUPerfHint	typeref:typename:bool
isGlobalLoadUsedInBB	RVGPUPerfHintAnalysis.cpp	/^bool RVGPUPerfHint::isGlobalLoadUsedInBB(const Instruction &I) const {$/;"	f	class:__anon406ad74e0111::RVGPUPerfHint	typeref:typename:bool
isGlobalSegment	Utils/RVGPUBaseInfo.cpp	/^bool isGlobalSegment(const GlobalValue *GV) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isGraphics	Utils/RVGPUBaseInfo.cpp	/^bool isGraphics(CallingConv::ID cc) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isGroupSegment	Utils/RVGPUBaseInfo.cpp	/^bool isGroupSegment(const GlobalValue *GV) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isHi	Utils/RVGPUBaseInfo.cpp	/^bool isHi(unsigned Reg, const MCRegisterInfo &MRI) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isHighLatencyBlock	SIMachineScheduler.h	/^  bool isHighLatencyBlock() { return HighLatencyBlock; }$/;"	f	class:llvm::SIScheduleBlock	typeref:typename:bool
isHighLatencyDef	RVInstrInfo.cpp	/^bool RVInstrInfo::isHighLatencyDef(int Opc) const {$/;"	f	class:RVInstrInfo	typeref:typename:bool
isHsaAbi	Utils/RVGPUBaseInfo.cpp	/^bool isHsaAbi(const MCSubtargetInfo &STI) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isHsaAbiVersion4	Utils/RVGPUBaseInfo.cpp	/^bool isHsaAbiVersion4(const MCSubtargetInfo *STI) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isHsaAbiVersion5	Utils/RVGPUBaseInfo.cpp	/^bool isHsaAbiVersion5(const MCSubtargetInfo *STI) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isHwreg	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUOperand::isHwreg() const {$/;"	f	class:RVGPUOperand	typeref:typename:bool
isI24	RVGPUISelLowering.cpp	/^static bool isI24(SDValue Op, SelectionDAG &DAG) {$/;"	f	typeref:typename:bool	file:
isId	AsmParser/RVGPUAsmParser.cpp	/^RVGPUAsmParser::isId(const AsmToken &Token, const StringRef Id) const {$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
isId	AsmParser/RVGPUAsmParser.cpp	/^RVGPUAsmParser::isId(const StringRef Id) const {$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
isIdentityValue	GCNDPPCombine.cpp	/^static bool isIdentityValue(unsigned OrigMIOp, MachineOperand *OldOpnd) {$/;"	f	typeref:typename:bool	file:
isIdxen	AsmParser/RVGPUAsmParser.cpp	/^  bool isIdxen() const { return isImmTy(ImmTyIdxen); }$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isIgnorableUse	RVInstrInfo.cpp	/^bool RVInstrInfo::isIgnorableUse(const MachineOperand &MO) const {$/;"	f	class:RVInstrInfo	typeref:typename:bool
isIllegalRegisterType	RVGPULegalizerInfo.cpp	/^static LegalityPredicate isIllegalRegisterType(unsigned TypeIdx) {$/;"	f	typeref:typename:LegalityPredicate	file:
isImage	RVInstrInfo.h	/^  bool isImage(uint16_t Opcode) const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isImage	RVInstrInfo.h	/^  static bool isImage(const MachineInstr &MI) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isImm	AsmParser/RVGPUAsmParser.cpp	/^  bool isImm() const override {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isImm	SIFoldOperands.cpp	/^  bool isImm() const {$/;"	f	struct:__anon07e514130111::FoldCandidate	typeref:typename:bool	file:
isImmConstraint	RVISelLowering.cpp	/^static bool isImmConstraint(StringRef Constraint) {$/;"	f	typeref:typename:bool	file:
isImmKindConst	AsmParser/RVGPUAsmParser.cpp	/^  bool isImmKindConst() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isImmLiteral	AsmParser/RVGPUAsmParser.cpp	/^  bool isImmLiteral() const { return isImmTy(ImmTyNone); }$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isImmModifier	AsmParser/RVGPUAsmParser.cpp	/^  bool isImmModifier() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isImmOperandLegal	RVInstrInfo.cpp	/^bool RVInstrInfo::isImmOperandLegal(const MachineInstr &MI, unsigned OpNo,$/;"	f	class:RVInstrInfo	typeref:typename:bool
isImmTy	AsmParser/RVGPUAsmParser.cpp	/^  bool isImmTy(ImmTy ImmT) const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isImmTy	AsmParser/RVGPUAsmParser.cpp	/^  template <ImmTy Ty> bool isImmTy() const { return isImmTy(Ty); }$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isIndirectAccess	RVGPUPerfHintAnalysis.cpp	/^bool RVGPUPerfHint::isIndirectAccess(const Instruction *Inst) const {$/;"	f	class:__anon406ad74e0111::RVGPUPerfHint	typeref:typename:bool
isInlinableImm	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUOperand::isInlinableImm(MVT type) const {$/;"	f	class:RVGPUOperand	typeref:typename:bool
isInlinableIntLiteral	Utils/RVGPUBaseInfo.h	/^inline bool isInlinableIntLiteral(int64_t Literal) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:LLVM_READNONE bool
isInlinableIntLiteralV216	Utils/RVGPUBaseInfo.cpp	/^bool isInlinableIntLiteralV216(int32_t Literal) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isInlinableLiteral16	Utils/RVGPUBaseInfo.cpp	/^bool isInlinableLiteral16(int16_t Literal, bool HasInv2Pi) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isInlinableLiteral32	Utils/RVGPUBaseInfo.cpp	/^bool isInlinableLiteral32(int32_t Literal, bool HasInv2Pi) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isInlinableLiteral64	Utils/RVGPUBaseInfo.cpp	/^bool isInlinableLiteral64(int64_t Literal, bool HasInv2Pi) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isInlinableLiteralV216	Utils/RVGPUBaseInfo.cpp	/^bool isInlinableLiteralV216(int32_t Literal, bool HasInv2Pi) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isInlinableLiteralV216	Utils/RVGPUBaseInfo.cpp	/^bool isInlinableLiteralV216(int32_t Literal, bool HasInv2Pi, uint8_t OpType) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isInlineAsmSourceOfDivergence	RVGPUTargetTransformInfo.cpp	/^bool GCNTTIImpl::isInlineAsmSourceOfDivergence($/;"	f	class:GCNTTIImpl	typeref:typename:bool
isInlineCompatible	SIModeRegisterDefaults.h	/^  bool isInlineCompatible(SIModeRegisterDefaults CalleeMode) const {$/;"	f	struct:llvm::SIModeRegisterDefaults	typeref:typename:bool
isInlineConstant	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::isInlineConstant(const MCInst &Inst,$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
isInlineConstant	RVInstrInfo.cpp	/^bool RVInstrInfo::isInlineConstant(const APInt &Imm) const {$/;"	f	class:RVInstrInfo	typeref:typename:bool
isInlineConstant	RVInstrInfo.cpp	/^bool RVInstrInfo::isInlineConstant(const MachineOperand &MO,$/;"	f	class:RVInstrInfo	typeref:typename:bool
isInlineConstant	RVInstrInfo.h	/^  bool isInlineConstant(const APFloat &Imm) const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isInlineConstant	RVInstrInfo.h	/^  bool isInlineConstant(const MachineInstr &MI, unsigned OpIdx) const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isInlineConstant	RVInstrInfo.h	/^  bool isInlineConstant(const MachineInstr &MI, unsigned OpIdx,$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isInlineConstant	RVInstrInfo.h	/^  bool isInlineConstant(const MachineInstr &MI,$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isInlineConstant	RVInstrInfo.h	/^  bool isInlineConstant(const MachineOperand &MO) const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isInlineConstant	RVInstrInfo.h	/^  bool isInlineConstant(const MachineOperand &MO,$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isInlineImmediate	RVGPUISelDAGToDAG.cpp	/^bool RVGPUDAGToDAGISel::isInlineImmediate(const SDNode *N,$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
isInlineImmediate	RVGPUISelDAGToDAG.h	/^  bool isInlineImmediate(const APFloat &Imm) const {$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
isInlineImmediate	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::isInlineImmediate(const APFloat &Imm) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
isInlineImmediate16	RVGPUISelDAGToDAG.h	/^  bool isInlineImmediate16(int64_t Imm) const {$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
isInlineImmediate16	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::isInlineImmediate16(int64_t Imm) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
isInlineImmediate32	RVGPUISelDAGToDAG.h	/^  bool isInlineImmediate32(int64_t Imm) const {$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
isInlineImmediate32	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::isInlineImmediate32(int64_t Imm) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
isInlineImmediate64	RVGPUISelDAGToDAG.h	/^  bool isInlineImmediate64(int64_t Imm) const {$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
isInlineImmediate64	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::isInlineImmediate64(int64_t Imm) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
isInlineValue	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUOperand::isInlineValue() const {$/;"	f	class:RVGPUOperand	typeref:typename:bool
isInlineValue	Utils/RVGPUBaseInfo.cpp	/^bool isInlineValue(unsigned Reg) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isInlineableLiteralOp16	AsmParser/RVGPUAsmParser.cpp	/^static bool isInlineableLiteralOp16(int64_t Val, MVT VT, bool HasInv2Pi) {$/;"	f	typeref:typename:bool	file:
isInstrUniform	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::isInstrUniform(const MachineInstr &MI) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
isInterestingPHIIncomingValue	RVGPUCodeGenPrepare.cpp	/^static bool isInterestingPHIIncomingValue(const Value *V) {$/;"	f	typeref:typename:bool	file:
isInterpAttr	AsmParser/RVGPUAsmParser.cpp	/^  bool isInterpAttr() const { return isImmTy(ImmTyInterpAttr); }$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isInterpAttrChan	AsmParser/RVGPUAsmParser.cpp	/^  bool isInterpAttrChan() const { return isImmTy(ImmTyInterpAttrChan); }$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isInterpSlot	AsmParser/RVGPUAsmParser.cpp	/^  bool isInterpSlot() const { return isImmTy(ImmTyInterpSlot); }$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isIntrinsicAlwaysUniform	Utils/RVGPUBaseInfo.cpp	/^bool isIntrinsicAlwaysUniform(unsigned IntrID) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isIntrinsicSourceOfDivergence	Utils/RVGPUBaseInfo.cpp	/^bool isIntrinsicSourceOfDivergence(unsigned IntrID) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isInv2Pi	RVGPUCombinerHelper.cpp	/^static bool isInv2Pi(const APFloat &APF) {$/;"	f	typeref:typename:bool	file:
isInv2Pi	RVGPUISelLowering.cpp	/^static bool isInv2Pi(const APFloat &APF) {$/;"	f	typeref:typename:bool	file:
isInvalidVOPDY	AsmParser/RVGPUAsmParser.cpp	/^static bool isInvalidVOPDY(const OperandVector &Operands,$/;"	f	typeref:typename:bool	file:
isKImmFP16	AsmParser/RVGPUAsmParser.cpp	/^  bool isKImmFP16() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isKImmFP32	AsmParser/RVGPUAsmParser.cpp	/^  bool isKImmFP32() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isKImmOperand	SIShrinkInstructions.cpp	/^bool SIShrinkInstructions::isKImmOperand(const MachineOperand &Src) const {$/;"	f	class:SIShrinkInstructions	typeref:typename:bool
isKImmOperand	Utils/RVGPUBaseInfo.cpp	/^bool isKImmOperand(const MCInstrDesc &Desc, unsigned OpNo) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isKImmOrKUImmOperand	SIShrinkInstructions.cpp	/^bool SIShrinkInstructions::isKImmOrKUImmOperand(const MachineOperand &Src,$/;"	f	class:SIShrinkInstructions	typeref:typename:bool
isKUImmOperand	SIShrinkInstructions.cpp	/^bool SIShrinkInstructions::isKUImmOperand(const MachineOperand &Src) const {$/;"	f	class:SIShrinkInstructions	typeref:typename:bool
isKernel	Utils/RVGPUBaseInfo.h	/^inline bool isKernel(CallingConv::ID CC) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:LLVM_READNONE bool
isKernelCC	Utils/RVGPUBaseInfo.cpp	/^bool isKernelCC(const Function *Func) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isKernelLDS	RVGPULowerModuleLDSPass.cpp	/^bool isKernelLDS(const Function *F) {$/;"	f	namespace:__anoncc7483b30111	typeref:typename:bool
isKillTerminator	RVInstrInfo.cpp	/^bool RVInstrInfo::isKillTerminator(unsigned Opcode) {$/;"	f	class:RVInstrInfo	typeref:typename:bool
isKnownIntegral	RVGPULibCalls.cpp	/^static bool isKnownIntegral(const Value *V, const DataLayout &DL,$/;"	f	typeref:typename:bool	file:
isKnownNeverNaNForTargetNode	RVGPUISelLowering.cpp	/^bool RVGPUTargetLowering::isKnownNeverNaNForTargetNode(SDValue Op,$/;"	f	class:RVGPUTargetLowering	typeref:typename:bool
isKnownNeverNaNForTargetNode	RVISelLowering.cpp	/^bool RVTargetLowering::isKnownNeverNaNForTargetNode(SDValue Op,$/;"	f	class:RVTargetLowering	typeref:typename:bool
isKnownNonNull	RVGPULegalizerInfo.cpp	/^static bool isKnownNonNull(Register Val, MachineRegisterInfo &MRI,$/;"	f	typeref:typename:bool	file:
isKnownNonNull	RVISelLowering.cpp	/^static bool isKnownNonNull(SDValue Val, SelectionDAG &DAG,$/;"	f	typeref:typename:bool	file:
isLDS	AsmParser/RVGPUAsmParser.cpp	/^  bool isLDS() const { return isImmTy(ImmTyLDS); }$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isLDSDIR	RVInstrInfo.h	/^  bool isLDSDIR(uint16_t Opcode) const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isLDSDIR	RVInstrInfo.h	/^  static bool isLDSDIR(const MachineInstr &MI) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isLDSDMA	RVInstrInfo.h	/^  bool isLDSDMA(uint16_t Opcode) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isLDSDMA	RVInstrInfo.h	/^  static bool isLDSDMA(const MachineInstr &MI) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isLDSVariableToLower	Utils/RVGPUMemoryUtils.cpp	/^bool isLDSVariableToLower(const GlobalVariable &GV) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isLaneMaskReg	SILowerI1Copies.h	/^  bool isLaneMaskReg(Register Reg) const {$/;"	f	class:llvm::PhiLoweringHelper	typeref:typename:bool
isLargeStride	RVGPUPerfHintAnalysis.cpp	/^bool RVGPUPerfHint::MemAccessInfo::isLargeStride($/;"	f	class:__anon406ad74e0111::RVGPUPerfHint::MemAccessInfo	typeref:typename:bool
isLargeStride	RVGPUPerfHintAnalysis.cpp	/^bool RVGPUPerfHint::isLargeStride(const Instruction *Inst) {$/;"	f	class:__anon406ad74e0111::RVGPUPerfHint	typeref:typename:bool
isLdsDma	GCNHazardRecognizer.cpp	/^static bool isLdsDma(const MachineInstr &MI) {$/;"	f	typeref:typename:bool	file:
isLegacy	Utils/RVGPUPALMetadata.cpp	/^bool RVGPUPALMetadata::isLegacy() const {$/;"	f	class:RVGPUPALMetadata	typeref:typename:bool
isLegalAddressingMode	RVISelLowering.cpp	/^bool RVTargetLowering::isLegalAddressingMode(const DataLayout &DL,$/;"	f	class:RVTargetLowering	typeref:typename:bool
isLegalDPALU_DPPControl	Utils/RVGPUBaseInfo.h	/^inline bool isLegalDPALU_DPPControl(unsigned DC) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:LLVM_READNONE bool
isLegalFLATOffset	RVInstrInfo.cpp	/^bool RVInstrInfo::isLegalFLATOffset(int64_t Offset, unsigned AddrSpace,$/;"	f	class:RVInstrInfo	typeref:typename:bool
isLegalFlatAddressingMode	RVISelLowering.cpp	/^bool RVTargetLowering::isLegalFlatAddressingMode(const AddrMode &AM,$/;"	f	class:RVTargetLowering	typeref:typename:bool
isLegalFloatingTy	RVGPUCodeGenPrepare.cpp	/^bool RVGPUCodeGenPrepareImpl::isLegalFloatingTy(const Type *Ty) const {$/;"	f	class:RVGPUCodeGenPrepareImpl	typeref:typename:bool
isLegalGlobalAddressingMode	RVISelLowering.cpp	/^bool RVTargetLowering::isLegalGlobalAddressingMode(const AddrMode &AM) const {$/;"	f	class:RVTargetLowering	typeref:typename:bool
isLegalMUBUFAddressingMode	RVISelLowering.cpp	/^bool RVTargetLowering::isLegalMUBUFAddressingMode(const AddrMode &AM) const {$/;"	f	class:RVTargetLowering	typeref:typename:bool
isLegalMUBUFImmOffset	RVInstrInfo.cpp	/^bool RVInstrInfo::isLegalMUBUFImmOffset(unsigned Imm) const {$/;"	f	class:RVInstrInfo	typeref:typename:bool
isLegalRegOperand	RVInstrInfo.cpp	/^bool RVInstrInfo::isLegalRegOperand(const MachineRegisterInfo &MRI,$/;"	f	class:RVInstrInfo	typeref:typename:bool
isLegalSMRDEncodedSignedOffset	Utils/RVGPUBaseInfo.cpp	/^bool isLegalSMRDEncodedSignedOffset(const MCSubtargetInfo &ST,$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isLegalSMRDEncodedUnsignedOffset	Utils/RVGPUBaseInfo.cpp	/^bool isLegalSMRDEncodedUnsignedOffset(const MCSubtargetInfo &ST,$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isLegalToVectorizeLoadChain	RVGPUTargetTransformInfo.cpp	/^bool GCNTTIImpl::isLegalToVectorizeLoadChain(unsigned ChainSizeInBytes,$/;"	f	class:GCNTTIImpl	typeref:typename:bool
isLegalToVectorizeMemChain	RVGPUTargetTransformInfo.cpp	/^bool GCNTTIImpl::isLegalToVectorizeMemChain(unsigned ChainSizeInBytes,$/;"	f	class:GCNTTIImpl	typeref:typename:bool
isLegalToVectorizeStoreChain	RVGPUTargetTransformInfo.cpp	/^bool GCNTTIImpl::isLegalToVectorizeStoreChain(unsigned ChainSizeInBytes,$/;"	f	class:GCNTTIImpl	typeref:typename:bool
isLegalVSrcOperand	RVInstrInfo.cpp	/^bool RVInstrInfo::isLegalVSrcOperand(const MachineRegisterInfo &MRI,$/;"	f	class:RVInstrInfo	typeref:typename:bool
isLiteralImm	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUOperand::isLiteralImm(MVT type) const {$/;"	f	class:RVGPUOperand	typeref:typename:bool
isLiveOut	RVGPUMachineCFGStructurizer.cpp	/^bool LinearizedRegion::isLiveOut(unsigned Reg) {$/;"	f	class:LinearizedRegion	typeref:typename:bool
isLiveOut	SIOptimizeExecMasking.cpp	/^static bool isLiveOut(const MachineBasicBlock &MBB, unsigned Reg) {$/;"	f	typeref:typename:bool	file:
isLoadBitCastBeneficial	RVGPUISelLowering.cpp	/^bool RVGPUTargetLowering::isLoadBitCastBeneficial(EVT LoadTy, EVT CastTy,$/;"	f	class:RVGPUTargetLowering	typeref:typename:bool
isLoadFromStackSlot	RVInstrInfo.cpp	/^unsigned RVInstrInfo::isLoadFromStackSlot(const MachineInstr &MI,$/;"	f	class:RVInstrInfo	typeref:typename:unsigned
isLoadStoreLegal	RVGPULegalizerInfo.cpp	/^static bool isLoadStoreLegal(const GCNSubtarget &ST, const LegalityQuery &Query) {$/;"	f	typeref:typename:bool	file:
isLoadStoreSizeLegal	RVGPULegalizerInfo.cpp	/^static bool isLoadStoreSizeLegal(const GCNSubtarget &ST,$/;"	f	typeref:typename:bool	file:
isLocalAddr	RVGPUPerfHintAnalysis.cpp	/^bool RVGPUPerfHint::isLocalAddr(const Value *V) const {$/;"	f	class:__anon406ad74e0111::RVGPUPerfHint	typeref:typename:bool
isLogicalOpOnExec	SIOptimizeExecMasking.cpp	/^static Register isLogicalOpOnExec(const MachineInstr &MI) {$/;"	f	typeref:typename:Register	file:
isLowLatencyInstruction	RVInstrInfo.cpp	/^bool RVInstrInfo::isLowLatencyInstruction(const MachineInstr &MI) const {$/;"	f	class:RVInstrInfo	typeref:typename:bool
isMAC	Utils/RVGPUBaseInfo.cpp	/^bool isMAC(unsigned Opc) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isMAI	RVInstrInfo.h	/^  bool isMAI(uint16_t Opcode) const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isMAI	RVInstrInfo.h	/^  static bool isMAI(const MachineInstr &MI) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isMBB	RVGPUMachineCFGStructurizer.cpp	/^  bool isMBB() { return getMBBMRT() != nullptr; }$/;"	f	class:__anon1695b1f50211::MRT	typeref:typename:bool	file:
isMFMA	RVInstrInfo.h	/^  static bool isMFMA(const MachineInstr &MI) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isMFMAorWMMA	RVInstrInfo.h	/^  static bool isMFMAorWMMA(const MachineInstr &MI) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isMIMG	RVInstrInfo.h	/^  bool isMIMG(uint16_t Opcode) const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isMIMG	RVInstrInfo.h	/^  static bool isMIMG(const MachineInstr &MI) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isMTBUF	RVInstrInfo.h	/^  bool isMTBUF(uint16_t Opcode) const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isMTBUF	RVInstrInfo.h	/^  static bool isMTBUF(const MachineInstr &MI) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isMUBUF	RVInstrInfo.h	/^  bool isMUBUF(uint16_t Opcode) const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isMUBUF	RVInstrInfo.h	/^  static bool isMUBUF(const MachineInstr &MI) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isMacDPP	Disassembler/RVGPUDisassembler.cpp	/^bool RVGPUDisassembler::isMacDPP(MCInst &MI) const {$/;"	f	class:RVGPUDisassembler	typeref:typename:bool
isMangled	RVGPULibFunc.h	/^  bool isMangled() const { return Impl->isMangled(); }$/;"	f	class:llvm::RVGPULibFunc	typeref:typename:bool
isMangled	RVGPULibFunc.h	/^  bool isMangled() const { return RVGPULibFuncBase::isMangled(FuncId); }$/;"	f	class:llvm::RVGPULibFuncImpl	typeref:typename:bool
isMangled	RVGPULibFunc.h	/^  static bool isMangled(EFuncId Id) {$/;"	f	class:llvm::RVGPULibFuncBase	typeref:typename:bool
isMasked	RVGPUArgumentUsageInfo.h	/^  bool isMasked() const {$/;"	f	struct:llvm::ArgDescriptor	typeref:typename:bool
isMem	AsmParser/RVGPUAsmParser.cpp	/^  bool isMem() const override {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isMemBound	RVGPUPerfHintAnalysis.cpp	/^bool RVGPUPerfHint::isMemBound(const RVGPUPerfHintAnalysis::FuncInfo &FI) {$/;"	f	class:__anon406ad74e0111::RVGPUPerfHint	typeref:typename:bool
isMemOpHasNoClobberedMemOperand	RVISelLowering.cpp	/^bool RVTargetLowering::isMemOpHasNoClobberedMemOperand(const SDNode *N) const {$/;"	f	class:RVTargetLowering	typeref:typename:bool
isMemOpUniform	RVISelLowering.cpp	/^bool RVTargetLowering::isMemOpUniform(const SDNode *N) const {$/;"	f	class:RVTargetLowering	typeref:typename:bool
isMemoryBound	RVGPUMachineFunction.h	/^  bool isMemoryBound() const {$/;"	f	class:llvm::RVGPUMachineFunction	typeref:typename:bool
isMemoryBound	RVGPUPerfHintAnalysis.cpp	/^bool RVGPUPerfHintAnalysis::isMemoryBound(const Function *F) const {$/;"	f	class:RVGPUPerfHintAnalysis	typeref:typename:bool
isMesa3DOS	RVGPUSubtarget.h	/^  bool isMesa3DOS() const {$/;"	f	class:llvm::RVGPUSubtarget	typeref:typename:bool
isMesaGfxShader	GCNSubtarget.h	/^  bool isMesaGfxShader(const Function &F) const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
isMesaKernel	RVGPUSubtarget.cpp	/^bool RVGPUSubtarget::isMesaKernel(const Function &F) const {$/;"	f	class:RVGPUSubtarget	typeref:typename:bool
isModifier	AsmParser/RVGPUAsmParser.cpp	/^RVGPUAsmParser::isModifier() {$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
isModuleEntryFunction	RVGPUMachineFunction.h	/^  bool isModuleEntryFunction() const { return IsModuleEntryFunction; }$/;"	f	class:llvm::RVGPUMachineFunction	typeref:typename:bool
isModuleEntryFunctionCC	Utils/RVGPUBaseInfo.cpp	/^bool isModuleEntryFunctionCC(CallingConv::ID CC) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isMul	RVISelLowering.cpp	/^static bool isMul(const SDValue Op) {$/;"	f	typeref:typename:bool	file:
isNamedOperandModifier	AsmParser/RVGPUAsmParser.cpp	/^RVGPUAsmParser::isNamedOperandModifier(const AsmToken &Token, const AsmToken &NextToken) const {$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
isNarrowingProfitable	RVGPUISelLowering.cpp	/^bool RVGPUTargetLowering::isNarrowingProfitable(EVT SrcVT, EVT DestVT) const {$/;"	f	class:RVGPUTargetLowering	typeref:typename:bool
isNegHi	AsmParser/RVGPUAsmParser.cpp	/^  bool isNegHi() const { return isImmTy(ImmTyNegHi); }$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isNegInlineImmediate	RVGPUISelDAGToDAG.h	/^  bool isNegInlineImmediate(const SDNode *N) const {$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
isNegLo	AsmParser/RVGPUAsmParser.cpp	/^  bool isNegLo() const { return isImmTy(ImmTyNegLo); }$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isNeverUniform	RVInstrInfo.h	/^  static bool isNeverUniform(const MachineInstr &MI) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isNoUnsignedWrap	RVGPUISelDAGToDAG.cpp	/^static bool isNoUnsignedWrap(SDValue Addr) {$/;"	f	typeref:typename:bool	file:
isNoUnsignedWrap	RVGPUInstructionSelector.cpp	/^static bool isNoUnsignedWrap(MachineInstr *Addr) {$/;"	f	typeref:typename:bool	file:
isNonGlobalAddrSpace	RVISelLowering.cpp	/^bool RVTargetLowering::isNonGlobalAddrSpace(unsigned AS) {$/;"	f	class:RVTargetLowering	typeref:typename:bool
isNonTemporal	SIMemoryLegalizer.cpp	/^  bool isNonTemporal() const {$/;"	f	class:__anon46517b8a0111::SIMemOpInfo	typeref:typename:bool	file:
isNonUniformBranchInstr	RVInstrInfo.cpp	/^bool RVInstrInfo::isNonUniformBranchInstr(MachineInstr &Branch) const {$/;"	f	class:RVInstrInfo	typeref:typename:bool
isNoopAddrSpaceCast	RVGPUTargetMachine.cpp	/^bool RVGPUTargetMachine::isNoopAddrSpaceCast(unsigned SrcAS,$/;"	f	class:RVGPUTargetMachine	typeref:typename:bool
isNot	RVGPULegalizerInfo.cpp	/^static bool isNot(const MachineRegisterInfo &MRI, const MachineInstr &MI) {$/;"	f	typeref:typename:bool	file:
isNotGFX10Plus	Utils/RVGPUBaseInfo.cpp	/^bool isNotGFX10Plus(const MCSubtargetInfo &STI) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isNotGFX11Plus	Utils/RVGPUBaseInfo.cpp	/^bool isNotGFX11Plus(const MCSubtargetInfo &STI) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isNotGFX12Plus	Utils/RVGPUBaseInfo.cpp	/^bool isNotGFX12Plus(const MCSubtargetInfo &STI) { return !isGFX12Plus(STI); }$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isNull	AsmParser/RVGPUAsmParser.cpp	/^  bool isNull() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isNullConstantOrUndef	RVGPUISelDAGToDAG.h	/^static inline bool isNullConstantOrUndef(SDValue V) {$/;"	f	namespace:__anon419d0db70111	typeref:typename:bool
isOMod	SIFoldOperands.cpp	/^SIFoldOperands::isOMod(const MachineInstr &MI) const {$/;"	f	class:SIFoldOperands	typeref:typename:std::pair<const MachineOperand *,int>
isOModSI	AsmParser/RVGPUAsmParser.cpp	/^  bool isOModSI() const { return isImmTy(ImmTyOModSI); }$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isOfRegClass	RVInstrInfo.h	/^inline bool isOfRegClass(const TargetInstrInfo::RegSubRegPair &P,$/;"	f	namespace:llvm	typeref:typename:bool
isOff	AsmParser/RVGPUAsmParser.cpp	/^  bool isOff() const { return isImmTy(ImmTyOff); }$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isOffen	AsmParser/RVGPUAsmParser.cpp	/^  bool isOffen() const { return isImmTy(ImmTyOffen); }$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isOffset	AsmParser/RVGPUAsmParser.cpp	/^  bool isOffset() const { return isImmTy(ImmTyOffset); }$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isOffset0	AsmParser/RVGPUAsmParser.cpp	/^  bool isOffset0() const { return isImmTy(ImmTyOffset0) && isUInt<8>(getImm()); }$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isOffset1	AsmParser/RVGPUAsmParser.cpp	/^  bool isOffset1() const { return isImmTy(ImmTyOffset1) && isUInt<8>(getImm()); }$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isOffsetFoldingLegal	RVISelLowering.cpp	/^RVTargetLowering::isOffsetFoldingLegal(const GlobalAddressSDNode *GA) const {$/;"	f	class:RVTargetLowering	typeref:typename:bool
isOneAddressSpace	RVGPUMachineModuleInfo.h	/^  bool isOneAddressSpace(SyncScope::ID SSID) const {$/;"	f	class:llvm::RVGPUMachineModuleInfo	typeref:typename:bool
isOneOrNegOne	RVGPUCodeGenPrepare.cpp	/^static bool isOneOrNegOne(const Value *Val) {$/;"	f	typeref:typename:bool	file:
isOpSel	AsmParser/RVGPUAsmParser.cpp	/^  bool isOpSel() const { return isImmTy(ImmTyOpSel); }$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isOpSelHi	AsmParser/RVGPUAsmParser.cpp	/^  bool isOpSelHi() const { return isImmTy(ImmTyOpSelHi); }$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isOpcodeModifierWithVal	AsmParser/RVGPUAsmParser.cpp	/^RVGPUAsmParser::isOpcodeModifierWithVal(const AsmToken &Token, const AsmToken &NextToken) const /;"	f	class:RVGPUAsmParser	typeref:typename:bool
isOperandLegal	RVInstrInfo.cpp	/^bool RVInstrInfo::isOperandLegal(const MachineInstr &MI, unsigned OpIdx,$/;"	f	class:RVInstrInfo	typeref:typename:bool
isOperandModifier	AsmParser/RVGPUAsmParser.cpp	/^RVGPUAsmParser::isOperandModifier(const AsmToken &Token, const AsmToken &NextToken) const {$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
isPHIRegionIndex	RVGPUMachineCFGStructurizer.cpp	/^static bool isPHIRegionIndex(SmallVector<unsigned, 2> PHIRegionIndices,$/;"	f	typeref:typename:bool	file:
isPSInputAllocated	RVMachineFunctionInfo.h	/^  bool isPSInputAllocated(unsigned Index) const {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:bool
isPacked	RVInstrInfo.h	/^  bool isPacked(uint16_t Opcode) const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isPacked	RVInstrInfo.h	/^  static bool isPacked(const MachineInstr &MI) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isPassEnabled	RVGPUTargetMachine.h	/^  bool isPassEnabled(const cl::opt<bool> &Opt,$/;"	f	class:llvm::RVGPUPassConfig	typeref:typename:bool
isPermlane	GCNHazardRecognizer.cpp	/^static bool isPermlane(const MachineInstr &MI) {$/;"	f	typeref:typename:bool	file:
isPermlane16	Utils/RVGPUBaseInfo.cpp	/^bool isPermlane16(unsigned Opc) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isPositionExport	RVGPUExportClustering.cpp	/^static bool isPositionExport(const RVInstrInfo *TII, SUnit *SU) {$/;"	f	namespace:__anonbb53b5ac0111	typeref:typename:bool	file:
isPreheaderToFlush	SIInsertWaitcnts.cpp	/^bool SIInsertWaitcnts::isPreheaderToFlush(MachineBasicBlock &MBB,$/;"	f	class:SIInsertWaitcnts	typeref:typename:bool
isPromoteAllocaEnabled	RVGPUSubtarget.h	/^  bool isPromoteAllocaEnabled() const {$/;"	f	class:llvm::RVGPUSubtarget	typeref:typename:bool
isProperlyAlignedRC	RVRegisterInfo.cpp	/^bool RVRegisterInfo::isProperlyAlignedRC(const TargetRegisterClass &RC) const {$/;"	f	class:RVRegisterInfo	typeref:typename:bool
isR128A16	AsmParser/RVGPUAsmParser.cpp	/^  bool isR128A16() const { return isImmTy(ImmTyR128A16); }$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isRFE	GCNHazardRecognizer.cpp	/^static bool isRFE(unsigned Opcode) {$/;"	f	typeref:typename:bool	file:
isRWLane	GCNHazardRecognizer.cpp	/^static bool isRWLane(unsigned Opcode) {$/;"	f	typeref:typename:bool	file:
isReachable	SIFixSGPRCopies.cpp	/^static bool isReachable(const MachineInstr *From,$/;"	f	typeref:typename:bool	file:
isReadOnlySegment	Utils/RVGPUBaseInfo.cpp	/^bool isReadOnlySegment(const GlobalValue *GV) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isReadRegisterSourceOfDivergence	RVGPUTargetTransformInfo.cpp	/^bool GCNTTIImpl::isReadRegisterSourceOfDivergence($/;"	f	class:GCNTTIImpl	typeref:typename:bool
isReallyAClobber	Utils/RVGPUMemoryUtils.cpp	/^bool isReallyAClobber(const Value *Ptr, MemoryDef *Def, AAResults *AA) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isReallyTriviallyReMaterializable	RVInstrInfo.cpp	/^bool RVInstrInfo::isReallyTriviallyReMaterializable($/;"	f	class:RVInstrInfo	typeref:typename:bool
isReassocProfitable	RVGPUISelLowering.cpp	/^bool RVGPUTargetLowering::isReassocProfitable(MachineRegisterInfo &MRI,$/;"	f	class:RVGPUTargetLowering	typeref:typename:bool
isReassocProfitable	RVISelLowering.cpp	/^bool RVTargetLowering::isReassocProfitable(MachineRegisterInfo &MRI,$/;"	f	class:RVTargetLowering	typeref:typename:bool
isReassocProfitable	RVISelLowering.cpp	/^bool RVTargetLowering::isReassocProfitable(SelectionDAG &DAG, SDValue N0,$/;"	f	class:RVTargetLowering	typeref:typename:bool
isReg	AsmParser/RVGPUAsmParser.cpp	/^  bool isReg() const override {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isReg	SIFoldOperands.cpp	/^  bool isReg() const {$/;"	f	struct:__anon07e514130111::FoldCandidate	typeref:typename:bool	file:
isRegClass	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUOperand::isRegClass(unsigned RCID) const {$/;"	f	class:RVGPUOperand	typeref:typename:bool
isRegClassAligned	RVRegisterInfo.h	/^  bool isRegClassAligned(const TargetRegisterClass *RC,$/;"	f	class:llvm::RVRegisterInfo	typeref:typename:bool
isRegKind	AsmParser/RVGPUAsmParser.cpp	/^  bool isRegKind() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isRegOrImm	AsmParser/RVGPUAsmParser.cpp	/^  bool isRegOrImm() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isRegOrImmWithFP16InputMods	AsmParser/RVGPUAsmParser.cpp	/^  bool isRegOrImmWithFP16InputMods() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isRegOrImmWithFP32InputMods	AsmParser/RVGPUAsmParser.cpp	/^  bool isRegOrImmWithFP32InputMods() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isRegOrImmWithFP64InputMods	AsmParser/RVGPUAsmParser.cpp	/^  bool isRegOrImmWithFP64InputMods() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isRegOrImmWithFPT16InputMods	AsmParser/RVGPUAsmParser.cpp	/^  bool isRegOrImmWithFPT16InputMods() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isRegOrImmWithInputMods	AsmParser/RVGPUAsmParser.cpp	/^  bool isRegOrImmWithInputMods(unsigned RCID, MVT type) const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isRegOrImmWithInputMods	AsmParser/RVGPUAsmParser.cpp	/^static bool isRegOrImmWithInputMods(const MCInstrDesc &Desc, unsigned OpNum) {$/;"	f	typeref:typename:bool	file:
isRegOrImmWithInt16InputMods	AsmParser/RVGPUAsmParser.cpp	/^  bool isRegOrImmWithInt16InputMods() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isRegOrImmWithInt32InputMods	AsmParser/RVGPUAsmParser.cpp	/^  bool isRegOrImmWithInt32InputMods() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isRegOrImmWithInt64InputMods	AsmParser/RVGPUAsmParser.cpp	/^  bool isRegOrImmWithInt64InputMods() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isRegOrImmWithIntT16InputMods	AsmParser/RVGPUAsmParser.cpp	/^  bool isRegOrImmWithIntT16InputMods() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isRegOrInline	AsmParser/RVGPUAsmParser.cpp	/^  bool isRegOrInline(unsigned RCID, MVT type) const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isRegOrInlineImmWithFP16InputMods	AsmParser/RVGPUAsmParser.cpp	/^  bool isRegOrInlineImmWithFP16InputMods() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isRegOrInlineImmWithFP32InputMods	AsmParser/RVGPUAsmParser.cpp	/^  bool isRegOrInlineImmWithFP32InputMods() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isRegOrInlineImmWithInt16InputMods	AsmParser/RVGPUAsmParser.cpp	/^  bool isRegOrInlineImmWithInt16InputMods() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isRegOrInlineImmWithInt32InputMods	AsmParser/RVGPUAsmParser.cpp	/^  bool isRegOrInlineImmWithInt32InputMods() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isRegOrInlineNoMods	AsmParser/RVGPUAsmParser.cpp	/^  bool isRegOrInlineNoMods(unsigned RCID, MVT type) const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isRegOrOperandModifier	AsmParser/RVGPUAsmParser.cpp	/^RVGPUAsmParser::isRegOrOperandModifier(const AsmToken &Token, const AsmToken &NextToken) const {$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
isRegion	RVGPUMachineCFGStructurizer.cpp	/^  bool isRegion() { return getRegionMRT() != nullptr; }$/;"	f	class:__anon1695b1f50211::MRT	typeref:typename:bool	file:
isRegionWithExcessRP	GCNSchedStrategy.h	/^  bool isRegionWithExcessRP() const {$/;"	f	class:llvm::GCNSchedStage	typeref:typename:bool
isRegister	AsmParser/RVGPUAsmParser.cpp	/^RVGPUAsmParser::isRegister()$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
isRegister	AsmParser/RVGPUAsmParser.cpp	/^RVGPUAsmParser::isRegister(const AsmToken &Token,$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
isRegister	RVGPUArgumentUsageInfo.h	/^  bool isRegister() const {$/;"	f	struct:llvm::ArgDescriptor	typeref:typename:bool
isRegisterInUseAfter	SIOptimizeExecMasking.cpp	/^bool SIOptimizeExecMasking::isRegisterInUseAfter(MachineInstr &Stop,$/;"	f	class:SIOptimizeExecMasking	typeref:typename:bool
isRegisterInUseBetween	SIOptimizeExecMasking.cpp	/^bool SIOptimizeExecMasking::isRegisterInUseBetween(MachineInstr &Stop,$/;"	f	class:SIOptimizeExecMasking	typeref:typename:bool
isRegisterSize	RVGPULegalizerInfo.cpp	/^static bool isRegisterSize(unsigned Size) {$/;"	f	typeref:typename:bool	file:
isRegisterType	RVGPULegalizerInfo.cpp	/^static LegalityPredicate isRegisterType(unsigned TypeIdx) {$/;"	f	typeref:typename:LegalityPredicate	file:
isRegisterType	RVGPULegalizerInfo.cpp	/^static bool isRegisterType(LLT Ty) {$/;"	f	typeref:typename:bool	file:
isRegisterVectorElementType	RVGPULegalizerInfo.cpp	/^static bool isRegisterVectorElementType(LLT EltTy) {$/;"	f	typeref:typename:bool	file:
isRegisterVectorType	RVGPULegalizerInfo.cpp	/^static bool isRegisterVectorType(LLT Ty) {$/;"	f	typeref:typename:bool	file:
isRegularReg	AsmParser/RVGPUAsmParser.cpp	/^static bool isRegularReg(RegisterKind Kind) {$/;"	f	typeref:typename:bool	file:
isRepeat	SIMachineScheduler.h	/^  bool isRepeat(SIScheduleCandReason R) { return RepeatReasonSet & (1 << R); }$/;"	f	struct:llvm::SISchedulerCandidate	typeref:typename:bool
isReverseInlineImm	SIShrinkInstructions.cpp	/^bool SIShrinkInstructions::isReverseInlineImm(const MachineOperand &Src,$/;"	f	class:SIShrinkInstructions	typeref:typename:bool
isRoot	RVGPUMachineCFGStructurizer.cpp	/^  bool isRoot() { return Parent == nullptr; }$/;"	f	class:__anon1695b1f50211::MRT	typeref:typename:bool	file:
isRvHsaOS	RVGPUSubtarget.h	/^  bool isRvHsaOS() const {$/;"	f	class:llvm::RVGPUSubtarget	typeref:typename:bool
isRvHsaOrMesa	RVGPUSubtarget.h	/^  bool isRvHsaOrMesa(const Function &F) const {$/;"	f	class:llvm::RVGPUSubtarget	typeref:typename:bool
isRvPalOS	RVGPUSubtarget.h	/^  bool isRvPalOS() const {$/;"	f	class:llvm::RVGPUSubtarget	typeref:typename:bool
isS16Imm	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUOperand::isS16Imm() const {$/;"	f	class:RVGPUOperand	typeref:typename:bool
isSALU	RVGPUSubtarget.cpp	/^  bool isSALU(const SUnit *SU) const {$/;"	f	struct:__anon4eb125fb0111::FillMFMAShadowMutation	typeref:typename:bool	file:
isSALU	RVInstrInfo.h	/^  bool isSALU(uint16_t Opcode) const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isSALU	RVInstrInfo.h	/^  static bool isSALU(const MachineInstr &MI) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isSALUMapping	RVGPURegisterBankInfo.cpp	/^bool RVGPURegisterBankInfo::isSALUMapping(const MachineInstr &MI) const {$/;"	f	class:RVGPURegisterBankInfo	typeref:typename:bool
isSCCLiveAtMI	SILowerWWMCopies.cpp	/^bool SILowerWWMCopies::isSCCLiveAtMI(const MachineInstr &MI) {$/;"	f	class:SILowerWWMCopies	typeref:typename:bool
isSCSrcB16	AsmParser/RVGPUAsmParser.cpp	/^  bool isSCSrcB16() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isSCSrcB32	AsmParser/RVGPUAsmParser.cpp	/^  bool isSCSrcB32() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isSCSrcB64	AsmParser/RVGPUAsmParser.cpp	/^  bool isSCSrcB64() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isSCSrcF16	AsmParser/RVGPUAsmParser.cpp	/^  bool isSCSrcF16() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isSCSrcF32	AsmParser/RVGPUAsmParser.cpp	/^  bool isSCSrcF32() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isSCSrcF64	AsmParser/RVGPUAsmParser.cpp	/^  bool isSCSrcF64() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isSCSrcV2B16	AsmParser/RVGPUAsmParser.cpp	/^  bool isSCSrcV2B16() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isSCSrcV2F16	AsmParser/RVGPUAsmParser.cpp	/^  bool isSCSrcV2F16() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isSCSrcV2FP32	AsmParser/RVGPUAsmParser.cpp	/^  bool isSCSrcV2FP32() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isSCSrcV2INT32	AsmParser/RVGPUAsmParser.cpp	/^  bool isSCSrcV2INT32() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isSDNodeAlwaysUniform	RVGPUISelLowering.cpp	/^bool RVGPUTargetLowering::isSDNodeAlwaysUniform(const SDNode *N) const {$/;"	f	class:RVGPUTargetLowering	typeref:typename:bool
isSDNodeSourceOfDivergence	RVISelLowering.cpp	/^bool RVTargetLowering::isSDNodeSourceOfDivergence(const SDNode *N,$/;"	f	class:RVTargetLowering	typeref:typename:bool
isSDWA	RVInstrInfo.h	/^  bool isSDWA(uint16_t Opcode) const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isSDWA	RVInstrInfo.h	/^  static bool isSDWA(const MachineInstr &MI) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isSDWADstSel	AsmParser/RVGPUAsmParser.cpp	/^  bool isSDWADstSel() const { return isImmTy(ImmTySDWADstSel); }$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isSDWADstUnused	AsmParser/RVGPUAsmParser.cpp	/^  bool isSDWADstUnused() const { return isImmTy(ImmTySDWADstUnused); }$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isSDWAFP16Operand	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUOperand::isSDWAFP16Operand() const {$/;"	f	class:RVGPUOperand	typeref:typename:bool
isSDWAFP32Operand	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUOperand::isSDWAFP32Operand() const {$/;"	f	class:RVGPUOperand	typeref:typename:bool
isSDWAInt16Operand	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUOperand::isSDWAInt16Operand() const {$/;"	f	class:RVGPUOperand	typeref:typename:bool
isSDWAInt32Operand	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUOperand::isSDWAInt32Operand() const {$/;"	f	class:RVGPUOperand	typeref:typename:bool
isSDWAOperand	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUOperand::isSDWAOperand(MVT type) const {$/;"	f	class:RVGPUOperand	typeref:typename:bool
isSDWASrc0Sel	AsmParser/RVGPUAsmParser.cpp	/^  bool isSDWASrc0Sel() const { return isImmTy(ImmTySDWASrc0Sel); }$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isSDWASrc1Sel	AsmParser/RVGPUAsmParser.cpp	/^  bool isSDWASrc1Sel() const { return isImmTy(ImmTySDWASrc1Sel); }$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isSDelayALU	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUOperand::isSDelayALU() const { return isImm(); }$/;"	f	class:RVGPUOperand	typeref:typename:bool
isSGPR	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::isSGPR(Register Reg) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
isSGPR	Utils/RVGPUBaseInfo.cpp	/^bool isSGPR(unsigned Reg, const MCRegisterInfo* TRI) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isSGPRClass	RVRegisterInfo.h	/^  static bool isSGPRClass(const TargetRegisterClass *RC) {$/;"	f	class:llvm::RVRegisterInfo	typeref:typename:bool
isSGPRClassID	RVRegisterInfo.h	/^  bool isSGPRClassID(unsigned RCID) const {$/;"	f	class:llvm::RVRegisterInfo	typeref:typename:bool
isSGPRReg	RVRegisterInfo.cpp	/^bool RVRegisterInfo::isSGPRReg(const MachineRegisterInfo &MRI,$/;"	f	class:RVRegisterInfo	typeref:typename:bool
isSGPRSpill	RVInstrInfo.h	/^  bool isSGPRSpill(uint16_t Opcode) const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isSGPRSpill	RVInstrInfo.h	/^  static bool isSGPRSpill(const MachineInstr &MI) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isSGPRStackAccess	RVInstrInfo.cpp	/^unsigned RVInstrInfo::isSGPRStackAccess(const MachineInstr &MI,$/;"	f	class:RVInstrInfo	typeref:typename:unsigned
isSGPRToVGPRCopy	SIFixSGPRCopies.cpp	/^static bool isSGPRToVGPRCopy(const TargetRegisterClass *SrcRC,$/;"	f	typeref:typename:bool	file:
isSGetReg	GCNHazardRecognizer.cpp	/^static bool isSGetReg(unsigned Opcode) {$/;"	f	typeref:typename:bool	file:
isSI	AsmParser/RVGPUAsmParser.cpp	/^  bool isSI() const {$/;"	f	class:__anon672fa8550111::RVGPUAsmParser	typeref:typename:bool	file:
isSI	Utils/RVGPUBaseInfo.cpp	/^bool isSI(const MCSubtargetInfo &STI) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isSISrcFPOperand	Utils/RVGPUBaseInfo.cpp	/^bool isSISrcFPOperand(const MCInstrDesc &Desc, unsigned OpNo) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isSISrcInlinableOperand	Utils/RVGPUBaseInfo.cpp	/^bool isSISrcInlinableOperand(const MCInstrDesc &Desc, unsigned OpNo) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isSISrcOperand	Utils/RVGPUBaseInfo.cpp	/^bool isSISrcOperand(const MCInstrDesc &Desc, unsigned OpNo) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isSMEMClauseInst	SIFormMemoryClauses.cpp	/^static bool isSMEMClauseInst(const MachineInstr &MI) {$/;"	f	typeref:typename:bool	file:
isSMEMOffset	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUOperand::isSMEMOffset() const {$/;"	f	class:RVGPUOperand	typeref:typename:bool
isSMEMOffsetMod	AsmParser/RVGPUAsmParser.cpp	/^  bool isSMEMOffsetMod() const { return isImmTy(ImmTySMEMOffsetMod); }$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isSMRD	RVInstrInfo.h	/^  bool isSMRD(uint16_t Opcode) const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isSMRD	RVInstrInfo.h	/^  static bool isSMRD(const MachineInstr &MI) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isSMRDLiteralOffset	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUOperand::isSMRDLiteralOffset() const {$/;"	f	class:RVGPUOperand	typeref:typename:bool
isSMRDOffset8	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUOperand::isSMRDOffset8() const {$/;"	f	class:RVGPUOperand	typeref:typename:bool
isSMovRel	GCNHazardRecognizer.cpp	/^static bool isSMovRel(unsigned Opcode) {$/;"	f	typeref:typename:bool	file:
isSOP1	RVInstrInfo.h	/^  bool isSOP1(uint16_t Opcode) const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isSOP1	RVInstrInfo.h	/^  static bool isSOP1(const MachineInstr &MI) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isSOP2	RVInstrInfo.h	/^  bool isSOP2(uint16_t Opcode) const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isSOP2	RVInstrInfo.h	/^  static bool isSOP2(const MachineInstr &MI) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isSOPC	RVInstrInfo.h	/^  bool isSOPC(uint16_t Opcode) const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isSOPC	RVInstrInfo.h	/^  static bool isSOPC(const MachineInstr &MI) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isSOPK	RVInstrInfo.h	/^  bool isSOPK(uint16_t Opcode) const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isSOPK	RVInstrInfo.h	/^  static bool isSOPK(const MachineInstr &MI) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isSOPP	RVInstrInfo.h	/^  bool isSOPP(uint16_t Opcode) const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isSOPP	RVInstrInfo.h	/^  static bool isSOPP(const MachineInstr &MI) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isSOPPBrTarget	AsmParser/RVGPUAsmParser.cpp	/^  bool isSOPPBrTarget() const { return isExpr() || isImm(); }$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isSSetReg	GCNHazardRecognizer.cpp	/^static bool isSSetReg(unsigned Opcode) {$/;"	f	typeref:typename:bool	file:
isSSrcB16	AsmParser/RVGPUAsmParser.cpp	/^  bool isSSrcB16() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isSSrcB32	AsmParser/RVGPUAsmParser.cpp	/^  bool isSSrcB32() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isSSrcB64	AsmParser/RVGPUAsmParser.cpp	/^  bool isSSrcB64() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isSSrcF16	AsmParser/RVGPUAsmParser.cpp	/^  bool isSSrcF16() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isSSrcF32	AsmParser/RVGPUAsmParser.cpp	/^  bool isSSrcF32() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isSSrcF64	AsmParser/RVGPUAsmParser.cpp	/^  bool isSSrcF64() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isSSrcOrLdsB32	AsmParser/RVGPUAsmParser.cpp	/^  bool isSSrcOrLdsB32() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isSSrcV2B16	AsmParser/RVGPUAsmParser.cpp	/^  bool isSSrcV2B16() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isSSrcV2F16	AsmParser/RVGPUAsmParser.cpp	/^  bool isSSrcV2F16() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isSSrcV2FP32	AsmParser/RVGPUAsmParser.cpp	/^  bool isSSrcV2FP32() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isSSrcV2INT32	AsmParser/RVGPUAsmParser.cpp	/^  bool isSSrcV2INT32() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isSUInBlock	SIMachineScheduler.cpp	/^bool SIScheduleBlockCreator::isSUInBlock(SUnit *SU, unsigned ID) {$/;"	f	class:SIScheduleBlockCreator	typeref:typename:bool
isSWaitCnt	AsmParser/RVGPUAsmParser.cpp	/^RVGPUOperand::isSWaitCnt() const {$/;"	f	class:RVGPUOperand	typeref:typename:bool
isSafeToFoldImmIntoCopy	SIFixSGPRCopies.cpp	/^static bool isSafeToFoldImmIntoCopy(const MachineInstr *Copy,$/;"	f	typeref:typename:bool	file:
isSafeToSink	RVInstrInfo.cpp	/^bool RVInstrInfo::isSafeToSink(MachineInstr &MI,$/;"	f	class:RVInstrInfo	typeref:typename:bool
isSafeTruncation	AsmParser/RVGPUAsmParser.cpp	/^static bool isSafeTruncation(int64_t Val, unsigned Size) {$/;"	f	typeref:typename:bool	file:
isSameReg	SIPeepholeSDWA.cpp	/^static bool isSameReg(const MachineOperand &LHS, const MachineOperand &RHS) {$/;"	f	typeref:typename:bool	file:
isScalarLoadLegal	RVGPURegisterBankInfo.cpp	/^static bool isScalarLoadLegal(const MachineInstr &MI) {$/;"	f	typeref:typename:bool	file:
isScalarStore	RVInstrInfo.h	/^  bool isScalarStore(uint16_t Opcode) const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isScalarStore	RVInstrInfo.h	/^  static bool isScalarStore(const MachineInstr &MI) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isScalarUnit	RVInstrInfo.h	/^  static bool isScalarUnit(const MachineInstr &MI) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isScheduled	GCNMinRegStrategy.cpp	/^  bool isScheduled(const SUnit *SU) const {$/;"	f	class:__anon807286a30111::GCNMinRegScheduler	typeref:typename:bool	file:
isScheduled	SIMachineScheduler.h	/^  bool isScheduled() { return Scheduled; }$/;"	f	class:llvm::SIScheduleBlock	typeref:typename:bool
isSchedulingBoundary	RVInstrInfo.cpp	/^bool RVInstrInfo::isSchedulingBoundary(const MachineInstr &MI,$/;"	f	class:RVInstrInfo	typeref:typename:bool
isSegmentSpecificFLAT	RVInstrInfo.h	/^  bool isSegmentSpecificFLAT(uint16_t Opcode) const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isSegmentSpecificFLAT	RVInstrInfo.h	/^  static bool isSegmentSpecificFLAT(const MachineInstr &MI) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isSelectSupported	RVGPUISelLowering.cpp	/^bool RVGPUTargetLowering::isSelectSupported(SelectSupportKind SelType) const {$/;"	f	class:RVGPUTargetLowering	typeref:typename:bool
isSendMsg	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUOperand::isSendMsg() const {$/;"	f	class:RVGPUOperand	typeref:typename:bool
isSendMsgTraceDataOrGDS	GCNHazardRecognizer.cpp	/^static bool isSendMsgTraceDataOrGDS(const RVInstrInfo &TII,$/;"	f	typeref:typename:bool	file:
isSet	RVGPUArgumentUsageInfo.h	/^  bool isSet() const {$/;"	f	struct:llvm::ArgDescriptor	typeref:typename:bool
isShader	Utils/RVGPUBaseInfo.cpp	/^bool isShader(CallingConv::ID cc) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isShrinkable	GCNDPPCombine.cpp	/^bool GCNDPPCombine::isShrinkable(MachineInstr &MI) const {$/;"	f	class:GCNDPPCombine	typeref:typename:bool
isShuffleMaskLegal	RVISelLowering.cpp	/^bool RVTargetLowering::isShuffleMaskLegal(ArrayRef<int>, EVT) const {$/;"	f	class:RVTargetLowering	typeref:typename:bool
isSigned	RVGPUCodeGenPrepare.cpp	/^bool RVGPUCodeGenPrepareImpl::isSigned(const BinaryOperator &I) const {$/;"	f	class:RVGPUCodeGenPrepareImpl	typeref:typename:bool
isSigned	RVGPUCodeGenPrepare.cpp	/^bool RVGPUCodeGenPrepareImpl::isSigned(const SelectInst &I) const {$/;"	f	class:RVGPUCodeGenPrepareImpl	typeref:typename:bool
isSimpleIf	SILowerControlFlow.cpp	/^static bool isSimpleIf(const MachineInstr &MI, const MachineRegisterInfo *MRI) {$/;"	f	typeref:typename:bool	file:
isSingleLaneExecution	RVGPUSubtarget.cpp	/^bool RVGPUSubtarget::isSingleLaneExecution(const Function &Func) const {$/;"	f	class:RVGPUSubtarget	typeref:typename:bool
isSmallOddVector	RVGPULegalizerInfo.cpp	/^static LegalityPredicate isSmallOddVector(unsigned TypeIdx) {$/;"	f	typeref:typename:LegalityPredicate	file:
isSoftWaitcnt	RVInstrInfo.h	/^  static bool isSoftWaitcnt(unsigned Opcode) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isSource	RVGPUMachineCFGStructurizer.cpp	/^bool PHILinearize::isSource(unsigned Reg, MachineBasicBlock *SourceMBB) {$/;"	f	class:PHILinearize	typeref:typename:bool
isSource	SILowerI1Copies.cpp	/^  bool isSource(MachineBasicBlock &MBB) const {$/;"	f	class:__anone16a92980111::PhiIncomingAnalysis	typeref:typename:bool	file:
isSourceOfDivergence	RVGPUTargetTransformInfo.cpp	/^bool GCNTTIImpl::isSourceOfDivergence(const Value *V) const {$/;"	f	class:GCNTTIImpl	typeref:typename:bool
isSpillOpcode	RVInstrInfo.h	/^  bool isSpillOpcode(uint16_t Opcode) const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isSplitBarrier	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUOperand::isSplitBarrier() const { return isInlinableImm(MVT::i32); }$/;"	f	class:RVGPUOperand	typeref:typename:bool
isSramEccOnOrAny	Utils/RVGPUBaseInfo.h	/^  bool isSramEccOnOrAny() const {$/;"	f	class:llvm::RVGPU::IsaInfo::RVGPUTargetID	typeref:typename:bool
isSramEccOnOrOff	Utils/RVGPUBaseInfo.h	/^  bool isSramEccOnOrOff() const {$/;"	f	class:llvm::RVGPU::IsaInfo::RVGPUTargetID	typeref:typename:bool
isSramEccSupported	Utils/RVGPUBaseInfo.h	/^  bool isSramEccSupported() const {$/;"	f	class:llvm::RVGPU::IsaInfo::RVGPUTargetID	typeref:typename:bool
isStackAccess	RVInstrInfo.cpp	/^unsigned RVInstrInfo::isStackAccess(const MachineInstr &MI,$/;"	f	class:RVInstrInfo	typeref:typename:unsigned
isStackRealigned	RVMachineFunctionInfo.h	/^  bool isStackRealigned() const {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:bool
isStoreCountWaitZero	GCNHazardRecognizer.cpp	/^static bool isStoreCountWaitZero(const MachineInstr &I) {$/;"	f	typeref:typename:bool	file:
isStoreToStackSlot	RVInstrInfo.cpp	/^unsigned RVInstrInfo::isStoreToStackSlot(const MachineInstr &MI,$/;"	f	class:RVInstrInfo	typeref:typename:unsigned
isStride64	RVInstrInfo.cpp	/^static bool isStride64(unsigned Opc) {$/;"	f	typeref:typename:bool	file:
isSubRegOf	RVInstrInfo.cpp	/^static bool isSubRegOf(const RVRegisterInfo &TRI,$/;"	f	typeref:typename:bool	file:
isSupported	Utils/RVGPUAsmUtils.h	/^  bool isSupported(const MCSubtargetInfo &STI) const {$/;"	f	struct:llvm::RVGPU::CustomOperandVal	typeref:typename:bool
isSupportedAccessType	RVGPUPromoteAlloca.cpp	/^static bool isSupportedAccessType(FixedVectorType *VecTy, Type *AccessTy,$/;"	f	typeref:typename:bool	file:
isSupportedDPPCtrl	AsmParser/RVGPUAsmParser.cpp	/^RVGPUAsmParser::isSupportedDPPCtrl(StringRef Ctrl,$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
isSupportedMemset	RVGPUPromoteAlloca.cpp	/^static bool isSupportedMemset(MemSetInst *I, AllocaInst *AI,$/;"	f	typeref:typename:bool	file:
isSupportedMnemo	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::isSupportedMnemo(StringRef Mnemo,$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
isSupportedStackID	RVFrameLowering.cpp	/^bool RVFrameLowering::isSupportedStackID(TargetStackID::Value ID) const {$/;"	f	class:RVFrameLowering	typeref:typename:bool
isSupportedTgtId	Utils/RVGPUBaseInfo.cpp	/^bool isSupportedTgtId(unsigned Id, const MCSubtargetInfo &STI) {$/;"	f	namespace:llvm::RVGPU::Exp	typeref:typename:bool
isSwizzle	AsmParser/RVGPUAsmParser.cpp	/^RVGPUOperand::isSwizzle() const {$/;"	f	class:RVGPUOperand	typeref:typename:bool
isSymbolRefExpr	AsmParser/RVGPUAsmParser.cpp	/^  bool isSymbolRefExpr() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isSymbolicCustomOperandEncoding	Utils/RVGPUBaseInfo.cpp	/^static bool isSymbolicCustomOperandEncoding(const CustomOperandVal *Opr,$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool	file:
isSymbolicDepCtrEncoding	Utils/RVGPUBaseInfo.cpp	/^bool isSymbolicDepCtrEncoding(unsigned Code, bool &HasNonDefaultVal,$/;"	f	namespace:llvm::RVGPU::DepCtr	typeref:typename:bool
isSyncScopeInclusion	RVGPUMachineModuleInfo.h	/^  std::optional<bool> isSyncScopeInclusion(SyncScope::ID A,$/;"	f	class:llvm::RVGPUMachineModuleInfo	typeref:typename:std::optional<bool>
isT16VRegWithInputMods	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUOperand::isT16VRegWithInputMods() const {$/;"	f	class:RVGPUOperand	typeref:typename:bool
isTFE	AsmParser/RVGPUAsmParser.cpp	/^  bool isTFE() const { return isImmTy(ImmTyTFE); }$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isTRANS	RVInstrInfo.h	/^  bool isTRANS(uint16_t Opcode) const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isTRANS	RVInstrInfo.h	/^  static bool isTRANS(const MachineInstr &MI) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isTgSplitEnabled	GCNSubtarget.h	/^  bool isTgSplitEnabled() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
isToken	AsmParser/RVGPUAsmParser.cpp	/^  bool isToken() const override { return Kind == Token; }$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isToken	AsmParser/RVGPUAsmParser.cpp	/^RVGPUAsmParser::isToken(const AsmToken::TokenKind Kind) const {$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
isTopOfStack	SIAnnotateControlFlow.cpp	/^bool SIAnnotateControlFlow::isTopOfStack(BasicBlock *BB) {$/;"	f	class:SIAnnotateControlFlow	typeref:typename:bool
isTrapHandlerEnabled	GCNSubtarget.h	/^  bool isTrapHandlerEnabled() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
isTriviallyReMaterializable	GCNSchedStrategy.cpp	/^bool PreRARematStage::isTriviallyReMaterializable(const MachineInstr &MI) {$/;"	f	class:PreRARematStage	typeref:typename:bool
isTrue16Inst	Utils/RVGPUBaseInfo.cpp	/^bool isTrue16Inst(unsigned Opc) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isTruncateFree	RVGPUISelLowering.cpp	/^bool RVGPUTargetLowering::isTruncateFree(EVT Source, EVT Dest) const {$/;"	f	class:RVGPUTargetLowering	typeref:typename:bool
isTruncateFree	RVGPUISelLowering.cpp	/^bool RVGPUTargetLowering::isTruncateFree(Type *Source, Type *Dest) const {$/;"	f	class:RVGPUTargetLowering	typeref:typename:bool
isTypeDesirableForOp	RVISelLowering.cpp	/^bool RVTargetLowering::isTypeDesirableForOp(unsigned Op, EVT VT) const {$/;"	f	class:RVTargetLowering	typeref:typename:bool
isU16Imm	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUOperand::isU16Imm() const {$/;"	f	class:RVGPUOperand	typeref:typename:bool
isU24	RVGPUISelLowering.cpp	/^static bool isU24(SDValue Op, SelectionDAG &DAG) {$/;"	f	typeref:typename:bool	file:
isUniform	SIAnnotateControlFlow.cpp	/^bool SIAnnotateControlFlow::isUniform(BranchInst *T) {$/;"	f	class:SIAnnotateControlFlow	typeref:typename:bool
isUniformBr	RVGPUISelDAGToDAG.cpp	/^bool RVGPUDAGToDAGISel::isUniformBr(const SDNode *N) const {$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
isUniformLoad	RVGPUISelDAGToDAG.cpp	/^bool RVGPUDAGToDAGISel::isUniformLoad(const SDNode * N) const {$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
isUniformMMO	RVGPUInstrInfo.cpp	/^bool RVGPUInstrInfo::isUniformMMO(const MachineMemOperand *MMO) {$/;"	f	class:RVGPUInstrInfo	typeref:typename:bool
isUniformReg	RVRegisterInfo.cpp	/^bool RVRegisterInfo::isUniformReg(const MachineRegisterInfo &MRI,$/;"	f	class:RVRegisterInfo	typeref:typename:bool
isUniformlyReached	RVGPUUnifyDivergentExitNodes.cpp	/^static bool isUniformlyReached(const UniformityInfo &UA, BasicBlock &BB) {$/;"	f	typeref:typename:bool	file:
isUnneededShiftMask	RVGPUISelDAGToDAG.cpp	/^bool RVGPUDAGToDAGISel::isUnneededShiftMask(const SDNode *N,$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
isUnneededShiftMask	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::isUnneededShiftMask(const MachineInstr &MI,$/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
isUnsafeFiniteOnlyMath	RVGPULibCalls.cpp	/^bool RVGPULibCalls::isUnsafeFiniteOnlyMath(const FPMathOperator *FPOp) const {$/;"	f	class:RVGPULibCalls	typeref:typename:bool
isUnsafeMath	RVGPULibCalls.cpp	/^bool RVGPULibCalls::isUnsafeMath(const FPMathOperator *FPOp) const {$/;"	f	class:RVGPULibCalls	typeref:typename:bool
isUseMIInFoldList	SIFoldOperands.cpp	/^static bool isUseMIInFoldList(ArrayRef<FoldCandidate> FoldList,$/;"	f	typeref:typename:bool	file:
isUseSafeToFold	SIFoldOperands.cpp	/^bool SIFoldOperands::isUseSafeToFold(const MachineInstr &MI,$/;"	f	class:SIFoldOperands	typeref:typename:bool
isVALU	RVGPUSubtarget.cpp	/^  bool isVALU(const SUnit *SU) const {$/;"	f	struct:__anon4eb125fb0111::FillMFMAShadowMutation	typeref:typename:bool	file:
isVALU	RVInstrInfo.h	/^  bool isVALU(uint16_t Opcode) const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isVALU	RVInstrInfo.h	/^  static bool isVALU(const MachineInstr &MI) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isVCC	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::isVCC(Register Reg,$/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
isVCMPX64	MCTargetDesc/RVGPUMCCodeEmitter.cpp	/^static bool isVCMPX64(const MCInstrDesc &Desc) {$/;"	f	typeref:typename:bool	file:
isVCSrcB16	AsmParser/RVGPUAsmParser.cpp	/^  bool isVCSrcB16() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVCSrcB32	AsmParser/RVGPUAsmParser.cpp	/^  bool isVCSrcB32() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVCSrcB64	AsmParser/RVGPUAsmParser.cpp	/^  bool isVCSrcB64() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVCSrcF16	AsmParser/RVGPUAsmParser.cpp	/^  bool isVCSrcF16() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVCSrcF32	AsmParser/RVGPUAsmParser.cpp	/^  bool isVCSrcF32() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVCSrcF64	AsmParser/RVGPUAsmParser.cpp	/^  bool isVCSrcF64() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVCSrcFake16B16_Lo128	AsmParser/RVGPUAsmParser.cpp	/^  bool isVCSrcFake16B16_Lo128() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVCSrcFake16F16_Lo128	AsmParser/RVGPUAsmParser.cpp	/^  bool isVCSrcFake16F16_Lo128() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVCSrcTB16	AsmParser/RVGPUAsmParser.cpp	/^  bool isVCSrcTB16() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVCSrcTB16_Lo128	AsmParser/RVGPUAsmParser.cpp	/^  bool isVCSrcTB16_Lo128() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVCSrcTF16	AsmParser/RVGPUAsmParser.cpp	/^  bool isVCSrcTF16() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVCSrcTF16_Lo128	AsmParser/RVGPUAsmParser.cpp	/^  bool isVCSrcTF16_Lo128() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVCSrcV2B16	AsmParser/RVGPUAsmParser.cpp	/^  bool isVCSrcV2B16() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVCSrcV2F16	AsmParser/RVGPUAsmParser.cpp	/^  bool isVCSrcV2F16() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVCSrcV2FP32	AsmParser/RVGPUAsmParser.cpp	/^  bool isVCSrcV2FP32() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVCSrcV2INT32	AsmParser/RVGPUAsmParser.cpp	/^  bool isVCSrcV2INT32() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVCmpResult	RVGPUInstructionSelector.cpp	/^static bool isVCmpResult(Register Reg, MachineRegisterInfo &MRI) {$/;"	f	typeref:typename:bool	file:
isVGPR	RVRegisterInfo.cpp	/^bool RVRegisterInfo::isVGPR(const MachineRegisterInfo &MRI,$/;"	f	class:RVRegisterInfo	typeref:typename:bool
isVGPRClass	RVRegisterInfo.h	/^  static bool isVGPRClass(const TargetRegisterClass *RC) {$/;"	f	class:llvm::RVRegisterInfo	typeref:typename:bool
isVGPRCopy	RVInstrInfo.h	/^  bool isVGPRCopy(const MachineInstr &MI) const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isVGPRImm	RVGPUISelDAGToDAG.cpp	/^bool RVGPUDAGToDAGISel::isVGPRImm(const SDNode * N) const {$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
isVGPRSpill	RVInstrInfo.h	/^  bool isVGPRSpill(uint16_t Opcode) const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isVGPRSpill	RVInstrInfo.h	/^  static bool isVGPRSpill(const MachineInstr &MI) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isVGPRToSGPRCopy	SIFixSGPRCopies.cpp	/^static bool isVGPRToSGPRCopy(const TargetRegisterClass *SrcRC,$/;"	f	typeref:typename:bool	file:
isVI	AsmParser/RVGPUAsmParser.cpp	/^  bool isVI() const {$/;"	f	class:__anon672fa8550111::RVGPUAsmParser	typeref:typename:bool	file:
isVI	Disassembler/RVGPUDisassembler.cpp	/^bool RVGPUDisassembler::isVI() const {$/;"	f	class:RVGPUDisassembler	typeref:typename:bool
isVI	Utils/RVGPUBaseInfo.cpp	/^bool isVI(const MCSubtargetInfo &STI) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isVIMAGE	RVInstrInfo.h	/^  bool isVIMAGE(uint16_t Opcode) const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isVIMAGE	RVInstrInfo.h	/^  static bool isVIMAGE(const MachineInstr &MI) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isVINTERP	RVInstrInfo.h	/^  bool isVINTERP(uint16_t Opcode) const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isVINTERP	RVInstrInfo.h	/^  static bool isVINTERP(const MachineInstr &MI) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isVINTRP	RVInstrInfo.h	/^  bool isVINTRP(uint16_t Opcode) const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isVINTRP	RVInstrInfo.h	/^  static bool isVINTRP(const MachineInstr &MI) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isVISrcB16	AsmParser/RVGPUAsmParser.cpp	/^  bool isVISrcB16() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVISrcB32	AsmParser/RVGPUAsmParser.cpp	/^  bool isVISrcB32() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVISrcF16	AsmParser/RVGPUAsmParser.cpp	/^  bool isVISrcF16() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVISrcF32	AsmParser/RVGPUAsmParser.cpp	/^  bool isVISrcF32() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVISrcV2B16	AsmParser/RVGPUAsmParser.cpp	/^  bool isVISrcV2B16() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVISrcV2F16	AsmParser/RVGPUAsmParser.cpp	/^  bool isVISrcV2F16() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVISrc_1024B16	AsmParser/RVGPUAsmParser.cpp	/^  bool isVISrc_1024B16() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVISrc_1024B32	AsmParser/RVGPUAsmParser.cpp	/^  bool isVISrc_1024B32() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVISrc_1024F16	AsmParser/RVGPUAsmParser.cpp	/^  bool isVISrc_1024F16() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVISrc_1024F32	AsmParser/RVGPUAsmParser.cpp	/^  bool isVISrc_1024F32() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVISrc_1024V2B16	AsmParser/RVGPUAsmParser.cpp	/^  bool isVISrc_1024V2B16() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVISrc_1024V2F16	AsmParser/RVGPUAsmParser.cpp	/^  bool isVISrc_1024V2F16() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVISrc_128B16	AsmParser/RVGPUAsmParser.cpp	/^  bool isVISrc_128B16() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVISrc_128B32	AsmParser/RVGPUAsmParser.cpp	/^  bool isVISrc_128B32() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVISrc_128F16	AsmParser/RVGPUAsmParser.cpp	/^  bool isVISrc_128F16() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVISrc_128F32	AsmParser/RVGPUAsmParser.cpp	/^  bool isVISrc_128F32() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVISrc_128V2B16	AsmParser/RVGPUAsmParser.cpp	/^  bool isVISrc_128V2B16() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVISrc_128V2F16	AsmParser/RVGPUAsmParser.cpp	/^  bool isVISrc_128V2F16() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVISrc_256B64	AsmParser/RVGPUAsmParser.cpp	/^  bool isVISrc_256B64() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVISrc_256F64	AsmParser/RVGPUAsmParser.cpp	/^  bool isVISrc_256F64() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVISrc_256V2FP32	AsmParser/RVGPUAsmParser.cpp	/^  bool isVISrc_256V2FP32() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVISrc_256V2INT32	AsmParser/RVGPUAsmParser.cpp	/^  bool isVISrc_256V2INT32() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVISrc_512B16	AsmParser/RVGPUAsmParser.cpp	/^  bool isVISrc_512B16() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVISrc_512B32	AsmParser/RVGPUAsmParser.cpp	/^  bool isVISrc_512B32() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVISrc_512F16	AsmParser/RVGPUAsmParser.cpp	/^  bool isVISrc_512F16() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVISrc_512F32	AsmParser/RVGPUAsmParser.cpp	/^  bool isVISrc_512F32() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVISrc_512V2B16	AsmParser/RVGPUAsmParser.cpp	/^  bool isVISrc_512V2B16() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVISrc_512V2F16	AsmParser/RVGPUAsmParser.cpp	/^  bool isVISrc_512V2F16() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVISrc_64B64	AsmParser/RVGPUAsmParser.cpp	/^  bool isVISrc_64B64() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVISrc_64F64	AsmParser/RVGPUAsmParser.cpp	/^  bool isVISrc_64F64() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVISrc_64V2FP32	AsmParser/RVGPUAsmParser.cpp	/^  bool isVISrc_64V2FP32() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVISrc_64V2INT32	AsmParser/RVGPUAsmParser.cpp	/^  bool isVISrc_64V2INT32() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVMEM	MCA/RVGPUCustomBehaviour.cpp	/^bool RVGPUCustomBehaviour::isVMEM(const MCInstrDesc &MCID) {$/;"	f	class:llvm::mca::RVGPUCustomBehaviour	typeref:typename:bool
isVMEM	RVInstrInfo.h	/^  bool isVMEM(uint16_t Opcode) const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isVMEM	RVInstrInfo.h	/^  static bool isVMEM(const MachineInstr &MI) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isVMEMClauseInst	SIFormMemoryClauses.cpp	/^static bool isVMEMClauseInst(const MachineInstr &MI) {$/;"	f	typeref:typename:bool	file:
isVMEMLoad	RVGPUSetWavePriority.cpp	/^static bool isVMEMLoad(const MachineInstr &MI) {$/;"	f	typeref:typename:bool	file:
isVMEMOrFlatVMEM	SIInsertWaitcnts.cpp	/^bool SIInsertWaitcnts::isVMEMOrFlatVMEM(const MachineInstr &MI) const {$/;"	f	class:SIInsertWaitcnts	typeref:typename:bool
isVOP1	RVInstrInfo.h	/^  bool isVOP1(uint16_t Opcode) const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isVOP1	RVInstrInfo.h	/^  static bool isVOP1(const MachineInstr &MI) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isVOP2	RVInstrInfo.h	/^  bool isVOP2(uint16_t Opcode) const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isVOP2	RVInstrInfo.h	/^  static bool isVOP2(const MachineInstr &MI) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isVOP3	RVInstrInfo.h	/^  bool isVOP3(uint16_t Opcode) const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isVOP3	RVInstrInfo.h	/^  static bool isVOP3(const MachineInstr &MI) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isVOP3P	RVInstrInfo.h	/^  bool isVOP3P(uint16_t Opcode) const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isVOP3P	RVInstrInfo.h	/^  static bool isVOP3P(const MachineInstr &MI) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isVOPC	RVInstrInfo.h	/^  bool isVOPC(uint16_t Opcode) const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isVOPC	RVInstrInfo.h	/^  static bool isVOPC(const MachineInstr &MI) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isVOPC64DPP	Utils/RVGPUBaseInfo.cpp	/^bool isVOPC64DPP(unsigned Opc) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isVOPD	Utils/RVGPUBaseInfo.cpp	/^bool isVOPD(unsigned Opc) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isVReg	AsmParser/RVGPUAsmParser.cpp	/^  bool isVReg() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVReg32	AsmParser/RVGPUAsmParser.cpp	/^  bool isVReg32() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVReg32OrOff	AsmParser/RVGPUAsmParser.cpp	/^  bool isVReg32OrOff() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVRegCompatibleReg	SILowerI1Copies.cpp	/^static bool isVRegCompatibleReg(const RVRegisterInfo &TRI,$/;"	f	typeref:typename:bool	file:
isVRegWithInputMods	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUOperand::isVRegWithInputMods() const {$/;"	f	class:RVGPUOperand	typeref:typename:bool
isVSAMPLE	RVInstrInfo.h	/^  bool isVSAMPLE(uint16_t Opcode) const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isVSAMPLE	RVInstrInfo.h	/^  static bool isVSAMPLE(const MachineInstr &MI) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isVSSuperClass	RVRegisterInfo.h	/^  bool isVSSuperClass(const TargetRegisterClass *RC) const {$/;"	f	class:llvm::RVRegisterInfo	typeref:typename:bool
isVSrcB16	AsmParser/RVGPUAsmParser.cpp	/^  bool isVSrcB16() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVSrcB32	AsmParser/RVGPUAsmParser.cpp	/^  bool isVSrcB32() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVSrcB64	AsmParser/RVGPUAsmParser.cpp	/^  bool isVSrcB64() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVSrcF16	AsmParser/RVGPUAsmParser.cpp	/^  bool isVSrcF16() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVSrcF32	AsmParser/RVGPUAsmParser.cpp	/^  bool isVSrcF32() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVSrcF64	AsmParser/RVGPUAsmParser.cpp	/^  bool isVSrcF64() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVSrcFake16B16_Lo128	AsmParser/RVGPUAsmParser.cpp	/^  bool isVSrcFake16B16_Lo128() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVSrcFake16F16_Lo128	AsmParser/RVGPUAsmParser.cpp	/^  bool isVSrcFake16F16_Lo128() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVSrcTB16	AsmParser/RVGPUAsmParser.cpp	/^  bool isVSrcTB16() const { return isVCSrcTB16() || isLiteralImm(MVT::i16); }$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVSrcTB16_Lo128	AsmParser/RVGPUAsmParser.cpp	/^  bool isVSrcTB16_Lo128() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVSrcTF16	AsmParser/RVGPUAsmParser.cpp	/^  bool isVSrcTF16() const { return isVCSrcTF16() || isLiteralImm(MVT::f16); }$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVSrcTF16_Lo128	AsmParser/RVGPUAsmParser.cpp	/^  bool isVSrcTF16_Lo128() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVSrcV2B16	AsmParser/RVGPUAsmParser.cpp	/^  bool isVSrcV2B16() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVSrcV2F16	AsmParser/RVGPUAsmParser.cpp	/^  bool isVSrcV2F16() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVSrcV2FP32	AsmParser/RVGPUAsmParser.cpp	/^  bool isVSrcV2FP32() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isVSrcV2INT32	AsmParser/RVGPUAsmParser.cpp	/^  bool isVSrcV2INT32() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:bool	file:
isValid	GCNRegPressure.cpp	/^bool GCNUpwardRPTracker::isValid() const {$/;"	f	class:GCNUpwardRPTracker	typeref:typename:bool
isValid	SIMachineScheduler.h	/^    bool isValid() const { return Block; }$/;"	f	struct:llvm::SIScheduleBlockScheduler::SIBlockSchedCandidate	typeref:typename:bool
isValid	SIMachineScheduler.h	/^    bool isValid() const { return SU; }$/;"	f	struct:llvm::SIScheduleBlock::SISchedCandidate	typeref:typename:bool
isValid	Utils/RVGPUAsmUtils.h	/^  bool isValid(unsigned Val) const { return Val <= Max; }$/;"	f	struct:llvm::RVGPU::CustomOperandVal	typeref:typename:bool
isValid32BitLiteral	Utils/RVGPUBaseInfo.cpp	/^bool isValid32BitLiteral(uint64_t Val, bool IsFP64) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
isValidAddrSpaceCast	RVGPUTargetTransformInfo.h	/^  bool isValidAddrSpaceCast(unsigned FromAS, unsigned ToAS) const {$/;"	f	class:llvm::GCNTTIImpl	typeref:typename:bool
isValidClauseInst	SIFormMemoryClauses.cpp	/^static bool isValidClauseInst(const MachineInstr &MI, bool IsVMEMClause) {$/;"	f	typeref:typename:bool	file:
isValidDPP8	Disassembler/RVGPUDisassembler.cpp	/^static bool isValidDPP8(const MCInst &MI) {$/;"	f	typeref:typename:bool	file:
isValidDfmtNfmt	Utils/RVGPUBaseInfo.cpp	/^bool isValidDfmtNfmt(unsigned Id, const MCSubtargetInfo &STI) {$/;"	f	namespace:llvm::RVGPU::MTBUFFormat	typeref:typename:bool
isValidFormatEncoding	Utils/RVGPUBaseInfo.cpp	/^bool isValidFormatEncoding(unsigned Val, const MCSubtargetInfo &STI) {$/;"	f	namespace:llvm::RVGPU::MTBUFFormat	typeref:typename:bool
isValidHwreg	Utils/RVGPUBaseInfo.cpp	/^bool isValidHwreg(int64_t Id) {$/;"	f	namespace:llvm::RVGPU::Hwreg	typeref:typename:bool
isValidHwregOffset	Utils/RVGPUBaseInfo.cpp	/^bool isValidHwregOffset(int64_t Offset) {$/;"	f	namespace:llvm::RVGPU::Hwreg	typeref:typename:bool
isValidHwregWidth	Utils/RVGPUBaseInfo.cpp	/^bool isValidHwregWidth(int64_t Width) {$/;"	f	namespace:llvm::RVGPU::Hwreg	typeref:typename:bool
isValidMsgId	Utils/RVGPUBaseInfo.cpp	/^bool isValidMsgId(int64_t MsgId, const MCSubtargetInfo &STI) {$/;"	f	namespace:llvm::RVGPU::SendMsg	typeref:typename:bool
isValidMsgOp	Utils/RVGPUBaseInfo.cpp	/^bool isValidMsgOp(int64_t MsgId, int64_t OpId, const MCSubtargetInfo &STI,$/;"	f	namespace:llvm::RVGPU::SendMsg	typeref:typename:bool
isValidMsgStream	Utils/RVGPUBaseInfo.cpp	/^bool isValidMsgStream(int64_t MsgId, int64_t OpId, int64_t StreamId,$/;"	f	namespace:llvm::RVGPU::SendMsg	typeref:typename:bool
isValidNfmt	Utils/RVGPUBaseInfo.cpp	/^bool isValidNfmt(unsigned Id, const MCSubtargetInfo &STI) {$/;"	f	namespace:llvm::RVGPU::MTBUFFormat	typeref:typename:bool
isValidOpr	Utils/RVGPUBaseInfo.cpp	/^static bool isValidOpr(int Idx, const CustomOperand<T> OpInfo[], int OpInfoSize,$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool	file:
isValidState	RVGPUAttributor.cpp	/^  bool isValidState() const override {$/;"	f	struct:__anon512e119a0111::AARVWavesPerEU	typeref:typename:bool	file:
isValidState	RVGPUAttributor.cpp	/^  bool isValidState() const override {$/;"	f	struct:__anon512e119a0111::AAUniformWorkGroupSizeFunction	typeref:typename:bool	file:
isValidUnifiedFormat	Utils/RVGPUBaseInfo.cpp	/^bool isValidUnifiedFormat(unsigned Id, const MCSubtargetInfo &STI) {$/;"	f	namespace:llvm::RVGPU::MTBUFFormat	typeref:typename:bool
isVectorRegister	RVRegisterInfo.h	/^  bool isVectorRegister(const MachineRegisterInfo &MRI, Register Reg) const {$/;"	f	class:llvm::RVRegisterInfo	typeref:typename:bool
isVectorRegisterBank	RVGPURegisterBankInfo.cpp	/^static bool isVectorRegisterBank(const RegisterBank &Bank) {$/;"	f	typeref:typename:bool	file:
isVectorSuperClass	RVRegisterInfo.h	/^  bool isVectorSuperClass(const TargetRegisterClass *RC) const {$/;"	f	class:llvm::RVRegisterInfo	typeref:typename:bool
isVgprRegBank	RVGPURegBankCombiner.cpp	/^bool RVGPURegBankCombinerImpl::isVgprRegBank(Register Reg) const {$/;"	f	class:__anon00ae19330111::RVGPURegBankCombinerImpl	typeref:typename:bool
isVolatile	SIMemoryLegalizer.cpp	/^  bool isVolatile() const {$/;"	f	class:__anon46517b8a0111::SIMemOpInfo	typeref:typename:bool	file:
isVreg1	SILowerI1Copies.cpp	/^  bool isVreg1(Register Reg) const {$/;"	f	class:__anone16a92980111::Vreg1LoweringHelper	typeref:typename:bool	file:
isWMMA	RVInstrInfo.h	/^  bool isWMMA(uint16_t Opcode) const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isWMMA	RVInstrInfo.h	/^  static bool isWMMA(const MachineInstr &MI) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isWQM	RVInstrInfo.h	/^  bool isWQM(uint16_t Opcode) const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isWQM	RVInstrInfo.h	/^  static bool isWQM(const MachineInstr &MI) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isWWMRegSpillOpcode	RVInstrInfo.h	/^  static bool isWWMRegSpillOpcode(uint16_t Opcode) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isWaitEXP	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUOperand::isWaitEXP() const {$/;"	f	class:RVGPUOperand	typeref:typename:bool
isWaitInstr	SIInsertWaitcnts.cpp	/^static bool isWaitInstr(MachineInstr &Inst) {$/;"	f	typeref:typename:bool	file:
isWaitVDST	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUOperand::isWaitVDST() const {$/;"	f	class:RVGPUOperand	typeref:typename:bool
isWaitcnt	RVInstrInfo.h	/^  static bool isWaitcnt(unsigned Opcode) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isWaitcntVsCnt	RVInstrInfo.h	/^  static bool isWaitcntVsCnt(unsigned Opcode) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isWave32	GCNSubtarget.h	/^  bool isWave32() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
isWave32	RVInstrInfo.cpp	/^bool llvm::RVInstrInfo::isWave32() const { return ST.isWave32(); }$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
isWave32	RVRegisterInfo.h	/^  bool isWave32;$/;"	m	class:llvm::RVRegisterInfo	typeref:typename:bool
isWave64	GCNSubtarget.h	/^  bool isWave64() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
isWideScalarExtLoadTruncStore	RVGPULegalizerInfo.cpp	/^static LegalityPredicate isWideScalarExtLoadTruncStore(unsigned TypeIdx) {$/;"	f	typeref:typename:LegalityPredicate	file:
isWideVec16	RVGPULegalizerInfo.cpp	/^static LegalityPredicate isWideVec16(unsigned TypeIdx) {$/;"	f	typeref:typename:LegalityPredicate	file:
isXDL	GCNHazardRecognizer.cpp	/^static bool isXDL(const GCNSubtarget &ST, const MachineInstr &MI) {$/;"	f	typeref:typename:bool	file:
isXNACKEnabled	GCNSubtarget.h	/^  bool isXNACKEnabled() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
isXnackOnOrAny	Utils/RVGPUBaseInfo.h	/^  bool isXnackOnOrAny() const {$/;"	f	class:llvm::RVGPU::IsaInfo::RVGPUTargetID	typeref:typename:bool
isXnackOnOrOff	Utils/RVGPUBaseInfo.h	/^  bool isXnackOnOrOff() const {$/;"	f	class:llvm::RVGPU::IsaInfo::RVGPUTargetID	typeref:typename:bool
isXnackSupported	Utils/RVGPUBaseInfo.h	/^  bool isXnackSupported() const {$/;"	f	class:llvm::RVGPU::IsaInfo::RVGPUTargetID	typeref:typename:bool
isZExtFree	RVGPUISelLowering.cpp	/^bool RVGPUTargetLowering::isZExtFree(EVT Src, EVT Dest) const {$/;"	f	class:RVGPUTargetLowering	typeref:typename:bool
isZExtFree	RVGPUISelLowering.cpp	/^bool RVGPUTargetLowering::isZExtFree(Type *Src, Type *Dest) const {$/;"	f	class:RVGPUTargetLowering	typeref:typename:bool
is_dgemm	Utils/RVGPUBaseInfo.h	/^  bool is_dgemm;$/;"	m	struct:llvm::RVGPU::MAIInstInfo	typeref:typename:bool
is_gfx940_xdl	Utils/RVGPUBaseInfo.h	/^  bool is_gfx940_xdl;$/;"	m	struct:llvm::RVGPU::MAIInstInfo	typeref:typename:bool
is_iterable	SIInsertWaitcnts.cpp	/^  static constexpr bool is_iterable = true;$/;"	m	struct:llvm::enum_iteration_traits	typeref:typename:bool	file:
kOCLMD	RVGPUUnifyMetadata.cpp	/^  namespace kOCLMD {$/;"	n	namespace:__anon26dde6960111	file:
kernarg_segment_alignment	RVKernelCodeT.h	/^  uint8_t kernarg_segment_alignment;$/;"	m	struct:rv_kernel_code_t	typeref:typename:uint8_t
kernarg_segment_byte_size	RVKernelCodeT.h	/^  uint64_t kernarg_segment_byte_size;$/;"	m	struct:rv_kernel_code_t	typeref:typename:uint64_t
kernel	RVGPULowerModuleLDSPass.cpp	/^enum class LoweringKind { module, table, kernel, hybrid };$/;"	e	enum:__anoncc7483b30111::LoweringKind	file:
kernel_code_entry_byte_offset	RVKernelCodeT.h	/^  int64_t kernel_code_entry_byte_offset;$/;"	m	struct:rv_kernel_code_t	typeref:typename:int64_t
kernel_code_prefetch_byte_offset	RVKernelCodeT.h	/^  int64_t kernel_code_prefetch_byte_offset;$/;"	m	struct:rv_kernel_code_t	typeref:typename:int64_t
kernel_code_prefetch_byte_size	RVKernelCodeT.h	/^  uint64_t kernel_code_prefetch_byte_size;$/;"	m	struct:rv_kernel_code_t	typeref:typename:uint64_t
kernelsThatIndirectlyAccessAnyOfPassedVariables	RVGPULowerModuleLDSPass.cpp	/^  static DenseSet<Function *> kernelsThatIndirectlyAccessAnyOfPassedVariables($/;"	f	class:__anoncc7483b30111::RVGPULowerModuleLDS	typeref:typename:DenseSet<Function * >	file:
knownBitsForWorkitemID	RVISelLowering.cpp	/^static void knownBitsForWorkitemID(const GCNSubtarget &ST, GISelKnownBits &KB,$/;"	f	typeref:typename:void	file:
ldsRequiresM0Init	GCNSubtarget.h	/^  bool ldsRequiresM0Init() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
legalizeAddrSpaceCast	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::legalizeAddrSpaceCast($/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
legalizeAtomicCmpXChg	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::legalizeAtomicCmpXChg($/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
legalizeBVHIntrinsic	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::legalizeBVHIntrinsic(MachineInstr &MI,$/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
legalizeBufferAtomic	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::legalizeBufferAtomic(MachineInstr &MI,$/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
legalizeBufferLoad	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::legalizeBufferLoad(MachineInstr &MI,$/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
legalizeBufferStore	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::legalizeBufferStore(MachineInstr &MI,$/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
legalizeBuildVector	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::legalizeBuildVector($/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
legalizeCTLZ_CTTZ	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::legalizeCTLZ_CTTZ(MachineInstr &MI,$/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
legalizeCustom	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::legalizeCustom(LegalizerHelper &Helper,$/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
legalizeDSAtomicFPIntrinsic	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::legalizeDSAtomicFPIntrinsic(LegalizerHelper &Helper,$/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
legalizeDebugTrapIntrinsic	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::legalizeDebugTrapIntrinsic($/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
legalizeExtractVectorElt	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::legalizeExtractVectorElt($/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
legalizeFDIV	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::legalizeFDIV(MachineInstr &MI,$/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
legalizeFDIV16	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::legalizeFDIV16(MachineInstr &MI,$/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
legalizeFDIV32	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::legalizeFDIV32(MachineInstr &MI,$/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
legalizeFDIV64	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::legalizeFDIV64(MachineInstr &MI,$/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
legalizeFDIVFastIntrin	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::legalizeFDIVFastIntrin(MachineInstr &MI,$/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
legalizeFExp	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::legalizeFExp(MachineInstr &MI,$/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
legalizeFExp2	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::legalizeFExp2(MachineInstr &MI,$/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
legalizeFExpUnsafe	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::legalizeFExpUnsafe(MachineIRBuilder &B, Register Dst,$/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
legalizeFFREXP	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::legalizeFFREXP(MachineInstr &MI,$/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
legalizeFFloor	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::legalizeFFloor(MachineInstr &MI,$/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
legalizeFMad	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::legalizeFMad($/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
legalizeFPTOI	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::legalizeFPTOI(MachineInstr &MI,$/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
legalizeFPTruncRound	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::legalizeFPTruncRound(MachineInstr &MI,$/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
legalizeFPow	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::legalizeFPow(MachineInstr &MI,$/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
legalizeFSQRT	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::legalizeFSQRT(MachineInstr &MI,$/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
legalizeFSQRTF16	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::legalizeFSQRTF16(MachineInstr &MI,$/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
legalizeFSQRTF32	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::legalizeFSQRTF32(MachineInstr &MI,$/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
legalizeFSQRTF64	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::legalizeFSQRTF64(MachineInstr &MI,$/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
legalizeFastUnsafeFDIV	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::legalizeFastUnsafeFDIV(MachineInstr &MI,$/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
legalizeFastUnsafeFDIV64	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::legalizeFastUnsafeFDIV64(MachineInstr &MI,$/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
legalizeFceil	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::legalizeFceil($/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
legalizeFlog2	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::legalizeFlog2(MachineInstr &MI,$/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
legalizeFlogCommon	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::legalizeFlogCommon(MachineInstr &MI,$/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
legalizeFlogUnsafe	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::legalizeFlogUnsafe(MachineIRBuilder &B, Register Dst,$/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
legalizeFrem	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::legalizeFrem($/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
legalizeFroundeven	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::legalizeFroundeven(MachineInstr &MI,$/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
legalizeGenericOperand	RVInstrInfo.cpp	/^void RVInstrInfo::legalizeGenericOperand(MachineBasicBlock &InsertMBB,$/;"	f	class:RVInstrInfo	typeref:typename:void
legalizeGlobalValue	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::legalizeGlobalValue($/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
legalizeITOFP	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::legalizeITOFP($/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
legalizeImageIntrinsic	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::legalizeImageIntrinsic($/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
legalizeImplicitArgPtr	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::legalizeImplicitArgPtr(MachineInstr &MI,$/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
legalizeInsertVectorElt	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::legalizeInsertVectorElt($/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
legalizeIntrinsic	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::legalizeIntrinsic(LegalizerHelper &Helper,$/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
legalizeIntrinsicTrunc	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::legalizeIntrinsicTrunc($/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
legalizeIsAddrSpace	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::legalizeIsAddrSpace(MachineInstr &MI,$/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
legalizeKernargMemParameter	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::legalizeKernargMemParameter(MachineInstr &MI,$/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
legalizeLDSKernelId	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::legalizeLDSKernelId(MachineInstr &MI,$/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
legalizeLoad	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::legalizeLoad(LegalizerHelper &Helper,$/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
legalizeMinNumMaxNum	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::legalizeMinNumMaxNum(LegalizerHelper &Helper,$/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
legalizeMul	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::legalizeMul(LegalizerHelper &Helper,$/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
legalizeOpWithMove	RVInstrInfo.cpp	/^void RVInstrInfo::legalizeOpWithMove(MachineInstr &MI, unsigned OpIdx) const {$/;"	f	class:RVInstrInfo	typeref:typename:void
legalizeOperands	RVInstrInfo.cpp	/^RVInstrInfo::legalizeOperands(MachineInstr &MI,$/;"	f	class:RVInstrInfo	typeref:typename:MachineBasicBlock *
legalizeOperandsFLAT	RVInstrInfo.cpp	/^void RVInstrInfo::legalizeOperandsFLAT(MachineRegisterInfo &MRI,$/;"	f	class:RVInstrInfo	typeref:typename:void
legalizeOperandsSMRD	RVInstrInfo.cpp	/^void RVInstrInfo::legalizeOperandsSMRD(MachineRegisterInfo &MRI,$/;"	f	class:RVInstrInfo	typeref:typename:void
legalizeOperandsVOP2	RVInstrInfo.cpp	/^void RVInstrInfo::legalizeOperandsVOP2(MachineRegisterInfo &MRI,$/;"	f	class:RVInstrInfo	typeref:typename:void
legalizeOperandsVOP3	RVInstrInfo.cpp	/^void RVInstrInfo::legalizeOperandsVOP3(MachineRegisterInfo &MRI,$/;"	f	class:RVInstrInfo	typeref:typename:void
legalizePointerAsRsrcIntrin	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::legalizePointerAsRsrcIntrin($/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
legalizePreloadedArgIntrin	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::legalizePreloadedArgIntrin($/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
legalizeRsqClampIntrinsic	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::legalizeRsqClampIntrinsic(MachineInstr &MI,$/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
legalizeSBufferLoad	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::legalizeSBufferLoad($/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
legalizeScalarOperands	SIPeepholeSDWA.cpp	/^void SIPeepholeSDWA::legalizeScalarOperands(MachineInstr &MI,$/;"	f	class:SIPeepholeSDWA	typeref:typename:void
legalizeSignedDIV_REM	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::legalizeSignedDIV_REM(MachineInstr &MI,$/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
legalizeSinCos	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::legalizeSinCos($/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
legalizeStackSave	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::legalizeStackSave(MachineInstr &MI,$/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
legalizeStore	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::legalizeStore(LegalizerHelper &Helper,$/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
legalizeTargetIndependentNode	RVISelLowering.cpp	/^SDNode *RVTargetLowering::legalizeTargetIndependentNode(SDNode *Node,$/;"	f	class:RVTargetLowering	typeref:typename:SDNode *
legalizeTrapEndpgm	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::legalizeTrapEndpgm($/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
legalizeTrapHsa	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::legalizeTrapHsa($/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
legalizeTrapHsaQueuePtr	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::legalizeTrapHsaQueuePtr($/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
legalizeTrapIntrinsic	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::legalizeTrapIntrinsic(MachineInstr &MI,$/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
legalizeUnsignedDIV_REM	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::legalizeUnsignedDIV_REM(MachineInstr &MI,$/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
legalizeUnsignedDIV_REM32Impl	RVGPULegalizerInfo.cpp	/^void RVGPULegalizerInfo::legalizeUnsignedDIV_REM32Impl(MachineIRBuilder &B,$/;"	f	class:RVGPULegalizerInfo	typeref:typename:void
legalizeUnsignedDIV_REM64Impl	RVGPULegalizerInfo.cpp	/^void RVGPULegalizerInfo::legalizeUnsignedDIV_REM64Impl(MachineIRBuilder &B,$/;"	f	class:RVGPULegalizerInfo	typeref:typename:void
legalizeWorkitemIDIntrinsic	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::legalizeWorkitemIDIntrinsic($/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
less	GCNRegPressure.cpp	/^bool GCNRegPressure::less(const GCNSubtarget &ST,$/;"	f	class:GCNRegPressure	typeref:typename:bool
lex	AsmParser/RVGPUAsmParser.cpp	/^RVGPUAsmParser::lex() {$/;"	f	class:RVGPUAsmParser	typeref:typename:void
limitOccupancy	RVMachineFunctionInfo.cpp	/^void RVMachineFunctionInfo::limitOccupancy(const MachineFunction &MF) {$/;"	f	class:RVMachineFunctionInfo	typeref:typename:void
limitOccupancy	RVMachineFunctionInfo.h	/^  void limitOccupancy(unsigned Limit) {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:void
link	RVGPUIGroupLP.cpp	/^int SchedGroup::link(SUnit &SU, bool MakePred,$/;"	f	class:__anon61b122dc0111::SchedGroup	typeref:typename:int
link	RVGPUIGroupLP.cpp	/^void SchedGroup::link(SUnit &SU, bool MakePred) {$/;"	f	class:__anon61b122dc0111::SchedGroup	typeref:typename:void
link	RVGPUIGroupLP.cpp	/^void SchedGroup::link(SUnit &SU,$/;"	f	class:__anon61b122dc0111::SchedGroup	typeref:typename:void
link	RVGPUIGroupLP.cpp	/^void SchedGroup::link(SchedGroup &OtherGroup) {$/;"	f	class:__anon61b122dc0111::SchedGroup	typeref:typename:void
linkSALUChain	RVGPUSubtarget.cpp	/^  unsigned linkSALUChain(SUnit *From, SUnit *To, unsigned MaxChain,$/;"	f	struct:__anon4eb125fb0111::FillMFMAShadowMutation	typeref:typename:unsigned	file:
linkSUnit	RVGPUIGroupLP.cpp	/^int PipelineSolver::linkSUnit($/;"	f	class:__anon61b122dc0111::PipelineSolver	typeref:typename:int
linkSchedGroups	RVGPUIGroupLP.cpp	/^template <typename T> void PipelineSolver::linkSchedGroups(T I, T E) {$/;"	f	class:__anon61b122dc0111::PipelineSolver	typeref:typename:void
llvm	Disassembler/RVGPUDisassembler.h	/^namespace llvm {$/;"	n
llvm	GCNHazardRecognizer.h	/^namespace llvm {$/;"	n
llvm	GCNILPSched.cpp	/^namespace llvm {$/;"	n	file:
llvm	GCNIterativeScheduler.cpp	/^namespace llvm {$/;"	n	file:
llvm	GCNIterativeScheduler.h	/^namespace llvm {$/;"	n
llvm	GCNMinRegStrategy.cpp	/^namespace llvm {$/;"	n	file:
llvm	GCNRegPressure.h	/^namespace llvm {$/;"	n
llvm	GCNSchedStrategy.h	/^namespace llvm {$/;"	n
llvm	GCNSubtarget.h	/^namespace llvm {$/;"	n
llvm	GCNVOPDUtils.h	/^namespace llvm {$/;"	n
llvm	MCA/RVGPUCustomBehaviour.cpp	/^namespace llvm {$/;"	n	file:
llvm	MCA/RVGPUCustomBehaviour.h	/^namespace llvm {$/;"	n
llvm	MCTargetDesc/RVGPUELFStreamer.h	/^namespace llvm {$/;"	n
llvm	MCTargetDesc/RVGPUFixupKinds.h	/^namespace llvm {$/;"	n
llvm	MCTargetDesc/RVGPUInstPrinter.h	/^namespace llvm {$/;"	n
llvm	MCTargetDesc/RVGPUMCAsmInfo.h	/^namespace llvm {$/;"	n
llvm	MCTargetDesc/RVGPUMCTargetDesc.h	/^namespace llvm {$/;"	n
llvm	MCTargetDesc/RVGPUTargetStreamer.h	/^namespace llvm {$/;"	n
llvm	RVFrameLowering.cpp	/^namespace llvm {$/;"	n	file:
llvm	RVFrameLowering.h	/^namespace llvm {$/;"	n
llvm	RVGPU.h	/^namespace llvm {$/;"	n
llvm	RVGPUAliasAnalysis.h	/^namespace llvm {$/;"	n
llvm	RVGPUArgumentUsageInfo.h	/^namespace llvm {$/;"	n
llvm	RVGPUAsmPrinter.h	/^namespace llvm {$/;"	n
llvm	RVGPUAttributor.cpp	/^namespace llvm {$/;"	n	file:
llvm	RVGPUCallLowering.h	/^namespace llvm {$/;"	n
llvm	RVGPUCtorDtorLowering.h	/^namespace llvm {$/;"	n
llvm	RVGPUExportClustering.cpp	/^namespace llvm {$/;"	n	file:
llvm	RVGPUExportClustering.h	/^namespace llvm {$/;"	n
llvm	RVGPUFrameLowering.h	/^namespace llvm {$/;"	n
llvm	RVGPUGlobalISelUtils.h	/^namespace llvm {$/;"	n
llvm	RVGPUHSAMetadataStreamer.cpp	/^namespace llvm {$/;"	n	file:
llvm	RVGPUHSAMetadataStreamer.h	/^namespace llvm {$/;"	n
llvm	RVGPUIGroupLP.cpp	/^namespace llvm {$/;"	n	file:
llvm	RVGPUIGroupLP.h	/^namespace llvm {$/;"	n
llvm	RVGPUISelLowering.h	/^namespace llvm {$/;"	n
llvm	RVGPUInstrInfo.h	/^namespace llvm {$/;"	n
llvm	RVGPUInstructionSelector.h	/^namespace llvm {$/;"	n
llvm	RVGPULegalizerInfo.h	/^namespace llvm {$/;"	n
llvm	RVGPULibCalls.cpp	/^namespace llvm {$/;"	n	file:
llvm	RVGPULibFunc.h	/^namespace llvm {$/;"	n
llvm	RVGPUMCInstLower.h	/^namespace llvm {$/;"	n
llvm	RVGPUMIRFormatter.h	/^namespace llvm {$/;"	n
llvm	RVGPUMachineFunction.h	/^namespace llvm {$/;"	n
llvm	RVGPUMachineModuleInfo.cpp	/^namespace llvm {$/;"	n	file:
llvm	RVGPUMachineModuleInfo.h	/^namespace llvm {$/;"	n
llvm	RVGPUMacroFusion.cpp	/^namespace llvm {$/;"	n	file:
llvm	RVGPUMacroFusion.h	/^namespace llvm {$/;"	n
llvm	RVGPUPTNote.h	/^namespace llvm {$/;"	n
llvm	RVGPUPerfHintAnalysis.h	/^namespace llvm {$/;"	n
llvm	RVGPUPostLegalizerCombiner.cpp	/^namespace llvm {$/;"	n	file:
llvm	RVGPUPreLegalizerCombiner.cpp	/^namespace llvm {$/;"	n	file:
llvm	RVGPUPrintfRuntimeBinding.cpp	/^namespace llvm {$/;"	n	file:
llvm	RVGPURegBankCombiner.cpp	/^namespace llvm {$/;"	n	file:
llvm	RVGPURegBankSelect.h	/^namespace llvm {$/;"	n
llvm	RVGPURegisterBankInfo.h	/^namespace llvm {$/;"	n
llvm	RVGPURemoveIncompatibleFunctions.cpp	/^namespace llvm {$/;"	n	file:
llvm	RVGPUResourceUsageAnalysis.h	/^namespace llvm {$/;"	n
llvm	RVGPUSubtarget.h	/^namespace llvm {$/;"	n
llvm	RVGPUTargetMachine.h	/^namespace llvm {$/;"	n
llvm	RVGPUTargetObjectFile.h	/^namespace llvm {$/;"	n
llvm	RVGPUTargetTransformInfo.h	/^namespace llvm {$/;"	n
llvm	RVGPUUnifyDivergentExitNodes.h	/^namespace llvm {$/;"	n
llvm	RVISelLowering.h	/^namespace llvm {$/;"	n
llvm	RVInstrInfo.cpp	/^namespace llvm {$/;"	n	file:
llvm	RVInstrInfo.h	/^namespace llvm {$/;"	n
llvm	RVMachineFunctionInfo.h	/^namespace llvm {$/;"	n
llvm	RVRegisterInfo.cpp	/^namespace llvm {$/;"	n	file:
llvm	RVRegisterInfo.h	/^namespace llvm {$/;"	n
llvm	SIDefines.h	/^namespace llvm {$/;"	n
llvm	SIInsertWaitcnts.cpp	/^namespace llvm {$/;"	n	file:
llvm	SILowerI1Copies.h	/^namespace llvm {$/;"	n
llvm	SIMachineScheduler.cpp	/^namespace llvm {$/;"	n	file:
llvm	SIMachineScheduler.h	/^namespace llvm {$/;"	n
llvm	SIModeRegisterDefaults.h	/^namespace llvm {$/;"	n
llvm	SIProgramInfo.h	/^namespace llvm {$/;"	n
llvm	TargetInfo/RVGPUTargetInfo.h	/^namespace llvm {$/;"	n
llvm	Utils/RVGPUAsmUtils.cpp	/^namespace llvm {$/;"	n	file:
llvm	Utils/RVGPUAsmUtils.h	/^namespace llvm {$/;"	n
llvm	Utils/RVGPUBaseInfo.cpp	/^namespace llvm {$/;"	n	file:
llvm	Utils/RVGPUBaseInfo.h	/^namespace llvm {$/;"	n
llvm	Utils/RVGPUMemoryUtils.cpp	/^namespace llvm {$/;"	n	file:
llvm	Utils/RVGPUMemoryUtils.h	/^namespace llvm {$/;"	n
llvm	Utils/RVGPUPALMetadata.h	/^namespace llvm {$/;"	n
llvm	Utils/RVKernelCodeTUtils.h	/^namespace llvm {$/;"	n
loadImplicitKernelArgument	RVISelLowering.cpp	/^SDValue RVTargetLowering::loadImplicitKernelArgument(SelectionDAG &DAG, MVT VT,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
loadInputValue	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::loadInputValue(SelectionDAG &DAG,$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
loadInputValue	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::loadInputValue($/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
loadInputValue	RVGPULegalizerInfo.cpp	/^bool RVGPULegalizerInfo::loadInputValue(Register DstReg, MachineIRBuilder &B,$/;"	f	class:RVGPULegalizerInfo	typeref:typename:bool
loadM0FromVGPR	RVISelLowering.cpp	/^loadM0FromVGPR(const RVInstrInfo *TII, MachineBasicBlock &MBB, MachineInstr &MI,$/;"	f	typeref:typename:MachineBasicBlock::iterator	file:
loadMBUFScalarOperandsFromVGPR	RVInstrInfo.cpp	/^loadMBUFScalarOperandsFromVGPR(const RVInstrInfo &TII, MachineInstr &MI,$/;"	f	typeref:typename:MachineBasicBlock *	file:
loadRegFromStackSlot	RVInstrInfo.cpp	/^void RVInstrInfo::loadRegFromStackSlot(MachineBasicBlock &MBB,$/;"	f	class:RVInstrInfo	typeref:typename:void
loadStackInputValue	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::loadStackInputValue(SelectionDAG &DAG,$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
loadStoreBitcastWorkaround	RVGPULegalizerInfo.cpp	/^static bool loadStoreBitcastWorkaround(const LLT Ty) {$/;"	f	typeref:typename:bool	file:
loadStoreOptEnabled	GCNSubtarget.h	/^  bool loadStoreOptEnabled() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
log2	RVGPULibCalls.cpp	/^static double log2(double V) {$/;"	f	namespace:llvm	typeref:typename:double	file:
lookup	RVGPULibFunc.cpp	/^bool UnmangledFuncInfo::lookup(StringRef Name, ID &Id) {$/;"	f	class:UnmangledFuncInfo	typeref:typename:bool
lookupFuncArgInfo	RVGPUArgumentUsageInfo.cpp	/^RVGPUArgumentUsageInfo::lookupFuncArgInfo(const Function &F) const {$/;"	f	class:RVGPUArgumentUsageInfo	typeref:typename:const RVGPUFunctionArgInfo &
lower	RVGPUMCInstLower.cpp	/^void RVGPUMCInstLower::lower(const MachineInstr *MI, MCInst &OutMI) const {$/;"	f	class:RVGPUMCInstLower	typeref:typename:void
lowerADDRSPACECAST	RVISelLowering.cpp	/^SDValue RVTargetLowering::lowerADDRSPACECAST(SDValue Op,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
lowerAddrSpaceCast	RVGPUMCInstLower.h	/^static inline const MCExpr *lowerAddrSpaceCast(const TargetMachine &TM,$/;"	f	namespace:__anonc72909460111	typeref:typename:const MCExpr *
lowerBALLOTIntrinsic	RVISelLowering.cpp	/^static SDValue lowerBALLOTIntrinsic(const RVTargetLowering &TLI, SDNode *N,$/;"	f	typeref:typename:SDValue	file:
lowerBUILD_VECTOR	RVISelLowering.cpp	/^SDValue RVTargetLowering::lowerBUILD_VECTOR(SDValue Op,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
lowerBlock	SIWholeQuadMode.cpp	/^void SIWholeQuadMode::lowerBlock(MachineBasicBlock &MBB) {$/;"	f	class:SIWholeQuadMode	typeref:typename:void
lowerCall	RVGPUCallLowering.cpp	/^bool RVGPUCallLowering::lowerCall(MachineIRBuilder &MIRBuilder,$/;"	f	class:RVGPUCallLowering	typeref:typename:bool
lowerChainCall	RVGPUCallLowering.cpp	/^bool RVGPUCallLowering::lowerChainCall(MachineIRBuilder &MIRBuilder,$/;"	f	class:RVGPUCallLowering	typeref:typename:bool
lowerConstant	RVGPUMCInstLower.cpp	/^const MCExpr *RVGPUAsmPrinter::lowerConstant(const Constant *CV) {$/;"	f	class:RVGPUAsmPrinter	typeref:typename:const MCExpr *
lowerCopiesFromI1	SILowerI1Copies.cpp	/^bool Vreg1LoweringHelper::lowerCopiesFromI1() {$/;"	f	class:Vreg1LoweringHelper	typeref:typename:bool
lowerCopiesToI1	SILowerI1Copies.cpp	/^bool Vreg1LoweringHelper::lowerCopiesToI1() {$/;"	f	class:Vreg1LoweringHelper	typeref:typename:bool
lowerCopyInstrs	SIWholeQuadMode.cpp	/^void SIWholeQuadMode::lowerCopyInstrs() {$/;"	f	class:SIWholeQuadMode	typeref:typename:void
lowerCtorsAndDtors	RVGPUCtorDtorLowering.cpp	/^static bool lowerCtorsAndDtors(Module &M) {$/;"	f	namespace:__anon237d7fe20111	typeref:typename:bool	file:
lowerDEBUGTRAP	RVISelLowering.cpp	/^SDValue RVTargetLowering::lowerDEBUGTRAP(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
lowerDYNAMIC_STACKALLOCImpl	RVISelLowering.cpp	/^SDValue RVTargetLowering::lowerDYNAMIC_STACKALLOCImpl($/;"	f	class:RVTargetLowering	typeref:typename:SDValue
lowerDynamicLDSVariables	RVGPULowerModuleLDSPass.cpp	/^  DenseMap<Function *, GlobalVariable *> lowerDynamicLDSVariables($/;"	f	class:__anoncc7483b30111::RVGPULowerModuleLDS	typeref:typename:DenseMap<Function *,GlobalVariable * >	file:
lowerEXTRACT_VECTOR_ELT	RVISelLowering.cpp	/^SDValue RVTargetLowering::lowerEXTRACT_VECTOR_ELT(SDValue Op,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
lowerFCMPIntrinsic	RVISelLowering.cpp	/^static SDValue lowerFCMPIntrinsic(const RVTargetLowering &TLI,$/;"	f	typeref:typename:SDValue	file:
lowerFDIV_FAST	RVISelLowering.cpp	/^SDValue RVTargetLowering::lowerFDIV_FAST(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
lowerFEXP	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::lowerFEXP(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
lowerFEXP10Unsafe	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::lowerFEXP10Unsafe(SDValue X, const SDLoc &SL,$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
lowerFEXP2	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::lowerFEXP2(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
lowerFEXPUnsafe	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::lowerFEXPUnsafe(SDValue X, const SDLoc &SL,$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
lowerFLDEXP	RVISelLowering.cpp	/^SDValue RVTargetLowering::lowerFLDEXP(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
lowerFMINNUM_FMAXNUM	RVISelLowering.cpp	/^SDValue RVTargetLowering::lowerFMINNUM_FMAXNUM(SDValue Op,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
lowerFP_ROUND	RVISelLowering.cpp	/^SDValue RVTargetLowering::lowerFP_ROUND(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
lowerFSQRTF16	RVISelLowering.cpp	/^SDValue RVTargetLowering::lowerFSQRTF16(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
lowerFSQRTF32	RVISelLowering.cpp	/^SDValue RVTargetLowering::lowerFSQRTF32(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
lowerFSQRTF64	RVISelLowering.cpp	/^SDValue RVTargetLowering::lowerFSQRTF64(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
lowerFastUnsafeFDIV	RVISelLowering.cpp	/^SDValue RVTargetLowering::lowerFastUnsafeFDIV(SDValue Op,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
lowerFastUnsafeFDIV64	RVISelLowering.cpp	/^SDValue RVTargetLowering::lowerFastUnsafeFDIV64(SDValue Op,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
lowerFormalArguments	RVGPUCallLowering.cpp	/^bool RVGPUCallLowering::lowerFormalArguments($/;"	f	class:RVGPUCallLowering	typeref:typename:bool
lowerFormalArgumentsKernel	RVGPUCallLowering.cpp	/^bool RVGPUCallLowering::lowerFormalArgumentsKernel($/;"	f	class:RVGPUCallLowering	typeref:typename:bool
lowerGET_ROUNDING	RVISelLowering.cpp	/^SDValue RVTargetLowering::lowerGET_ROUNDING(SDValue Op,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
lowerICMPIntrinsic	RVISelLowering.cpp	/^static SDValue lowerICMPIntrinsic(const RVTargetLowering &TLI,$/;"	f	typeref:typename:SDValue	file:
lowerINSERT_SUBVECTOR	RVISelLowering.cpp	/^SDValue RVTargetLowering::lowerINSERT_SUBVECTOR(SDValue Op,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
lowerINSERT_VECTOR_ELT	RVISelLowering.cpp	/^SDValue RVTargetLowering::lowerINSERT_VECTOR_ELT(SDValue Op,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
lowerIdempotentRMWIntoFencedLoad	RVISelLowering.cpp	/^RVTargetLowering::lowerIdempotentRMWIntoFencedLoad(AtomicRMWInst *AI) const {$/;"	f	class:RVTargetLowering	typeref:typename:LoadInst *
lowerImage	RVISelLowering.cpp	/^SDValue RVTargetLowering::lowerImage(SDValue Op,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
lowerImplicitZextParam	RVISelLowering.cpp	/^SDValue RVTargetLowering::lowerImplicitZextParam(SelectionDAG &DAG,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
lowerInitExec	SILowerControlFlow.cpp	/^void SILowerControlFlow::lowerInitExec(MachineBasicBlock *MBB,$/;"	f	class:SILowerControlFlow	typeref:typename:void
lowerIntrinsicLoad	RVISelLowering.cpp	/^SDValue RVTargetLowering::lowerIntrinsicLoad(MemSDNode *M, bool IsFormat,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
lowerKernArgParameterPtr	RVISelLowering.cpp	/^SDValue RVTargetLowering::lowerKernArgParameterPtr(SelectionDAG &DAG,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
lowerKernargMemParameter	RVISelLowering.cpp	/^SDValue RVTargetLowering::lowerKernargMemParameter($/;"	f	class:RVTargetLowering	typeref:typename:SDValue
lowerKernelArguments	RVGPULowerKernelArguments.cpp	/^static bool lowerKernelArguments(Function &F, const TargetMachine &TM) {$/;"	f	typeref:typename:bool	file:
lowerKernelScopeStructVariables	RVGPULowerModuleLDSPass.cpp	/^  lowerKernelScopeStructVariables($/;"	f	class:__anoncc7483b30111::RVGPULowerModuleLDS	typeref:typename:DenseMap<Function *,LDSVariableReplacement>	file:
lowerKillF32	SIWholeQuadMode.cpp	/^MachineInstr *SIWholeQuadMode::lowerKillF32(MachineBasicBlock &MBB,$/;"	f	class:SIWholeQuadMode	typeref:typename:MachineInstr *
lowerKillI1	SIWholeQuadMode.cpp	/^MachineInstr *SIWholeQuadMode::lowerKillI1(MachineBasicBlock &MBB,$/;"	f	class:SIWholeQuadMode	typeref:typename:MachineInstr *
lowerKillInstrs	SIWholeQuadMode.cpp	/^void SIWholeQuadMode::lowerKillInstrs(bool IsWQM) {$/;"	f	class:SIWholeQuadMode	typeref:typename:void
lowerLiveMaskQueries	SIWholeQuadMode.cpp	/^void SIWholeQuadMode::lowerLiveMaskQueries() {$/;"	f	class:SIWholeQuadMode	typeref:typename:void
lowerModuleScopeStructVariables	RVGPULowerModuleLDSPass.cpp	/^  static GlobalVariable *lowerModuleScopeStructVariables($/;"	f	class:__anoncc7483b30111::RVGPULowerModuleLDS	typeref:typename:GlobalVariable *	file:
lowerOperand	RVGPUMCInstLower.cpp	/^bool RVGPUAsmPrinter::lowerOperand(const MachineOperand &MO,$/;"	f	class:RVGPUAsmPrinter	typeref:typename:bool
lowerOperand	RVGPUMCInstLower.cpp	/^bool RVGPUMCInstLower::lowerOperand(const MachineOperand &MO,$/;"	f	class:RVGPUMCInstLower	typeref:typename:bool
lowerPREFETCH	RVISelLowering.cpp	/^SDValue RVTargetLowering::lowerPREFETCH(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
lowerParameter	RVGPUCallLowering.cpp	/^void RVGPUCallLowering::lowerParameter(MachineIRBuilder &B, ArgInfo &OrigArg,$/;"	f	class:RVGPUCallLowering	typeref:typename:void
lowerParameterPtr	RVGPUCallLowering.cpp	/^void RVGPUCallLowering::lowerParameterPtr(Register DstReg, MachineIRBuilder &B,$/;"	f	class:RVGPUCallLowering	typeref:typename:void
lowerPhis	SILowerI1Copies.cpp	/^bool PhiLoweringHelper::lowerPhis() {$/;"	f	class:PhiLoweringHelper	typeref:typename:bool
lowerPointerAsRsrcIntrin	RVISelLowering.cpp	/^SDValue RVTargetLowering::lowerPointerAsRsrcIntrin(SDNode *Op,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
lowerPrintfForGpu	RVGPUPrintfRuntimeBinding.cpp	/^bool RVGPUPrintfRuntimeBindingImpl::lowerPrintfForGpu(Module &M) {$/;"	f	class:RVGPUPrintfRuntimeBindingImpl	typeref:typename:bool
lowerPseudoStrictMode	SIWholeQuadMode.cpp	/^void SIWholeQuadMode::lowerPseudoStrictMode(MachineBasicBlock &MBB,$/;"	f	class:SIWholeQuadMode	typeref:typename:void
lowerRawBufferAtomicIntrin	RVISelLowering.cpp	/^SDValue RVTargetLowering::lowerRawBufferAtomicIntrin(SDValue Op,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
lowerReturn	RVGPUCallLowering.cpp	/^bool RVGPUCallLowering::lowerReturn(MachineIRBuilder &B, const Value *Val,$/;"	f	class:RVGPUCallLowering	typeref:typename:bool
lowerReturnVal	RVGPUCallLowering.cpp	/^bool RVGPUCallLowering::lowerReturnVal(MachineIRBuilder &B,$/;"	f	class:RVGPUCallLowering	typeref:typename:bool
lowerSBuffer	RVISelLowering.cpp	/^SDValue RVTargetLowering::lowerSBuffer(EVT VT, SDLoc DL, SDValue Rsrc,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
lowerSCALAR_TO_VECTOR	RVISelLowering.cpp	/^SDValue RVTargetLowering::lowerSCALAR_TO_VECTOR(SDValue Op,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
lowerScalarAbs	RVInstrInfo.cpp	/^void RVInstrInfo::lowerScalarAbs(SIInstrWorklist &Worklist,$/;"	f	class:RVInstrInfo	typeref:typename:void
lowerScalarXnor	RVInstrInfo.cpp	/^void RVInstrInfo::lowerScalarXnor(SIInstrWorklist &Worklist,$/;"	f	class:RVInstrInfo	typeref:typename:void
lowerSelect	RVInstrInfo.cpp	/^void RVInstrInfo::lowerSelect(SIInstrWorklist &Worklist, MachineInstr &Inst,$/;"	f	class:RVInstrInfo	typeref:typename:void
lowerSpecialCase	SIFixSGPRCopies.cpp	/^bool SIFixSGPRCopies::lowerSpecialCase(MachineInstr &MI,$/;"	f	class:SIFixSGPRCopies	typeref:typename:bool
lowerStackParameter	RVISelLowering.cpp	/^SDValue RVTargetLowering::lowerStackParameter(SelectionDAG &DAG, CCValAssign &VA,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
lowerStructBufferAtomicIntrin	RVISelLowering.cpp	/^RVTargetLowering::lowerStructBufferAtomicIntrin(SDValue Op, SelectionDAG &DAG,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
lowerTRAP	RVISelLowering.cpp	/^SDValue RVTargetLowering::lowerTRAP(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
lowerTailCall	RVGPUCallLowering.cpp	/^bool RVGPUCallLowering::lowerTailCall($/;"	f	class:RVGPUCallLowering	typeref:typename:bool
lowerTrapEndpgm	RVISelLowering.cpp	/^SDValue RVTargetLowering::lowerTrapEndpgm($/;"	f	class:RVTargetLowering	typeref:typename:SDValue
lowerTrapHsa	RVISelLowering.cpp	/^SDValue RVTargetLowering::lowerTrapHsa($/;"	f	class:RVTargetLowering	typeref:typename:SDValue
lowerTrapHsaQueuePtr	RVISelLowering.cpp	/^SDValue RVTargetLowering::lowerTrapHsaQueuePtr($/;"	f	class:RVTargetLowering	typeref:typename:SDValue
lowerUnhandledCall	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::lowerUnhandledCall(CallLoweringInfo &CLI,$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
lowerVECTOR_SHUFFLE	RVISelLowering.cpp	/^SDValue RVTargetLowering::lowerVECTOR_SHUFFLE(SDValue Op,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
lowerVGPR2SGPRCopies	SIFixSGPRCopies.cpp	/^void SIFixSGPRCopies::lowerVGPR2SGPRCopies(MachineFunction &MF) {$/;"	f	class:SIFixSGPRCopies	typeref:typename:void
lowerWaveReduce	RVISelLowering.cpp	/^static MachineBasicBlock *lowerWaveReduce(MachineInstr &MI,$/;"	f	typeref:typename:MachineBasicBlock *	file:
lowerWorkitemID	RVISelLowering.cpp	/^SDValue RVTargetLowering::lowerWorkitemID(SelectionDAG &DAG, SDValue Op,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
lowerXMULO	RVISelLowering.cpp	/^SDValue RVTargetLowering::lowerXMULO(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
lowerXMUL_LOHI	RVISelLowering.cpp	/^SDValue RVTargetLowering::lowerXMUL_LOHI(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
macToMad	SIFoldOperands.cpp	/^static unsigned macToMad(unsigned Opc) {$/;"	f	typeref:typename:unsigned	file:
makeGCNILPScheduler	GCNILPSched.cpp	/^std::vector<const SUnit*> makeGCNILPScheduler(ArrayRef<const SUnit*> BotRoots,$/;"	f	namespace:llvm	typeref:typename:std::vector<const SUnit * >
makeLIDRangeMetadata	RVGPUSubtarget.cpp	/^bool RVGPUSubtarget::makeLIDRangeMetadata(Instruction *I) const {$/;"	f	class:RVGPUSubtarget	typeref:typename:bool
makeMemAccessInfo	RVGPUPerfHintAnalysis.cpp	/^RVGPUPerfHint::makeMemAccessInfo(Instruction *Inst) const {$/;"	f	class:__anon406ad74e0111::RVGPUPerfHint	typeref:typename:RVGPUPerfHint::MemAccessInfo
makeMinRegSchedule	GCNMinRegStrategy.cpp	/^std::vector<const SUnit*> makeMinRegSchedule(ArrayRef<const SUnit*> TopRoots,$/;"	f	namespace:llvm	typeref:typename:std::vector<const SUnit * >
makePipeline	RVGPUIGroupLP.cpp	/^void PipelineSolver::makePipeline() {$/;"	f	class:__anon61b122dc0111::PipelineSolver	typeref:typename:void
mangle	RVGPULibFunc.cpp	/^std::string RVGPUMangledLibFunc::mangle() const { return mangleNameItanium(); }$/;"	f	class:RVGPUMangledLibFunc	typeref:typename:std::string
mangle	RVGPULibFunc.h	/^  std::string mangle() const override { return Name; }$/;"	f	class:llvm::RVGPUUnmangledLibFunc	typeref:typename:std::string
mangle	RVGPULibFunc.h	/^  std::string mangle() const { return Impl->mangle(); }$/;"	f	class:llvm::RVGPULibFunc	typeref:typename:std::string
mangleNameItanium	RVGPULibFunc.cpp	/^std::string RVGPUMangledLibFunc::mangleNameItanium() const {$/;"	f	class:RVGPUMangledLibFunc	typeref:typename:std::string
manglingRules	RVGPULibFunc.cpp	/^static constexpr ManglingRule manglingRules[] = {$/;"	v	namespace:__anona5afe38d0111	typeref:typename:ManglingRule[]	file:
manifest	RVGPUAttributor.cpp	/^  ChangeStatus manifest(Attributor &A) override {$/;"	f	struct:__anon512e119a0111::AARVAttributesFunction	typeref:typename:ChangeStatus	file:
manifest	RVGPUAttributor.cpp	/^  ChangeStatus manifest(Attributor &A) override {$/;"	f	struct:__anon512e119a0111::AARVFlatWorkGroupSize	typeref:typename:ChangeStatus	file:
manifest	RVGPUAttributor.cpp	/^  ChangeStatus manifest(Attributor &A) override {$/;"	f	struct:__anon512e119a0111::AARVWavesPerEU	typeref:typename:ChangeStatus	file:
manifest	RVGPUAttributor.cpp	/^  ChangeStatus manifest(Attributor &A) override {$/;"	f	struct:__anon512e119a0111::AAUniformWorkGroupSizeFunction	typeref:typename:ChangeStatus	file:
mapWMMA2AddrTo3AddrOpcode	Utils/RVGPUBaseInfo.cpp	/^unsigned mapWMMA2AddrTo3AddrOpcode(unsigned Opc) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:unsigned
mapWMMA3AddrTo2AddrOpcode	Utils/RVGPUBaseInfo.cpp	/^unsigned mapWMMA3AddrTo2AddrOpcode(unsigned Opc) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:unsigned
mapping	RVMachineFunctionInfo.h	/^  static void mapping(IO &YamlIO, RVMachineFunctionInfo &MFI) {$/;"	f	struct:llvm::yaml::MappingTraits	typeref:typename:void
mapping	RVMachineFunctionInfo.h	/^  static void mapping(IO &YamlIO, SIArgument &A) {$/;"	f	struct:llvm::yaml::MappingTraits	typeref:typename:void
mapping	RVMachineFunctionInfo.h	/^  static void mapping(IO &YamlIO, SIArgumentInfo &AI) {$/;"	f	struct:llvm::yaml::MappingTraits	typeref:typename:void
mapping	RVMachineFunctionInfo.h	/^  static void mapping(IO &YamlIO, SIMode &Mode) {$/;"	f	struct:llvm::yaml::MappingTraits	typeref:typename:void
mappingImpl	RVMachineFunctionInfo.cpp	/^void yaml::RVMachineFunctionInfo::mappingImpl(yaml::IO &YamlIO) {$/;"	f	class:yaml::RVMachineFunctionInfo	typeref:typename:void
markAsLaneMask	SILowerI1Copies.cpp	/^void Vreg1LoweringHelper::markAsLaneMask(Register DstReg) const {$/;"	f	class:Vreg1LoweringHelper	typeref:typename:void
markDefs	SIWholeQuadMode.cpp	/^void SIWholeQuadMode::markDefs(const MachineInstr &UseMI, LiveRange &LR,$/;"	f	class:SIWholeQuadMode	typeref:typename:void
markInstruction	SIWholeQuadMode.cpp	/^void SIWholeQuadMode::markInstruction(MachineInstr &MI, char Flag,$/;"	f	class:SIWholeQuadMode	typeref:typename:void
markInstructionUses	SIWholeQuadMode.cpp	/^void SIWholeQuadMode::markInstructionUses(const MachineInstr &MI, char Flag,$/;"	f	class:SIWholeQuadMode	typeref:typename:void
markOperand	SIWholeQuadMode.cpp	/^void SIWholeQuadMode::markOperand(const MachineInstr &MI,$/;"	f	class:SIWholeQuadMode	typeref:typename:void
markPSInputAllocated	RVMachineFunctionInfo.h	/^  void markPSInputAllocated(unsigned Index) {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:void
markPSInputEnabled	RVMachineFunctionInfo.h	/^  void markPSInputEnabled(unsigned Index) {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:void
markPhysRegUsed	RVGPUCallLowering.cpp	/^  void markPhysRegUsed(unsigned PhysReg) override {$/;"	f	struct:__anonad2fb0ad0111::CallReturnHandler	typeref:typename:void	file:
markPhysRegUsed	RVGPUCallLowering.cpp	/^  void markPhysRegUsed(unsigned PhysReg) override {$/;"	f	struct:__anonad2fb0ad0111::FormalArgHandler	typeref:typename:void	file:
markUsedByKernel	RVGPULowerModuleLDSPass.cpp	/^  static void markUsedByKernel(Function *Func, GlobalVariable *SGV) {$/;"	f	class:__anoncc7483b30111::RVGPULowerModuleLDS	typeref:typename:void	file:
matchClampI64ToI16	RVGPUPreLegalizerCombiner.cpp	/^bool RVGPUPreLegalizerCombinerImpl::matchClampI64ToI16($/;"	f	class:__anonb779c2ff0111::RVGPUPreLegalizerCombinerImpl	typeref:typename:bool
matchCombineSignExtendInReg	RVGPUPostLegalizerCombiner.cpp	/^bool RVGPUPostLegalizerCombinerImpl::matchCombineSignExtendInReg($/;"	f	class:__anonf94dcdde0111::RVGPUPostLegalizerCombinerImpl	typeref:typename:bool
matchCvtF32UByteN	RVGPUPostLegalizerCombiner.cpp	/^bool RVGPUPostLegalizerCombinerImpl::matchCvtF32UByteN($/;"	f	class:__anonf94dcdde0111::RVGPUPostLegalizerCombinerImpl	typeref:typename:bool
matchDfmtNfmt	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::matchDfmtNfmt(int64_t &Dfmt,$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
matchExpandPromotedF16FMed3	RVGPUCombinerHelper.cpp	/^bool RVGPUCombinerHelper::matchExpandPromotedF16FMed3(MachineInstr &MI,$/;"	f	class:RVGPUCombinerHelper	typeref:typename:bool
matchFMinFMaxLegacy	RVGPUPostLegalizerCombiner.cpp	/^bool RVGPUPostLegalizerCombinerImpl::matchFMinFMaxLegacy($/;"	f	class:__anonf94dcdde0111::RVGPUPostLegalizerCombinerImpl	typeref:typename:bool
matchFPExtFromF16	RVGPUInstCombineIntrinsic.cpp	/^static bool matchFPExtFromF16(Value *Arg, Value *&FPExtSrc) {$/;"	f	typeref:typename:bool	file:
matchFPMed3ToClamp	RVGPURegBankCombiner.cpp	/^bool RVGPURegBankCombinerImpl::matchFPMed3ToClamp(MachineInstr &MI,$/;"	f	class:__anon00ae19330111::RVGPURegBankCombinerImpl	typeref:typename:bool
matchFPMinMaxToClamp	RVGPURegBankCombiner.cpp	/^bool RVGPURegBankCombinerImpl::matchFPMinMaxToClamp(MachineInstr &MI,$/;"	f	class:__anon00ae19330111::RVGPURegBankCombinerImpl	typeref:typename:bool
matchFPMinMaxToMed3	RVGPURegBankCombiner.cpp	/^bool RVGPURegBankCombinerImpl::matchFPMinMaxToMed3($/;"	f	class:__anon00ae19330111::RVGPURegBankCombinerImpl	typeref:typename:bool
matchFoldableFneg	RVGPUCombinerHelper.cpp	/^bool RVGPUCombinerHelper::matchFoldableFneg(MachineInstr &MI,$/;"	f	class:RVGPUCombinerHelper	typeref:typename:bool
matchFractPat	RVGPUCodeGenPrepare.cpp	/^Value *RVGPUCodeGenPrepareImpl::matchFractPat(IntrinsicInst &I) {$/;"	f	class:RVGPUCodeGenPrepareImpl	typeref:typename:Value *
matchIntMinMaxToMed3	RVGPURegBankCombiner.cpp	/^bool RVGPURegBankCombinerImpl::matchIntMinMaxToMed3($/;"	f	class:__anon00ae19330111::RVGPURegBankCombinerImpl	typeref:typename:bool
matchLoadD16FromBuildVector	RVGPUISelDAGToDAG.cpp	/^bool RVGPUDAGToDAGISel::matchLoadD16FromBuildVector(SDNode *N) const {$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
matchMed	RVGPURegBankCombiner.cpp	/^bool RVGPURegBankCombinerImpl::matchMed(MachineInstr &MI,$/;"	f	class:__anon00ae19330111::RVGPURegBankCombinerImpl	typeref:typename:bool
matchPERM	RVISelLowering.cpp	/^static SDValue matchPERM(SDNode *N, TargetLowering::DAGCombinerInfo &DCI) {$/;"	f	typeref:typename:SDValue	file:
matchRcpSqrtToRsq	RVGPUPostLegalizerCombiner.cpp	/^bool RVGPUPostLegalizerCombinerImpl::matchRcpSqrtToRsq($/;"	f	class:__anonf94dcdde0111::RVGPUPostLegalizerCombinerImpl	typeref:typename:bool
matchRemoveFcanonicalize	RVGPUPostLegalizerCombiner.cpp	/^bool RVGPUPostLegalizerCombinerImpl::matchRemoveFcanonicalize($/;"	f	class:__anonf94dcdde0111::RVGPUPostLegalizerCombinerImpl	typeref:typename:bool
matchSDWAOperand	SIPeepholeSDWA.cpp	/^SIPeepholeSDWA::matchSDWAOperand(MachineInstr &MI) {$/;"	f	class:SIPeepholeSDWA	typeref:typename:std::unique_ptr<SDWAOperand>
matchSDWAOperands	SIPeepholeSDWA.cpp	/^void SIPeepholeSDWA::matchSDWAOperands(MachineBasicBlock &MBB) {$/;"	f	class:SIPeepholeSDWA	typeref:typename:void
matchSwap	SIShrinkInstructions.cpp	/^MachineInstr *SIShrinkInstructions::matchSwap(MachineInstr &MovT) const {$/;"	f	class:SIShrinkInstructions	typeref:typename:MachineInstr *
matchUCharToFloat	RVGPUPostLegalizerCombiner.cpp	/^bool RVGPUPostLegalizerCombinerImpl::matchUCharToFloat($/;"	f	class:__anonf94dcdde0111::RVGPUPostLegalizerCombinerImpl	typeref:typename:bool
matchZExtFromI32	RVGPUISelDAGToDAG.cpp	/^static SDValue matchZExtFromI32(SDValue Op) {$/;"	f	typeref:typename:SDValue	file:
matchZeroExtendFromS32	RVGPUInstructionSelector.cpp	/^static Register matchZeroExtendFromS32(MachineRegisterInfo &MRI, Register Reg) {$/;"	f	typeref:typename:Register	file:
materializeFrameBaseRegister	RVRegisterInfo.cpp	/^Register RVRegisterInfo::materializeFrameBaseRegister(MachineBasicBlock *MBB,$/;"	f	class:RVRegisterInfo	typeref:typename:Register
materializeImmediate	RVInstrInfo.cpp	/^void RVInstrInfo::materializeImmediate(MachineBasicBlock &MBB,$/;"	f	class:RVInstrInfo	typeref:typename:void
max	GCNRegPressure.h	/^inline GCNRegPressure max(const GCNRegPressure &P1, const GCNRegPressure &P2) {$/;"	f	namespace:llvm	typeref:typename:GCNRegPressure
maxLeadIndex	RVGPULibFunc.cpp	/^   int maxLeadIndex() const { return (std::max)(Lead[0], Lead[1]); }$/;"	f	struct:__anona5afe38d0111::ManglingRule	typeref:typename:int	file:
maxSizeForAddrSpace	RVGPULegalizerInfo.cpp	/^static unsigned maxSizeForAddrSpace(const GCNSubtarget &ST, unsigned AS,$/;"	f	typeref:typename:unsigned	file:
maxSregUsage	SIMachineScheduler.h	/^  unsigned maxSregUsage;$/;"	m	class:llvm::SIScheduleBlockScheduler	typeref:typename:unsigned
maxVregUsage	SIMachineScheduler.h	/^  unsigned maxVregUsage;$/;"	m	class:llvm::SIScheduleBlockScheduler	typeref:typename:unsigned
max_dynamic_group_size	RVKernelCodeT.h	/^  uint32_t max_dynamic_group_size;$/;"	m	struct:hsa_ext_control_directives_s	typeref:typename:uint32_t
max_flat_grid_size	RVKernelCodeT.h	/^  uint32_t max_flat_grid_size;$/;"	m	struct:hsa_ext_control_directives_s	typeref:typename:uint32_t
max_flat_workgroup_size	RVKernelCodeT.h	/^  uint32_t max_flat_workgroup_size;$/;"	m	struct:hsa_ext_control_directives_s	typeref:typename:uint32_t
mayAccessFlatAddressSpace	RVInstrInfo.cpp	/^bool RVInstrInfo::mayAccessFlatAddressSpace(const MachineInstr &MI) const {$/;"	f	class:RVInstrInfo	typeref:typename:bool
mayAccessLDSThroughFlat	SIInsertWaitcnts.cpp	/^bool SIInsertWaitcnts::mayAccessLDSThroughFlat(const MachineInstr &MI) const {$/;"	f	class:SIInsertWaitcnts	typeref:typename:bool
mayAccessScratchThroughFlat	SIInsertWaitcnts.cpp	/^bool SIInsertWaitcnts::mayAccessScratchThroughFlat($/;"	f	class:SIInsertWaitcnts	typeref:typename:bool
mayAccessVMEMThroughFlat	SIInsertWaitcnts.cpp	/^bool SIInsertWaitcnts::mayAccessVMEMThroughFlat(const MachineInstr &MI) const {$/;"	f	class:SIInsertWaitcnts	typeref:typename:bool
mayAlias	RVMachineFunctionInfo.h	/^  bool mayAlias(const MachineFrameInfo *) const override {$/;"	f	class:llvm::RVGPUGWSResourcePseudoSourceValue	typeref:typename:bool
mayAlias	RVMachineFunctionInfo.h	/^  bool mayAlias(const MachineFrameInfo *) const override {$/;"	f	class:llvm::RVGPUPseudoSourceValue	typeref:typename:bool
mayBeEmittedAsTailCall	RVISelLowering.cpp	/^bool RVTargetLowering::mayBeEmittedAsTailCall(const CallInst *CI) const {$/;"	f	class:RVTargetLowering	typeref:typename:bool
mayCauseSpilling	GCNSchedStrategy.cpp	/^bool GCNSchedStage::mayCauseSpilling(unsigned WavesAfter) {$/;"	f	class:GCNSchedStage	typeref:typename:bool
mayIgnoreSignedZero	RVGPUCombinerHelper.cpp	/^static bool mayIgnoreSignedZero(MachineInstr &MI) {$/;"	f	typeref:typename:bool	file:
mayIgnoreSignedZero	RVGPUISelLowering.cpp	/^bool RVGPUTargetLowering::mayIgnoreSignedZero(SDValue Op) const {$/;"	f	class:RVGPUTargetLowering	typeref:typename:bool
mayNeedAGPRs	RVMachineFunctionInfo.h	/^  bool mayNeedAGPRs() const {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:bool
mayNeedRelaxation	MCTargetDesc/RVGPUAsmBackend.cpp	/^bool RVGPUAsmBackend::mayNeedRelaxation(const MCInst &Inst,$/;"	f	class:RVGPUAsmBackend	typeref:typename:bool
mayReadEXEC	RVInstrInfo.cpp	/^bool RVInstrInfo::mayReadEXEC(const MachineRegisterInfo &MRI,$/;"	f	class:RVInstrInfo	typeref:typename:bool
mayTailCallThisCC	RVGPUCallLowering.cpp	/^static bool mayTailCallThisCC(CallingConv::ID CC) {$/;"	f	typeref:typename:bool	file:
mayTailCallThisCC	RVISelLowering.cpp	/^static bool mayTailCallThisCC(CallingConv::ID CC) {$/;"	f	typeref:typename:bool	file:
mayUseAGPRs	RVMachineFunctionInfo.cpp	/^bool RVMachineFunctionInfo::mayUseAGPRs(const Function &F) const {$/;"	f	class:RVMachineFunctionInfo	typeref:typename:bool
mayWriteLDSThroughDMA	RVInstrInfo.h	/^  static bool mayWriteLDSThroughDMA(const MachineInstr &MI) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
maybeAtomic	SIDefines.h	/^  maybeAtomic = UINT64_C(1) << 43,$/;"	e	enum:llvm::SIInstrFlags::__anon1f24a7950203
mbbHasBackEdge	RVGPUMachineCFGStructurizer.cpp	/^static bool mbbHasBackEdge(MachineBasicBlock *MBB,$/;"	f	typeref:typename:bool	file:
mc2PseudoReg	Utils/RVGPUBaseInfo.cpp	/^unsigned mc2PseudoReg(unsigned Reg) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:unsigned
mca	MCA/RVGPUCustomBehaviour.cpp	/^namespace mca {$/;"	n	namespace:llvm	file:
mca	MCA/RVGPUCustomBehaviour.h	/^namespace mca {$/;"	n	namespace:llvm
memOpsHaveSameBaseOperands	RVInstrInfo.cpp	/^memOpsHaveSameBaseOperands(ArrayRef<const MachineOperand *> BaseOps1,$/;"	f	typeref:typename:bool	file:
memOpsHaveSameBasePtr	RVInstrInfo.cpp	/^static bool memOpsHaveSameBasePtr(const MachineInstr &MI1,$/;"	f	typeref:typename:bool	file:
memVTFromLoadIntrData	RVISelLowering.cpp	/^static EVT memVTFromLoadIntrData(Type *Ty, unsigned MaxNumLanes) {$/;"	f	typeref:typename:EVT	file:
memVTFromLoadIntrReturn	RVISelLowering.cpp	/^static EVT memVTFromLoadIntrReturn(Type *Ty, unsigned MaxNumLanes) {$/;"	f	typeref:typename:EVT	file:
merge	RVGPUInsertDelayAlu.cpp	/^    void merge(const DelayInfo &RHS) {$/;"	f	struct:__anonc7296b900111::RVGPUInsertDelayAlu::DelayInfo	typeref:typename:void	file:
merge	RVGPUInsertDelayAlu.cpp	/^    void merge(const DelayState &RHS) {$/;"	f	struct:__anonc7296b900111::RVGPUInsertDelayAlu::DelayState	typeref:typename:void	file:
merge	SIInsertWaitcnts.cpp	/^bool WaitcntBrackets::merge(const WaitcntBrackets &Other) {$/;"	f	class:WaitcntBrackets	typeref:typename:bool
merge	SIModeRegister.cpp	/^  Status merge(const Status &S) const {$/;"	f	struct:Status	typeref:typename:Status	file:
mergeBufferLoadPair	SILoadStoreOptimizer.cpp	/^MachineBasicBlock::iterator SILoadStoreOptimizer::mergeBufferLoadPair($/;"	f	class:SILoadStoreOptimizer	typeref:typename:MachineBasicBlock::iterator
mergeBufferStorePair	SILoadStoreOptimizer.cpp	/^MachineBasicBlock::iterator SILoadStoreOptimizer::mergeBufferStorePair($/;"	f	class:SILoadStoreOptimizer	typeref:typename:MachineBasicBlock::iterator
mergeFlatLoadPair	SILoadStoreOptimizer.cpp	/^MachineBasicBlock::iterator SILoadStoreOptimizer::mergeFlatLoadPair($/;"	f	class:SILoadStoreOptimizer	typeref:typename:MachineBasicBlock::iterator
mergeFlatStorePair	SILoadStoreOptimizer.cpp	/^MachineBasicBlock::iterator SILoadStoreOptimizer::mergeFlatStorePair($/;"	f	class:SILoadStoreOptimizer	typeref:typename:MachineBasicBlock::iterator
mergeImagePair	SILoadStoreOptimizer.cpp	/^SILoadStoreOptimizer::mergeImagePair(CombineInfo &CI, CombineInfo &Paired,$/;"	f	class:SILoadStoreOptimizer	typeref:typename:MachineBasicBlock::iterator
mergeRead2Pair	SILoadStoreOptimizer.cpp	/^SILoadStoreOptimizer::mergeRead2Pair(CombineInfo &CI, CombineInfo &Paired,$/;"	f	class:SILoadStoreOptimizer	typeref:typename:MachineBasicBlock::iterator
mergeSMemLoadImmPair	SILoadStoreOptimizer.cpp	/^MachineBasicBlock::iterator SILoadStoreOptimizer::mergeSMemLoadImmPair($/;"	f	class:SILoadStoreOptimizer	typeref:typename:MachineBasicBlock::iterator
mergeScore	SIInsertWaitcnts.cpp	/^bool WaitcntBrackets::mergeScore(const MergeInfo &M, unsigned &Score,$/;"	f	class:WaitcntBrackets	typeref:typename:bool
mergeStoresAfterLegalization	RVGPUISelLowering.h	/^  bool mergeStoresAfterLegalization(EVT) const override { return false; }$/;"	f	class:llvm::RVGPUTargetLowering	typeref:typename:bool
mergeTBufferLoadPair	SILoadStoreOptimizer.cpp	/^MachineBasicBlock::iterator SILoadStoreOptimizer::mergeTBufferLoadPair($/;"	f	class:SILoadStoreOptimizer	typeref:typename:MachineBasicBlock::iterator
mergeTBufferStorePair	SILoadStoreOptimizer.cpp	/^MachineBasicBlock::iterator SILoadStoreOptimizer::mergeTBufferStorePair($/;"	f	class:SILoadStoreOptimizer	typeref:typename:MachineBasicBlock::iterator
mergeUnknown	SIModeRegister.cpp	/^  Status mergeUnknown(unsigned newMask) {$/;"	f	struct:Status	typeref:typename:Status	file:
mergeWrite2Pair	SILoadStoreOptimizer.cpp	/^MachineBasicBlock::iterator SILoadStoreOptimizer::mergeWrite2Pair($/;"	f	class:SILoadStoreOptimizer	typeref:typename:MachineBasicBlock::iterator
minMaxOpcToMin3Max3Opc	RVISelLowering.cpp	/^static unsigned minMaxOpcToMin3Max3Opc(unsigned Opc) {$/;"	f	typeref:typename:unsigned	file:
modifiesModeRegister	RVInstrInfo.cpp	/^bool RVInstrInfo::modifiesModeRegister(const MachineInstr &MI) {$/;"	f	class:RVInstrInfo	typeref:typename:bool
modifyIntrinsicCall	RVGPUInstCombineIntrinsic.cpp	/^static std::optional<Instruction *> modifyIntrinsicCall($/;"	f	typeref:typename:std::optional<Instruction * >	file:
module	RVGPULowerModuleLDSPass.cpp	/^enum class LoweringKind { module, table, kernel, hybrid };$/;"	e	enum:__anoncc7483b30111::LoweringKind	file:
moreElementsToNextExistingRegClass	RVGPULegalizerInfo.cpp	/^static LegalizeMutation moreElementsToNextExistingRegClass(unsigned TypeIdx) {$/;"	f	typeref:typename:LegalizeMutation	file:
moreEltsToNext32Bit	RVGPULegalizerInfo.cpp	/^static LegalizeMutation moreEltsToNext32Bit(unsigned TypeIdx) {$/;"	f	typeref:typename:LegalizeMutation	file:
mostAlignedValueInRange	SILoadStoreOptimizer.cpp	/^static uint32_t mostAlignedValueInRange(uint32_t Lo, uint32_t Hi) {$/;"	f	typeref:typename:uint32_t	file:
moveFlatAddrToVGPR	RVInstrInfo.cpp	/^bool RVInstrInfo::moveFlatAddrToVGPR(MachineInstr &Inst) const {$/;"	f	class:RVInstrInfo	typeref:typename:bool
moveLiveRegs	GCNRegPressure.h	/^  decltype(LiveRegs) moveLiveRegs() {$/;"	f	class:llvm::GCNRPTracker	typeref:typename:decltype(LiveRegs)
moveLowLatencies	SIMachineScheduler.cpp	/^void SIScheduleDAGMI::moveLowLatencies() {$/;"	f	class:SIScheduleDAGMI	typeref:typename:void
moveMaxPressure	GCNRegPressure.h	/^  GCNRegPressure moveMaxPressure() {$/;"	f	class:llvm::GCNDownwardRPTracker	typeref:typename:GCNRegPressure
movePackToVALU	RVInstrInfo.cpp	/^void RVInstrInfo::movePackToVALU(SIInstrWorklist &Worklist,$/;"	f	class:RVInstrInfo	typeref:typename:void
moveScalarAddSub	RVInstrInfo.cpp	/^RVInstrInfo::moveScalarAddSub(SIInstrWorklist &Worklist, MachineInstr &Inst,$/;"	f	class:RVInstrInfo	typeref:typename:std::pair<bool,MachineBasicBlock * >
moveToVALU	RVInstrInfo.cpp	/^void RVInstrInfo::moveToVALU(SIInstrWorklist &Worklist,$/;"	f	class:RVInstrInfo	typeref:typename:void
moveToVALUImpl	RVInstrInfo.cpp	/^void RVInstrInfo::moveToVALUImpl(SIInstrWorklist &Worklist,$/;"	f	class:RVInstrInfo	typeref:typename:void
msgRequiresOp	Utils/RVGPUBaseInfo.cpp	/^bool msgRequiresOp(int64_t MsgId, const MCSubtargetInfo &STI) {$/;"	f	namespace:llvm::RVGPU::SendMsg	typeref:typename:bool
msgSupportsStream	Utils/RVGPUBaseInfo.cpp	/^bool msgSupportsStream(int64_t MsgId, int64_t OpId,$/;"	f	namespace:llvm::RVGPU::SendMsg	typeref:typename:bool
mustPreserveGV	RVGPUTargetMachine.cpp	/^static bool mustPreserveGV(const GlobalValue &GV) {$/;"	f	typeref:typename:bool	file:
mustRetainExeczBranch	SIPreEmitPeephole.cpp	/^bool SIPreEmitPeephole::mustRetainExeczBranch($/;"	f	class:SIPreEmitPeephole	typeref:typename:bool
mutateCopyOp	SIFoldOperands.cpp	/^static void mutateCopyOp(MachineInstr &MI, const MCInstrDesc &NewDesc) {$/;"	f	typeref:typename:void	file:
needLimitWave	RVGPUPerfHintAnalysis.cpp	/^bool RVGPUPerfHint::needLimitWave(const RVGPUPerfHintAnalysis::FuncInfo &FI) {$/;"	f	class:__anon406ad74e0111::RVGPUPerfHint	typeref:typename:bool
needToBeConvertedToVALU	SIFixSGPRCopies.cpp	/^bool SIFixSGPRCopies::needToBeConvertedToVALU(V2SCopyInfo *Info) {$/;"	f	class:SIFixSGPRCopies	typeref:typename:bool
needsAlignedVGPRs	GCNSubtarget.h	/^  bool needsAlignedVGPRs() const { return GFX90AInsts; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
needsDenormHandlingF32	RVGPUISelLowering.cpp	/^bool RVGPUTargetLowering::needsDenormHandlingF32(const SelectionDAG &DAG,$/;"	f	class:RVGPUTargetLowering	typeref:typename:bool
needsDenormHandlingF32	RVGPULegalizerInfo.cpp	/^static bool needsDenormHandlingF32(const MachineFunction &MF, Register Src,$/;"	f	typeref:typename:bool	file:
needsFrameBaseReg	RVRegisterInfo.cpp	/^bool RVRegisterInfo::needsFrameBaseReg(MachineInstr *MI, int64_t Offset) const {$/;"	f	class:RVRegisterInfo	typeref:typename:bool
needsImpliedVcc	MCTargetDesc/RVGPUInstPrinter.cpp	/^bool RVGPUInstPrinter::needsImpliedVcc(const MCInstrDesc &Desc,$/;"	f	class:RVGPUInstPrinter	typeref:typename:bool
needsKernargPreloadBackwardsCompatibility	GCNSubtarget.h	/^  bool needsKernargPreloadBackwardsCompatibility() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
needsPCRel	MCTargetDesc/RVGPUMCCodeEmitter.cpp	/^static bool needsPCRel(const MCExpr *Expr) {$/;"	f	typeref:typename:bool	file:
needsPromotionToI32	RVGPUCodeGenPrepare.cpp	/^bool RVGPUCodeGenPrepareImpl::needsPromotionToI32(const Type *T) const {$/;"	f	class:RVGPUCodeGenPrepareImpl	typeref:typename:bool
needsQueuePtr	RVGPUAttributor.cpp	/^  bool needsQueuePtr(const Constant *C, Function &Fn) {$/;"	f	class:__anon512e119a0111::RVGPUInformationCache	typeref:typename:bool	file:
needsShrink	SIFoldOperands.cpp	/^  bool needsShrink() const { return ShrinkOpcode != -1; }$/;"	f	struct:__anon07e514130111::FoldCandidate	typeref:typename:bool	file:
needsWaveLimiter	RVGPUMachineFunction.h	/^  bool needsWaveLimiter() const {$/;"	f	class:llvm::RVGPUMachineFunction	typeref:typename:bool
needsWaveLimiter	RVGPUPerfHintAnalysis.cpp	/^bool RVGPUPerfHintAnalysis::needsWaveLimiter(const Function *F) const {$/;"	f	class:RVGPUPerfHintAnalysis	typeref:typename:bool
nextIfDebug	SIMachineScheduler.cpp	/^nextIfDebug(MachineBasicBlock::iterator I,$/;"	f	typeref:typename:MachineBasicBlock::iterator	file:
nodeScheduled	SIMachineScheduler.cpp	/^void SIScheduleBlock::nodeScheduled(SUnit *SU) {$/;"	f	class:SIScheduleBlock	typeref:typename:void
nodesHaveSameOperandValue	RVInstrInfo.cpp	/^static bool nodesHaveSameOperandValue(SDNode *N0, SDNode* N1, unsigned OpName) {$/;"	f	typeref:typename:bool	file:
numBitsSigned	RVGPUCodeGenPrepare.cpp	/^unsigned RVGPUCodeGenPrepareImpl::numBitsSigned(Value *Op) const {$/;"	f	class:RVGPUCodeGenPrepareImpl	typeref:typename:unsigned
numBitsSigned	RVGPUISelLowering.cpp	/^unsigned RVGPUTargetLowering::numBitsSigned(SDValue Op, SelectionDAG &DAG) {$/;"	f	class:RVGPUTargetLowering	typeref:typename:unsigned
numBitsUnsigned	RVGPUCodeGenPrepare.cpp	/^unsigned RVGPUCodeGenPrepareImpl::numBitsUnsigned(Value *Op) const {$/;"	f	class:RVGPUCodeGenPrepareImpl	typeref:typename:unsigned
numBitsUnsigned	RVGPUISelLowering.cpp	/^unsigned RVGPUTargetLowering::numBitsUnsigned(SDValue Op, SelectionDAG &DAG) {$/;"	f	class:RVGPUTargetLowering	typeref:typename:unsigned
numElementsNotEven	RVGPULegalizerInfo.cpp	/^static LegalityPredicate numElementsNotEven(unsigned TypeIdx) {$/;"	f	typeref:typename:LegalityPredicate	file:
offsetsCanBeCombined	SILoadStoreOptimizer.cpp	/^bool SILoadStoreOptimizer::offsetsCanBeCombined(CombineInfo &CI,$/;"	f	class:SILoadStoreOptimizer	typeref:typename:bool
offsetsDoNotOverlap	RVInstrInfo.cpp	/^static bool offsetsDoNotOverlap(int WidthA, int OffsetA,$/;"	f	typeref:typename:bool	file:
onBeginOfFile	AsmParser/RVGPUAsmParser.cpp	/^void RVGPUAsmParser::onBeginOfFile() {$/;"	f	class:RVGPUAsmParser	typeref:typename:void
onSymbolStart	Disassembler/RVGPUDisassembler.cpp	/^RVGPUDisassembler::onSymbolStart(SymbolInfoTy &Symbol, uint64_t &Size,$/;"	f	class:RVGPUDisassembler	typeref:typename:std::optional<MCDisassembler::DecodeStatus>
oneMoreElement	RVGPULegalizerInfo.cpp	/^static LegalizeMutation oneMoreElement(unsigned TypeIdx) {$/;"	f	typeref:typename:LegalizeMutation	file:
onlyAllocateSGPRs	RVGPUTargetMachine.cpp	/^static bool onlyAllocateSGPRs(const TargetRegisterInfo &TRI,$/;"	f	namespace:__anon565c6f860111	typeref:typename:bool	file:
onlyAllocateVGPRs	RVGPUTargetMachine.cpp	/^static bool onlyAllocateVGPRs(const TargetRegisterInfo &TRI,$/;"	f	namespace:__anon565c6f860111	typeref:typename:bool	file:
opCanUseInlineConstant	RVRegisterInfo.cpp	/^bool RVRegisterInfo::opCanUseInlineConstant(unsigned OpType) const {$/;"	f	class:RVRegisterInfo	typeref:typename:bool
opCanUseLiteralConstant	RVRegisterInfo.cpp	/^bool RVRegisterInfo::opCanUseLiteralConstant(unsigned OpType) const {$/;"	f	class:RVRegisterInfo	typeref:typename:bool
opMustUseVOP3Encoding	RVGPUCombinerHelper.cpp	/^static bool opMustUseVOP3Encoding(const MachineInstr &MI,$/;"	f	typeref:typename:LLVM_READONLY bool	file:
opMustUseVOP3Encoding	RVGPUISelLowering.cpp	/^static bool opMustUseVOP3Encoding(const SDNode *N, MVT VT) {$/;"	f	typeref:typename:LLVM_READONLY bool	file:
openIf	SIAnnotateControlFlow.cpp	/^bool SIAnnotateControlFlow::openIf(BranchInst *Term) {$/;"	f	class:SIAnnotateControlFlow	typeref:typename:bool
operator !=	Disassembler/RVGPUDisassembler.h	/^  bool operator!=(const DecoderUInt128 &RHS) {$/;"	f	class:llvm::DecoderUInt128	typeref:typename:bool
operator !=	Disassembler/RVGPUDisassembler.h	/^  bool operator!=(const int &RHS) {$/;"	f	class:llvm::DecoderUInt128	typeref:typename:bool
operator !=	GCNRegPressure.h	/^  bool operator!=(const GCNRegPressure &O) const {$/;"	f	struct:llvm::GCNRegPressure	typeref:typename:bool
operator !=	RVGPUInsertDelayAlu.cpp	/^    bool operator!=(const DelayInfo &RHS) const { return !(*this == RHS); }$/;"	f	struct:__anonc7296b900111::RVGPUInsertDelayAlu::DelayInfo	typeref:typename:bool	file:
operator !=	RVGPUMachineCFGStructurizer.cpp	/^  bool operator!=(const PHILinearizeDestIterator &I) const {$/;"	f	class:__anon1695b1f50111::PHILinearizeDestIterator	typeref:typename:bool	file:
operator !=	SIModeRegister.cpp	/^  bool operator!=(const Status &S) const { return !(*this == S); }$/;"	f	struct:Status	typeref:typename:bool	file:
operator &	Disassembler/RVGPUDisassembler.h	/^  DecoderUInt128 operator&(const DecoderUInt128 &RHS) const {$/;"	f	class:llvm::DecoderUInt128	typeref:typename:DecoderUInt128
operator &	Disassembler/RVGPUDisassembler.h	/^  DecoderUInt128 operator&(const uint64_t &RHS) const {$/;"	f	class:llvm::DecoderUInt128	typeref:typename:DecoderUInt128
operator ()	GCNSchedStrategy.cpp	/^  bool operator()(std::pair<MachineInstr *, unsigned> A,$/;"	f	struct:EarlierIssuingCycle	typeref:typename:bool	file:
operator ()	RVGPULibFunc.cpp	/^  void operator()(Stream& os, RVGPULibFunc::Param p) {$/;"	f	class:__anona5afe38d0311::ItaniumMangler	typeref:typename:void	file:
operator *	RVGPUMachineCFGStructurizer.cpp	/^  unsigned operator*() { return PHILinearize::phiInfoElementGetDest(*Iter); }$/;"	f	class:__anon1695b1f50111::PHILinearizeDestIterator	typeref:typename:unsigned	file:
operator +	GCNRegPressure.h	/^inline GCNRegPressure operator+(const GCNRegPressure &P1,$/;"	f	namespace:llvm	typeref:typename:GCNRegPressure
operator ++	RVGPUMachineCFGStructurizer.cpp	/^  PHILinearizeDestIterator &operator++() {$/;"	f	class:__anon1695b1f50111::PHILinearizeDestIterator	typeref:typename:PHILinearizeDestIterator &	file:
operator +=	GCNRegPressure.h	/^  GCNRegPressure &operator+=(const GCNRegPressure &RHS) {$/;"	f	struct:llvm::GCNRegPressure	typeref:typename:GCNRegPressure &
operator -	GCNRegPressure.h	/^inline GCNRegPressure operator-(const GCNRegPressure &P1,$/;"	f	namespace:llvm	typeref:typename:GCNRegPressure
operator -=	GCNRegPressure.h	/^  GCNRegPressure &operator-=(const GCNRegPressure &RHS) {$/;"	f	struct:llvm::GCNRegPressure	typeref:typename:GCNRegPressure &
operator <	RVGPULowerModuleLDSPass.cpp	/^      bool operator<(const CandidateTy &Other) const {$/;"	f	struct:__anoncc7483b30111::RVGPULowerModuleLDS::chooseBestVariableForModuleStrategy::CandidateTy	typeref:typename:bool	file:
operator <	SILoadStoreOptimizer.cpp	/^    bool operator<(const CombineInfo& Other) const {$/;"	f	struct:__anon677101620111::SILoadStoreOptimizer::CombineInfo	typeref:typename:bool	file:
operator <<	AsmParser/RVGPUAsmParser.cpp	/^raw_ostream &operator <<(raw_ostream &OS, RVGPUOperand::Modifiers Mods) {$/;"	f	namespace:__anon672fa8550111	typeref:typename:raw_ostream &
operator <<	Disassembler/RVGPUDisassembler.h	/^  friend raw_ostream &operator<<(raw_ostream &OS, const DecoderUInt128 &RHS) {$/;"	f	namespace:llvm	typeref:typename:raw_ostream &
operator <<	GCNSchedStrategy.cpp	/^raw_ostream &llvm::operator<<(raw_ostream &OS, const GCNSchedStageID &StageID) {$/;"	f	class:llvm	typeref:typename:raw_ostream &
operator <<	GCNSchedStrategy.h	/^inline raw_ostream &operator<<(raw_ostream &OS, const ScheduleMetrics &Sm) {$/;"	f	namespace:llvm	typeref:typename:raw_ostream &
operator <<	RVGPUArgumentUsageInfo.h	/^inline raw_ostream &operator<<(raw_ostream &OS, const ArgDescriptor &Arg) {$/;"	f	namespace:llvm	typeref:typename:raw_ostream &
operator <<	SIPeepholeSDWA.cpp	/^static raw_ostream& operator<<(raw_ostream &OS, SdwaSel Sel) {$/;"	f	typeref:typename:raw_ostream &	file:
operator <<	SIPeepholeSDWA.cpp	/^static raw_ostream& operator<<(raw_ostream &OS, const DstUnused &Un) {$/;"	f	typeref:typename:raw_ostream &	file:
operator <<	SIPeepholeSDWA.cpp	/^static raw_ostream& operator<<(raw_ostream &OS, const SDWAOperand &Operand) {$/;"	f	typeref:typename:raw_ostream &	file:
operator <<	SIWholeQuadMode.cpp	/^static raw_ostream &operator<<(raw_ostream &OS, const PrintState &PS) {$/;"	f	namespace:__anon41aff2810111	typeref:typename:raw_ostream &	file:
operator <<	Utils/RVGPUBaseInfo.cpp	/^raw_ostream &operator<<(raw_ostream &OS,$/;"	f	namespace:llvm	typeref:typename:raw_ostream &
operator =	RVGPULibFunc.cpp	/^RVGPULibFunc &RVGPULibFunc::operator=(const RVGPULibFunc &F) {$/;"	f	class:RVGPULibFunc	typeref:typename:RVGPULibFunc &
operator =	RVMachineFunctionInfo.h	/^  SIArgument &operator=(const SIArgument &Other) {$/;"	f	struct:llvm::yaml::SIArgument	typeref:typename:SIArgument &
operator ==	Disassembler/RVGPUDisassembler.h	/^  bool operator==(const DecoderUInt128 &RHS) {$/;"	f	class:llvm::DecoderUInt128	typeref:typename:bool
operator ==	GCNRegPressure.h	/^  bool operator==(const GCNRegPressure &O) const {$/;"	f	struct:llvm::GCNRegPressure	typeref:typename:bool
operator ==	RVGPUInsertDelayAlu.cpp	/^    bool operator==(const DelayInfo &RHS) const {$/;"	f	struct:__anonc7296b900111::RVGPUInsertDelayAlu::DelayInfo	typeref:typename:bool	file:
operator ==	RVGPUMachineCFGStructurizer.cpp	/^  bool operator==(const PHILinearizeDestIterator &I) const {$/;"	f	class:__anon1695b1f50111::PHILinearizeDestIterator	typeref:typename:bool	file:
operator ==	RVMachineFunctionInfo.h	/^  bool operator ==(const SIMode Other) const {$/;"	f	struct:llvm::yaml::SIMode	typeref:typename:bool
operator ==	SIModeRegister.cpp	/^  bool operator==(const Status &S) const {$/;"	f	struct:Status	typeref:typename:bool	file:
operator ==	SIModeRegisterDefaults.h	/^  bool operator==(const SIModeRegisterDefaults Other) const {$/;"	f	struct:llvm::SIModeRegisterDefaults	typeref:typename:bool
operator []	Utils/RVGPUBaseInfo.h	/^  const ComponentInfo &operator[](size_t ComponentIdx) const {$/;"	f	class:llvm::RVGPU::VOPD::InstInfo	typeref:typename:const ComponentInfo &
operator bool	Disassembler/RVGPUDisassembler.h	/^  operator bool() const { return Lo || Hi; }$/;"	f	class:llvm::DecoderUInt128
operator bool	RVGPUArgumentUsageInfo.h	/^  explicit operator bool() const {$/;"	f	struct:llvm::ArgDescriptor
operator ~	Disassembler/RVGPUDisassembler.h	/^  DecoderUInt128 operator~() const { return DecoderUInt128(~Lo, ~Hi); }$/;"	f	class:llvm::DecoderUInt128	typeref:typename:DecoderUInt128
optimizeAtomic	RVGPUAtomicOptimizer.cpp	/^void RVGPUAtomicOptimizerImpl::optimizeAtomic(Instruction &I,$/;"	f	class:RVGPUAtomicOptimizerImpl	typeref:typename:void
optimizeBlock	SILoadStoreOptimizer.cpp	/^bool SILoadStoreOptimizer::optimizeBlock($/;"	f	class:SILoadStoreOptimizer	typeref:typename:bool
optimizeCompareInstr	RVInstrInfo.cpp	/^bool RVInstrInfo::optimizeCompareInstr(MachineInstr &CmpInstr, Register SrcReg,$/;"	f	class:RVInstrInfo	typeref:typename:bool
optimizeElseBranch	SIOptimizeExecMaskingPreRA.cpp	/^bool SIOptimizeExecMaskingPreRA::optimizeElseBranch(MachineBasicBlock &MBB) {$/;"	f	class:SIOptimizeExecMaskingPreRA	typeref:typename:bool
optimizeEndCf	SILowerControlFlow.cpp	/^void SILowerControlFlow::optimizeEndCf() {$/;"	f	class:SILowerControlFlow	typeref:typename:void
optimizeExecSequence	SIOptimizeExecMasking.cpp	/^bool SIOptimizeExecMasking::optimizeExecSequence() {$/;"	f	class:SIOptimizeExecMasking	typeref:typename:bool
optimizeInstsWithSameBaseAddr	SILoadStoreOptimizer.cpp	/^SILoadStoreOptimizer::optimizeInstsWithSameBaseAddr($/;"	f	class:SILoadStoreOptimizer	typeref:typename:bool
optimizeLiveRange	SIOptimizeVGPRLiveRange.cpp	/^void SIOptimizeVGPRLiveRange::optimizeLiveRange($/;"	f	class:SIOptimizeVGPRLiveRange	typeref:typename:void
optimizeOrSaveexecXorSequences	SIOptimizeExecMasking.cpp	/^bool SIOptimizeExecMasking::optimizeOrSaveexecXorSequences() {$/;"	f	class:SIOptimizeExecMasking	typeref:typename:bool
optimizeSection	RVGPUImageIntrinsicOptimizer.cpp	/^bool optimizeSection(ArrayRef<SmallVector<IntrinsicInst *, 4>> MergeableInsts) {$/;"	f	typeref:typename:bool
optimizeSetGPR	SIPreEmitPeephole.cpp	/^bool SIPreEmitPeephole::optimizeSetGPR(MachineInstr &First,$/;"	f	class:SIPreEmitPeephole	typeref:typename:bool
optimizeVCMPSaveExecSequence	SIOptimizeExecMasking.cpp	/^bool SIOptimizeExecMasking::optimizeVCMPSaveExecSequence($/;"	f	class:SIOptimizeExecMasking	typeref:typename:bool
optimizeVccBranch	SIPreEmitPeephole.cpp	/^bool SIPreEmitPeephole::optimizeVccBranch(MachineInstr &MI) const {$/;"	f	class:SIPreEmitPeephole	typeref:typename:bool
optimizeVcndVcmpPair	SIOptimizeExecMaskingPreRA.cpp	/^bool SIOptimizeExecMaskingPreRA::optimizeVcndVcmpPair(MachineBasicBlock &MBB) {$/;"	f	class:SIOptimizeExecMaskingPreRA	typeref:typename:bool
optimizeWaterfallLiveRange	SIOptimizeVGPRLiveRange.cpp	/^void SIOptimizeVGPRLiveRange::optimizeWaterfallLiveRange($/;"	f	class:SIOptimizeVGPRLiveRange	typeref:typename:void
optimizeWithFDivFast	RVGPUCodeGenPrepare.cpp	/^Value *RVGPUCodeGenPrepareImpl::optimizeWithFDivFast($/;"	f	class:RVGPUCodeGenPrepareImpl	typeref:typename:Value *
optimizeWithRcp	RVGPUCodeGenPrepare.cpp	/^RVGPUCodeGenPrepareImpl::optimizeWithRcp(IRBuilder<> &Builder, Value *Num,$/;"	f	class:RVGPUCodeGenPrepareImpl	typeref:typename:Value *
optimizeWithRsq	RVGPUCodeGenPrepare.cpp	/^Value *RVGPUCodeGenPrepareImpl::optimizeWithRsq($/;"	f	class:RVGPUCodeGenPrepareImpl	typeref:typename:Value *
overrideSchedPolicy	RVGPUSubtarget.cpp	/^void GCNSubtarget::overrideSchedPolicy(MachineSchedPolicy &Policy,$/;"	f	class:GCNSubtarget	typeref:typename:void
packBits	Utils/RVGPUBaseInfo.cpp	/^unsigned packBits(unsigned Src, unsigned Dst, unsigned Shift, unsigned Width) {$/;"	f	namespace:__anonc82e9e910111	typeref:typename:unsigned
packConstantV2I16	RVGPUISelDAGToDAG.h	/^static inline SDNode *packConstantV2I16(const SDNode *N, SelectionDAG &DAG,$/;"	f	namespace:__anon419d0db70111	typeref:typename:SDNode *
packImage16bitOpsToDwords	RVGPULegalizerInfo.cpp	/^static void packImage16bitOpsToDwords(MachineIRBuilder &B, MachineInstr &MI,$/;"	f	typeref:typename:void	file:
packImage16bitOpsToDwords	RVISelLowering.cpp	/^static void packImage16bitOpsToDwords(SelectionDAG &DAG, SDValue Op,$/;"	f	typeref:typename:void	file:
packNegConstantV2I16	RVGPUISelDAGToDAG.h	/^static inline SDNode *packNegConstantV2I16(const SDNode *N, SelectionDAG &DAG) {$/;"	f	namespace:__anon419d0db70111	typeref:typename:SDNode *
padEltsToUndef	RVISelLowering.cpp	/^static SDValue padEltsToUndef(SelectionDAG &DAG, const SDLoc &DL, EVT CastVT,$/;"	f	typeref:typename:SDValue	file:
parse	GCNHazardRecognizer.cpp	/^  bool parse(cl::Option &O, StringRef ArgName, StringRef Arg, unsigned &Value) {$/;"	f	struct:__anon71cb16800111::MFMAPaddingRatioParser	typeref:typename:bool	file:
parse	RVGPULibFunc.cpp	/^bool RVGPULibFunc::parse(StringRef FuncName, RVGPULibFunc &F) {$/;"	f	class:RVGPULibFunc	typeref:typename:bool
parseBLGP	AsmParser/RVGPUAsmParser.cpp	/^ParseStatus RVGPUAsmParser::parseBLGP(OperandVector &Operands) {$/;"	f	class:RVGPUAsmParser	typeref:typename:ParseStatus
parseBitField	Utils/RVKernelCodeTUtils.cpp	/^static bool parseBitField(rv_kernel_code_t &C, MCAsmParser &MCParser,$/;"	f	typeref:typename:bool	file:
parseBoolReg	AsmParser/RVGPUAsmParser.cpp	/^ParseStatus RVGPUAsmParser::parseBoolReg(OperandVector &Operands) {$/;"	f	class:RVGPUAsmParser	typeref:typename:ParseStatus
parseCPol	AsmParser/RVGPUAsmParser.cpp	/^ParseStatus RVGPUAsmParser::parseCPol(OperandVector &Operands) {$/;"	f	class:RVGPUAsmParser	typeref:typename:ParseStatus
parseCnt	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::parseCnt(int64_t &IntVal) {$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
parseCustomOperand	AsmParser/RVGPUAsmParser.cpp	/^ParseStatus RVGPUAsmParser::parseCustomOperand(OperandVector &Operands,$/;"	f	class:RVGPUAsmParser	typeref:typename:ParseStatus
parseCustomPseudoSourceValue	RVGPUMIRFormatter.cpp	/^bool RVGPUMIRFormatter::parseCustomPseudoSourceValue($/;"	f	class:RVGPUMIRFormatter	typeref:typename:bool
parseDPP8	AsmParser/RVGPUAsmParser.cpp	/^ParseStatus RVGPUAsmParser::parseDPP8(OperandVector &Operands) {$/;"	f	class:RVGPUAsmParser	typeref:typename:ParseStatus
parseDPPCtrl	AsmParser/RVGPUAsmParser.cpp	/^ParseStatus RVGPUAsmParser::parseDPPCtrl(OperandVector &Operands) {$/;"	f	class:RVGPUAsmParser	typeref:typename:ParseStatus
parseDPPCtrlPerm	AsmParser/RVGPUAsmParser.cpp	/^RVGPUAsmParser::parseDPPCtrlPerm() {$/;"	f	class:RVGPUAsmParser	typeref:typename:int64_t
parseDPPCtrlSel	AsmParser/RVGPUAsmParser.cpp	/^RVGPUAsmParser::parseDPPCtrlSel(StringRef Ctrl) {$/;"	f	class:RVGPUAsmParser	typeref:typename:int64_t
parseDelay	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::parseDelay(int64_t &Delay) {$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
parseDepCtr	AsmParser/RVGPUAsmParser.cpp	/^ParseStatus RVGPUAsmParser::parseDepCtr(OperandVector &Operands) {$/;"	f	class:RVGPUAsmParser	typeref:typename:ParseStatus
parseDepCtr	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::parseDepCtr(int64_t &DepCtr, unsigned &UsedOprMask) {$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
parseDfmtNfmt	AsmParser/RVGPUAsmParser.cpp	/^ParseStatus RVGPUAsmParser::parseDfmtNfmt(int64_t &Format) {$/;"	f	class:RVGPUAsmParser	typeref:typename:ParseStatus
parseDim	AsmParser/RVGPUAsmParser.cpp	/^ParseStatus RVGPUAsmParser::parseDim(OperandVector &Operands) {$/;"	f	class:RVGPUAsmParser	typeref:typename:ParseStatus
parseDimId	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::parseDimId(unsigned &Encoding) {$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
parseEndpgm	AsmParser/RVGPUAsmParser.cpp	/^ParseStatus RVGPUAsmParser::parseEndpgm(OperandVector &Operands) {$/;"	f	class:RVGPUAsmParser	typeref:typename:ParseStatus
parseExpTgt	AsmParser/RVGPUAsmParser.cpp	/^ParseStatus RVGPUAsmParser::parseExpTgt(OperandVector &Operands) {$/;"	f	class:RVGPUAsmParser	typeref:typename:ParseStatus
parseExpr	AsmParser/RVGPUAsmParser.cpp	/^RVGPUAsmParser::parseExpr(OperandVector &Operands) {$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
parseExpr	AsmParser/RVGPUAsmParser.cpp	/^RVGPUAsmParser::parseExpr(int64_t &Imm, StringRef Expected) {$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
parseFORMAT	AsmParser/RVGPUAsmParser.cpp	/^ParseStatus RVGPUAsmParser::parseFORMAT(OperandVector &Operands) {$/;"	f	class:RVGPUAsmParser	typeref:typename:ParseStatus
parseField	Utils/RVKernelCodeTUtils.cpp	/^static bool parseField(rv_kernel_code_t &C, MCAsmParser &MCParser,$/;"	f	typeref:typename:bool	file:
parseFlatOffset	AsmParser/RVGPUAsmParser.cpp	/^ParseStatus RVGPUAsmParser::parseFlatOffset(OperandVector &Operands) {$/;"	f	class:RVGPUAsmParser	typeref:typename:ParseStatus
parseFuncName	RVGPULibFunc.cpp	/^bool RVGPUMangledLibFunc::parseFuncName(StringRef &mangledName) {$/;"	f	class:RVGPUMangledLibFunc	typeref:typename:bool
parseFuncName	RVGPULibFunc.cpp	/^bool RVGPUUnmangledLibFunc::parseFuncName(StringRef &Name) {$/;"	f	class:RVGPUUnmangledLibFunc	typeref:typename:bool
parseFuncName	RVGPULibFunc.h	/^  bool parseFuncName(StringRef &MangledName) {$/;"	f	class:llvm::RVGPULibFunc	typeref:typename:bool
parseFunctionName	RVGPULibCalls.cpp	/^bool RVGPULibCalls::parseFunctionName(const StringRef &FMangledName,$/;"	f	class:RVGPULibCalls	typeref:typename:bool
parseGPRIdxMacro	AsmParser/RVGPUAsmParser.cpp	/^int64_t RVGPUAsmParser::parseGPRIdxMacro() {$/;"	f	class:RVGPUAsmParser	typeref:typename:int64_t
parseGPRIdxMode	AsmParser/RVGPUAsmParser.cpp	/^ParseStatus RVGPUAsmParser::parseGPRIdxMode(OperandVector &Operands) {$/;"	f	class:RVGPUAsmParser	typeref:typename:ParseStatus
parseHwreg	AsmParser/RVGPUAsmParser.cpp	/^ParseStatus RVGPUAsmParser::parseHwreg(OperandVector &Operands) {$/;"	f	class:RVGPUAsmParser	typeref:typename:ParseStatus
parseHwregBody	AsmParser/RVGPUAsmParser.cpp	/^RVGPUAsmParser::parseHwregBody(OperandInfoTy &HwReg,$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
parseId	AsmParser/RVGPUAsmParser.cpp	/^RVGPUAsmParser::parseId(StringRef &Val, const StringRef ErrMsg) {$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
parseImm	AsmParser/RVGPUAsmParser.cpp	/^ParseStatus RVGPUAsmParser::parseImm(OperandVector &Operands,$/;"	f	class:RVGPUAsmParser	typeref:typename:ParseStatus
parseIntWithPrefix	AsmParser/RVGPUAsmParser.cpp	/^ParseStatus RVGPUAsmParser::parseIntWithPrefix($/;"	f	class:RVGPUAsmParser	typeref:typename:ParseStatus
parseIntWithPrefix	AsmParser/RVGPUAsmParser.cpp	/^ParseStatus RVGPUAsmParser::parseIntWithPrefix(const char *Prefix,$/;"	f	class:RVGPUAsmParser	typeref:typename:ParseStatus
parseInterpAttr	AsmParser/RVGPUAsmParser.cpp	/^ParseStatus RVGPUAsmParser::parseInterpAttr(OperandVector &Operands) {$/;"	f	class:RVGPUAsmParser	typeref:typename:ParseStatus
parseInterpSlot	AsmParser/RVGPUAsmParser.cpp	/^ParseStatus RVGPUAsmParser::parseInterpSlot(OperandVector &Operands) {$/;"	f	class:RVGPUAsmParser	typeref:typename:ParseStatus
parseItaniumParam	RVGPULibFunc.cpp	/^bool ItaniumParamParser::parseItaniumParam(StringRef& param,$/;"	f	class:ItaniumParamParser	typeref:typename:bool
parseMUBUFAddress	RVGPUInstructionSelector.cpp	/^RVGPUInstructionSelector::parseMUBUFAddress(Register Src) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:RVGPUInstructionSelector::MUBUFAddressData
parseMachineFunctionInfo	RVGPUTargetMachine.cpp	/^bool GCNTargetMachine::parseMachineFunctionInfo($/;"	f	class:GCNTargetMachine	typeref:typename:bool
parseMnemonicSuffix	AsmParser/RVGPUAsmParser.cpp	/^StringRef RVGPUAsmParser::parseMnemonicSuffix(StringRef Name) {$/;"	f	class:RVGPUAsmParser	typeref:typename:StringRef
parseNamePrefix	RVGPULibFunc.cpp	/^static RVGPULibFunc::ENamePrefix parseNamePrefix(StringRef& mangledName) {$/;"	f	typeref:typename:RVGPULibFunc::ENamePrefix	file:
parseNamedBit	AsmParser/RVGPUAsmParser.cpp	/^ParseStatus RVGPUAsmParser::parseNamedBit(StringRef Name,$/;"	f	class:RVGPUAsmParser	typeref:typename:ParseStatus
parseNumericFormat	AsmParser/RVGPUAsmParser.cpp	/^ParseStatus RVGPUAsmParser::parseNumericFormat(int64_t &Format) {$/;"	f	class:RVGPUAsmParser	typeref:typename:ParseStatus
parseOModSI	AsmParser/RVGPUAsmParser.cpp	/^ParseStatus RVGPUAsmParser::parseOModSI(OperandVector &Operands) {$/;"	f	class:RVGPUAsmParser	typeref:typename:ParseStatus
parseOperand	AsmParser/RVGPUAsmParser.cpp	/^ParseStatus RVGPUAsmParser::parseOperand(OperandVector &Operands,$/;"	f	class:RVGPUAsmParser	typeref:typename:ParseStatus
parseOperandArrayWithPrefix	AsmParser/RVGPUAsmParser.cpp	/^ParseStatus RVGPUAsmParser::parseOperandArrayWithPrefix($/;"	f	class:RVGPUAsmParser	typeref:typename:ParseStatus
parseR128A16	AsmParser/RVGPUAsmParser.cpp	/^ParseStatus RVGPUAsmParser::parseR128A16(OperandVector &Operands) {$/;"	f	class:RVGPUAsmParser	typeref:typename:ParseStatus
parseReg	AsmParser/RVGPUAsmParser.cpp	/^ParseStatus RVGPUAsmParser::parseReg(OperandVector &Operands) {$/;"	f	class:RVGPUAsmParser	typeref:typename:ParseStatus
parseRegOrImm	AsmParser/RVGPUAsmParser.cpp	/^ParseStatus RVGPUAsmParser::parseRegOrImm(OperandVector &Operands,$/;"	f	class:RVGPUAsmParser	typeref:typename:ParseStatus
parseRegOrImmWithFPInputMods	AsmParser/RVGPUAsmParser.cpp	/^RVGPUAsmParser::parseRegOrImmWithFPInputMods(OperandVector &Operands,$/;"	f	class:RVGPUAsmParser	typeref:typename:ParseStatus
parseRegOrImmWithIntInputMods	AsmParser/RVGPUAsmParser.cpp	/^RVGPUAsmParser::parseRegOrImmWithIntInputMods(OperandVector &Operands,$/;"	f	class:RVGPUAsmParser	typeref:typename:ParseStatus
parseRegWithFPInputMods	AsmParser/RVGPUAsmParser.cpp	/^ParseStatus RVGPUAsmParser::parseRegWithFPInputMods(OperandVector &Operands) {$/;"	f	class:RVGPUAsmParser	typeref:typename:ParseStatus
parseRegWithIntInputMods	AsmParser/RVGPUAsmParser.cpp	/^ParseStatus RVGPUAsmParser::parseRegWithIntInputMods(OperandVector &Operands) {$/;"	f	class:RVGPUAsmParser	typeref:typename:ParseStatus
parseRegister	AsmParser/RVGPUAsmParser.cpp	/^RVGPUAsmParser::parseRegister(bool RestoreOnFailure) {$/;"	f	class:RVGPUAsmParser	typeref:typename:std::unique_ptr<RVGPUOperand>
parseRegister	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::parseRegister(MCRegister &Reg, SMLoc &StartLoc,$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
parseRvKernelCodeField	Utils/RVKernelCodeTUtils.cpp	/^bool llvm::parseRvKernelCodeField(StringRef ID,$/;"	f	class:llvm	typeref:typename:bool
parseSDWADstUnused	AsmParser/RVGPUAsmParser.cpp	/^ParseStatus RVGPUAsmParser::parseSDWADstUnused(OperandVector &Operands) {$/;"	f	class:RVGPUAsmParser	typeref:typename:ParseStatus
parseSDWASel	AsmParser/RVGPUAsmParser.cpp	/^ParseStatus RVGPUAsmParser::parseSDWASel(OperandVector &Operands,$/;"	f	class:RVGPUAsmParser	typeref:typename:ParseStatus
parseSDelayALU	AsmParser/RVGPUAsmParser.cpp	/^ParseStatus RVGPUAsmParser::parseSDelayALU(OperandVector &Operands) {$/;"	f	class:RVGPUAsmParser	typeref:typename:ParseStatus
parseSOPPBrTarget	AsmParser/RVGPUAsmParser.cpp	/^ParseStatus RVGPUAsmParser::parseSOPPBrTarget(OperandVector &Operands) {$/;"	f	class:RVGPUAsmParser	typeref:typename:ParseStatus
parseSP3NegModifier	AsmParser/RVGPUAsmParser.cpp	/^RVGPUAsmParser::parseSP3NegModifier() {$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
parseSWaitCnt	AsmParser/RVGPUAsmParser.cpp	/^ParseStatus RVGPUAsmParser::parseSWaitCnt(OperandVector &Operands) {$/;"	f	class:RVGPUAsmParser	typeref:typename:ParseStatus
parseScope	AsmParser/RVGPUAsmParser.cpp	/^ParseStatus RVGPUAsmParser::parseScope(OperandVector &Operands,$/;"	f	class:RVGPUAsmParser	typeref:typename:ParseStatus
parseSendMsg	AsmParser/RVGPUAsmParser.cpp	/^ParseStatus RVGPUAsmParser::parseSendMsg(OperandVector &Operands) {$/;"	f	class:RVGPUAsmParser	typeref:typename:ParseStatus
parseSendMsgBody	AsmParser/RVGPUAsmParser.cpp	/^RVGPUAsmParser::parseSendMsgBody(OperandInfoTy &Msg,$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
parseString	AsmParser/RVGPUAsmParser.cpp	/^RVGPUAsmParser::parseString(StringRef &Val, const StringRef ErrMsg) {$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
parseStringWithPrefix	AsmParser/RVGPUAsmParser.cpp	/^ParseStatus RVGPUAsmParser::parseStringWithPrefix(StringRef Prefix,$/;"	f	class:RVGPUAsmParser	typeref:typename:ParseStatus
parseSwizzle	AsmParser/RVGPUAsmParser.cpp	/^ParseStatus RVGPUAsmParser::parseSwizzle(OperandVector &Operands) {$/;"	f	class:RVGPUAsmParser	typeref:typename:ParseStatus
parseSwizzleBitmaskPerm	AsmParser/RVGPUAsmParser.cpp	/^RVGPUAsmParser::parseSwizzleBitmaskPerm(int64_t &Imm) {$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
parseSwizzleBroadcast	AsmParser/RVGPUAsmParser.cpp	/^RVGPUAsmParser::parseSwizzleBroadcast(int64_t &Imm) {$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
parseSwizzleMacro	AsmParser/RVGPUAsmParser.cpp	/^RVGPUAsmParser::parseSwizzleMacro(int64_t &Imm) {$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
parseSwizzleOffset	AsmParser/RVGPUAsmParser.cpp	/^RVGPUAsmParser::parseSwizzleOffset(int64_t &Imm) {$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
parseSwizzleOperand	AsmParser/RVGPUAsmParser.cpp	/^RVGPUAsmParser::parseSwizzleOperand(int64_t &Op,$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
parseSwizzleOperands	AsmParser/RVGPUAsmParser.cpp	/^RVGPUAsmParser::parseSwizzleOperands(const unsigned OpNum, int64_t* Op,$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
parseSwizzleQuadPerm	AsmParser/RVGPUAsmParser.cpp	/^RVGPUAsmParser::parseSwizzleQuadPerm(int64_t &Imm) {$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
parseSwizzleReverse	AsmParser/RVGPUAsmParser.cpp	/^RVGPUAsmParser::parseSwizzleReverse(int64_t &Imm) {$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
parseSwizzleSwap	AsmParser/RVGPUAsmParser.cpp	/^RVGPUAsmParser::parseSwizzleSwap(int64_t &Imm) {$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
parseSymbolicOrNumericFormat	AsmParser/RVGPUAsmParser.cpp	/^ParseStatus RVGPUAsmParser::parseSymbolicOrNumericFormat(int64_t &Format) {$/;"	f	class:RVGPUAsmParser	typeref:typename:ParseStatus
parseSymbolicSplitFormat	AsmParser/RVGPUAsmParser.cpp	/^ParseStatus RVGPUAsmParser::parseSymbolicSplitFormat(StringRef FormatStr,$/;"	f	class:RVGPUAsmParser	typeref:typename:ParseStatus
parseSymbolicUnifiedFormat	AsmParser/RVGPUAsmParser.cpp	/^ParseStatus RVGPUAsmParser::parseSymbolicUnifiedFormat(StringRef FormatStr,$/;"	f	class:RVGPUAsmParser	typeref:typename:ParseStatus
parseTH	AsmParser/RVGPUAsmParser.cpp	/^ParseStatus RVGPUAsmParser::parseTH(OperandVector &Operands, int64_t &TH) {$/;"	f	class:RVGPUAsmParser	typeref:typename:ParseStatus
parseTexFail	RVGPUInstructionSelector.cpp	/^static bool parseTexFail(uint64_t TexFailCtrl, bool &TFE, bool &LWE,$/;"	f	typeref:typename:bool	file:
parseTexFail	RVISelLowering.cpp	/^static bool parseTexFail(SDValue TexFailCtrl, SelectionDAG &DAG, SDValue *TFE,$/;"	f	typeref:typename:bool	file:
parseTokenOp	AsmParser/RVGPUAsmParser.cpp	/^ParseStatus RVGPUAsmParser::parseTokenOp(StringRef Name,$/;"	f	class:RVGPUAsmParser	typeref:typename:ParseStatus
parseUfmt	AsmParser/RVGPUAsmParser.cpp	/^ParseStatus RVGPUAsmParser::parseUfmt(int64_t &Format) {$/;"	f	class:RVGPUAsmParser	typeref:typename:ParseStatus
parseUnmangledName	RVGPULibFunc.cpp	/^bool RVGPUMangledLibFunc::parseUnmangledName(StringRef FullName) {$/;"	f	class:RVGPUMangledLibFunc	typeref:typename:bool
parseVOPD	AsmParser/RVGPUAsmParser.cpp	/^ParseStatus RVGPUAsmParser::parseVOPD(OperandVector &Operands) {$/;"	f	class:RVGPUAsmParser	typeref:typename:ParseStatus
parseVReg32OrOff	AsmParser/RVGPUAsmParser.cpp	/^ParseStatus RVGPUAsmParser::parseVReg32OrOff(OperandVector &Operands) {$/;"	f	class:RVGPUAsmParser	typeref:typename:ParseStatus
parseVecSize	RVGPULibFunc.cpp	/^static int parseVecSize(StringRef& mangledName) {$/;"	f	typeref:typename:int	file:
partialVCCWritesUpdateVCCZ	GCNSubtarget.h	/^  bool partialVCCWritesUpdateVCCZ() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
partitionVariablesIntoIndirectStrategies	RVGPULowerModuleLDSPass.cpp	/^  static void partitionVariablesIntoIndirectStrategies($/;"	f	class:__anoncc7483b30111::RVGPULowerModuleLDS	typeref:typename:void	file:
passSpecialInputs	RVGPUCallLowering.cpp	/^bool RVGPUCallLowering::passSpecialInputs(MachineIRBuilder &MIRBuilder,$/;"	f	class:RVGPUCallLowering	typeref:typename:bool
passSpecialInputs	RVISelLowering.cpp	/^void RVTargetLowering::passSpecialInputs($/;"	f	class:RVTargetLowering	typeref:typename:void
peekFNeg	RVGPUISelLowering.cpp	/^static SDValue peekFNeg(SDValue Val) {$/;"	f	typeref:typename:SDValue	file:
peekFPSignOps	RVGPUISelLowering.cpp	/^static SDValue peekFPSignOps(SDValue Val) {$/;"	f	typeref:typename:SDValue	file:
peekToken	AsmParser/RVGPUAsmParser.cpp	/^AsmToken RVGPUAsmParser::peekToken(bool ShouldSkipSpace) {$/;"	f	class:RVGPUAsmParser	typeref:typename:AsmToken
peekTokens	AsmParser/RVGPUAsmParser.cpp	/^RVGPUAsmParser::peekTokens(MutableArrayRef<AsmToken> Tokens) {$/;"	f	class:RVGPUAsmParser	typeref:typename:void
performAddCarrySubCarryCombine	RVISelLowering.cpp	/^SDValue RVTargetLowering::performAddCarrySubCarryCombine(SDNode *N,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
performAddCombine	RVISelLowering.cpp	/^SDValue RVTargetLowering::performAddCombine(SDNode *N,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
performAndCombine	RVISelLowering.cpp	/^SDValue RVTargetLowering::performAndCombine(SDNode *N,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
performAssertSZExtCombine	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::performAssertSZExtCombine(SDNode *N,$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
performClampCombine	RVISelLowering.cpp	/^SDValue RVTargetLowering::performClampCombine(SDNode *N,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
performClassCombine	RVISelLowering.cpp	/^SDValue RVTargetLowering::performClassCombine(SDNode *N,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
performCtlz_CttzCombine	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::performCtlz_CttzCombine(const SDLoc &SL, SDValue Cond,$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
performCvtF32UByteNCombine	RVISelLowering.cpp	/^SDValue RVTargetLowering::performCvtF32UByteNCombine(SDNode *N,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
performCvtPkRTZCombine	RVISelLowering.cpp	/^SDValue RVTargetLowering::performCvtPkRTZCombine(SDNode *N,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
performExtractVectorEltCombine	RVISelLowering.cpp	/^SDValue RVTargetLowering::performExtractVectorEltCombine($/;"	f	class:RVTargetLowering	typeref:typename:SDValue
performFAbsCombine	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::performFAbsCombine(SDNode *N,$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
performFAddCombine	RVISelLowering.cpp	/^SDValue RVTargetLowering::performFAddCombine(SDNode *N,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
performFCanonicalizeCombine	RVISelLowering.cpp	/^SDValue RVTargetLowering::performFCanonicalizeCombine($/;"	f	class:RVTargetLowering	typeref:typename:SDValue
performFCopySignCombine	RVISelLowering.cpp	/^SDValue RVTargetLowering::performFCopySignCombine(SDNode *N,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
performFDivCombine	RVISelLowering.cpp	/^SDValue RVTargetLowering::performFDivCombine(SDNode *N,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
performFMACombine	RVISelLowering.cpp	/^SDValue RVTargetLowering::performFMACombine(SDNode *N,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
performFMed3Combine	RVISelLowering.cpp	/^SDValue RVTargetLowering::performFMed3Combine(SDNode *N,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
performFNegCombine	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::performFNegCombine(SDNode *N,$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
performFPMed3ImmCombine	RVISelLowering.cpp	/^SDValue RVTargetLowering::performFPMed3ImmCombine(SelectionDAG &DAG,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
performFPRoundCombine	RVISelLowering.cpp	/^SDValue RVTargetLowering::performFPRoundCombine(SDNode *N,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
performFSubCombine	RVISelLowering.cpp	/^SDValue RVTargetLowering::performFSubCombine(SDNode *N,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
performInsertVectorEltCombine	RVISelLowering.cpp	/^RVTargetLowering::performInsertVectorEltCombine(SDNode *N,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
performIntMed3ImmCombine	RVISelLowering.cpp	/^SDValue RVTargetLowering::performIntMed3ImmCombine(SelectionDAG &DAG,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
performIntrinsicWOChainCombine	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::performIntrinsicWOChainCombine($/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
performLoadCombine	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::performLoadCombine(SDNode *N,$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
performMemSDNodeCombine	RVISelLowering.cpp	/^SDValue RVTargetLowering::performMemSDNodeCombine(MemSDNode *N,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
performMinMaxCombine	RVISelLowering.cpp	/^SDValue RVTargetLowering::performMinMaxCombine(SDNode *N,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
performMulCombine	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::performMulCombine(SDNode *N,$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
performMulLoHiCombine	RVGPUISelLowering.cpp	/^RVGPUTargetLowering::performMulLoHiCombine(SDNode *N,$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
performMulhsCombine	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::performMulhsCombine(SDNode *N,$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
performMulhuCombine	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::performMulhuCombine(SDNode *N,$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
performOrCombine	RVISelLowering.cpp	/^SDValue RVTargetLowering::performOrCombine(SDNode *N,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
performRcpCombine	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::performRcpCombine(SDNode *N,$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
performRcpCombine	RVISelLowering.cpp	/^SDValue RVTargetLowering::performRcpCombine(SDNode *N,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
performSHLPtrCombine	RVISelLowering.cpp	/^SDValue RVTargetLowering::performSHLPtrCombine(SDNode *N,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
performSelectCombine	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::performSelectCombine(SDNode *N,$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
performSetCCCombine	RVISelLowering.cpp	/^SDValue RVTargetLowering::performSetCCCombine(SDNode *N,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
performShlCombine	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::performShlCombine(SDNode *N,$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
performSignExtendInRegCombine	RVISelLowering.cpp	/^SDValue RVTargetLowering::performSignExtendInRegCombine(SDNode *N,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
performSraCombine	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::performSraCombine(SDNode *N,$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
performSrlCombine	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::performSrlCombine(SDNode *N,$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
performStoreCombine	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::performStoreCombine(SDNode *N,$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
performSubCombine	RVISelLowering.cpp	/^SDValue RVTargetLowering::performSubCombine(SDNode *N,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
performTruncateCombine	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::performTruncateCombine($/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
performUCharToFloatCombine	RVISelLowering.cpp	/^SDValue RVTargetLowering::performUCharToFloatCombine(SDNode *N,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
performXorCombine	RVISelLowering.cpp	/^SDValue RVTargetLowering::performXorCombine(SDNode *N,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
performZeroExtendCombine	RVISelLowering.cpp	/^SDValue RVTargetLowering::performZeroExtendCombine(SDNode *N,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
phiInfoElementAddSource	RVGPUMachineCFGStructurizer.cpp	/^void PHILinearize::phiInfoElementAddSource(PHIInfoElementT *Info,$/;"	f	class:PHILinearize	typeref:typename:void
phiInfoElementGetDest	RVGPUMachineCFGStructurizer.cpp	/^unsigned PHILinearize::phiInfoElementGetDest(PHIInfoElementT *Info) {$/;"	f	class:PHILinearize	typeref:typename:unsigned
phiInfoElementGetSources	RVGPUMachineCFGStructurizer.cpp	/^PHILinearize::phiInfoElementGetSources(PHIInfoElementT *Info) {$/;"	f	class:PHILinearize	typeref:typename:PHILinearize::PHISourcesT &
phiInfoElementRemoveSource	RVGPUMachineCFGStructurizer.cpp	/^void PHILinearize::phiInfoElementRemoveSource(PHIInfoElementT *Info,$/;"	f	class:PHILinearize	typeref:typename:void
phiInfoElementSetDef	RVGPUMachineCFGStructurizer.cpp	/^void PHILinearize::phiInfoElementSetDef(PHIInfoElementT *Info,$/;"	f	class:PHILinearize	typeref:typename:void
pickBest	GCNILPSched.cpp	/^const SUnit *GCNILPScheduler::pickBest(const SUnit *left, const SUnit *right)$/;"	f	class:GCNILPScheduler	typeref:typename:const SUnit *
pickBlock	SIMachineScheduler.cpp	/^SIScheduleBlock *SIScheduleBlockScheduler::pickBlock() {$/;"	f	class:SIScheduleBlockScheduler	typeref:typename:SIScheduleBlock *
pickCandidate	GCNILPSched.cpp	/^GCNILPScheduler::Candidate* GCNILPScheduler::pickCandidate() {$/;"	f	class:GCNILPScheduler	typeref:typename:GCNILPScheduler::Candidate *
pickCandidate	GCNMinRegStrategy.cpp	/^GCNMinRegScheduler::Candidate* GCNMinRegScheduler::pickCandidate() {$/;"	f	class:GCNMinRegScheduler	typeref:typename:GCNMinRegScheduler::Candidate *
pickNode	GCNIterativeScheduler.cpp	/^  SUnit *pickNode(bool &IsTopNode) override { return nullptr; }$/;"	f	class:__anon1e3e8dba0111::SchedStrategyStub	typeref:typename:SUnit *	file:
pickNode	GCNSchedStrategy.cpp	/^SUnit *GCNSchedStrategy::pickNode(bool &IsTopNode) {$/;"	f	class:GCNSchedStrategy	typeref:typename:SUnit *
pickNode	SIMachineScheduler.cpp	/^SUnit* SIScheduleBlock::pickNode() {$/;"	f	class:SIScheduleBlock	typeref:typename:SUnit *
pickNodeBidirectional	GCNSchedStrategy.cpp	/^SUnit *GCNSchedStrategy::pickNodeBidirectional(bool &IsTopNode) {$/;"	f	class:GCNSchedStrategy	typeref:typename:SUnit *
pickNodeFromQueue	GCNSchedStrategy.cpp	/^void GCNSchedStrategy::pickNodeFromQueue(SchedBoundary &Zone,$/;"	f	class:GCNSchedStrategy	typeref:typename:void
placeSources	RVISelLowering.cpp	/^static void placeSources(ByteProvider<SDValue> &Src0,$/;"	f	typeref:typename:void	file:
pop	RVGPUIGroupLP.cpp	/^  void pop() { Collection.pop_back(); }$/;"	f	class:__anon61b122dc0111::SchedGroup	typeref:typename:void	file:
popSaved	SIAnnotateControlFlow.cpp	/^Value *SIAnnotateControlFlow::popSaved() {$/;"	f	class:SIAnnotateControlFlow	typeref:typename:Value *
populateReadyList	RVGPUIGroupLP.cpp	/^void PipelineSolver::populateReadyList($/;"	f	class:__anon61b122dc0111::PipelineSolver	typeref:typename:void
postProcessInstruction	MCA/RVGPUCustomBehaviour.cpp	/^void RVGPUInstrPostProcess::postProcessInstruction($/;"	f	class:llvm::mca::RVGPUInstrPostProcess	typeref:typename:void
potentialToConvert	SIPeepholeSDWA.cpp	/^MachineInstr *SDWADstOperand::potentialToConvert(const RVInstrInfo *TII) {$/;"	f	class:SDWADstOperand	typeref:typename:MachineInstr *
potentialToConvert	SIPeepholeSDWA.cpp	/^MachineInstr *SDWASrcOperand::potentialToConvert(const RVInstrInfo *TII) {$/;"	f	class:SDWASrcOperand	typeref:typename:MachineInstr *
predecessors	SILowerI1Copies.cpp	/^  ArrayRef<MachineBasicBlock *> predecessors() const { return Predecessors; }$/;"	f	class:__anone16a92980111::PhiIncomingAnalysis	typeref:typename:ArrayRef<MachineBasicBlock * >	file:
prepare	RVRegisterInfo.cpp	/^  void prepare() {$/;"	f	struct:llvm::SGPRSpillBuilder	typeref:typename:void	file:
prepareInsertion	SIWholeQuadMode.cpp	/^MachineBasicBlock::iterator SIWholeQuadMode::prepareInsertion($/;"	f	class:SIWholeQuadMode	typeref:typename:MachineBasicBlock::iterator
preserveCondRegFlags	RVInstrInfo.cpp	/^static void preserveCondRegFlags(MachineOperand &CondReg,$/;"	f	typeref:typename:void	file:
print	AsmParser/RVGPUAsmParser.cpp	/^  void print(raw_ostream &OS) const override {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:void	file:
print	GCNRegPressure.cpp	/^Printable llvm::print(const GCNRPTracker::LiveRegSet &LiveRegs,$/;"	f	class:llvm	typeref:typename:Printable
print	GCNRegPressure.cpp	/^Printable llvm::print(const GCNRegPressure &RP, const GCNSubtarget *ST) {$/;"	f	class:llvm	typeref:typename:Printable
print	RVGPUArgumentUsageInfo.cpp	/^void ArgDescriptor::print(raw_ostream &OS,$/;"	f	class:ArgDescriptor	typeref:typename:INITIALIZE_PASS (RVGPUArgumentUsageInfo,DEBUG_TYPE,"Argument Register Usage Information Storage",false,true)void
print	RVGPUArgumentUsageInfo.cpp	/^void RVGPUArgumentUsageInfo::print(raw_ostream &OS, const Module *M) const {$/;"	f	class:RVGPUArgumentUsageInfo	typeref:typename:void
print	RVGPUMachineCFGStructurizer.cpp	/^void LinearizedRegion::print(raw_ostream &OS, const TargetRegisterInfo *TRI) {$/;"	f	class:LinearizedRegion	typeref:typename:void
print	RVGPUPerfHintAnalysis.cpp	/^    Printable print() const {$/;"	f	struct:__anon406ad74e0111::RVGPUPerfHint::MemAccessInfo	typeref:typename:Printable	file:
print	SIInsertWaitcnts.cpp	/^void WaitcntBrackets::print(raw_ostream &OS) {$/;"	f	class:WaitcntBrackets	typeref:typename:void
print	SIPeepholeSDWA.cpp	/^void SDWADstOperand::print(raw_ostream& OS) const {$/;"	f	class:SDWADstOperand	typeref:typename:LLVM_DUMP_METHOD void
print	SIPeepholeSDWA.cpp	/^void SDWADstPreserveOperand::print(raw_ostream& OS) const {$/;"	f	class:SDWADstPreserveOperand	typeref:typename:LLVM_DUMP_METHOD void
print	SIPeepholeSDWA.cpp	/^void SDWASrcOperand::print(raw_ostream& OS) const {$/;"	f	class:SDWASrcOperand	typeref:typename:LLVM_DUMP_METHOD void
printABID	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printABID(const MCInst *MI, unsigned OpNo,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printBLGP	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printBLGP(const MCInst *MI, unsigned OpNo,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printBitField	Utils/RVKernelCodeTUtils.cpp	/^static void printBitField(StringRef Name, const rv_kernel_code_t &c,$/;"	f	typeref:typename:void	file:
printCBSZ	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printCBSZ(const MCInst *MI, unsigned OpNo,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printCPol	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printCPol(const MCInst *MI, unsigned OpNo,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printCustom	RVMachineFunctionInfo.h	/^  void printCustom(raw_ostream &OS) const override {$/;"	f	class:llvm::RVGPUGWSResourcePseudoSourceValue	typeref:typename:void
printDMask	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printDMask(const MCInst *MI, unsigned OpNo,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printDPP8	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printDPP8(const MCInst *MI, unsigned OpNo,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printDPPCtrl	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printDPPCtrl(const MCInst *MI, unsigned OpNo,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printDebug	SIMachineScheduler.cpp	/^void SIScheduleBlock::printDebug(bool full) {$/;"	f	class:SIScheduleBlock	typeref:typename:void
printDefaultVccOperand	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printDefaultVccOperand(bool FirstOperand,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printDepCtr	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printDepCtr(const MCInst *MI, unsigned OpNo,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printDim	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printDim(const MCInst *MI, unsigned OpNo,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printDppBankMask	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printDppBankMask(const MCInst *MI, unsigned OpNo,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printDppBoundCtrl	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printDppBoundCtrl(const MCInst *MI, unsigned OpNo,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printDppFI	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printDppFI(const MCInst *MI, unsigned OpNo,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printDppRowMask	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printDppRowMask(const MCInst *MI, unsigned OpNo,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printEndpgm	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printEndpgm(const MCInst *MI, unsigned OpNo,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printExpSrc0	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printExpSrc0(const MCInst *MI, unsigned OpNo,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printExpSrc1	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printExpSrc1(const MCInst *MI, unsigned OpNo,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printExpSrc2	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printExpSrc2(const MCInst *MI, unsigned OpNo,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printExpSrc3	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printExpSrc3(const MCInst *MI, unsigned OpNo,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printExpSrcN	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printExpSrcN(const MCInst *MI, unsigned OpNo,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printExpTgt	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printExpTgt(const MCInst *MI, unsigned OpNo,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printFORMAT	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printFORMAT(const MCInst *MI, unsigned OpNo,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printField	Utils/RVKernelCodeTUtils.cpp	/^static void printField(StringRef Name, const rv_kernel_code_t &C,$/;"	f	typeref:typename:void	file:
printFlatOffset	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printFlatOffset(const MCInst *MI, unsigned OpNo,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printGPRIdxMode	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printGPRIdxMode(const MCInst *MI, unsigned OpNo,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printHwreg	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printHwreg(const MCInst *MI, unsigned OpNo,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printIfSet	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printIfSet(const MCInst *MI, unsigned OpNo,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printImmTy	AsmParser/RVGPUAsmParser.cpp	/^  static void printImmTy(raw_ostream& OS, ImmTy Type) {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:void	file:
printImmediate16	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printImmediate16(uint32_t Imm,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printImmediate32	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printImmediate32(uint32_t Imm,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printImmediate64	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printImmediate64(uint64_t Imm,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printImmediateInt16	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printImmediateInt16(uint32_t Imm,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printImmediateV216	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printImmediateV216(uint32_t Imm,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printInfo	SIWholeQuadMode.cpp	/^LLVM_DUMP_METHOD void SIWholeQuadMode::printInfo() {$/;"	f	class:SIWholeQuadMode	typeref:typename:LLVM_DUMP_METHOD void
printInst	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printInst(const MCInst *MI, uint64_t Address,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printInterpAttr	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printInterpAttr(const MCInst *MI, unsigned OpNum,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printInterpAttrChan	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printInterpAttrChan(const MCInst *MI, unsigned OpNum,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printInterpSlot	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printInterpSlot(const MCInst *MI, unsigned OpNum,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printLivenessInfo	GCNIterativeScheduler.cpp	/^static void printLivenessInfo(raw_ostream &OS,$/;"	f	typeref:typename:LLVM_DUMP_METHOD void	file:
printMemOperand	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printMemOperand(const MCInst *MI, unsigned OpNo,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printName	Utils/RVKernelCodeTUtils.cpp	/^static raw_ostream &printName(raw_ostream &OS, StringRef Name) {$/;"	f	typeref:typename:raw_ostream &	file:
printNamedBit	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printNamedBit(const MCInst *MI, unsigned OpNo,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printNegHi	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printNegHi(const MCInst *MI, unsigned OpNo,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printNegLo	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printNegLo(const MCInst *MI, unsigned OpNo,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printOModSI	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printOModSI(const MCInst *MI, unsigned OpNo,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printOffset	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printOffset(const MCInst *MI, unsigned OpNo,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printOffset0	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printOffset0(const MCInst *MI, unsigned OpNo,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printOffset1	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printOffset1(const MCInst *MI, unsigned OpNo,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printOpSel	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printOpSel(const MCInst *MI, unsigned,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printOpSelHi	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printOpSelHi(const MCInst *MI, unsigned OpNo,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printOperand	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printOperand(const MCInst *MI, unsigned OpNo,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printOperand	MCTargetDesc/RVGPUInstPrinter.h	/^  void printOperand(const MCInst *MI, uint64_t \/*Address*\/, unsigned OpNum,$/;"	f	class:llvm::RVGPUInstPrinter	typeref:typename:void
printOperandAndFPInputMods	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printOperandAndFPInputMods(const MCInst *MI,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printOperandAndIntInputMods	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printOperandAndIntInputMods(const MCInst *MI,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printPackedModifier	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printPackedModifier(const MCInst *MI,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printR128A16	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printR128A16(const MCInst *MI, unsigned OpNo,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printRegName	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printRegName(raw_ostream &OS, MCRegister Reg) const {$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printRegOperand	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printRegOperand(unsigned RegNo, raw_ostream &O,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printRegion	GCNIterativeScheduler.cpp	/^static void printRegion(raw_ostream &OS,$/;"	f	typeref:typename:LLVM_DUMP_METHOD void	file:
printRegions	GCNIterativeScheduler.cpp	/^void GCNIterativeScheduler::printRegions(raw_ostream &OS) const {$/;"	f	class:GCNIterativeScheduler	typeref:typename:LLVM_DUMP_METHOD void
printRegularOperand	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printRegularOperand(const MCInst *MI, unsigned OpNo,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printRvKernelCodeField	Utils/RVKernelCodeTUtils.cpp	/^void llvm::printRvKernelCodeField(const rv_kernel_code_t &C,$/;"	f	class:llvm	typeref:typename:void
printSDWADstSel	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printSDWADstSel(const MCInst *MI, unsigned OpNo,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printSDWADstUnused	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printSDWADstUnused(const MCInst *MI, unsigned OpNo,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printSDWASel	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printSDWASel(const MCInst *MI, unsigned OpNo,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printSDWASrc0Sel	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printSDWASrc0Sel(const MCInst *MI, unsigned OpNo,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printSDWASrc1Sel	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printSDWASrc1Sel(const MCInst *MI, unsigned OpNo,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printSDelayALU	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printSDelayALU(const MCInst *MI, unsigned OpNo,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printSMEMOffset	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printSMEMOffset(const MCInst *MI, unsigned OpNo,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printSMEMOffsetMod	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printSMEMOffsetMod(const MCInst *MI, unsigned OpNo,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printSMRDLiteralOffset	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printSMRDLiteralOffset(const MCInst *MI, unsigned OpNo,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printSMRDOffset8	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printSMRDOffset8(const MCInst *MI, unsigned OpNo,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printSWaitCnt	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printSWaitCnt(const MCInst *MI, unsigned OpNo,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printSchedRP	GCNIterativeScheduler.cpp	/^void GCNIterativeScheduler::printSchedRP(raw_ostream &OS,$/;"	f	class:GCNIterativeScheduler	typeref:typename:LLVM_DUMP_METHOD void
printSchedResult	GCNIterativeScheduler.cpp	/^void GCNIterativeScheduler::printSchedResult(raw_ostream &OS,$/;"	f	class:GCNIterativeScheduler	typeref:typename:LLVM_DUMP_METHOD void
printScheduleModel	GCNSchedStrategy.cpp	/^static void printScheduleModel(std::set<std::pair<MachineInstr *, unsigned>,$/;"	f	typeref:typename:void	file:
printScope	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printScope(int64_t Scope, raw_ostream &O) {$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printSendMsg	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printSendMsg(const MCInst *MI, unsigned OpNo,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printSwizzle	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printSwizzle(const MCInst *MI, unsigned OpNo,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printSwizzleBitmask	MCTargetDesc/RVGPUInstPrinter.cpp	/^static void printSwizzleBitmask(const uint16_t AndMask,$/;"	f	typeref:typename:void	file:
printSymbolicFormat	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printSymbolicFormat(const MCInst *MI,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printTH	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printTH(const MCInst *MI, int64_t TH, int64_t Scope,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printU16ImmDecOperand	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printU16ImmDecOperand(const MCInst *MI, unsigned OpNo,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printU16ImmOperand	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printU16ImmOperand(const MCInst *MI, unsigned OpNo,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printU32ImmOperand	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printU32ImmOperand(const MCInst *MI, unsigned OpNo,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printU4ImmDecOperand	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printU4ImmDecOperand(const MCInst *MI, unsigned OpNo,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printU4ImmOperand	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printU4ImmOperand(const MCInst *MI, unsigned OpNo,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printU8ImmDecOperand	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printU8ImmDecOperand(const MCInst *MI, unsigned OpNo,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printVINTRPDst	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printVINTRPDst(const MCInst *MI, unsigned OpNo,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printVOPDst	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printVOPDst(const MCInst *MI, unsigned OpNo,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printWWMInfo	SIPreAllocateWWMRegs.cpp	/^SIPreAllocateWWMRegs::printWWMInfo(const MachineInstr &MI) {$/;"	f	class:SIPreAllocateWWMRegs	typeref:typename:LLVM_DUMP_METHOD void
printWaitEXP	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printWaitEXP(const MCInst *MI, unsigned OpNo,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
printWaitVDST	MCTargetDesc/RVGPUInstPrinter.cpp	/^void RVGPUInstPrinter::printWaitVDST(const MCInst *MI, unsigned OpNo,$/;"	f	class:RVGPUInstPrinter	typeref:typename:void
privateMemoryResourceIsRangeChecked	GCNSubtarget.h	/^  bool privateMemoryResourceIsRangeChecked() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
private_segment_alignment	RVKernelCodeT.h	/^  uint8_t private_segment_alignment;$/;"	m	struct:rv_kernel_code_t	typeref:typename:uint8_t
process	SILowerControlFlow.cpp	/^MachineBasicBlock *SILowerControlFlow::process(MachineInstr &MI) {$/;"	f	class:SILowerControlFlow	typeref:typename:MachineBasicBlock *
processBaseWithConstOffset	SILoadStoreOptimizer.cpp	/^void SILoadStoreOptimizer::processBaseWithConstOffset(const MachineOperand &Base,$/;"	f	class:SILoadStoreOptimizer	typeref:typename:void
processBlock	SIWholeQuadMode.cpp	/^void SIWholeQuadMode::processBlock(MachineBasicBlock &MBB, bool IsEntry) {$/;"	f	class:SIWholeQuadMode	typeref:typename:void
processBlockPhase1	SIModeRegister.cpp	/^void SIModeRegister::processBlockPhase1(MachineBasicBlock &MBB,$/;"	f	class:SIModeRegister	typeref:typename:void
processBlockPhase2	SIModeRegister.cpp	/^void SIModeRegister::processBlockPhase2(MachineBasicBlock &MBB,$/;"	f	class:SIModeRegister	typeref:typename:void
processBlockPhase3	SIModeRegister.cpp	/^void SIModeRegister::processBlockPhase3(MachineBasicBlock &MBB,$/;"	f	class:SIModeRegister	typeref:typename:void
processBundle	GCNHazardRecognizer.cpp	/^void GCNHazardRecognizer::processBundle() {$/;"	f	class:GCNHazardRecognizer	typeref:typename:void
processDef	SIPreAllocateWWMRegs.cpp	/^bool SIPreAllocateWWMRegs::processDef(MachineOperand &MO) {$/;"	f	class:SIPreAllocateWWMRegs	typeref:typename:bool
processFunctionBeforeFrameFinalized	RVFrameLowering.cpp	/^void RVFrameLowering::processFunctionBeforeFrameFinalized($/;"	f	class:RVFrameLowering	typeref:typename:void
processFunctionBeforeFrameIndicesReplaced	RVFrameLowering.cpp	/^void RVFrameLowering::processFunctionBeforeFrameIndicesReplaced($/;"	f	class:RVFrameLowering	typeref:typename:void
processPHINode	SIFixSGPRCopies.cpp	/^void SIFixSGPRCopies::processPHINode(MachineInstr &MI) {$/;"	f	class:SIFixSGPRCopies	typeref:typename:void
processPSInputArgs	RVISelLowering.cpp	/^static void processPSInputArgs(SmallVectorImpl<ISD::InputArg> &Splits,$/;"	f	typeref:typename:void	file:
processReg	GCNPreRAOptimizations.cpp	/^bool GCNPreRAOptimizations::processReg(Register Reg) {$/;"	f	class:GCNPreRAOptimizations	typeref:typename:bool
processRegUses	SIFormMemoryClauses.cpp	/^bool SIFormMemoryClauses::processRegUses(const MachineInstr &MI,$/;"	f	class:SIFormMemoryClauses	typeref:typename:bool
processUse	RVGPULowerKernelAttributes.cpp	/^static bool processUse(CallInst *CI, bool IsV5OrAbove) {$/;"	f	typeref:typename:bool	file:
processWaitCnt	MCA/RVGPUCustomBehaviour.cpp	/^void RVGPUInstrPostProcess::processWaitCnt(std::unique_ptr<Instruction> &Inst,$/;"	f	class:llvm::mca::RVGPUInstrPostProcess	typeref:typename:void
promoteAllocaUserToVector	RVGPUPromoteAlloca.cpp	/^static Value *promoteAllocaUserToVector($/;"	f	typeref:typename:Value *	file:
promoteConstantOffsetToImm	SILoadStoreOptimizer.cpp	/^bool SILoadStoreOptimizer::promoteConstantOffsetToImm($/;"	f	class:SILoadStoreOptimizer	typeref:typename:bool
promoteLoad	RVGPUPromoteKernelArguments.cpp	/^bool RVGPUPromoteKernelArguments::promoteLoad(LoadInst *LI) {$/;"	f	class:RVGPUPromoteKernelArguments	typeref:typename:bool
promotePointer	RVGPUPromoteKernelArguments.cpp	/^bool RVGPUPromoteKernelArguments::promotePointer(Value *Ptr) {$/;"	f	class:RVGPUPromoteKernelArguments	typeref:typename:bool
promoteSoftWaitCnt	SIInsertWaitcnts.cpp	/^bool SIInsertWaitcnts::promoteSoftWaitCnt(MachineInstr *Waitcnt) const {$/;"	f	class:SIInsertWaitcnts	typeref:typename:bool
promoteUniformBitreverseToI32	RVGPUCodeGenPrepare.cpp	/^bool RVGPUCodeGenPrepareImpl::promoteUniformBitreverseToI32($/;"	f	class:RVGPUCodeGenPrepareImpl	typeref:typename:bool
promoteUniformOpToI32	RVGPUCodeGenPrepare.cpp	/^bool RVGPUCodeGenPrepareImpl::promoteUniformOpToI32(BinaryOperator &I) const {$/;"	f	class:RVGPUCodeGenPrepareImpl	typeref:typename:bool
promoteUniformOpToI32	RVGPUCodeGenPrepare.cpp	/^bool RVGPUCodeGenPrepareImpl::promoteUniformOpToI32(ICmpInst &I) const {$/;"	f	class:RVGPUCodeGenPrepareImpl	typeref:typename:bool
promoteUniformOpToI32	RVGPUCodeGenPrepare.cpp	/^bool RVGPUCodeGenPrepareImpl::promoteUniformOpToI32(SelectInst &I) const {$/;"	f	class:RVGPUCodeGenPrepareImpl	typeref:typename:bool
promotedOpIsNSW	RVGPUCodeGenPrepare.cpp	/^static bool promotedOpIsNSW(const Instruction &I) {$/;"	f	typeref:typename:bool	file:
promotedOpIsNUW	RVGPUCodeGenPrepare.cpp	/^static bool promotedOpIsNUW(const Instruction &I) {$/;"	f	typeref:typename:bool	file:
propagateBlock	SIWholeQuadMode.cpp	/^void SIWholeQuadMode::propagateBlock(MachineBasicBlock &MBB,$/;"	f	class:SIWholeQuadMode	typeref:typename:void
propagateIndirectCallRegisterUsage	RVGPUResourceUsageAnalysis.cpp	/^void RVGPUResourceUsageAnalysis::propagateIndirectCallRegisterUsage() {$/;"	f	class:RVGPUResourceUsageAnalysis	typeref:typename:void
propagateInstruction	SIWholeQuadMode.cpp	/^void SIWholeQuadMode::propagateInstruction(MachineInstr &MI,$/;"	f	class:SIWholeQuadMode	typeref:typename:void
prunePHIInfo	RVGPUMachineCFGStructurizer.cpp	/^void RVGPUMachineCFGStructurizer::prunePHIInfo(MachineBasicBlock *MBB) {$/;"	f	class:RVGPUMachineCFGStructurizer	typeref:typename:void
pseudoOpConvertToVOP2	SIPeepholeSDWA.cpp	/^void SIPeepholeSDWA::pseudoOpConvertToVOP2(MachineInstr &MI,$/;"	f	class:SIPeepholeSDWA	typeref:typename:void
pseudoToMCOpcode	RVInstrInfo.cpp	/^int RVInstrInfo::pseudoToMCOpcode(int Opcode) const {$/;"	f	class:RVInstrInfo	typeref:typename:int
push	SIAnnotateControlFlow.cpp	/^void SIAnnotateControlFlow::push(BasicBlock *BB, Value *Saved) {$/;"	f	class:SIAnnotateControlFlow	typeref:typename:void
reMaterialize	RVInstrInfo.cpp	/^void RVInstrInfo::reMaterialize(MachineBasicBlock &MBB,$/;"	f	class:RVInstrInfo	typeref:typename:void
read2Opcode	SILoadStoreOptimizer.cpp	/^unsigned SILoadStoreOptimizer::read2Opcode(unsigned EltSize) const {$/;"	f	class:SILoadStoreOptimizer	typeref:typename:unsigned
read2ST64Opcode	SILoadStoreOptimizer.cpp	/^unsigned SILoadStoreOptimizer::read2ST64Opcode(unsigned EltSize) const {$/;"	f	class:SILoadStoreOptimizer	typeref:typename:unsigned
readFromIR	Utils/RVGPUPALMetadata.cpp	/^void RVGPUPALMetadata::readFromIR(Module &M) {$/;"	f	class:RVGPUPALMetadata	typeref:typename:void
readWriteTmpVGPR	RVRegisterInfo.cpp	/^  void readWriteTmpVGPR(unsigned Offset, bool IsLoad) {$/;"	f	struct:llvm::SGPRSpillBuilder	typeref:typename:void	file:
readlaneVGPRToSGPR	RVInstrInfo.cpp	/^Register RVInstrInfo::readlaneVGPRToSGPR(Register SrcReg, MachineInstr &UseMI,$/;"	f	class:RVInstrInfo	typeref:typename:Register
readsVCCZ	SIInsertWaitcnts.cpp	/^static bool readsVCCZ(const MachineInstr &MI) {$/;"	f	typeref:typename:bool	file:
reassociateScalarOps	RVISelLowering.cpp	/^SDValue RVTargetLowering::reassociateScalarOps(SDNode *N,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
recede	GCNRegPressure.cpp	/^void GCNUpwardRPTracker::recede(const MachineInstr &MI) {$/;"	f	class:GCNUpwardRPTracker	typeref:typename:void
recordLDSAbsoluteAddress	RVGPULowerModuleLDSPass.cpp	/^  static void recordLDSAbsoluteAddress(Module *M, GlobalVariable *GV,$/;"	f	class:__anoncc7483b30111::RVGPULowerModuleLDS	typeref:typename:void	file:
recursivelyVisitUsers	RVGPUAlwaysInlinePass.cpp	/^recursivelyVisitUsers(GlobalValue &GV,$/;"	f	typeref:typename:void	file:
refComputeRegister	Utils/RVGPUPALMetadata.cpp	/^msgpack::DocNode *RVGPUPALMetadata::refComputeRegister(StringRef field) {$/;"	f	class:RVGPUPALMetadata	typeref:typename:msgpack::DocNode *
refComputeRegisters	Utils/RVGPUPALMetadata.cpp	/^msgpack::DocNode &RVGPUPALMetadata::refComputeRegisters() {$/;"	f	class:RVGPUPALMetadata	typeref:typename:msgpack::DocNode &
refGraphicsRegisters	Utils/RVGPUPALMetadata.cpp	/^msgpack::DocNode &RVGPUPALMetadata::refGraphicsRegisters() {$/;"	f	class:RVGPUPALMetadata	typeref:typename:msgpack::DocNode &
refHwStage	Utils/RVGPUPALMetadata.cpp	/^msgpack::DocNode &RVGPUPALMetadata::refHwStage() {$/;"	f	class:RVGPUPALMetadata	typeref:typename:msgpack::DocNode &
refRegisters	Utils/RVGPUPALMetadata.cpp	/^msgpack::DocNode &RVGPUPALMetadata::refRegisters() {$/;"	f	class:RVGPUPALMetadata	typeref:typename:msgpack::DocNode &
refShaderFunctions	Utils/RVGPUPALMetadata.cpp	/^msgpack::DocNode &RVGPUPALMetadata::refShaderFunctions() {$/;"	f	class:RVGPUPALMetadata	typeref:typename:msgpack::DocNode &
refineUsesAlignmentAndAA	RVGPULowerModuleLDSPass.cpp	/^  static void refineUsesAlignmentAndAA(Value *Ptr, Align A,$/;"	f	class:__anoncc7483b30111::RVGPULowerModuleLDS	typeref:typename:void	file:
regBankBoolUnion	RVGPURegisterBankInfo.cpp	/^static unsigned regBankBoolUnion(unsigned RB0, unsigned RB1) {$/;"	f	typeref:typename:unsigned	file:
regBankUnion	RVGPURegisterBankInfo.cpp	/^static unsigned regBankUnion(unsigned RB0, unsigned RB1) {$/;"	f	typeref:typename:unsigned	file:
regToString	RVMachineFunctionInfo.cpp	/^static yaml::StringValue regToString(Register Reg,$/;"	f	typeref:typename:yaml::StringValue	file:
regionIsSequence	RVGPUMachineCFGStructurizer.cpp	/^bool regionIsSequence(RegionMRT *Region) {$/;"	f	typeref:typename:bool
regionIsSimpleIf	RVGPUMachineCFGStructurizer.cpp	/^bool RVGPUMachineCFGStructurizer::regionIsSimpleIf(RegionMRT *Region) {$/;"	f	class:RVGPUMachineCFGStructurizer	typeref:typename:bool
registerDefaultAliasAnalyses	RVGPUTargetMachine.cpp	/^void RVGPUTargetMachine::registerDefaultAliasAnalyses(AAManager &AAM) {$/;"	f	class:RVGPUTargetMachine	typeref:typename:void
registerMachineRegisterInfoCallback	RVGPUTargetMachine.cpp	/^void GCNTargetMachine::registerMachineRegisterInfoCallback($/;"	f	class:GCNTargetMachine	typeref:typename:void
registerPassBuilderCallbacks	RVGPUTargetMachine.cpp	/^void RVGPUTargetMachine::registerPassBuilderCallbacks(PassBuilder &PB) {$/;"	f	class:RVGPUTargetMachine	typeref:typename:void
regroupNoUserInstructions	SIMachineScheduler.cpp	/^void SIScheduleBlockCreator::regroupNoUserInstructions() {$/;"	f	class:SIScheduleBlockCreator	typeref:typename:void
reinsertVectorIndexAdd	RVGPURegisterBankInfo.cpp	/^static void reinsertVectorIndexAdd(MachineIRBuilder &B,$/;"	f	typeref:typename:void	file:
relaxInstruction	MCTargetDesc/RVGPUAsmBackend.cpp	/^void RVGPUAsmBackend::relaxInstruction(MCInst &Inst,$/;"	f	class:RVGPUAsmBackend	typeref:typename:void
releaseBlockSuccs	SIMachineScheduler.cpp	/^void SIScheduleBlockScheduler::releaseBlockSuccs(SIScheduleBlock *Parent) {$/;"	f	class:SIScheduleBlockScheduler	typeref:typename:void
releaseBottomNode	GCNIterativeScheduler.cpp	/^  void releaseBottomNode(SUnit *SU) override {}$/;"	f	class:__anon1e3e8dba0111::SchedStrategyStub	typeref:typename:void	file:
releasePending	GCNILPSched.cpp	/^void GCNILPScheduler::releasePending() {$/;"	f	class:GCNILPScheduler	typeref:typename:void
releasePredecessors	GCNILPSched.cpp	/^void GCNILPScheduler::releasePredecessors(const SUnit* SU) {$/;"	f	class:GCNILPScheduler	typeref:typename:void
releaseSucc	SIMachineScheduler.cpp	/^void SIScheduleBlock::releaseSucc(SUnit *SU, SDep *SuccEdge) {$/;"	f	class:SIScheduleBlock	typeref:typename:void
releaseSuccessors	GCNMinRegStrategy.cpp	/^void GCNMinRegScheduler::releaseSuccessors(const SUnit* SU, int Priority) {$/;"	f	class:GCNMinRegScheduler	typeref:typename:void
releaseSuccessors	SIMachineScheduler.cpp	/^void SIScheduleBlock::releaseSuccessors(SUnit *SU, bool InOrOutBlock) {$/;"	f	class:SIScheduleBlock	typeref:typename:void
releaseTopNode	GCNIterativeScheduler.cpp	/^  void releaseTopNode(SUnit *SU) override {}$/;"	f	class:__anon1e3e8dba0111::SchedStrategyStub	typeref:typename:void	file:
removeAtomicPseudoMIs	SIMemoryLegalizer.cpp	/^bool SIMemoryLegalizer::removeAtomicPseudoMIs() {$/;"	f	class:SIMemoryLegalizer	typeref:typename:bool
removeBranch	RVInstrInfo.cpp	/^unsigned RVInstrInfo::removeBranch(MachineBasicBlock &MBB,$/;"	f	class:RVInstrInfo	typeref:typename:unsigned
removeDeadFrameIndices	RVMachineFunctionInfo.cpp	/^bool RVMachineFunctionInfo::removeDeadFrameIndices($/;"	f	class:RVMachineFunctionInfo	typeref:typename:bool
removeEdges	RVGPUIGroupLP.cpp	/^void PipelineSolver::removeEdges($/;"	f	class:__anon61b122dc0111::PipelineSolver	typeref:typename:void
removeExeczBranch	SIPreEmitPeephole.cpp	/^bool SIPreEmitPeephole::removeExeczBranch(MachineInstr &MI,$/;"	f	class:SIPreEmitPeephole	typeref:typename:bool
removeExportDependencies	RVGPUExportClustering.cpp	/^static void removeExportDependencies(ScheduleDAGInstrs *DAG, SUnit &SU) {$/;"	f	namespace:__anonbb53b5ac0111	typeref:typename:void	file:
removeExternalCFGEdges	RVGPUMachineCFGStructurizer.cpp	/^static void removeExternalCFGEdges(MachineBasicBlock *StartMBB,$/;"	f	typeref:typename:void	file:
removeExternalCFGSuccessors	RVGPUMachineCFGStructurizer.cpp	/^static void removeExternalCFGSuccessors(MachineBasicBlock *MBB) {$/;"	f	typeref:typename:void	file:
removeFalseRegisterKills	RVGPUMachineCFGStructurizer.cpp	/^void LinearizedRegion::removeFalseRegisterKills(MachineRegisterInfo *MRI) {$/;"	f	class:LinearizedRegion	typeref:typename:void
removeLiveOut	RVGPUMachineCFGStructurizer.cpp	/^void LinearizedRegion::removeLiveOut(unsigned Reg) {$/;"	f	class:LinearizedRegion	typeref:typename:void
removeLocalVarsFromUsedLists	RVGPULowerModuleLDSPass.cpp	/^  removeLocalVarsFromUsedLists(Module &M,$/;"	f	class:__anoncc7483b30111::RVGPULowerModuleLDS	typeref:typename:void	file:
removeMBBifRedundant	SILowerControlFlow.cpp	/^bool SILowerControlFlow::removeMBBifRedundant(MachineBasicBlock &MBB) {$/;"	f	class:SILowerControlFlow	typeref:typename:bool
removeModOperands	RVInstrInfo.cpp	/^void RVInstrInfo::removeModOperands(MachineInstr &MI) const {$/;"	f	class:RVInstrInfo	typeref:typename:void
removeOldExitPreds	RVGPUMachineCFGStructurizer.cpp	/^static void removeOldExitPreds(RegionMRT *Region) {$/;"	f	typeref:typename:void	file:
removeSource	RVGPUMachineCFGStructurizer.cpp	/^void PHILinearize::removeSource(unsigned DestReg, unsigned SourceReg,$/;"	f	class:PHILinearize	typeref:typename:void
removeTerminatorBit	SIOptimizeExecMasking.cpp	/^bool SIOptimizeExecMasking::removeTerminatorBit(MachineInstr &MI) const {$/;"	f	class:SIOptimizeExecMasking	typeref:typename:bool
renamedInGFX9	SIDefines.h	/^  renamedInGFX9 = UINT64_C(1) << 44,$/;"	e	enum:llvm::SIInstrFlags::__anon1f24a7950203
renderBitcastImm	RVGPUInstructionSelector.cpp	/^void RVGPUInstructionSelector::renderBitcastImm(MachineInstrBuilder &MIB,$/;"	f	class:RVGPUInstructionSelector	typeref:typename:void
renderExtractCPol	RVGPUInstructionSelector.cpp	/^void RVGPUInstructionSelector::renderExtractCPol(MachineInstrBuilder &MIB,$/;"	f	class:RVGPUInstructionSelector	typeref:typename:void
renderExtractSWZ	RVGPUInstructionSelector.cpp	/^void RVGPUInstructionSelector::renderExtractSWZ(MachineInstrBuilder &MIB,$/;"	f	class:RVGPUInstructionSelector	typeref:typename:void
renderFPPow2ToExponent	RVGPUInstructionSelector.cpp	/^void RVGPUInstructionSelector::renderFPPow2ToExponent(MachineInstrBuilder &MIB,$/;"	f	class:RVGPUInstructionSelector	typeref:typename:void
renderFrameIndex	RVGPUInstructionSelector.cpp	/^void RVGPUInstructionSelector::renderFrameIndex(MachineInstrBuilder &MIB,$/;"	f	class:RVGPUInstructionSelector	typeref:typename:void
renderNegateImm	RVGPUInstructionSelector.cpp	/^void RVGPUInstructionSelector::renderNegateImm(MachineInstrBuilder &MIB,$/;"	f	class:RVGPUInstructionSelector	typeref:typename:void
renderOpSelTImm	RVGPUInstructionSelector.cpp	/^void RVGPUInstructionSelector::renderOpSelTImm(MachineInstrBuilder &MIB,$/;"	f	class:RVGPUInstructionSelector	typeref:typename:void
renderPopcntImm	RVGPUInstructionSelector.cpp	/^void RVGPUInstructionSelector::renderPopcntImm(MachineInstrBuilder &MIB,$/;"	f	class:RVGPUInstructionSelector	typeref:typename:void
renderSetGLC	RVGPUInstructionSelector.cpp	/^void RVGPUInstructionSelector::renderSetGLC(MachineInstrBuilder &MIB,$/;"	f	class:RVGPUInstructionSelector	typeref:typename:void
renderTruncImm32	RVGPUInstructionSelector.cpp	/^void RVGPUInstructionSelector::renderTruncImm32(MachineInstrBuilder &MIB,$/;"	f	class:RVGPUInstructionSelector	typeref:typename:void
renderTruncTImm	RVGPUInstructionSelector.cpp	/^void RVGPUInstructionSelector::renderTruncTImm(MachineInstrBuilder &MIB,$/;"	f	class:RVGPUInstructionSelector	typeref:typename:void
replaceCall	RVGPULibCalls.cpp	/^  static void replaceCall(FPMathOperator *I, Value *With) {$/;"	f	class:llvm::RVGPULibCalls	typeref:typename:void	file:
replaceCall	RVGPULibCalls.cpp	/^  static void replaceCall(Instruction *I, Value *With) {$/;"	f	class:llvm::RVGPULibCalls	typeref:typename:void	file:
replaceDef	RVGPUMachineCFGStructurizer.cpp	/^void PHILinearize::replaceDef(unsigned OldDestReg, unsigned NewDestReg) {$/;"	f	class:PHILinearize	typeref:typename:void
replaceDstReg	SILowerI1Copies.cpp	/^void Vreg1LoweringHelper::replaceDstReg(Register NewReg, Register OldReg,$/;"	f	class:Vreg1LoweringHelper	typeref:typename:void
replaceEntryPHI	RVGPUMachineCFGStructurizer.cpp	/^void RVGPUMachineCFGStructurizer::replaceEntryPHI($/;"	f	class:RVGPUMachineCFGStructurizer	typeref:typename:void
replaceLDSVariablesWithStruct	RVGPULowerModuleLDSPass.cpp	/^  static void replaceLDSVariablesWithStruct($/;"	f	class:__anoncc7483b30111::RVGPULowerModuleLDS	typeref:typename:void	file:
replaceLibCallWithSimpleIntrinsic	RVGPULibCalls.cpp	/^void RVGPULibCalls::replaceLibCallWithSimpleIntrinsic(IRBuilder<> &B,$/;"	f	class:RVGPULibCalls	typeref:typename:void
replaceLiveOut	RVGPUMachineCFGStructurizer.cpp	/^void LinearizedRegion::replaceLiveOut(unsigned OldReg, unsigned NewReg) {$/;"	f	class:LinearizedRegion	typeref:typename:void
replaceLiveOutReg	RVGPUMachineCFGStructurizer.cpp	/^  void replaceLiveOutReg(unsigned Register, unsigned NewRegister) {$/;"	f	class:__anon1695b1f50211::RegionMRT	typeref:typename:void	file:
replaceLiveOutRegs	RVGPUMachineCFGStructurizer.cpp	/^void RVGPUMachineCFGStructurizer::replaceLiveOutRegs($/;"	f	class:RVGPUMachineCFGStructurizer	typeref:typename:void
replaceMulWithMul24	RVGPUCodeGenPrepare.cpp	/^bool RVGPUCodeGenPrepareImpl::replaceMulWithMul24(BinaryOperator &I) const {$/;"	f	class:RVGPUCodeGenPrepareImpl	typeref:typename:bool
replacePHI	RVGPUMachineCFGStructurizer.cpp	/^void RVGPUMachineCFGStructurizer::replacePHI($/;"	f	class:RVGPUMachineCFGStructurizer	typeref:typename:void
replaceRegister	RVGPUMachineCFGStructurizer.cpp	/^void LinearizedRegion::replaceRegister(unsigned Register,$/;"	f	class:LinearizedRegion	typeref:typename:void
replaceRegisterInsideRegion	RVGPUMachineCFGStructurizer.cpp	/^void LinearizedRegion::replaceRegisterInsideRegion(unsigned Register,$/;"	f	class:LinearizedRegion	typeref:typename:void
replaceRegisterOutsideRegion	RVGPUMachineCFGStructurizer.cpp	/^void LinearizedRegion::replaceRegisterOutsideRegion(unsigned Register,$/;"	f	class:LinearizedRegion	typeref:typename:void
replaceRegisterWith	RVGPUMachineCFGStructurizer.cpp	/^void RVGPUMachineCFGStructurizer::replaceRegisterWith($/;"	f	class:RVGPUMachineCFGStructurizer	typeref:typename:void
replaceUseWithTableLookup	RVGPULowerModuleLDSPass.cpp	/^  void replaceUseWithTableLookup(Module &M, IRBuilder<> &Builder,$/;"	f	class:__anoncc7483b30111::RVGPULowerModuleLDS	typeref:typename:void	file:
replaceUsesInInstructionsWithTableLookup	RVGPULowerModuleLDSPass.cpp	/^  void replaceUsesInInstructionsWithTableLookup($/;"	f	class:__anoncc7483b30111::RVGPULowerModuleLDS	typeref:typename:void	file:
replaceWithConstant	RVGPULegalizerInfo.cpp	/^static bool replaceWithConstant(MachineIRBuilder &B, MachineInstr &MI,$/;"	f	typeref:typename:bool	file:
reportFunctionRemoved	RVGPURemoveIncompatibleFunctions.cpp	/^void reportFunctionRemoved(Function &F, unsigned Feature) {$/;"	f	namespace:__anonbd23f2080111	typeref:typename:void
reportIllegalCopy	RVInstrInfo.cpp	/^static void reportIllegalCopy(const RVInstrInfo *TII, MachineBasicBlock &MBB,$/;"	f	typeref:typename:void	file:
reportMismatch	GCNRegPressure.cpp	/^Printable llvm::reportMismatch(const GCNRPTracker::LiveRegSet &LISLR,$/;"	f	class:llvm	typeref:typename:Printable
reportUnsupported	SIMemoryLegalizer.cpp	/^void SIMemOpAccess::reportUnsupported(const MachineBasicBlock::iterator &MI,$/;"	f	class:SIMemOpAccess	typeref:typename:void
requested_workgroups_per_cu	RVKernelCodeT.h	/^  uint32_t requested_workgroups_per_cu;$/;"	m	struct:hsa_ext_control_directives_s	typeref:typename:uint32_t
required_dim	RVKernelCodeT.h	/^  uint8_t required_dim;$/;"	m	struct:hsa_ext_control_directives_s	typeref:typename:uint8_t
required_grid_size	RVKernelCodeT.h	/^  hsa_dim3_t required_grid_size;$/;"	m	struct:hsa_ext_control_directives_s	typeref:typename:hsa_dim3_t
required_workgroup_size	RVKernelCodeT.h	/^  hsa_dim3_t required_workgroup_size;$/;"	m	struct:hsa_ext_control_directives_s	typeref:typename:hsa_dim3_t
requiresFrameIndexReplacementScavenging	RVRegisterInfo.cpp	/^bool RVRegisterInfo::requiresFrameIndexReplacementScavenging($/;"	f	class:RVRegisterInfo	typeref:typename:bool
requiresFrameIndexScavenging	RVRegisterInfo.cpp	/^bool RVRegisterInfo::requiresFrameIndexScavenging($/;"	f	class:RVRegisterInfo	typeref:typename:bool
requiresNopBeforeDeallocVGPRs	GCNSubtarget.h	/^  bool requiresNopBeforeDeallocVGPRs() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
requiresRegisterScavenging	RVRegisterInfo.cpp	/^bool RVRegisterInfo::requiresRegisterScavenging(const MachineFunction &Fn) const {$/;"	f	class:RVRegisterInfo	typeref:typename:bool
requiresStackPointerReference	RVFrameLowering.cpp	/^bool RVFrameLowering::requiresStackPointerReference($/;"	f	class:RVFrameLowering	typeref:typename:bool
requiresUniformRegister	RVISelLowering.cpp	/^bool RVTargetLowering::requiresUniformRegister(MachineFunction &MF,$/;"	f	class:RVTargetLowering	typeref:typename:bool
requiresVirtualBaseRegisters	RVRegisterInfo.cpp	/^bool RVRegisterInfo::requiresVirtualBaseRegisters($/;"	f	class:RVRegisterInfo	typeref:typename:bool
reservePrivateMemoryRegs	RVISelLowering.cpp	/^static void reservePrivateMemoryRegs(const TargetMachine &TM,$/;"	f	typeref:typename:void	file:
reserveRegisterTuples	RVRegisterInfo.cpp	/^void RVRegisterInfo::reserveRegisterTuples(BitVector &Reserved,$/;"	f	class:RVRegisterInfo	typeref:typename:void
reserveWWMRegister	RVMachineFunctionInfo.h	/^  void reserveWWMRegister(Register Reg) { WWMReservedRegs.insert(Reg); }$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:void
reserved	RVKernelCodeT.h	/^  uint8_t reserved[75];$/;"	m	struct:hsa_ext_control_directives_s	typeref:typename:uint8_t[75]
reserved0	RVKernelCodeT.h	/^  uint64_t reserved0;$/;"	m	struct:rv_kernel_code_t	typeref:typename:uint64_t
reserved3	RVKernelCodeT.h	/^  uint8_t reserved3[12];$/;"	m	struct:rv_kernel_code_t	typeref:typename:uint8_t[12]
reservedPrivateSegmentBufferReg	RVRegisterInfo.cpp	/^MCRegister RVRegisterInfo::reservedPrivateSegmentBufferReg($/;"	f	class:RVRegisterInfo	typeref:typename:MCRegister
reserved_sgpr_count	RVKernelCodeT.h	/^  uint16_t reserved_sgpr_count;$/;"	m	struct:rv_kernel_code_t	typeref:typename:uint16_t
reserved_sgpr_first	RVKernelCodeT.h	/^  uint16_t reserved_sgpr_first;$/;"	m	struct:rv_kernel_code_t	typeref:typename:uint16_t
reserved_vgpr_count	RVKernelCodeT.h	/^  uint16_t reserved_vgpr_count;$/;"	m	struct:rv_kernel_code_t	typeref:typename:uint16_t
reserved_vgpr_first	RVKernelCodeT.h	/^  uint16_t reserved_vgpr_first;$/;"	m	struct:rv_kernel_code_t	typeref:typename:uint16_t
reset	GCNRegPressure.cpp	/^bool GCNDownwardRPTracker::reset(const MachineInstr &MI,$/;"	f	class:GCNDownwardRPTracker	typeref:typename:bool
reset	GCNRegPressure.cpp	/^void GCNRPTracker::reset(const MachineInstr &MI,$/;"	f	class:GCNRPTracker	typeref:typename:void
reset	GCNRegPressure.cpp	/^void GCNUpwardRPTracker::reset(const MachineRegisterInfo &MRI_,$/;"	f	class:GCNUpwardRPTracker	typeref:typename:void
reset	GCNRegPressure.h	/^  void reset(const MachineBasicBlock &MBB) {$/;"	f	class:llvm::GCNUpwardRPTracker	typeref:typename:void
reset	GCNRegPressure.h	/^  void reset(const MachineInstr &MI) {$/;"	f	class:llvm::GCNUpwardRPTracker	typeref:typename:void
reset	GCNRegPressure.h	/^  void reset(const MachineRegisterInfo &MRI, SlotIndex SI) {$/;"	f	class:llvm::GCNUpwardRPTracker	typeref:typename:void
reset	RVGPUIGroupLP.cpp	/^void PipelineSolver::reset() {$/;"	f	class:__anon61b122dc0111::PipelineSolver	typeref:typename:void
reset	RVGPULibFunc.h	/^    void reset() {$/;"	f	struct:llvm::RVGPULibFuncBase::Param	typeref:typename:void
reset	Utils/RVGPUPALMetadata.cpp	/^void RVGPUPALMetadata::reset() {$/;"	f	class:RVGPUPALMetadata	typeref:typename:void
resetClause	GCNHazardRecognizer.h	/^  void resetClause() {$/;"	f	class:llvm::GCNHazardRecognizer	typeref:typename:void
resetEdges	RVGPUIGroupLP.cpp	/^static void resetEdges(SUnit &SU, ScheduleDAGInstrs *DAG) {$/;"	f	namespace:__anon61b122dc0111	typeref:typename:void	file:
resetMaxPressure	GCNRegPressure.h	/^  void resetMaxPressure() { MaxPressure = CurPressure; }$/;"	f	class:llvm::GCNUpwardRPTracker	typeref:typename:void
resolveFrameIndex	RVRegisterInfo.cpp	/^void RVRegisterInfo::resolveFrameIndex(MachineInstr &MI, Register BaseReg,$/;"	f	class:RVRegisterInfo	typeref:typename:void
resolvePHIInfos	RVGPUMachineCFGStructurizer.cpp	/^void RVGPUMachineCFGStructurizer::resolvePHIInfos(MachineBasicBlock *FunctionEntry) {$/;"	f	class:RVGPUMachineCFGStructurizer	typeref:typename:void
resolveSources	RVISelLowering.cpp	/^resolveSources(SelectionDAG &DAG, SDLoc SL,$/;"	f	typeref:typename:SDValue	file:
restore	RVFrameLowering.cpp	/^  void restore() {$/;"	f	class:llvm::PrologEpilogSGPRSpillBuilder	typeref:typename:void	file:
restore	RVRegisterInfo.cpp	/^  void restore() {$/;"	f	struct:llvm::SGPRSpillBuilder	typeref:typename:void	file:
restoreExec	RVInstrInfo.cpp	/^void RVInstrInfo::restoreExec(MachineFunction &MF, MachineBasicBlock &MBB,$/;"	f	class:RVInstrInfo	typeref:typename:void
restoreFromMemory	RVFrameLowering.cpp	/^  void restoreFromMemory(const int FI) {$/;"	f	class:llvm::PrologEpilogSGPRSpillBuilder	typeref:typename:void	file:
restoreFromVGPRLane	RVFrameLowering.cpp	/^  void restoreFromVGPRLane(const int FI) {$/;"	f	class:llvm::PrologEpilogSGPRSpillBuilder	typeref:typename:void	file:
restoreOrder	GCNIterativeScheduler.cpp	/^  void restoreOrder() {$/;"	f	class:GCNIterativeScheduler::OverrideLegacyStrategy	typeref:typename:void	file:
restoreSGPR	RVRegisterInfo.cpp	/^bool RVRegisterInfo::restoreSGPR(MachineBasicBlock::iterator MI, int Index,$/;"	f	class:RVRegisterInfo	typeref:typename:bool
restoreSULinksLeft	SIMachineScheduler.cpp	/^void SIScheduleDAGMI::restoreSULinksLeft() {$/;"	f	class:SIScheduleDAGMI	typeref:typename:void
result	RVGPULibCalls.cpp	/^  double   result;$/;"	m	struct:TableEntry	typeref:typename:double	file:
resultDependsOnExec	RVInstrInfo.cpp	/^static bool resultDependsOnExec(const MachineInstr &MI) {$/;"	f	typeref:typename:bool	file:
retreatPosition	RVGPUIGroupLP.cpp	/^void PipelineSolver::retreatPosition() {$/;"	f	class:__anon61b122dc0111::PipelineSolver	typeref:typename:void
returnsVoid	RVMachineFunctionInfo.h	/^  bool returnsVoid() const {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:bool
reverseBranchCondition	RVInstrInfo.cpp	/^bool RVInstrInfo::reverseBranchCondition($/;"	f	class:RVInstrInfo	typeref:typename:bool
revertScheduling	GCNSchedStrategy.cpp	/^void GCNSchedStage::revertScheduling() {$/;"	f	class:GCNSchedStage	typeref:typename:void
rewriteCodeBBTerminator	RVGPUMachineCFGStructurizer.cpp	/^void RVGPUMachineCFGStructurizer::rewriteCodeBBTerminator(MachineBasicBlock *CodeBB,$/;"	f	class:RVGPUMachineCFGStructurizer	typeref:typename:void
rewriteIntrinsicWithAddressSpace	RVGPUTargetTransformInfo.cpp	/^Value *GCNTTIImpl::rewriteIntrinsicWithAddressSpace(IntrinsicInst *II,$/;"	f	class:GCNTTIImpl	typeref:typename:Value *
rewriteLiveOutRegs	RVGPUMachineCFGStructurizer.cpp	/^void RVGPUMachineCFGStructurizer::rewriteLiveOutRegs(MachineBasicBlock *IfBB,$/;"	f	class:RVGPUMachineCFGStructurizer	typeref:typename:void
rewriteReg	GCNRewritePartialRegUses.cpp	/^bool GCNRewritePartialRegUses::rewriteReg(Register Reg) const {$/;"	f	class:GCNRewritePartialRegUses	typeref:typename:bool
rewriteRegionEntryPHI	RVGPUMachineCFGStructurizer.cpp	/^void RVGPUMachineCFGStructurizer::rewriteRegionEntryPHI(LinearizedRegion *Region,$/;"	f	class:RVGPUMachineCFGStructurizer	typeref:typename:void
rewriteRegionEntryPHIs	RVGPUMachineCFGStructurizer.cpp	/^void RVGPUMachineCFGStructurizer::rewriteRegionEntryPHIs(LinearizedRegion *Region,$/;"	f	class:RVGPUMachineCFGStructurizer	typeref:typename:void
rewriteRegionExitPHI	RVGPUMachineCFGStructurizer.cpp	/^void RVGPUMachineCFGStructurizer::rewriteRegionExitPHI(RegionMRT *Region,$/;"	f	class:RVGPUMachineCFGStructurizer	typeref:typename:void
rewriteRegionExitPHIs	RVGPUMachineCFGStructurizer.cpp	/^void RVGPUMachineCFGStructurizer::rewriteRegionExitPHIs(RegionMRT *Region,$/;"	f	class:RVGPUMachineCFGStructurizer	typeref:typename:void
rewriteRegs	SIPreAllocateWWMRegs.cpp	/^void SIPreAllocateWWMRegs::rewriteRegs(MachineFunction &MF) {$/;"	f	class:SIPreAllocateWWMRegs	typeref:typename:void
run	RVGPUAliasAnalysis.h	/^  RVGPUAAResult run(Function &F, AnalysisManager<Function> &AM) {$/;"	f	class:llvm::RVGPUAA	typeref:typename:RVGPUAAResult
run	RVGPUAlwaysInlinePass.cpp	/^PreservedAnalyses RVGPUAlwaysInlinePass::run(Module &M,$/;"	f	class:RVGPUAlwaysInlinePass	typeref:typename:PreservedAnalyses
run	RVGPUAtomicOptimizer.cpp	/^PreservedAnalyses RVGPUAtomicOptimizerPass::run(Function &F,$/;"	f	class:RVGPUAtomicOptimizerPass	typeref:typename:PreservedAnalyses
run	RVGPUAtomicOptimizer.cpp	/^bool RVGPUAtomicOptimizerImpl::run(Function &F) {$/;"	f	class:RVGPUAtomicOptimizerImpl	typeref:typename:bool
run	RVGPUAttributor.cpp	/^PreservedAnalyses llvm::RVGPUAttributorPass::run(Module &M,$/;"	f	class:llvm::RVGPUAttributorPass	typeref:typename:PreservedAnalyses
run	RVGPUCodeGenPrepare.cpp	/^PreservedAnalyses RVGPUCodeGenPreparePass::run(Function &F,$/;"	f	class:RVGPUCodeGenPreparePass	typeref:typename:PreservedAnalyses
run	RVGPUCodeGenPrepare.cpp	/^bool RVGPUCodeGenPrepareImpl::run(Function &F) {$/;"	f	class:RVGPUCodeGenPrepareImpl	typeref:typename:bool
run	RVGPUCtorDtorLowering.cpp	/^PreservedAnalyses RVGPUCtorDtorLoweringPass::run(Module &M,$/;"	f	class:RVGPUCtorDtorLoweringPass	typeref:typename:PreservedAnalyses
run	RVGPUImageIntrinsicOptimizer.cpp	/^RVGPUImageIntrinsicOptimizerPass::run(Function &F,$/;"	f	class:RVGPUImageIntrinsicOptimizerPass	typeref:typename:PreservedAnalyses
run	RVGPULibCalls.cpp	/^PreservedAnalyses RVGPUSimplifyLibCallsPass::run(Function &F,$/;"	f	class:RVGPUSimplifyLibCallsPass	typeref:typename:PreservedAnalyses
run	RVGPULibCalls.cpp	/^PreservedAnalyses RVGPUUseNativeCallsPass::run(Function &F,$/;"	f	class:RVGPUUseNativeCallsPass	typeref:typename:PreservedAnalyses
run	RVGPULowerKernelArguments.cpp	/^RVGPULowerKernelArgumentsPass::run(Function &F, FunctionAnalysisManager &AM) {$/;"	f	class:RVGPULowerKernelArgumentsPass	typeref:typename:PreservedAnalyses
run	RVGPULowerKernelAttributes.cpp	/^RVGPULowerKernelAttributesPass::run(Function &F, FunctionAnalysisManager &AM) {$/;"	f	class:RVGPULowerKernelAttributesPass	typeref:typename:PreservedAnalyses
run	RVGPULowerModuleLDSPass.cpp	/^PreservedAnalyses RVGPULowerModuleLDSPass::run(Module &M,$/;"	f	class:RVGPULowerModuleLDSPass	typeref:typename:PreservedAnalyses
run	RVGPUPrintfRuntimeBinding.cpp	/^RVGPUPrintfRuntimeBindingPass::run(Module &M, ModuleAnalysisManager &AM) {$/;"	f	class:RVGPUPrintfRuntimeBindingPass	typeref:typename:PreservedAnalyses
run	RVGPUPrintfRuntimeBinding.cpp	/^bool RVGPUPrintfRuntimeBindingImpl::run(Module &M) {$/;"	f	class:RVGPUPrintfRuntimeBindingImpl	typeref:typename:bool
run	RVGPUPromoteAlloca.cpp	/^PreservedAnalyses RVGPUPromoteAllocaPass::run(Function &F,$/;"	f	class:RVGPUPromoteAllocaPass	typeref:typename:PreservedAnalyses
run	RVGPUPromoteAlloca.cpp	/^RVGPUPromoteAllocaToVectorPass::run(Function &F, FunctionAnalysisManager &AM) {$/;"	f	class:RVGPUPromoteAllocaToVectorPass	typeref:typename:PreservedAnalyses
run	RVGPUPromoteAlloca.cpp	/^bool RVGPUPromoteAllocaImpl::run(Function &F, bool PromoteToLDS) {$/;"	f	class:RVGPUPromoteAllocaImpl	typeref:typename:bool
run	RVGPUPromoteKernelArguments.cpp	/^RVGPUPromoteKernelArgumentsPass::run(Function &F,$/;"	f	class:RVGPUPromoteKernelArgumentsPass	typeref:typename:PreservedAnalyses
run	RVGPUPromoteKernelArguments.cpp	/^bool RVGPUPromoteKernelArguments::run(Function &F, MemorySSA &MSSA,$/;"	f	class:RVGPUPromoteKernelArguments	typeref:typename:bool
run	RVGPURewriteUndefForPHI.cpp	/^RVGPURewriteUndefForPHIPass::run(Function &F, FunctionAnalysisManager &AM) {$/;"	f	class:RVGPURewriteUndefForPHIPass	typeref:typename:PreservedAnalyses
run	RVGPUUnifyDivergentExitNodes.cpp	/^RVGPUUnifyDivergentExitNodesPass::run(Function &F,$/;"	f	class:RVGPUUnifyDivergentExitNodesPass	typeref:typename:PreservedAnalyses
run	RVGPUUnifyDivergentExitNodes.cpp	/^bool RVGPUUnifyDivergentExitNodesImpl::run(Function &F, DominatorTree *DT,$/;"	f	class:RVGPUUnifyDivergentExitNodesImpl	typeref:typename:bool
run	RVGPUUnifyMetadata.cpp	/^  PreservedAnalyses RVGPUUnifyMetadataPass::run(Module &M,$/;"	f	class:RVGPUUnifyMetadataPass	typeref:typename:PreservedAnalyses
runImpl	RVGPUAttributor.cpp	/^static bool runImpl(Module &M, AnalysisGetter &AG, TargetMachine &TM) {$/;"	f	namespace:__anon512e119a0111	typeref:typename:bool	file:
runOnFunction	RVGPUAnnotateUniformValues.cpp	/^bool RVGPUAnnotateUniformValues::runOnFunction(Function &F) {$/;"	f	class:RVGPUAnnotateUniformValues	typeref:typename:bool
runOnFunction	RVGPUAtomicOptimizer.cpp	/^bool RVGPUAtomicOptimizer::runOnFunction(Function &F) {$/;"	f	class:RVGPUAtomicOptimizer	typeref:typename:bool
runOnFunction	RVGPUCodeGenPrepare.cpp	/^bool RVGPUCodeGenPrepare::runOnFunction(Function &F) {$/;"	f	class:RVGPUCodeGenPrepare	typeref:typename:bool
runOnFunction	RVGPUImageIntrinsicOptimizer.cpp	/^bool RVGPUImageIntrinsicOptimizer::runOnFunction(Function &F) {$/;"	f	class:RVGPUImageIntrinsicOptimizer	typeref:typename:bool
runOnFunction	RVGPULateCodeGenPrepare.cpp	/^bool RVGPULateCodeGenPrepare::runOnFunction(Function &F) {$/;"	f	class:RVGPULateCodeGenPrepare	typeref:typename:bool
runOnFunction	RVGPULowerKernelArguments.cpp	/^bool RVGPULowerKernelArguments::runOnFunction(Function &F) {$/;"	f	class:RVGPULowerKernelArguments	typeref:typename:bool
runOnFunction	RVGPUPerfHintAnalysis.cpp	/^bool RVGPUPerfHint::runOnFunction(Function &F) {$/;"	f	class:__anon406ad74e0111::RVGPUPerfHint	typeref:typename:bool
runOnFunction	RVGPUPromoteAlloca.cpp	/^  bool runOnFunction(Function &F) override {$/;"	f	class:__anonea904d1c0111::RVGPUPromoteAlloca	typeref:typename:bool	file:
runOnFunction	RVGPUPromoteAlloca.cpp	/^  bool runOnFunction(Function &F) override {$/;"	f	class:__anonea904d1c0111::RVGPUPromoteAllocaToVector	typeref:typename:bool	file:
runOnFunction	RVGPUPromoteKernelArguments.cpp	/^bool RVGPUPromoteKernelArguments::runOnFunction(Function &F) {$/;"	f	class:RVGPUPromoteKernelArguments	typeref:typename:bool
runOnFunction	RVGPURewriteOutArguments.cpp	/^bool RVGPURewriteOutArguments::runOnFunction(Function &F) {$/;"	f	class:RVGPURewriteOutArguments	typeref:typename:bool
runOnFunction	RVGPURewriteUndefForPHI.cpp	/^bool RVGPURewriteUndefForPHILegacy::runOnFunction(Function &F) {$/;"	f	class:RVGPURewriteUndefForPHILegacy	typeref:typename:bool
runOnFunction	RVGPUUnifyDivergentExitNodes.cpp	/^bool RVGPUUnifyDivergentExitNodes::runOnFunction(Function &F) {$/;"	f	class:RVGPUUnifyDivergentExitNodes	typeref:typename:bool
runOnFunction	SIAnnotateControlFlow.cpp	/^bool SIAnnotateControlFlow::runOnFunction(Function &F) {$/;"	f	class:SIAnnotateControlFlow	typeref:typename:bool
runOnInstruction	GCNHazardRecognizer.cpp	/^void GCNHazardRecognizer::runOnInstruction(MachineInstr *MI) {$/;"	f	class:GCNHazardRecognizer	typeref:typename:void
runOnMachineBasicBlock	RVGPUInsertDelayAlu.cpp	/^  bool runOnMachineBasicBlock(MachineBasicBlock &MBB, bool Emit) {$/;"	f	class:__anonc7296b900111::RVGPUInsertDelayAlu	typeref:typename:bool	file:
runOnMachineFunction	GCNCreateVOPD.cpp	/^  bool runOnMachineFunction(MachineFunction &MF) override {$/;"	f	class:__anon7e59fb9b0111::GCNCreateVOPD	typeref:typename:bool	file:
runOnMachineFunction	GCNDPPCombine.cpp	/^bool GCNDPPCombine::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:GCNDPPCombine	typeref:typename:bool
runOnMachineFunction	GCNNSAReassign.cpp	/^bool GCNNSAReassign::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:GCNNSAReassign	typeref:typename:bool
runOnMachineFunction	GCNPreRALongBranchReg.cpp	/^bool GCNPreRALongBranchReg::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:GCNPreRALongBranchReg	typeref:typename:bool
runOnMachineFunction	GCNPreRAOptimizations.cpp	/^bool GCNPreRAOptimizations::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:GCNPreRAOptimizations	typeref:typename:bool
runOnMachineFunction	GCNRegPressure.cpp	/^bool GCNRegPressurePrinter::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:GCNRegPressurePrinter	typeref:typename:bool
runOnMachineFunction	GCNRewritePartialRegUses.cpp	/^bool GCNRewritePartialRegUses::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:GCNRewritePartialRegUses	typeref:typename:bool
runOnMachineFunction	RVGPUAsmPrinter.cpp	/^bool RVGPUAsmPrinter::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:RVGPUAsmPrinter	typeref:typename:bool
runOnMachineFunction	RVGPUGlobalISelDivergenceLowering.cpp	/^bool RVGPUGlobalISelDivergenceLowering::runOnMachineFunction($/;"	f	class:RVGPUGlobalISelDivergenceLowering	typeref:typename:bool
runOnMachineFunction	RVGPUISelDAGToDAG.cpp	/^bool RVGPUDAGToDAGISel::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:RVGPUDAGToDAGISel	typeref:typename:bool
runOnMachineFunction	RVGPUInsertDelayAlu.cpp	/^  bool runOnMachineFunction(MachineFunction &MF) override {$/;"	f	class:__anonc7296b900111::RVGPUInsertDelayAlu	typeref:typename:bool	file:
runOnMachineFunction	RVGPUInsertSingleUseVDST.cpp	/^  bool runOnMachineFunction(MachineFunction &MF) override {$/;"	f	class:__anon6c17cf8f0111::RVGPUInsertSingleUseVDST	typeref:typename:bool	file:
runOnMachineFunction	RVGPUMachineCFGStructurizer.cpp	/^bool RVGPUMachineCFGStructurizer::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:RVGPUMachineCFGStructurizer	typeref:typename:bool
runOnMachineFunction	RVGPUPostLegalizerCombiner.cpp	/^bool RVGPUPostLegalizerCombiner::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:RVGPUPostLegalizerCombiner	typeref:typename:bool
runOnMachineFunction	RVGPUPreLegalizerCombiner.cpp	/^bool RVGPUPreLegalizerCombiner::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:RVGPUPreLegalizerCombiner	typeref:typename:bool
runOnMachineFunction	RVGPURegBankCombiner.cpp	/^bool RVGPURegBankCombiner::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:RVGPURegBankCombiner	typeref:typename:bool
runOnMachineFunction	RVGPUSetWavePriority.cpp	/^bool RVGPUSetWavePriority::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:RVGPUSetWavePriority	typeref:typename:bool
runOnMachineFunction	SIFixSGPRCopies.cpp	/^bool SIFixSGPRCopies::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:SIFixSGPRCopies	typeref:typename:bool
runOnMachineFunction	SIFixVGPRCopies.cpp	/^bool SIFixVGPRCopies::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:SIFixVGPRCopies	typeref:typename:bool
runOnMachineFunction	SIFoldOperands.cpp	/^bool SIFoldOperands::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:SIFoldOperands	typeref:typename:bool
runOnMachineFunction	SIFormMemoryClauses.cpp	/^bool SIFormMemoryClauses::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:SIFormMemoryClauses	typeref:typename:bool
runOnMachineFunction	SIInsertHardClauses.cpp	/^  bool runOnMachineFunction(MachineFunction &MF) override {$/;"	f	class:__anon09538a560111::SIInsertHardClauses	typeref:typename:bool	file:
runOnMachineFunction	SIInsertWaitcnts.cpp	/^bool SIInsertWaitcnts::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:SIInsertWaitcnts	typeref:typename:bool
runOnMachineFunction	SILateBranchLowering.cpp	/^bool SILateBranchLowering::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:SILateBranchLowering	typeref:typename:bool
runOnMachineFunction	SILoadStoreOptimizer.cpp	/^bool SILoadStoreOptimizer::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:SILoadStoreOptimizer	typeref:typename:bool
runOnMachineFunction	SILowerControlFlow.cpp	/^bool SILowerControlFlow::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:SILowerControlFlow	typeref:typename:bool
runOnMachineFunction	SILowerI1Copies.cpp	/^bool SILowerI1Copies::runOnMachineFunction(MachineFunction &TheMF) {$/;"	f	class:SILowerI1Copies	typeref:typename:bool
runOnMachineFunction	SILowerSGPRSpills.cpp	/^bool SILowerSGPRSpills::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:SILowerSGPRSpills	typeref:typename:bool
runOnMachineFunction	SILowerWWMCopies.cpp	/^bool SILowerWWMCopies::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:SILowerWWMCopies	typeref:typename:bool
runOnMachineFunction	SIMemoryLegalizer.cpp	/^bool SIMemoryLegalizer::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:SIMemoryLegalizer	typeref:typename:bool
runOnMachineFunction	SIModeRegister.cpp	/^bool SIModeRegister::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:SIModeRegister	typeref:typename:bool
runOnMachineFunction	SIOptimizeExecMasking.cpp	/^bool SIOptimizeExecMasking::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:SIOptimizeExecMasking	typeref:typename:bool
runOnMachineFunction	SIOptimizeExecMaskingPreRA.cpp	/^bool SIOptimizeExecMaskingPreRA::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:SIOptimizeExecMaskingPreRA	typeref:typename:bool
runOnMachineFunction	SIOptimizeVGPRLiveRange.cpp	/^bool SIOptimizeVGPRLiveRange::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:SIOptimizeVGPRLiveRange	typeref:typename:bool
runOnMachineFunction	SIPeepholeSDWA.cpp	/^bool SIPeepholeSDWA::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:SIPeepholeSDWA	typeref:typename:bool
runOnMachineFunction	SIPostRABundler.cpp	/^bool SIPostRABundler::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:SIPostRABundler	typeref:typename:bool
runOnMachineFunction	SIPreAllocateWWMRegs.cpp	/^bool SIPreAllocateWWMRegs::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:SIPreAllocateWWMRegs	typeref:typename:bool
runOnMachineFunction	SIPreEmitPeephole.cpp	/^bool SIPreEmitPeephole::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:SIPreEmitPeephole	typeref:typename:bool
runOnMachineFunction	SIShrinkInstructions.cpp	/^bool SIShrinkInstructions::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:SIShrinkInstructions	typeref:typename:bool
runOnMachineFunction	SIWholeQuadMode.cpp	/^bool SIWholeQuadMode::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:SIWholeQuadMode	typeref:typename:bool
runOnModule	RVGPUAlwaysInlinePass.cpp	/^bool RVGPUAlwaysInline::runOnModule(Module &M) {$/;"	f	class:RVGPUAlwaysInline	typeref:typename:bool
runOnModule	RVGPUAttributor.cpp	/^  bool runOnModule(Module &M) override {$/;"	f	class:__anon512e119a0111::RVGPUAttributorLegacy	typeref:typename:bool	file:
runOnModule	RVGPUCtorDtorLowering.cpp	/^  bool runOnModule(Module &M) override { return lowerCtorsAndDtors(M); }$/;"	f	class:__anon237d7fe20111::RVGPUCtorDtorLoweringLegacy	typeref:typename:bool	file:
runOnModule	RVGPULowerKernelAttributes.cpp	/^bool RVGPULowerKernelAttributes::runOnModule(Module &M) {$/;"	f	class:RVGPULowerKernelAttributes	typeref:typename:bool
runOnModule	RVGPULowerModuleLDSPass.cpp	/^  bool runOnModule(Module &M) override {$/;"	f	class:__anoncc7483b30111::RVGPULowerModuleLDSLegacy	typeref:typename:bool	file:
runOnModule	RVGPULowerModuleLDSPass.cpp	/^  bool runOnModule(Module &M) {$/;"	f	class:__anoncc7483b30111::RVGPULowerModuleLDS	typeref:typename:bool	file:
runOnModule	RVGPUOpenCLEnqueuedBlockLowering.cpp	/^bool RVGPUOpenCLEnqueuedBlockLowering::runOnModule(Module &M) {$/;"	f	class:RVGPUOpenCLEnqueuedBlockLowering	typeref:typename:bool
runOnModule	RVGPUPrintfRuntimeBinding.cpp	/^bool RVGPUPrintfRuntimeBinding::runOnModule(Module &M) {$/;"	f	class:RVGPUPrintfRuntimeBinding	typeref:typename:bool
runOnModule	RVGPURemoveIncompatibleFunctions.cpp	/^  bool runOnModule(Module &M) override {$/;"	f	class:__anonbd23f2080111::RVGPURemoveIncompatibleFunctions	typeref:typename:bool	file:
runOnModule	RVGPUResourceUsageAnalysis.cpp	/^bool RVGPUResourceUsageAnalysis::runOnModule(Module &M) {$/;"	f	class:RVGPUResourceUsageAnalysis	typeref:typename:bool
runOnModule	RVGPUUnifyMetadata.cpp	/^  bool RVGPUUnifyMetadata::runOnModule(Module &M) {$/;"	f	class:RVGPUUnifyMetadata	typeref:typename:bool
runOnSCC	RVGPUAnnotateKernelFeatures.cpp	/^bool RVGPUAnnotateKernelFeatures::runOnSCC(CallGraphSCC &SCC) {$/;"	f	class:RVGPUAnnotateKernelFeatures	typeref:typename:bool
runOnSCC	RVGPUPerfHintAnalysis.cpp	/^bool RVGPUPerfHintAnalysis::runOnSCC(CallGraphSCC &SCC) {$/;"	f	class:RVGPUPerfHintAnalysis	typeref:typename:bool
runSchedStages	GCNSchedStrategy.cpp	/^void GCNScheduleDAGMILive::runSchedStages() {$/;"	f	class:GCNScheduleDAGMILive	typeref:typename:void
runtime_loader_kernel_symbol	RVKernelCodeT.h	/^  uint64_t runtime_loader_kernel_symbol;$/;"	m	struct:rv_kernel_code_t	typeref:typename:uint64_t
rv_code_property32_t	RVKernelCodeT.h	/^typedef uint32_t rv_code_property32_t;$/;"	t	typeref:typename:uint32_t
rv_code_property_mask_t	RVKernelCodeT.h	/^enum rv_code_property_mask_t {$/;"	g
rv_compute_pgm_resource_register64_t	RVKernelCodeT.h	/^typedef uint64_t rv_compute_pgm_resource_register64_t;$/;"	t	typeref:typename:uint64_t
rv_element_byte_size_t	RVKernelCodeT.h	/^enum rv_element_byte_size_t {$/;"	g
rv_kernel_code_t	RVKernelCodeT.h	/^struct rv_kernel_code_t {$/;"	s
rv_kernel_code_version_major	RVKernelCodeT.h	/^  uint32_t rv_kernel_code_version_major;$/;"	m	struct:rv_kernel_code_t	typeref:typename:uint32_t
rv_kernel_code_version_minor	RVKernelCodeT.h	/^  uint32_t rv_kernel_code_version_minor;$/;"	m	struct:rv_kernel_code_t	typeref:typename:uint32_t
rv_machine_kind	RVKernelCodeT.h	/^  uint16_t rv_machine_kind;$/;"	m	struct:rv_kernel_code_t	typeref:typename:uint16_t
rv_machine_version_major	RVKernelCodeT.h	/^  uint16_t rv_machine_version_major;$/;"	m	struct:rv_kernel_code_t	typeref:typename:uint16_t
rv_machine_version_minor	RVKernelCodeT.h	/^  uint16_t rv_machine_version_minor;$/;"	m	struct:rv_kernel_code_t	typeref:typename:uint16_t
rv_machine_version_stepping	RVKernelCodeT.h	/^  uint16_t rv_machine_version_stepping;$/;"	m	struct:rv_kernel_code_t	typeref:typename:uint16_t
rvgpu_code_version32_t	RVKernelCodeT.h	/^typedef uint32_t rvgpu_code_version32_t;$/;"	t	typeref:typename:uint32_t
rvgpu_code_version_t	RVKernelCodeT.h	/^enum rvgpu_code_version_t {$/;"	g
rvhsa	MCTargetDesc/RVGPUTargetStreamer.h	/^namespace rvhsa {$/;"	n	namespace:llvm
rvhsa	RVGPUAsmPrinter.h	/^namespace rvhsa {$/;"	n	namespace:llvm
rvhsa	Utils/RVGPUBaseInfo.h	/^namespace rvhsa {$/;"	n	namespace:llvm
save	RVFrameLowering.cpp	/^  void save() {$/;"	f	class:llvm::PrologEpilogSGPRSpillBuilder	typeref:typename:void	file:
saveSCC	SIWholeQuadMode.cpp	/^SIWholeQuadMode::saveSCC(MachineBasicBlock &MBB,$/;"	f	class:SIWholeQuadMode	typeref:typename:MachineBasicBlock::iterator
saveToMemory	RVFrameLowering.cpp	/^  void saveToMemory(const int FI) const {$/;"	f	class:llvm::PrologEpilogSGPRSpillBuilder	typeref:typename:void	file:
saveToVGPRLane	RVFrameLowering.cpp	/^  void saveToVGPRLane(const int FI) const {$/;"	f	class:llvm::PrologEpilogSGPRSpillBuilder	typeref:typename:void	file:
scanInstructions	SIWholeQuadMode.cpp	/^char SIWholeQuadMode::scanInstructions(MachineFunction &MF,$/;"	f	class:SIWholeQuadMode	typeref:typename:char
scavengeRegs	GCNNSAReassign.cpp	/^GCNNSAReassign::scavengeRegs(SmallVectorImpl<LiveInterval *> &Intervals) const {$/;"	f	class:GCNNSAReassign	typeref:typename:bool
schedNode	GCNIterativeScheduler.cpp	/^  void schedNode(SUnit *SU, bool IsTopNode) override {}$/;"	f	class:__anon1e3e8dba0111::SchedStrategyStub	typeref:typename:void	file:
schedule	GCNILPSched.cpp	/^GCNILPScheduler::schedule(ArrayRef<const SUnit*> BotRoots,$/;"	f	class:GCNILPScheduler	typeref:typename:std::vector<const SUnit * >
schedule	GCNIterativeScheduler.cpp	/^  void schedule() {$/;"	f	class:GCNIterativeScheduler::OverrideLegacyStrategy	typeref:typename:void	file:
schedule	GCNIterativeScheduler.cpp	/^void GCNIterativeScheduler::schedule() { \/\/ overridden$/;"	f	class:GCNIterativeScheduler	typeref:typename:void
schedule	GCNMinRegStrategy.cpp	/^GCNMinRegScheduler::schedule(ArrayRef<const SUnit*> TopRoots,$/;"	f	class:GCNMinRegScheduler	typeref:typename:std::vector<const SUnit * >
schedule	GCNSchedStrategy.cpp	/^void GCNPostScheduleDAGMILive::schedule() {$/;"	f	class:GCNPostScheduleDAGMILive	typeref:typename:void
schedule	GCNSchedStrategy.cpp	/^void GCNScheduleDAGMILive::schedule() {$/;"	f	class:GCNScheduleDAGMILive	typeref:typename:void
schedule	SIMachineScheduler.cpp	/^void SIScheduleBlock::schedule(MachineBasicBlock::iterator BeginBlock,$/;"	f	class:SIScheduleBlock	typeref:typename:void
schedule	SIMachineScheduler.cpp	/^void SIScheduleDAGMI::schedule()$/;"	f	class:SIScheduleDAGMI	typeref:typename:void
scheduleBest	GCNIterativeScheduler.cpp	/^void GCNIterativeScheduler::scheduleBest(Region &R) {$/;"	f	class:GCNIterativeScheduler	typeref:typename:void
scheduleILP	GCNIterativeScheduler.cpp	/^void GCNIterativeScheduler::scheduleILP($/;"	f	class:GCNIterativeScheduler	typeref:typename:void
scheduleInsideBlocks	SIMachineScheduler.cpp	/^void SIScheduleBlockCreator::scheduleInsideBlocks() {$/;"	f	class:SIScheduleBlockCreator	typeref:typename:void
scheduleLegacyMaxOccupancy	GCNIterativeScheduler.cpp	/^void GCNIterativeScheduler::scheduleLegacyMaxOccupancy($/;"	f	class:GCNIterativeScheduler	typeref:typename:void
scheduleMinReg	GCNIterativeScheduler.cpp	/^void GCNIterativeScheduler::scheduleMinReg(bool force) {$/;"	f	class:GCNIterativeScheduler	typeref:typename:void
scheduleRegion	GCNIterativeScheduler.cpp	/^void GCNIterativeScheduler::scheduleRegion(Region &R, Range &&Schedule,$/;"	f	class:GCNIterativeScheduler	typeref:typename:void
scheduleVariant	SIMachineScheduler.cpp	/^SIScheduler::scheduleVariant(SISchedulerBlockCreatorVariant BlockVariant,$/;"	f	class:SIScheduler	typeref:struct:SIScheduleBlockResult
searchPredecessors	SIFixSGPRCopies.cpp	/^bool searchPredecessors(const MachineBasicBlock *MBB,$/;"	f	typeref:typename:bool
select	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::select(MachineInstr &I) {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
selectBUFSOffset	RVGPUInstructionSelector.cpp	/^RVGPUInstructionSelector::selectBUFSOffset(MachineOperand &Root) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:InstructionSelector::ComplexRendererFns
selectBVHIntrinsic	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::selectBVHIntrinsic(MachineInstr &MI) const{$/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
selectBallot	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::selectBallot(MachineInstr &I) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
selectBufferLoadLds	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::selectBufferLoadLds(MachineInstr &MI) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
selectCOPY	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::selectCOPY(MachineInstr &I) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
selectDS128Bit8ByteAligned	RVGPUInstructionSelector.cpp	/^RVGPUInstructionSelector::selectDS128Bit8ByteAligned(MachineOperand &Root) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:InstructionSelector::ComplexRendererFns
selectDS1Addr1Offset	RVGPUInstructionSelector.cpp	/^RVGPUInstructionSelector::selectDS1Addr1Offset(MachineOperand &Root) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:InstructionSelector::ComplexRendererFns
selectDS1Addr1OffsetImpl	RVGPUInstructionSelector.cpp	/^RVGPUInstructionSelector::selectDS1Addr1OffsetImpl(MachineOperand &Root) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:std::pair<Register,unsigned>
selectDS64Bit4ByteAligned	RVGPUInstructionSelector.cpp	/^RVGPUInstructionSelector::selectDS64Bit4ByteAligned(MachineOperand &Root) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:InstructionSelector::ComplexRendererFns
selectDSAppendConsume	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::selectDSAppendConsume(MachineInstr &MI,$/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
selectDSBvhStackIntrinsic	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::selectDSBvhStackIntrinsic($/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
selectDSGWSIntrinsic	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::selectDSGWSIntrinsic(MachineInstr &MI,$/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
selectDSOrderedIntrinsic	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::selectDSOrderedIntrinsic($/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
selectDSReadWrite2	RVGPUInstructionSelector.cpp	/^RVGPUInstructionSelector::selectDSReadWrite2(MachineOperand &Root,$/;"	f	class:RVGPUInstructionSelector	typeref:typename:InstructionSelector::ComplexRendererFns
selectDSReadWrite2Impl	RVGPUInstructionSelector.cpp	/^RVGPUInstructionSelector::selectDSReadWrite2Impl(MachineOperand &Root,$/;"	f	class:RVGPUInstructionSelector	typeref:typename:std::pair<Register,unsigned>
selectDivScale	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::selectDivScale(MachineInstr &MI) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
selectDotIUVOP3PMods	RVGPUInstructionSelector.cpp	/^RVGPUInstructionSelector::selectDotIUVOP3PMods(MachineOperand &Root) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:InstructionSelector::ComplexRendererFns
selectEndCfIntrinsic	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::selectEndCfIntrinsic(MachineInstr &MI) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
selectFlatOffset	RVGPUInstructionSelector.cpp	/^RVGPUInstructionSelector::selectFlatOffset(MachineOperand &Root) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:InstructionSelector::ComplexRendererFns
selectFlatOffsetImpl	RVGPUInstructionSelector.cpp	/^RVGPUInstructionSelector::selectFlatOffsetImpl(MachineOperand &Root,$/;"	f	class:RVGPUInstructionSelector	typeref:typename:std::pair<Register,int>
selectG_ADD_SUB	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::selectG_ADD_SUB(MachineInstr &I) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
selectG_AND_OR_XOR	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::selectG_AND_OR_XOR(MachineInstr &I) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
selectG_BRCOND	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::selectG_BRCOND(MachineInstr &I) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
selectG_BUILD_VECTOR	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::selectG_BUILD_VECTOR(MachineInstr &MI) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
selectG_CONSTANT	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::selectG_CONSTANT(MachineInstr &I) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
selectG_EXTRACT	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::selectG_EXTRACT(MachineInstr &I) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
selectG_EXTRACT_VECTOR_ELT	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::selectG_EXTRACT_VECTOR_ELT($/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
selectG_FABS	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::selectG_FABS(MachineInstr &MI) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
selectG_FNEG	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::selectG_FNEG(MachineInstr &MI) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
selectG_FPEXT	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::selectG_FPEXT(MachineInstr &I) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
selectG_GLOBAL_VALUE	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::selectG_GLOBAL_VALUE($/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
selectG_ICMP_or_FCMP	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::selectG_ICMP_or_FCMP(MachineInstr &I) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
selectG_IMPLICIT_DEF	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::selectG_IMPLICIT_DEF(MachineInstr &I) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
selectG_INSERT	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::selectG_INSERT(MachineInstr &I) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
selectG_INSERT_VECTOR_ELT	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::selectG_INSERT_VECTOR_ELT($/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
selectG_INTRINSIC	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::selectG_INTRINSIC(MachineInstr &I) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
selectG_INTRINSIC_W_SIDE_EFFECTS	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::selectG_INTRINSIC_W_SIDE_EFFECTS($/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
selectG_LOAD_STORE_ATOMICRMW	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::selectG_LOAD_STORE_ATOMICRMW($/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
selectG_MERGE_VALUES	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::selectG_MERGE_VALUES(MachineInstr &MI) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
selectG_PTRMASK	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::selectG_PTRMASK(MachineInstr &I) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
selectG_PTR_ADD	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::selectG_PTR_ADD(MachineInstr &I) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
selectG_RVGPU_MAD_64_32	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::selectG_RVGPU_MAD_64_32($/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
selectG_SBFX_UBFX	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::selectG_SBFX_UBFX(MachineInstr &MI) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
selectG_SELECT	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::selectG_SELECT(MachineInstr &I) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
selectG_SZA_EXT	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::selectG_SZA_EXT(MachineInstr &I) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
selectG_TRUNC	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::selectG_TRUNC(MachineInstr &I) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
selectG_UADDO_USUBO_UADDE_USUBE	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::selectG_UADDO_USUBO_UADDE_USUBE($/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
selectG_UNMERGE_VALUES	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::selectG_UNMERGE_VALUES(MachineInstr &MI) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
selectGlobalLoadLds	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::selectGlobalLoadLds(MachineInstr &MI) const{$/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
selectGlobalOffset	RVGPUInstructionSelector.cpp	/^RVGPUInstructionSelector::selectGlobalOffset(MachineOperand &Root) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:InstructionSelector::ComplexRendererFns
selectGlobalSAddr	RVGPUInstructionSelector.cpp	/^RVGPUInstructionSelector::selectGlobalSAddr(MachineOperand &Root) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:InstructionSelector::ComplexRendererFns
selectGroupStaticSize	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::selectGroupStaticSize(MachineInstr &I) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
selectImageIntrinsic	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::selectImageIntrinsic($/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
selectInterpP1F16	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::selectInterpP1F16(MachineInstr &MI) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
selectIntrinsicCmp	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::selectIntrinsicCmp(MachineInstr &I) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
selectInverseBallot	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::selectInverseBallot(MachineInstr &I) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
selectMUBUFAddr64	RVGPUInstructionSelector.cpp	/^RVGPUInstructionSelector::selectMUBUFAddr64(MachineOperand &Root) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:InstructionSelector::ComplexRendererFns
selectMUBUFAddr64Impl	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::selectMUBUFAddr64Impl($/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
selectMUBUFOffset	RVGPUInstructionSelector.cpp	/^RVGPUInstructionSelector::selectMUBUFOffset(MachineOperand &Root) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:InstructionSelector::ComplexRendererFns
selectMUBUFOffsetImpl	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::selectMUBUFOffsetImpl($/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
selectMUBUFScratchOffen	RVGPUInstructionSelector.cpp	/^RVGPUInstructionSelector::selectMUBUFScratchOffen(MachineOperand &Root) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:InstructionSelector::ComplexRendererFns
selectMUBUFScratchOffset	RVGPUInstructionSelector.cpp	/^RVGPUInstructionSelector::selectMUBUFScratchOffset($/;"	f	class:RVGPUInstructionSelector	typeref:typename:InstructionSelector::ComplexRendererFns
selectNamedBarrierInst	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::selectNamedBarrierInst($/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
selectPHI	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::selectPHI(MachineInstr &I) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
selectRelocConstant	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::selectRelocConstant(MachineInstr &I) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
selectReturnAddress	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::selectReturnAddress(MachineInstr &I) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
selectSBarrier	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::selectSBarrier(MachineInstr &MI) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
selectSBarrierLeave	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::selectSBarrierLeave(MachineInstr &I) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
selectSBarrierSignalIsfirst	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::selectSBarrierSignalIsfirst($/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
selectSMFMACIntrin	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::selectSMFMACIntrin(MachineInstr &MI) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
selectSMRDBufferImm	RVGPUInstructionSelector.cpp	/^RVGPUInstructionSelector::selectSMRDBufferImm(MachineOperand &Root) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:InstructionSelector::ComplexRendererFns
selectSMRDBufferImm32	RVGPUInstructionSelector.cpp	/^RVGPUInstructionSelector::selectSMRDBufferImm32(MachineOperand &Root) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:InstructionSelector::ComplexRendererFns
selectSMRDBufferSgprImm	RVGPUInstructionSelector.cpp	/^RVGPUInstructionSelector::selectSMRDBufferSgprImm(MachineOperand &Root) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:InstructionSelector::ComplexRendererFns
selectSOffset	RVISelLowering.cpp	/^static SDValue selectSOffset(SDValue SOffset, SelectionDAG &DAG,$/;"	f	typeref:typename:SDValue	file:
selectScratchOffset	RVGPUInstructionSelector.cpp	/^RVGPUInstructionSelector::selectScratchOffset(MachineOperand &Root) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:InstructionSelector::ComplexRendererFns
selectScratchSAddr	RVGPUInstructionSelector.cpp	/^RVGPUInstructionSelector::selectScratchSAddr(MachineOperand &Root) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:InstructionSelector::ComplexRendererFns
selectScratchSVAddr	RVGPUInstructionSelector.cpp	/^RVGPUInstructionSelector::selectScratchSVAddr(MachineOperand &Root) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:InstructionSelector::ComplexRendererFns
selectSmrdImm	RVGPUInstructionSelector.cpp	/^RVGPUInstructionSelector::selectSmrdImm(MachineOperand &Root) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:InstructionSelector::ComplexRendererFns
selectSmrdImm32	RVGPUInstructionSelector.cpp	/^RVGPUInstructionSelector::selectSmrdImm32(MachineOperand &Root) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:InstructionSelector::ComplexRendererFns
selectSmrdOffset	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::selectSmrdOffset(MachineOperand &Root,$/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
selectSmrdSgpr	RVGPUInstructionSelector.cpp	/^RVGPUInstructionSelector::selectSmrdSgpr(MachineOperand &Root) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:InstructionSelector::ComplexRendererFns
selectSmrdSgprImm	RVGPUInstructionSelector.cpp	/^RVGPUInstructionSelector::selectSmrdSgprImm(MachineOperand &Root) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:InstructionSelector::ComplexRendererFns
selectStackRestore	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::selectStackRestore(MachineInstr &MI) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
selectSupportsSourceMods	RVGPUISelLowering.cpp	/^static bool selectSupportsSourceMods(const SDNode *N) {$/;"	f	typeref:typename:LLVM_READONLY bool	file:
selectVCSRC	RVGPUInstructionSelector.cpp	/^RVGPUInstructionSelector::selectVCSRC(MachineOperand &Root) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:InstructionSelector::ComplexRendererFns
selectVINTERPMods	RVGPUInstructionSelector.cpp	/^RVGPUInstructionSelector::selectVINTERPMods(MachineOperand &Root) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:InstructionSelector::ComplexRendererFns
selectVINTERPModsHi	RVGPUInstructionSelector.cpp	/^RVGPUInstructionSelector::selectVINTERPModsHi(MachineOperand &Root) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:InstructionSelector::ComplexRendererFns
selectVOP3BMods	RVGPUInstructionSelector.cpp	/^RVGPUInstructionSelector::selectVOP3BMods(MachineOperand &Root) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:InstructionSelector::ComplexRendererFns
selectVOP3BMods0	RVGPUInstructionSelector.cpp	/^RVGPUInstructionSelector::selectVOP3BMods0(MachineOperand &Root) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:InstructionSelector::ComplexRendererFns
selectVOP3Mods	RVGPUInstructionSelector.cpp	/^RVGPUInstructionSelector::selectVOP3Mods(MachineOperand &Root) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:InstructionSelector::ComplexRendererFns
selectVOP3Mods0	RVGPUInstructionSelector.cpp	/^RVGPUInstructionSelector::selectVOP3Mods0(MachineOperand &Root) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:InstructionSelector::ComplexRendererFns
selectVOP3ModsImpl	RVGPUInstructionSelector.cpp	/^RVGPUInstructionSelector::selectVOP3ModsImpl(MachineOperand &Root,$/;"	f	class:RVGPUInstructionSelector	typeref:typename:std::pair<Register,unsigned>
selectVOP3ModsNonCanonicalizing	RVGPUInstructionSelector.cpp	/^RVGPUInstructionSelector::selectVOP3ModsNonCanonicalizing($/;"	f	class:RVGPUInstructionSelector	typeref:typename:InstructionSelector::ComplexRendererFns
selectVOP3NoMods	RVGPUInstructionSelector.cpp	/^RVGPUInstructionSelector::selectVOP3NoMods(MachineOperand &Root) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:InstructionSelector::ComplexRendererFns
selectVOP3OMods	RVGPUInstructionSelector.cpp	/^RVGPUInstructionSelector::selectVOP3OMods(MachineOperand &Root) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:InstructionSelector::ComplexRendererFns
selectVOP3OpSelMods	RVGPUInstructionSelector.cpp	/^RVGPUInstructionSelector::selectVOP3OpSelMods(MachineOperand &Root) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:InstructionSelector::ComplexRendererFns
selectVOP3PMadMixMods	RVGPUInstructionSelector.cpp	/^RVGPUInstructionSelector::selectVOP3PMadMixMods(MachineOperand &Root) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:InstructionSelector::ComplexRendererFns
selectVOP3PMadMixModsExt	RVGPUInstructionSelector.cpp	/^RVGPUInstructionSelector::selectVOP3PMadMixModsExt($/;"	f	class:RVGPUInstructionSelector	typeref:typename:InstructionSelector::ComplexRendererFns
selectVOP3PMadMixModsImpl	RVGPUInstructionSelector.cpp	/^RVGPUInstructionSelector::selectVOP3PMadMixModsImpl(MachineOperand &Root,$/;"	f	class:RVGPUInstructionSelector	typeref:typename:std::pair<Register,unsigned>
selectVOP3PMods	RVGPUInstructionSelector.cpp	/^RVGPUInstructionSelector::selectVOP3PMods(MachineOperand &Root) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:InstructionSelector::ComplexRendererFns
selectVOP3PModsDOT	RVGPUInstructionSelector.cpp	/^RVGPUInstructionSelector::selectVOP3PModsDOT(MachineOperand &Root) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:InstructionSelector::ComplexRendererFns
selectVOP3PModsImpl	RVGPUInstructionSelector.cpp	/^RVGPUInstructionSelector::selectVOP3PModsImpl($/;"	f	class:RVGPUInstructionSelector	typeref:typename:std::pair<Register,unsigned>
selectVSRC0	RVGPUInstructionSelector.cpp	/^RVGPUInstructionSelector::selectVSRC0(MachineOperand &Root) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:InstructionSelector::ComplexRendererFns
selectWMMAOpSelVOP3PMods	RVGPUInstructionSelector.cpp	/^RVGPUInstructionSelector::selectWMMAOpSelVOP3PMods($/;"	f	class:RVGPUInstructionSelector	typeref:typename:InstructionSelector::ComplexRendererFns
selectWaveAddress	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::selectWaveAddress(MachineInstr &MI) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
selectWritelane	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::selectWritelane(MachineInstr &MI) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
setBBSelectRegIn	RVGPUMachineCFGStructurizer.cpp	/^  void setBBSelectRegIn(unsigned Reg) { BBSelectRegIn = Reg; }$/;"	f	class:__anon1695b1f50211::MRT	typeref:typename:void	file:
setBBSelectRegOut	RVGPUMachineCFGStructurizer.cpp	/^  void setBBSelectRegOut(unsigned Reg) { BBSelectRegOut = Reg; }$/;"	f	class:__anon1695b1f50211::MRT	typeref:typename:void	file:
setBest	SIMachineScheduler.h	/^    void setBest(SIBlockSchedCandidate &Best) {$/;"	f	struct:llvm::SIScheduleBlockScheduler::SIBlockSchedCandidate	typeref:typename:void
setBest	SIMachineScheduler.h	/^    void setBest(SISchedCandidate &Best) {$/;"	f	struct:llvm::SIScheduleBlock::SISchedCandidate	typeref:typename:void
setBestSchedule	GCNIterativeScheduler.cpp	/^void GCNIterativeScheduler::setBestSchedule(Region &R,$/;"	f	class:GCNIterativeScheduler	typeref:typename:void
setBufferOffsets	RVGPURegisterBankInfo.cpp	/^unsigned RVGPURegisterBankInfo::setBufferOffsets($/;"	f	class:RVGPURegisterBankInfo	typeref:typename:unsigned
setBufferOffsets	RVISelLowering.cpp	/^void RVTargetLowering::setBufferOffsets(SDValue CombinedOffset,$/;"	f	class:RVTargetLowering	typeref:typename:void
setBytesInStackArgArea	RVMachineFunctionInfo.h	/^  void setBytesInStackArgArea(unsigned Bytes) {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:void
setCodeObjectVersion	Utils/RVGPUBaseInfo.h	/^  void setCodeObjectVersion(unsigned COV) {$/;"	f	class:llvm::RVGPU::IsaInfo::RVGPUTargetID	typeref:typename:void
setComputeRegisters	Utils/RVGPUPALMetadata.cpp	/^void RVGPUPALMetadata::setComputeRegisters(StringRef field, bool Val) {$/;"	f	class:RVGPUPALMetadata	typeref:typename:void
setComputeRegisters	Utils/RVGPUPALMetadata.cpp	/^void RVGPUPALMetadata::setComputeRegisters(StringRef field, unsigned Val) {$/;"	f	class:RVGPUPALMetadata	typeref:typename:void
setDynLDSAlign	RVGPUMachineFunction.cpp	/^void RVGPUMachineFunction::setDynLDSAlign(const Function &F,$/;"	f	class:RVGPUMachineFunction	typeref:typename:void
setEntry	RVGPUMachineCFGStructurizer.cpp	/^void LinearizedRegion::setEntry(MachineBasicBlock *NewEntry) {$/;"	f	class:LinearizedRegion	typeref:typename:void
setEntryPoint	Utils/RVGPUPALMetadata.cpp	/^void RVGPUPALMetadata::setEntryPoint(unsigned CC, StringRef Name) {$/;"	f	class:RVGPUPALMetadata	typeref:typename:void
setExit	RVGPUMachineCFGStructurizer.cpp	/^void LinearizedRegion::setExit(MachineBasicBlock *NewExit) { Exit = NewExit; }$/;"	f	class:LinearizedRegion	typeref:typename:void
setExpScore	SIInsertWaitcnts.cpp	/^void WaitcntBrackets::setExpScore(const MachineInstr *MI,$/;"	f	class:WaitcntBrackets	typeref:typename:void
setFlag	RVMachineFunctionInfo.h	/^  void setFlag(Register Reg, uint8_t Flag) {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:void
setForceEmitWaitcnt	SIInsertWaitcnts.cpp	/^  void setForceEmitWaitcnt() {$/;"	f	class:__anona6cbb7940211::SIInsertWaitcnts	typeref:typename:void	file:
setForcedDPP	AsmParser/RVGPUAsmParser.cpp	/^  void setForcedDPP(bool ForceDPP_) { ForcedDPP = ForceDPP_; }$/;"	f	class:__anon672fa8550111::RVGPUAsmParser	typeref:typename:void	file:
setForcedEncodingSize	AsmParser/RVGPUAsmParser.cpp	/^  void setForcedEncodingSize(unsigned Size) { ForcedEncodingSize = Size; }$/;"	f	class:__anon672fa8550111::RVGPUAsmParser	typeref:typename:void	file:
setForcedSDWA	AsmParser/RVGPUAsmParser.cpp	/^  void setForcedSDWA(bool ForceSDWA_) { ForcedSDWA = ForceSDWA_; }$/;"	f	class:__anon672fa8550111::RVGPUAsmParser	typeref:typename:void	file:
setFrameOffsetReg	RVMachineFunctionInfo.h	/^  void setFrameOffsetReg(Register Reg) {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:void
setFromBlob	Utils/RVGPUPALMetadata.cpp	/^bool RVGPUPALMetadata::setFromBlob(unsigned Type, StringRef Blob) {$/;"	f	class:RVGPUPALMetadata	typeref:typename:bool
setFromLegacyBlob	Utils/RVGPUPALMetadata.cpp	/^bool RVGPUPALMetadata::setFromLegacyBlob(StringRef Blob) {$/;"	f	class:RVGPUPALMetadata	typeref:typename:bool
setFromMsgPackBlob	Utils/RVGPUPALMetadata.cpp	/^bool RVGPUPALMetadata::setFromMsgPackBlob(StringRef Blob) {$/;"	f	class:RVGPUPALMetadata	typeref:typename:bool
setFromString	Utils/RVGPUPALMetadata.cpp	/^bool RVGPUPALMetadata::setFromString(StringRef S) {$/;"	f	class:RVGPUPALMetadata	typeref:typename:bool
setFuncArgInfo	RVGPUArgumentUsageInfo.h	/^  void setFuncArgInfo(const Function &F, const RVGPUFunctionArgInfo &ArgInfo) {$/;"	f	class:llvm::RVGPUArgumentUsageInfo	typeref:typename:void
setFunctionLdsSize	Utils/RVGPUPALMetadata.cpp	/^void RVGPUPALMetadata::setFunctionLdsSize(StringRef FnName, unsigned Val) {$/;"	f	class:RVGPUPALMetadata	typeref:typename:void
setFunctionNumUsedSgprs	Utils/RVGPUPALMetadata.cpp	/^void RVGPUPALMetadata::setFunctionNumUsedSgprs(StringRef FnName,$/;"	f	class:RVGPUPALMetadata	typeref:typename:void
setFunctionNumUsedVgprs	Utils/RVGPUPALMetadata.cpp	/^void RVGPUPALMetadata::setFunctionNumUsedVgprs(StringRef FnName,$/;"	f	class:RVGPUPALMetadata	typeref:typename:void
setFunctionScratchSize	Utils/RVGPUPALMetadata.cpp	/^void RVGPUPALMetadata::setFunctionScratchSize(StringRef FnName, unsigned Val) {$/;"	f	class:RVGPUPALMetadata	typeref:typename:void
setFunctionType	RVGPULibFunc.h	/^  void setFunctionType(FunctionType *FT) { FuncTy = FT; }$/;"	f	class:llvm::RVGPUUnmangledLibFunc	typeref:typename:void
setGraphicsRegisters	Utils/RVGPUPALMetadata.cpp	/^void RVGPUPALMetadata::setGraphicsRegisters(StringRef field, bool Val) {$/;"	f	class:RVGPUPALMetadata	typeref:typename:void
setGraphicsRegisters	Utils/RVGPUPALMetadata.cpp	/^void RVGPUPALMetadata::setGraphicsRegisters(StringRef field, unsigned Val) {$/;"	f	class:RVGPUPALMetadata	typeref:typename:void
setGraphicsRegisters	Utils/RVGPUPALMetadata.cpp	/^void RVGPUPALMetadata::setGraphicsRegisters(StringRef field1, StringRef field2,$/;"	f	class:RVGPUPALMetadata	typeref:typename:void
setHasLoop	RVGPUMachineCFGStructurizer.cpp	/^void LinearizedRegion::setHasLoop(bool Value) { HasLoop = Value; }$/;"	f	class:LinearizedRegion	typeref:typename:void
setHasNonSpillStackObjects	RVMachineFunctionInfo.h	/^  void setHasNonSpillStackObjects(bool StackObject = true) {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:void
setHasSpilledSGPRs	RVMachineFunctionInfo.h	/^  void setHasSpilledSGPRs(bool Spill = true) {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:void
setHasSpilledVGPRs	RVMachineFunctionInfo.h	/^  void setHasSpilledVGPRs(bool Spill = true) {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:void
setHwStage	Utils/RVGPUPALMetadata.cpp	/^void RVGPUPALMetadata::setHwStage(unsigned CC, StringRef field, bool Val) {$/;"	f	class:RVGPUPALMetadata	typeref:typename:void
setHwStage	Utils/RVGPUPALMetadata.cpp	/^void RVGPUPALMetadata::setHwStage(unsigned CC, StringRef field, unsigned Val) {$/;"	f	class:RVGPUPALMetadata	typeref:typename:void
setId	RVGPULibFunc.h	/^  void setId(EFuncId Id) { Impl->setId(Id); }$/;"	f	class:llvm::RVGPULibFunc	typeref:typename:void
setId	RVGPULibFunc.h	/^  void setId(EFuncId id) { FuncId = id; }$/;"	f	class:llvm::RVGPULibFuncImpl	typeref:typename:void
setIfReturnsVoid	RVMachineFunctionInfo.h	/^  void setIfReturnsVoid(bool Value) {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:void
setImm	AsmParser/RVGPUAsmParser.cpp	/^  void setImm(int64_t Val) {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:void	file:
setImmKindConst	AsmParser/RVGPUAsmParser.cpp	/^  void setImmKindConst() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:void	file:
setImmKindLiteral	AsmParser/RVGPUAsmParser.cpp	/^  void setImmKindLiteral() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:void	file:
setImmKindMandatoryLiteral	AsmParser/RVGPUAsmParser.cpp	/^  void setImmKindMandatoryLiteral() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:void	file:
setImmKindNone	AsmParser/RVGPUAsmParser.cpp	/^  void setImmKindNone() const {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:void	file:
setImpSCCDefDead	SILowerControlFlow.cpp	/^static void setImpSCCDefDead(MachineInstr &MI, bool IsDead) {$/;"	f	typeref:typename:INITIALIZE_PASS (SILowerControlFlow,DEBUG_TYPE,"SI lower control flow",false,false)void	file:
setInitialFreeUserSGPRsCount	RVGPULowerKernelArguments.cpp	/^  void setInitialFreeUserSGPRsCount() {$/;"	f	class:__anonf85f450a0111::PreloadKernelArgInfo	typeref:typename:void	file:
setIsScheduled	GCNMinRegStrategy.cpp	/^  void setIsScheduled(const SUnit *SU)  {$/;"	f	class:__anon807286a30111::GCNMinRegScheduler	typeref:typename:void	file:
setIsStackRealigned	RVMachineFunctionInfo.h	/^  void setIsStackRealigned(bool Realigned = true) {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:void
setLegacy	Utils/RVGPUPALMetadata.cpp	/^void RVGPUPALMetadata::setLegacy() {$/;"	f	class:RVGPUPALMetadata	typeref:typename:void
setLinearizedRegion	RVGPUMachineCFGStructurizer.cpp	/^  void setLinearizedRegion(LinearizedRegion *LinearizeRegion) {$/;"	f	class:__anon1695b1f50211::RegionMRT	typeref:typename:void	file:
setLongBranchReservedReg	RVMachineFunctionInfo.h	/^  void setLongBranchReservedReg(Register Reg) { LongBranchReservedReg = Reg; }$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:void
setM0ToIndexFromSGPR	RVISelLowering.cpp	/^static void setM0ToIndexFromSGPR(const RVInstrInfo *TII,$/;"	f	typeref:typename:void	file:
setMI	RVRegisterInfo.cpp	/^  void setMI(MachineBasicBlock *NewMBB, MachineBasicBlock::iterator NewMI) {$/;"	f	struct:llvm::SGPRSpillBuilder	typeref:typename:void	file:
setMI	SILoadStoreOptimizer.cpp	/^void SILoadStoreOptimizer::CombineInfo::setMI(MachineBasicBlock::iterator MI,$/;"	f	class:__anon677101620111::SILoadStoreOptimizer::CombineInfo	typeref:typename:void
setModifiers	AsmParser/RVGPUAsmParser.cpp	/^  void setModifiers(Modifiers Mods) {$/;"	f	class:__anon672fa8550111::RVGPUOperand	typeref:typename:void	file:
setName	RVGPULibFunc.h	/^  void setName(StringRef N) { Impl->setName(N); }$/;"	f	class:llvm::RVGPULibFunc	typeref:typename:void
setName	RVGPULibFunc.h	/^  void setName(StringRef N) { Name = std::string(N); }$/;"	f	class:llvm::RVGPULibFuncImpl	typeref:typename:void
setNoClobberMetadata	RVGPUAnnotateUniformValues.cpp	/^  void setNoClobberMetadata(Instruction *I) {$/;"	f	class:__anon9c77d1d40111::RVGPUAnnotateUniformValues	typeref:typename:void	file:
setNonKernelFunctionInitialState	SIInsertWaitcnts.cpp	/^  void setNonKernelFunctionInitialState() {$/;"	f	class:__anona6cbb7940211::WaitcntBrackets	typeref:typename:void	file:
setNumUsedAgprs	Utils/RVGPUPALMetadata.cpp	/^void RVGPUPALMetadata::setNumUsedAgprs(CallingConv::ID CC, unsigned Val) {$/;"	f	class:RVGPUPALMetadata	typeref:typename:void
setNumUsedSgprs	Utils/RVGPUPALMetadata.cpp	/^void RVGPUPALMetadata::setNumUsedSgprs(CallingConv::ID CC, unsigned Val) {$/;"	f	class:RVGPUPALMetadata	typeref:typename:void
setNumUsedVgprs	Utils/RVGPUPALMetadata.cpp	/^void RVGPUPALMetadata::setNumUsedVgprs(CallingConv::ID CC, unsigned Val) {$/;"	f	class:RVGPUPALMetadata	typeref:typename:void
setParent	RVGPUMachineCFGStructurizer.cpp	/^  void setParent(LinearizedRegion *P) { Parent = P; }$/;"	f	class:__anon1695b1f50211::LinearizedRegion	typeref:typename:void	file:
setParent	RVGPUMachineCFGStructurizer.cpp	/^  void setParent(RegionMRT *Region) { Parent = Region; }$/;"	f	class:__anon1695b1f50211::MRT	typeref:typename:void	file:
setPendingFlat	SIInsertWaitcnts.cpp	/^  void setPendingFlat() {$/;"	f	class:__anona6cbb7940211::WaitcntBrackets	typeref:typename:void	file:
setPhiPred	RVGPUMachineCFGStructurizer.cpp	/^static void setPhiPred(MachineInstr &PHI, unsigned Index,$/;"	f	typeref:typename:void	file:
setPrefix	RVGPULibFunc.h	/^  void setPrefix(ENamePrefix PFX) { Impl->setPrefix(PFX); }$/;"	f	class:llvm::RVGPULibFunc	typeref:typename:void
setPrefix	RVGPULibFunc.h	/^  void setPrefix(ENamePrefix pfx) { FKind = pfx; }$/;"	f	class:llvm::RVGPULibFuncImpl	typeref:typename:void
setPrivateSegmentWaveByteOffset	RVMachineFunctionInfo.h	/^  void setPrivateSegmentWaveByteOffset(Register Reg) {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:void
setRegScore	SIInsertWaitcnts.cpp	/^  void setRegScore(int GprNo, InstCounterType T, unsigned Val) {$/;"	f	class:__anona6cbb7940211::WaitcntBrackets	typeref:typename:void	file:
setRegionMRT	RVGPUMachineCFGStructurizer.cpp	/^  void setRegionMRT(RegionMRT *Region) { RMRT = Region; }$/;"	f	class:__anon1695b1f50211::LinearizedRegion	typeref:typename:void	file:
setRegionMRT	RVGPUMachineCFGStructurizer.cpp	/^  void setRegionMRT(RegionMRT *RegionTree) { RMRT = RegionTree; }$/;"	f	class:__anon1695b1f50311::RVGPUMachineCFGStructurizer	typeref:typename:void	file:
setRegister	Utils/RVGPUPALMetadata.cpp	/^void RVGPUPALMetadata::setRegister(unsigned Reg, unsigned Val) {$/;"	f	class:RVGPUPALMetadata	typeref:typename:void
setRegsToType	RVGPURegisterBankInfo.cpp	/^static void setRegsToType(MachineRegisterInfo &MRI, ArrayRef<Register> Regs,$/;"	f	typeref:typename:void	file:
setRepeat	SIMachineScheduler.h	/^  void setRepeat(SIScheduleCandReason R) { RepeatReasonSet |= (1 << R); }$/;"	f	struct:llvm::SISchedulerCandidate	typeref:typename:void
setRsrc1	Utils/RVGPUPALMetadata.cpp	/^void RVGPUPALMetadata::setRsrc1(CallingConv::ID CC, unsigned Val) {$/;"	f	class:RVGPUPALMetadata	typeref:typename:void
setRsrc2	Utils/RVGPUPALMetadata.cpp	/^void RVGPUPALMetadata::setRsrc2(CallingConv::ID CC, unsigned Val) {$/;"	f	class:RVGPUPALMetadata	typeref:typename:void
setSGPRForEXECCopy	RVMachineFunctionInfo.h	/^  void setSGPRForEXECCopy(Register Reg) { SGPRForEXECCopy = Reg; }$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:void
setScalarizeGlobalBehavior	GCNSubtarget.h	/^  void setScalarizeGlobalBehavior(bool b) { ScalarizeGlobal = b; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:void
setScoreLB	SIInsertWaitcnts.cpp	/^  void setScoreLB(InstCounterType T, unsigned Val) {$/;"	f	class:__anona6cbb7940211::WaitcntBrackets	typeref:typename:void	file:
setScoreUB	SIInsertWaitcnts.cpp	/^  void setScoreUB(InstCounterType T, unsigned Val) {$/;"	f	class:__anona6cbb7940211::WaitcntBrackets	typeref:typename:void	file:
setScratchRSrcReg	RVMachineFunctionInfo.h	/^  void setScratchRSrcReg(Register Reg) {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:void
setScratchSize	Utils/RVGPUPALMetadata.cpp	/^void RVGPUPALMetadata::setScratchSize(CallingConv::ID CC, unsigned Val) {$/;"	f	class:RVGPUPALMetadata	typeref:typename:void
setSpiPsInputAddr	Utils/RVGPUPALMetadata.cpp	/^void RVGPUPALMetadata::setSpiPsInputAddr(unsigned Val) {$/;"	f	class:RVGPUPALMetadata	typeref:typename:void
setSpiPsInputEna	Utils/RVGPUPALMetadata.cpp	/^void RVGPUPALMetadata::setSpiPsInputEna(unsigned Val) {$/;"	f	class:RVGPUPALMetadata	typeref:typename:void
setSramEccSetting	Utils/RVGPUBaseInfo.h	/^  void setSramEccSetting(TargetIDSetting NewSramEccSetting) {$/;"	f	class:llvm::RVGPU::IsaInfo::RVGPUTargetID	typeref:typename:void
setStackPtrOffsetReg	RVMachineFunctionInfo.h	/^  void setStackPtrOffsetReg(Register Reg) {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:void
setSucc	RVGPUMachineCFGStructurizer.cpp	/^  void setSucc(MachineBasicBlock *MBB) { Succ = MBB; }$/;"	f	class:__anon1695b1f50211::RegionMRT	typeref:typename:void	file:
setTargetIDFromFeaturesString	Utils/RVGPUBaseInfo.cpp	/^void RVGPUTargetID::setTargetIDFromFeaturesString(StringRef FS) {$/;"	f	class:llvm::RVGPU::IsaInfo::RVGPUTargetID	typeref:typename:void
setTargetIDFromTargetIDStream	Utils/RVGPUBaseInfo.cpp	/^void RVGPUTargetID::setTargetIDFromTargetIDStream(StringRef TargetID) {$/;"	f	class:llvm::RVGPU::IsaInfo::RVGPUTargetID	typeref:typename:void
setTargetOccupancy	GCNSchedStrategy.h	/^  void setTargetOccupancy(unsigned Occ) { TargetOccupancy = Occ; }$/;"	f	class:llvm::GCNSchedStrategy	typeref:typename:void
setUniformMetadata	RVGPUAnnotateUniformValues.cpp	/^  void setUniformMetadata(Instruction *I) {$/;"	f	class:__anon9c77d1d40111::RVGPUAnnotateUniformValues	typeref:typename:void	file:
setVGPRForAGPRCopy	RVMachineFunctionInfo.h	/^  void setVGPRForAGPRCopy(Register NewVGPRForAGPRCopy) {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:void
setVGPRToAGPRSpillDead	RVMachineFunctionInfo.h	/^  void setVGPRToAGPRSpillDead(int FrameIndex) {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:void
setWave32	Utils/RVGPUPALMetadata.cpp	/^void RVGPUPALMetadata::setWave32(unsigned CC) {$/;"	f	class:RVGPUPALMetadata	typeref:typename:void
setWorkItemIDX	RVMachineFunctionInfo.h	/^  void setWorkItemIDX(ArgDescriptor Arg) {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:void
setWorkItemIDY	RVMachineFunctionInfo.h	/^  void setWorkItemIDY(ArgDescriptor Arg) {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:void
setWorkItemIDZ	RVMachineFunctionInfo.h	/^  void setWorkItemIDZ(ArgDescriptor Arg) {$/;"	f	class:llvm::RVMachineFunctionInfo	typeref:typename:void
setXnackSetting	Utils/RVGPUBaseInfo.h	/^  void setXnackSetting(TargetIDSetting NewXnackSetting) {$/;"	f	class:llvm::RVGPU::IsaInfo::RVGPUTargetID	typeref:typename:void
setupMF	RVGPUInstructionSelector.cpp	/^void RVGPUInstructionSelector::setupMF(MachineFunction &MF, GISelKnownBits *KB,$/;"	f	class:RVGPUInstructionSelector	typeref:typename:void
setupNewBlock	GCNSchedStrategy.cpp	/^void GCNSchedStage::setupNewBlock() {$/;"	f	class:GCNSchedStage	typeref:typename:void
shiftSubReg	GCNRewritePartialRegUses.cpp	/^unsigned GCNRewritePartialRegUses::shiftSubReg(unsigned SubReg,$/;"	f	class:GCNRewritePartialRegUses	typeref:typename:unsigned
shouldApplyStrategy	RVGPUIGroupLP.cpp	/^  bool shouldApplyStrategy(ScheduleDAGInstrs *DAG) override { return true; }$/;"	f	class:__anon61b122dc0111::MFMASmallGemmOpt	typeref:typename:bool	file:
shouldApplyStrategy	RVGPUIGroupLP.cpp	/^  bool shouldApplyStrategy(ScheduleDAGInstrs *DAG) override { return true; }$/;"	f	class:__anon61b122dc0111::MFMASmallGemmSingleWaveOpt	typeref:typename:bool	file:
shouldBitcastLoadStoreType	RVGPULegalizerInfo.cpp	/^static bool shouldBitcastLoadStoreType(const GCNSubtarget &ST, const LLT Ty,$/;"	f	typeref:typename:bool	file:
shouldClusterMemOps	RVInstrInfo.cpp	/^bool RVInstrInfo::shouldClusterMemOps(ArrayRef<const MachineOperand *> BaseOps1,$/;"	f	class:RVInstrInfo	typeref:typename:bool
shouldClusterStores	GCNSubtarget.h	/^  bool shouldClusterStores() const { return true; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
shouldCoalesce	RVRegisterInfo.cpp	/^bool RVRegisterInfo::shouldCoalesce(MachineInstr *MI,$/;"	f	class:RVRegisterInfo	typeref:typename:bool
shouldCombineMemoryType	RVGPUISelLowering.cpp	/^bool RVGPUTargetLowering::shouldCombineMemoryType(EVT VT) const {$/;"	f	class:RVGPUTargetLowering	typeref:typename:bool
shouldConvertConstantLoadToIntImm	RVISelLowering.cpp	/^bool RVTargetLowering::shouldConvertConstantLoadToIntImm(const APInt &Imm,$/;"	f	class:RVTargetLowering	typeref:typename:bool
shouldEmitConstantsToTextSection	Utils/RVGPUBaseInfo.cpp	/^bool shouldEmitConstantsToTextSection(const Triple &TT) {$/;"	f	namespace:llvm::RVGPU	typeref:typename:bool
shouldEmitFixup	RVISelLowering.cpp	/^bool RVTargetLowering::shouldEmitFixup(const GlobalValue *GV) const {$/;"	f	class:RVTargetLowering	typeref:typename:bool
shouldEmitGOTReloc	RVISelLowering.cpp	/^bool RVTargetLowering::shouldEmitGOTReloc(const GlobalValue *GV) const {$/;"	f	class:RVTargetLowering	typeref:typename:bool
shouldEmitPCReloc	RVISelLowering.cpp	/^bool RVTargetLowering::shouldEmitPCReloc(const GlobalValue *GV) const {$/;"	f	class:RVTargetLowering	typeref:typename:bool
shouldExpandAtomicCmpXchgInIR	RVISelLowering.cpp	/^RVTargetLowering::shouldExpandAtomicCmpXchgInIR(AtomicCmpXchgInst *CmpX) const {$/;"	f	class:RVTargetLowering	typeref:typename:TargetLowering::AtomicExpansionKind
shouldExpandAtomicLoadInIR	RVISelLowering.cpp	/^RVTargetLowering::shouldExpandAtomicLoadInIR(LoadInst *LI) const {$/;"	f	class:RVTargetLowering	typeref:typename:TargetLowering::AtomicExpansionKind
shouldExpandAtomicRMWInIR	RVGPUISelLowering.cpp	/^RVGPUTargetLowering::shouldExpandAtomicRMWInIR(AtomicRMWInst *RMW) const {$/;"	f	class:RVGPUTargetLowering	typeref:typename:TargetLowering::AtomicExpansionKind
shouldExpandAtomicRMWInIR	RVISelLowering.cpp	/^RVTargetLowering::shouldExpandAtomicRMWInIR(AtomicRMWInst *RMW) const {$/;"	f	class:RVTargetLowering	typeref:typename:TargetLowering::AtomicExpansionKind
shouldExpandAtomicStoreInIR	RVISelLowering.cpp	/^RVTargetLowering::shouldExpandAtomicStoreInIR(StoreInst *SI) const {$/;"	f	class:RVTargetLowering	typeref:typename:TargetLowering::AtomicExpansionKind
shouldExpandVectorDynExt	RVISelLowering.cpp	/^bool RVTargetLowering::shouldExpandVectorDynExt(SDNode *N) const {$/;"	f	class:RVTargetLowering	typeref:typename:bool
shouldExpandVectorDynExt	RVISelLowering.cpp	/^bool RVTargetLowering::shouldExpandVectorDynExt(unsigned EltSize,$/;"	f	class:RVTargetLowering	typeref:typename:bool
shouldFlushVmCnt	SIInsertWaitcnts.cpp	/^bool SIInsertWaitcnts::shouldFlushVmCnt(MachineLoop *ML,$/;"	f	class:SIInsertWaitcnts	typeref:typename:bool
shouldFoldFNegIntoSrc	RVGPUISelLowering.cpp	/^bool RVGPUTargetLowering::shouldFoldFNegIntoSrc(SDNode *N, SDValue N0) {$/;"	f	class:RVGPUTargetLowering	typeref:typename:bool
shouldForceRelocation	MCTargetDesc/RVGPUAsmBackend.cpp	/^bool RVGPUAsmBackend::shouldForceRelocation(const MCAssembler &,$/;"	f	class:RVGPUAsmBackend	typeref:typename:bool
shouldOmitSectionDirective	MCTargetDesc/RVGPUMCAsmInfo.cpp	/^bool RVGPUMCAsmInfo::shouldOmitSectionDirective(StringRef SectionName) const {$/;"	f	class:RVGPUMCAsmInfo	typeref:typename:bool
shouldPrefetchAddressSpace	RVGPUTargetTransformInfo.cpp	/^bool GCNTTIImpl::shouldPrefetchAddressSpace(unsigned AS) const {$/;"	f	class:GCNTTIImpl	typeref:typename:bool
shouldPrintAsStr	RVGPUPrintfRuntimeBinding.cpp	/^static bool shouldPrintAsStr(char Specifier, Type *OpType) {$/;"	f	typeref:typename:bool	file:
shouldReadExec	RVInstrInfo.cpp	/^static bool shouldReadExec(const MachineInstr &MI) {$/;"	f	typeref:typename:bool	file:
shouldRealignStack	RVRegisterInfo.cpp	/^bool RVRegisterInfo::shouldRealignStack(const MachineFunction &MF) const {$/;"	f	class:RVRegisterInfo	typeref:typename:bool
shouldReduceLoadWidth	RVGPUISelLowering.cpp	/^bool RVGPUTargetLowering::shouldReduceLoadWidth(SDNode *N,$/;"	f	class:RVGPUTargetLowering	typeref:typename:bool
shouldReplaceLibcallWithIntrinsic	RVGPULibCalls.cpp	/^bool RVGPULibCalls::shouldReplaceLibcallWithIntrinsic(const CallInst *CI,$/;"	f	class:RVGPULibCalls	typeref:typename:bool
shouldRevertScheduling	GCNSchedStrategy.cpp	/^bool ClusteredLowOccStage::shouldRevertScheduling(unsigned WavesAfter) {$/;"	f	class:ClusteredLowOccStage	typeref:typename:bool
shouldRevertScheduling	GCNSchedStrategy.cpp	/^bool GCNSchedStage::shouldRevertScheduling(unsigned WavesAfter) {$/;"	f	class:GCNSchedStage	typeref:typename:bool
shouldRevertScheduling	GCNSchedStrategy.cpp	/^bool ILPInitialScheduleStage::shouldRevertScheduling(unsigned WavesAfter) {$/;"	f	class:ILPInitialScheduleStage	typeref:typename:bool
shouldRevertScheduling	GCNSchedStrategy.cpp	/^bool OccInitialScheduleStage::shouldRevertScheduling(unsigned WavesAfter) {$/;"	f	class:OccInitialScheduleStage	typeref:typename:bool
shouldRevertScheduling	GCNSchedStrategy.cpp	/^bool PreRARematStage::shouldRevertScheduling(unsigned WavesAfter) {$/;"	f	class:PreRARematStage	typeref:typename:bool
shouldRevertScheduling	GCNSchedStrategy.cpp	/^bool UnclusteredHighRPStage::shouldRevertScheduling(unsigned WavesAfter) {$/;"	f	class:UnclusteredHighRPStage	typeref:typename:bool
shouldRewriteCopySrc	RVRegisterInfo.cpp	/^bool RVRegisterInfo::shouldRewriteCopySrc($/;"	f	class:RVRegisterInfo	typeref:typename:bool
shouldRunLdsBranchVmemWARHazardFixup	GCNHazardRecognizer.cpp	/^static bool shouldRunLdsBranchVmemWARHazardFixup(const MachineFunction &MF,$/;"	f	typeref:typename:bool	file:
shouldScheduleAdjacent	GCNVOPDUtils.cpp	/^  MacroFusionPredTy shouldScheduleAdjacent; \/\/ NOLINT: function pointer$/;"	m	struct:__anonc08c76180411::VOPDPairingMutation	typeref:typename:MacroFusionPredTy	file:
shouldScheduleAdjacent	RVGPUMacroFusion.cpp	/^static bool shouldScheduleAdjacent(const TargetInstrInfo &TII_,$/;"	f	namespace:__anon6583ff500111	typeref:typename:bool	file:
shouldScheduleLoadsNear	RVInstrInfo.cpp	/^bool RVInstrInfo::shouldScheduleLoadsNear(SDNode *Load0, SDNode *Load1,$/;"	f	class:RVInstrInfo	typeref:typename:bool
shouldScheduleVOPDAdjacent	GCNVOPDUtils.cpp	/^static bool shouldScheduleVOPDAdjacent(const TargetInstrInfo &TII,$/;"	f	typeref:typename:bool	file:
shouldShrinkTrue16	SIShrinkInstructions.cpp	/^bool SIShrinkInstructions::shouldShrinkTrue16(MachineInstr &MI) const {$/;"	f	class:SIShrinkInstructions	typeref:typename:bool
shouldSinkOperands	RVGPUISelLowering.cpp	/^bool RVGPUTargetLowering::shouldSinkOperands($/;"	f	class:RVGPUTargetLowering	typeref:typename:bool
shouldTrackLaneMasks	GCNIterativeScheduler.cpp	/^  bool shouldTrackLaneMasks() const override { return false; }$/;"	f	class:__anon1e3e8dba0111::SchedStrategyStub	typeref:typename:bool	file:
shouldTrackPressure	GCNIterativeScheduler.cpp	/^  bool shouldTrackPressure() const override { return false; }$/;"	f	class:__anon1e3e8dba0111::SchedStrategyStub	typeref:typename:bool	file:
shouldUseAddr64	RVGPUInstructionSelector.cpp	/^bool RVGPUInstructionSelector::shouldUseAddr64(MUBUFAddressData Addr) const {$/;"	f	class:RVGPUInstructionSelector	typeref:typename:bool
shouldUseAndMask	RVGPUInstructionSelector.cpp	/^static bool shouldUseAndMask(unsigned Size, unsigned &Mask) {$/;"	f	typeref:typename:bool	file:
shouldUseLDSConstAddress	RVISelLowering.cpp	/^bool RVTargetLowering::shouldUseLDSConstAddress(const GlobalValue *GV) const {$/;"	f	class:RVTargetLowering	typeref:typename:bool
shouldWidenLoad	RVGPULegalizerInfo.cpp	/^static bool shouldWidenLoad(const GCNSubtarget &ST, LLT MemoryTy,$/;"	f	typeref:typename:bool	file:
shouldWidenLoad	RVGPULegalizerInfo.cpp	/^static bool shouldWidenLoad(const GCNSubtarget &ST, const LegalityQuery &Query,$/;"	f	typeref:typename:bool	file:
shrinkDivRem64	RVGPUCodeGenPrepare.cpp	/^Value *RVGPUCodeGenPrepareImpl::shrinkDivRem64(IRBuilder<> &Builder,$/;"	f	class:RVGPUCodeGenPrepareImpl	typeref:typename:Value *
shrinkMIMG	SIShrinkInstructions.cpp	/^void SIShrinkInstructions::shrinkMIMG(MachineInstr &MI) const {$/;"	f	class:SIShrinkInstructions	typeref:typename:void
shrinkMadFma	SIShrinkInstructions.cpp	/^void SIShrinkInstructions::shrinkMadFma(MachineInstr &MI) const {$/;"	f	class:SIShrinkInstructions	typeref:typename:void
shrinkPHI	RVGPUMachineCFGStructurizer.cpp	/^bool RVGPUMachineCFGStructurizer::shrinkPHI(MachineInstr &PHI,$/;"	f	class:RVGPUMachineCFGStructurizer	typeref:typename:bool
shrinkScalarCompare	SIShrinkInstructions.cpp	/^void SIShrinkInstructions::shrinkScalarCompare(MachineInstr &MI) const {$/;"	f	class:SIShrinkInstructions	typeref:typename:void
shrinkScalarLogicOp	SIShrinkInstructions.cpp	/^bool SIShrinkInstructions::shrinkScalarLogicOp(MachineInstr &MI) const {$/;"	f	class:SIShrinkInstructions	typeref:typename:bool
simplifyDemandedVectorEltsIntrinsic	RVGPUInstCombineIntrinsic.cpp	/^std::optional<Value *> GCNTTIImpl::simplifyDemandedVectorEltsIntrinsic($/;"	f	class:GCNTTIImpl	typeref:typename:std::optional<Value * >
simplifyMul24	RVGPUISelLowering.cpp	/^static SDValue simplifyMul24(SDNode *Node24,$/;"	f	typeref:typename:SDValue	file:
simplifyRVGPUImageIntrinsic	RVGPUInstCombineIntrinsic.cpp	/^simplifyRVGPUImageIntrinsic(const GCNSubtarget *ST,$/;"	f	typeref:typename:std::optional<Instruction * >	file:
simplifyRVGPUMemoryIntrinsicDemanded	RVGPUInstCombineIntrinsic.cpp	/^static Value *simplifyRVGPUMemoryIntrinsicDemanded(InstCombiner &IC,$/;"	f	typeref:typename:Value *	file:
simplifyWaitcnt	SIInsertWaitcnts.cpp	/^void WaitcntBrackets::simplifyWaitcnt(InstCounterType T,$/;"	f	class:WaitcntBrackets	typeref:typename:void
simplifyWaitcnt	SIInsertWaitcnts.cpp	/^void WaitcntBrackets::simplifyWaitcnt(RVGPU::Waitcnt &Wait) const {$/;"	f	class:WaitcntBrackets	typeref:typename:void
sincosUseNative	RVGPULibCalls.cpp	/^bool RVGPULibCalls::sincosUseNative(CallInst *aCI, const FuncInfo &FInfo) {$/;"	f	class:RVGPULibCalls	typeref:typename:bool
sinkTriviallyRematInsts	GCNSchedStrategy.cpp	/^bool PreRARematStage::sinkTriviallyRematInsts(const GCNSubtarget &ST,$/;"	f	class:PreRARematStage	typeref:typename:bool
sizeIsMultipleOf32	RVGPULegalizerInfo.cpp	/^static LegalityPredicate sizeIsMultipleOf32(unsigned TypeIdx) {$/;"	f	typeref:typename:LegalityPredicate	file:
sizeToSubRegIndex	RVGPUInstructionSelector.cpp	/^static int sizeToSubRegIndex(unsigned Size) {$/;"	f	typeref:typename:int	file:
skipIgnoreExecInstsTrivialSucc	SILowerControlFlow.cpp	/^SILowerControlFlow::skipIgnoreExecInstsTrivialSucc($/;"	f	class:SILowerControlFlow	typeref:typename:MachineBasicBlock::iterator
skipToUncondBrOrEnd	SILowerControlFlow.cpp	/^  skipToUncondBrOrEnd(MachineBasicBlock &MBB,$/;"	f	class:__anon0ce7c3340111::SILowerControlFlow	typeref:typename:MachineBasicBlock::iterator	file:
skipToken	AsmParser/RVGPUAsmParser.cpp	/^RVGPUAsmParser::skipToken(const AsmToken::TokenKind Kind,$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
solve	RVGPUIGroupLP.cpp	/^void PipelineSolver::solve() {$/;"	f	class:__anon61b122dc0111::PipelineSolver	typeref:typename:void
solveExact	RVGPUIGroupLP.cpp	/^bool PipelineSolver::solveExact() {$/;"	f	class:__anon61b122dc0111::PipelineSolver	typeref:typename:bool
solveGreedy	RVGPUIGroupLP.cpp	/^bool PipelineSolver::solveGreedy() {$/;"	f	class:__anon61b122dc0111::PipelineSolver	typeref:typename:bool
sopkIsZext	RVInstrInfo.h	/^  bool sopkIsZext(uint16_t Opcode) const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
sopkIsZext	RVInstrInfo.h	/^  static bool sopkIsZext(const MachineInstr &MI) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
sortByName	RVGPULowerModuleLDSPass.cpp	/^template <typename T> std::vector<T> sortByName(std::vector<T> &&V) {$/;"	f	namespace:__anoncc7483b30111	typeref:typename:std::vector<T>
sortChain	RVGPUExportClustering.cpp	/^static void sortChain(const RVInstrInfo *TII, SmallVector<SUnit *, 8> &Chain,$/;"	f	namespace:__anonbb53b5ac0111	typeref:typename:void	file:
sortRegionsByPressure	GCNIterativeScheduler.cpp	/^void GCNIterativeScheduler::sortRegionsByPressure(unsigned TargetOcc) {$/;"	f	class:GCNIterativeScheduler	typeref:typename:void
source_iterator	RVGPUMachineCFGStructurizer.cpp	/^  using source_iterator = PHISourcesT::iterator;$/;"	t	class:__anon1695b1f50111::PHILinearize	typeref:typename:PHISourcesT::iterator	file:
sources_begin	RVGPUMachineCFGStructurizer.cpp	/^PHILinearize::source_iterator PHILinearize::sources_begin(unsigned Reg) {$/;"	f	class:PHILinearize	typeref:typename:PHILinearize::source_iterator
sources_end	RVGPUMachineCFGStructurizer.cpp	/^PHILinearize::source_iterator PHILinearize::sources_end(unsigned Reg) {$/;"	f	class:PHILinearize	typeref:typename:PHILinearize::source_iterator
spillCalleeSavedRegs	SILowerSGPRSpills.cpp	/^bool SILowerSGPRSpills::spillCalleeSavedRegs($/;"	f	class:SILowerSGPRSpills	typeref:typename:bool
spillEmergencySGPR	RVRegisterInfo.cpp	/^bool RVRegisterInfo::spillEmergencySGPR(MachineBasicBlock::iterator MI,$/;"	f	class:RVRegisterInfo	typeref:typename:bool
spillSGPR	RVRegisterInfo.cpp	/^bool RVRegisterInfo::spillSGPR(MachineBasicBlock::iterator MI, int Index,$/;"	f	class:RVRegisterInfo	typeref:typename:bool
spillSGPRToVGPR	RVRegisterInfo.h	/^  bool spillSGPRToVGPR() const {$/;"	f	class:llvm::RVRegisterInfo	typeref:typename:bool
spillVGPRtoAGPR	RVRegisterInfo.cpp	/^static MachineInstrBuilder spillVGPRtoAGPR(const GCNSubtarget &ST,$/;"	f	typeref:typename:MachineInstrBuilder	file:
split	RVGPUMachineCFGStructurizer.cpp	/^static MachineBasicBlock *split(MachineBasicBlock::iterator I) {$/;"	f	typeref:typename:MachineBasicBlock *	file:
split64BitValue	RVGPUISelLowering.cpp	/^RVGPUTargetLowering::split64BitValue(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:RVGPUTargetLowering	typeref:typename:std::pair<SDValue,SDValue>
split64BitValueForMapping	RVGPURegisterBankInfo.cpp	/^void RVGPURegisterBankInfo::split64BitValueForMapping($/;"	f	class:RVGPURegisterBankInfo	typeref:typename:void
splitBinaryBitConstantOp	RVISelLowering.cpp	/^SDValue RVTargetLowering::splitBinaryBitConstantOp($/;"	f	class:RVTargetLowering	typeref:typename:SDValue
splitBinaryBitConstantOpImpl	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::splitBinaryBitConstantOpImpl($/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
splitBinaryVectorOp	RVISelLowering.cpp	/^SDValue RVTargetLowering::splitBinaryVectorOp(SDValue Op,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
splitBlock	SILateBranchLowering.cpp	/^static void splitBlock(MachineBasicBlock &MBB, MachineInstr &MI,$/;"	f	typeref:typename:void	file:
splitBlock	SIWholeQuadMode.cpp	/^MachineBasicBlock *SIWholeQuadMode::splitBlock(MachineBasicBlock *BB,$/;"	f	class:SIWholeQuadMode	typeref:typename:MachineBasicBlock *
splitBlockForLoop	RVISelLowering.cpp	/^splitBlockForLoop(MachineInstr &MI, MachineBasicBlock &MBB, bool InstInLoop) {$/;"	f	typeref:typename:std::pair<MachineBasicBlock *,MachineBasicBlock * >	file:
splitBufferOffsets	RVGPULegalizerInfo.cpp	/^RVGPULegalizerInfo::splitBufferOffsets(MachineIRBuilder &B,$/;"	f	class:RVGPULegalizerInfo	typeref:typename:std::pair<Register,unsigned>
splitBufferOffsets	RVGPURegisterBankInfo.cpp	/^RVGPURegisterBankInfo::splitBufferOffsets(MachineIRBuilder &B,$/;"	f	class:RVGPURegisterBankInfo	typeref:typename:std::pair<Register,unsigned>
splitBufferOffsets	RVISelLowering.cpp	/^std::pair<SDValue, SDValue> RVTargetLowering::splitBufferOffsets($/;"	f	class:RVTargetLowering	typeref:typename:std::pair<SDValue,SDValue>
splitEntry	RVGPUMachineCFGStructurizer.cpp	/^RVGPUMachineCFGStructurizer::splitEntry(LinearizedRegion *LRegion) {$/;"	f	class:RVGPUMachineCFGStructurizer	typeref:typename:MachineBasicBlock *
splitExit	RVGPUMachineCFGStructurizer.cpp	/^RVGPUMachineCFGStructurizer::splitExit(LinearizedRegion *LRegion) {$/;"	f	class:RVGPUMachineCFGStructurizer	typeref:typename:MachineBasicBlock *
splitFlatOffset	RVInstrInfo.cpp	/^RVInstrInfo::splitFlatOffset(int64_t COffsetVal, unsigned AddrSpace,$/;"	f	class:RVInstrInfo	typeref:typename:std::pair<int64_t,int64_t>
splitIllegalMUBUFOffset	RVGPUInstructionSelector.cpp	/^void RVGPUInstructionSelector::splitIllegalMUBUFOffset($/;"	f	class:RVGPUInstructionSelector	typeref:typename:void
splitKillBlock	RVISelLowering.cpp	/^RVTargetLowering::splitKillBlock(MachineInstr &MI,$/;"	f	class:RVTargetLowering	typeref:typename:MachineBasicBlock *
splitLoopPHI	RVGPUMachineCFGStructurizer.cpp	/^void RVGPUMachineCFGStructurizer::splitLoopPHI(MachineInstr &PHI,$/;"	f	class:RVGPUMachineCFGStructurizer	typeref:typename:void
splitLoopPHIs	RVGPUMachineCFGStructurizer.cpp	/^void RVGPUMachineCFGStructurizer::splitLoopPHIs(MachineBasicBlock *Entry,$/;"	f	class:RVGPUMachineCFGStructurizer	typeref:typename:void
splitMUBUFOffset	RVInstrInfo.cpp	/^bool RVInstrInfo::splitMUBUFOffset(uint32_t Imm, uint32_t &SOffset,$/;"	f	class:RVInstrInfo	typeref:typename:bool
splitScalar64BitBCNT	RVInstrInfo.cpp	/^void RVInstrInfo::splitScalar64BitBCNT(SIInstrWorklist &Worklist,$/;"	f	class:RVInstrInfo	typeref:typename:void
splitScalar64BitBFE	RVInstrInfo.cpp	/^void RVInstrInfo::splitScalar64BitBFE(SIInstrWorklist &Worklist,$/;"	f	class:RVInstrInfo	typeref:typename:void
splitScalar64BitBinaryOp	RVInstrInfo.cpp	/^void RVInstrInfo::splitScalar64BitBinaryOp(SIInstrWorklist &Worklist,$/;"	f	class:RVInstrInfo	typeref:typename:void
splitScalar64BitUnaryOp	RVInstrInfo.cpp	/^void RVInstrInfo::splitScalar64BitUnaryOp(SIInstrWorklist &Worklist,$/;"	f	class:RVInstrInfo	typeref:typename:void
splitScalar64BitXnor	RVInstrInfo.cpp	/^void RVInstrInfo::splitScalar64BitXnor(SIInstrWorklist &Worklist,$/;"	f	class:RVInstrInfo	typeref:typename:void
splitScalarBinOpN2	RVInstrInfo.cpp	/^void RVInstrInfo::splitScalarBinOpN2(SIInstrWorklist &Worklist,$/;"	f	class:RVInstrInfo	typeref:typename:void
splitScalarNotBinop	RVInstrInfo.cpp	/^void RVInstrInfo::splitScalarNotBinop(SIInstrWorklist &Worklist,$/;"	f	class:RVInstrInfo	typeref:typename:void
splitTernaryVectorOp	RVISelLowering.cpp	/^SDValue RVTargetLowering::splitTernaryVectorOp(SDValue Op,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
splitUnaryVectorOp	RVISelLowering.cpp	/^SDValue RVTargetLowering::splitUnaryVectorOp(SDValue Op,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
splitUnequalType	RVGPURegisterBankInfo.cpp	/^static std::pair<LLT, LLT> splitUnequalType(LLT Ty, unsigned FirstSize) {$/;"	f	typeref:typename:std::pair<LLT,LLT>	file:
splitVector	RVGPUISelLowering.cpp	/^RVGPUTargetLowering::splitVector(const SDValue &N, const SDLoc &DL,$/;"	f	class:RVGPUTargetLowering	typeref:typename:std::pair<SDValue,SDValue>
splitWWMSpillRegisters	RVMachineFunctionInfo.cpp	/^void RVMachineFunctionInfo::splitWWMSpillRegisters($/;"	f	class:RVMachineFunctionInfo	typeref:typename:void
storeLiveOutReg	RVGPUMachineCFGStructurizer.cpp	/^void LinearizedRegion::storeLiveOutReg(MachineBasicBlock *MBB, Register Reg,$/;"	f	class:LinearizedRegion	typeref:typename:void
storeLiveOutRegRegion	RVGPUMachineCFGStructurizer.cpp	/^void LinearizedRegion::storeLiveOutRegRegion(RegionMRT *Region, Register Reg,$/;"	f	class:LinearizedRegion	typeref:typename:void
storeLiveOuts	RVGPUMachineCFGStructurizer.cpp	/^void LinearizedRegion::storeLiveOuts(MachineBasicBlock *MBB,$/;"	f	class:LinearizedRegion	typeref:typename:void
storeLiveOuts	RVGPUMachineCFGStructurizer.cpp	/^void LinearizedRegion::storeLiveOuts(RegionMRT *Region,$/;"	f	class:LinearizedRegion	typeref:typename:void
storeMBBLiveOuts	RVGPUMachineCFGStructurizer.cpp	/^void LinearizedRegion::storeMBBLiveOuts(MachineBasicBlock *MBB,$/;"	f	class:LinearizedRegion	typeref:typename:void
storeOfVectorConstantIsCheap	RVGPUISelLowering.cpp	/^bool RVGPUTargetLowering:: storeOfVectorConstantIsCheap(bool IsZero, EVT MemVT,$/;"	f	class:RVGPUTargetLowering	typeref:typename:bool
storePHILinearizationInfo	RVGPUMachineCFGStructurizer.cpp	/^unsigned RVGPUMachineCFGStructurizer::storePHILinearizationInfo($/;"	f	class:RVGPUMachineCFGStructurizer	typeref:typename:unsigned
storePHILinearizationInfoDest	RVGPUMachineCFGStructurizer.cpp	/^void RVGPUMachineCFGStructurizer::storePHILinearizationInfoDest($/;"	f	class:RVGPUMachineCFGStructurizer	typeref:typename:void
storeRegToStackSlot	RVInstrInfo.cpp	/^void RVInstrInfo::storeRegToStackSlot($/;"	f	class:RVInstrInfo	typeref:typename:void
storeStackInputValue	RVGPUISelLowering.cpp	/^SDValue RVGPUTargetLowering::storeStackInputValue(SelectionDAG &DAG,$/;"	f	class:RVGPUTargetLowering	typeref:typename:SDValue
strictFPExtFromF16	RVISelLowering.cpp	/^static SDValue strictFPExtFromF16(SelectionDAG &DAG, SDValue Src) {$/;"	f	typeref:typename:SDValue	file:
stripAnySourceMods	RVGPULegalizerInfo.cpp	/^static Register stripAnySourceMods(Register OrigSrc, MachineRegisterInfo &MRI) {$/;"	f	typeref:typename:Register	file:
stripBitCast	RVGPUInstructionSelector.cpp	/^static MachineInstr *stripBitCast(MachineInstr *MI, MachineRegisterInfo &MRI) {$/;"	f	typeref:typename:MachineInstr *	file:
stripBitcast	RVGPUISelDAGToDAG.cpp	/^static SDValue stripBitcast(SDValue Val) {$/;"	f	namespace:__anon1d1751120111	typeref:typename:SDValue	file:
stripBitcast	RVGPUISelLowering.h	/^  static inline SDValue stripBitcast(SDValue Val) {$/;"	f	class:llvm::RVGPUTargetLowering	typeref:typename:SDValue
stripExtractLoElt	RVGPUISelDAGToDAG.cpp	/^static SDValue stripExtractLoElt(SDValue In) {$/;"	f	namespace:__anon1d1751120111	typeref:typename:SDValue	file:
structurizeComplexRegion	RVGPUMachineCFGStructurizer.cpp	/^bool RVGPUMachineCFGStructurizer::structurizeComplexRegion(RegionMRT *Region) {$/;"	f	class:RVGPUMachineCFGStructurizer	typeref:typename:bool
structurizeRegion	RVGPUMachineCFGStructurizer.cpp	/^bool RVGPUMachineCFGStructurizer::structurizeRegion(RegionMRT *Region) {$/;"	f	class:RVGPUMachineCFGStructurizer	typeref:typename:bool
structurizeRegions	RVGPUMachineCFGStructurizer.cpp	/^bool RVGPUMachineCFGStructurizer::structurizeRegions(RegionMRT *Region,$/;"	f	class:RVGPUMachineCFGStructurizer	typeref:typename:bool
structurize_once	RVGPUMachineCFGStructurizer.cpp	/^static int structurize_once = 0;$/;"	v	typeref:typename:int	file:
substituteSimpleCopyRegs	RVGPURegisterBankInfo.cpp	/^static bool substituteSimpleCopyRegs($/;"	f	typeref:typename:bool	file:
subtargetEncodingFamily	RVInstrInfo.cpp	/^static unsigned subtargetEncodingFamily(const GCNSubtarget &ST) {$/;"	f	typeref:typename:unsigned	file:
subtargetHasRegister	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::subtargetHasRegister(const MCRegisterInfo &MRI,$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
superAlignLDSGlobals	RVGPULowerModuleLDSPass.cpp	/^  static bool superAlignLDSGlobals(Module &M) {$/;"	f	class:__anoncc7483b30111::RVGPULowerModuleLDS	typeref:typename:bool	file:
supportSplitCSR	RVISelLowering.cpp	/^bool RVTargetLowering::supportSplitCSR(MachineFunction *MF) const {$/;"	f	class:RVTargetLowering	typeref:typename:bool
supportsBackOffBarrier	GCNSubtarget.h	/^  bool supportsBackOffBarrier() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
supportsGetDoorbellID	GCNSubtarget.h	/^  bool supportsGetDoorbellID() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
supportsGetDoorbellID	RVGPUAttributor.cpp	/^  bool supportsGetDoorbellID(Function &F) {$/;"	f	class:__anon512e119a0111::RVGPUInformationCache	typeref:typename:bool	file:
supportsMinMaxDenormModes	GCNSubtarget.h	/^  bool supportsMinMaxDenormModes() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
supportsWGP	GCNSubtarget.h	/^  bool supportsWGP() const { return true; }$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
swapOperands	RVInstrInfo.cpp	/^void RVInstrInfo::swapOperands(MachineInstr &Inst) const {$/;"	f	class:RVInstrInfo	typeref:typename:void
swapRegAndNonRegOperand	RVInstrInfo.cpp	/^static MachineInstr *swapRegAndNonRegOperand(MachineInstr &MI,$/;"	f	typeref:typename:MachineInstr *	file:
swapSourceModifiers	RVInstrInfo.cpp	/^bool RVInstrInfo::swapSourceModifiers(MachineInstr &MI,$/;"	f	class:RVInstrInfo	typeref:typename:bool
table	RVGPULowerModuleLDSPass.cpp	/^enum class LoweringKind { module, table, kernel, hybrid };$/;"	e	enum:__anoncc7483b30111::LoweringKind	file:
tableKernelIndexCache	RVGPULowerModuleLDSPass.cpp	/^  DenseMap<Function *, Value *> tableKernelIndexCache;$/;"	m	class:__anoncc7483b30111::RVGPULowerModuleLDS	typeref:typename:DenseMap<Function *,Value * >	file:
tbl_acos	RVGPULibCalls.cpp	/^static const TableEntry tbl_acos[] = {$/;"	v	typeref:typename:const TableEntry[]	file:
tbl_acosh	RVGPULibCalls.cpp	/^static const TableEntry tbl_acosh[] = {$/;"	v	typeref:typename:const TableEntry[]	file:
tbl_acospi	RVGPULibCalls.cpp	/^static const TableEntry tbl_acospi[] = {$/;"	v	typeref:typename:const TableEntry[]	file:
tbl_asin	RVGPULibCalls.cpp	/^static const TableEntry tbl_asin[] = {$/;"	v	typeref:typename:const TableEntry[]	file:
tbl_asinh	RVGPULibCalls.cpp	/^static const TableEntry tbl_asinh[] = {$/;"	v	typeref:typename:const TableEntry[]	file:
tbl_asinpi	RVGPULibCalls.cpp	/^static const TableEntry tbl_asinpi[] = {$/;"	v	typeref:typename:const TableEntry[]	file:
tbl_atan	RVGPULibCalls.cpp	/^static const TableEntry tbl_atan[] = {$/;"	v	typeref:typename:const TableEntry[]	file:
tbl_atanh	RVGPULibCalls.cpp	/^static const TableEntry tbl_atanh[] = {$/;"	v	typeref:typename:const TableEntry[]	file:
tbl_atanpi	RVGPULibCalls.cpp	/^static const TableEntry tbl_atanpi[] = {$/;"	v	typeref:typename:const TableEntry[]	file:
tbl_cbrt	RVGPULibCalls.cpp	/^static const TableEntry tbl_cbrt[] = {$/;"	v	typeref:typename:const TableEntry[]	file:
tbl_cos	RVGPULibCalls.cpp	/^static const TableEntry tbl_cos[] = {$/;"	v	typeref:typename:const TableEntry[]	file:
tbl_cosh	RVGPULibCalls.cpp	/^static const TableEntry tbl_cosh[] = {$/;"	v	typeref:typename:const TableEntry[]	file:
tbl_cospi	RVGPULibCalls.cpp	/^static const TableEntry tbl_cospi[] = {$/;"	v	typeref:typename:const TableEntry[]	file:
tbl_erf	RVGPULibCalls.cpp	/^static const TableEntry tbl_erf[] = {$/;"	v	typeref:typename:const TableEntry[]	file:
tbl_erfc	RVGPULibCalls.cpp	/^static const TableEntry tbl_erfc[] = {$/;"	v	typeref:typename:const TableEntry[]	file:
tbl_exp	RVGPULibCalls.cpp	/^static const TableEntry tbl_exp[] = {$/;"	v	typeref:typename:const TableEntry[]	file:
tbl_exp10	RVGPULibCalls.cpp	/^static const TableEntry tbl_exp10[] = {$/;"	v	typeref:typename:const TableEntry[]	file:
tbl_exp2	RVGPULibCalls.cpp	/^static const TableEntry tbl_exp2[] = {$/;"	v	typeref:typename:const TableEntry[]	file:
tbl_expm1	RVGPULibCalls.cpp	/^static const TableEntry tbl_expm1[] = {$/;"	v	typeref:typename:const TableEntry[]	file:
tbl_log	RVGPULibCalls.cpp	/^static const TableEntry tbl_log[] = {$/;"	v	typeref:typename:const TableEntry[]	file:
tbl_log10	RVGPULibCalls.cpp	/^static const TableEntry tbl_log10[] = {$/;"	v	typeref:typename:const TableEntry[]	file:
tbl_log2	RVGPULibCalls.cpp	/^static const TableEntry tbl_log2[] = {$/;"	v	typeref:typename:const TableEntry[]	file:
tbl_rsqrt	RVGPULibCalls.cpp	/^static const TableEntry tbl_rsqrt[] = {$/;"	v	typeref:typename:const TableEntry[]	file:
tbl_sin	RVGPULibCalls.cpp	/^static const TableEntry tbl_sin[] = {$/;"	v	typeref:typename:const TableEntry[]	file:
tbl_sinh	RVGPULibCalls.cpp	/^static const TableEntry tbl_sinh[] = {$/;"	v	typeref:typename:const TableEntry[]	file:
tbl_sinpi	RVGPULibCalls.cpp	/^static const TableEntry tbl_sinpi[] = {$/;"	v	typeref:typename:const TableEntry[]	file:
tbl_sqrt	RVGPULibCalls.cpp	/^static const TableEntry tbl_sqrt[] = {$/;"	v	typeref:typename:const TableEntry[]	file:
tbl_tan	RVGPULibCalls.cpp	/^static const TableEntry tbl_tan[] = {$/;"	v	typeref:typename:const TableEntry[]	file:
tbl_tanh	RVGPULibCalls.cpp	/^static const TableEntry tbl_tanh[] = {$/;"	v	typeref:typename:const TableEntry[]	file:
tbl_tanpi	RVGPULibCalls.cpp	/^static const TableEntry tbl_tanpi[] = {$/;"	v	typeref:typename:const TableEntry[]	file:
tbl_tgamma	RVGPULibCalls.cpp	/^static const TableEntry tbl_tgamma[] = {$/;"	v	typeref:typename:const TableEntry[]	file:
toBlob	Utils/RVGPUPALMetadata.cpp	/^void RVGPUPALMetadata::toBlob(unsigned Type, std::string &Blob) {$/;"	f	class:RVGPUPALMetadata	typeref:typename:void
toExact	SIWholeQuadMode.cpp	/^void SIWholeQuadMode::toExact(MachineBasicBlock &MBB,$/;"	f	class:SIWholeQuadMode	typeref:typename:void
toFuncId	RVGPULibFunc.cpp	/^  static ID toFuncId(unsigned Index) {$/;"	f	class:__anona5afe38d0111::UnmangledFuncInfo	typeref:typename:ID	file:
toIndex	RVGPULibFunc.cpp	/^  static unsigned toIndex(ID Id) {$/;"	f	class:__anona5afe38d0111::UnmangledFuncInfo	typeref:typename:unsigned	file:
toLegacyBlob	Utils/RVGPUPALMetadata.cpp	/^void RVGPUPALMetadata::toLegacyBlob(std::string &Blob) {$/;"	f	class:RVGPUPALMetadata	typeref:typename:void
toMsgPackBlob	Utils/RVGPUPALMetadata.cpp	/^void RVGPUPALMetadata::toMsgPackBlob(std::string &Blob) {$/;"	f	class:RVGPUPALMetadata	typeref:typename:void
toSIAtomicAddrSpace	SIMemoryLegalizer.cpp	/^SIAtomicAddrSpace SIMemOpAccess::toSIAtomicAddrSpace(unsigned AS) const {$/;"	f	class:SIMemOpAccess	typeref:typename:SIAtomicAddrSpace
toSIAtomicScope	SIMemoryLegalizer.cpp	/^SIMemOpAccess::toSIAtomicScope(SyncScope::ID SSID,$/;"	f	class:SIMemOpAccess	typeref:typename:std::optional<std::tuple<SIAtomicScope,SIAtomicAddrSpace,bool>>
toStrictMode	SIWholeQuadMode.cpp	/^void SIWholeQuadMode::toStrictMode(MachineBasicBlock &MBB,$/;"	f	class:SIWholeQuadMode	typeref:typename:void
toString	Utils/RVGPUBaseInfo.cpp	/^std::string RVGPUTargetID::toString() const {$/;"	f	class:llvm::RVGPU::IsaInfo::RVGPUTargetID	typeref:typename:std::string
toString	Utils/RVGPUPALMetadata.cpp	/^void RVGPUPALMetadata::toString(std::string &String) {$/;"	f	class:RVGPUPALMetadata	typeref:typename:void
toWQM	SIWholeQuadMode.cpp	/^void SIWholeQuadMode::toWQM(MachineBasicBlock &MBB,$/;"	f	class:SIWholeQuadMode	typeref:typename:void
toggleSPDenormMode	RVGPULegalizerInfo.cpp	/^static void toggleSPDenormMode(bool Enable, MachineIRBuilder &B,$/;"	f	typeref:typename:void	file:
top	RVInstrInfo.h	/^  MachineInstr *top() const {$/;"	f	struct:llvm::SIInstrWorklist	typeref:typename:MachineInstr *
topologicalSort	SIMachineScheduler.cpp	/^void SIScheduleBlockCreator::topologicalSort() {$/;"	f	class:SIScheduleBlockCreator	typeref:typename:void
topologicalSort	SIMachineScheduler.cpp	/^void SIScheduleDAGMI::topologicalSort() {$/;"	f	class:SIScheduleDAGMI	typeref:typename:void
traceCandidate	SIMachineScheduler.cpp	/^void SIScheduleBlock::traceCandidate(const SISchedCandidate &Cand) {$/;"	f	class:SIScheduleBlock	typeref:typename:void
trackStatistics	RVGPUAttributor.cpp	/^  void trackStatistics() const override {}$/;"	f	struct:__anon512e119a0111::AARVAttributesFunction	typeref:typename:void	file:
trackStatistics	RVGPUAttributor.cpp	/^  void trackStatistics() const override {}$/;"	f	struct:__anon512e119a0111::AARVSizeRangeAttribute	typeref:typename:void	file:
trackStatistics	RVGPUAttributor.cpp	/^  void trackStatistics() const override {}$/;"	f	struct:__anon512e119a0111::AAUniformWorkGroupSizeFunction	typeref:typename:void	file:
transformSimpleIfRegion	RVGPUMachineCFGStructurizer.cpp	/^void RVGPUMachineCFGStructurizer::transformSimpleIfRegion(RegionMRT *Region) {$/;"	f	class:RVGPUMachineCFGStructurizer	typeref:typename:void
trimTrailingZerosInVector	RVGPUInstCombineIntrinsic.cpp	/^static APInt trimTrailingZerosInVector(InstCombiner &IC, Value *UseV,$/;"	f	typeref:typename:APInt	file:
tryAddEdge	RVGPUIGroupLP.cpp	/^bool SchedGroup::tryAddEdge(SUnit *A, SUnit *B) {$/;"	f	class:__anon61b122dc0111::SchedGroup	typeref:typename:bool
tryAddToFoldList	SIFoldOperands.cpp	/^bool SIFoldOperands::tryAddToFoldList(SmallVectorImpl<FoldCandidate> &FoldList,$/;"	f	class:SIFoldOperands	typeref:typename:bool
tryAddingPcLoadReferenceComment	Disassembler/RVGPUDisassembler.cpp	/^void RVGPUSymbolizer::tryAddingPcLoadReferenceComment(raw_ostream &cStream,$/;"	f	class:RVGPUSymbolizer	typeref:typename:void
tryAddingSymbolicOperand	Disassembler/RVGPUDisassembler.cpp	/^bool RVGPUSymbolizer::tryAddingSymbolicOperand($/;"	f	class:RVGPUSymbolizer	typeref:typename:bool
tryAllocPreloadSGPRs	RVGPULowerKernelArguments.cpp	/^  bool tryAllocPreloadSGPRs(unsigned AllocSize, uint64_t ArgOffset,$/;"	f	class:__anonf85f450a0111::PreloadKernelArgInfo	typeref:typename:bool	file:
tryAssignRegisters	GCNNSAReassign.cpp	/^GCNNSAReassign::tryAssignRegisters(SmallVectorImpl<LiveInterval *> &Intervals,$/;"	f	class:GCNNSAReassign	typeref:typename:bool
tryCandidate	GCNSchedStrategy.cpp	/^bool GCNMaxILPSchedStrategy::tryCandidate(SchedCandidate &Cand,$/;"	f	class:GCNMaxILPSchedStrategy	typeref:typename:bool
tryCandidateLatency	SIMachineScheduler.cpp	/^bool SIScheduleBlockScheduler::tryCandidateLatency(SIBlockSchedCandidate &Cand,$/;"	f	class:SIScheduleBlockScheduler	typeref:typename:bool
tryCandidateRegUsage	SIMachineScheduler.cpp	/^bool SIScheduleBlockScheduler::tryCandidateRegUsage(SIBlockSchedCandidate &Cand,$/;"	f	class:SIScheduleBlockScheduler	typeref:typename:bool
tryCandidateTopDown	SIMachineScheduler.cpp	/^void SIScheduleBlock::tryCandidateTopDown(SISchedCandidate &Cand,$/;"	f	class:SIScheduleBlock	typeref:typename:void
tryChangeVGPRtoSGPRinCopy	SIFixSGPRCopies.cpp	/^static bool tryChangeVGPRtoSGPRinCopy(MachineInstr &MI,$/;"	f	typeref:typename:bool	file:
tryCombineAll	RVGPUPostLegalizerCombiner.cpp	/^bool RVGPUPostLegalizerCombinerImpl::tryCombineAll(MachineInstr &MI) const {$/;"	f	class:__anonf94dcdde0111::RVGPUPostLegalizerCombinerImpl	typeref:typename:bool
tryCombineAll	RVGPUPreLegalizerCombiner.cpp	/^bool RVGPUPreLegalizerCombinerImpl::tryCombineAll(MachineInstr &MI) const {$/;"	f	class:__anonb779c2ff0111::RVGPUPreLegalizerCombinerImpl	typeref:typename:bool
tryConstantFoldOp	SIFoldOperands.cpp	/^bool SIFoldOperands::tryConstantFoldOp(MachineInstr *MI) const {$/;"	f	class:SIFoldOperands	typeref:typename:bool
tryDecodeInst	Disassembler/RVGPUDisassembler.h	/^  DecodeStatus tryDecodeInst(const uint8_t *Table, MCInst &MI, InsnType Inst,$/;"	f	class:llvm::RVGPUDisassembler	typeref:typename:DecodeStatus
tryDecodeInst	Disassembler/RVGPUDisassembler.h	/^  DecodeStatus tryDecodeInst(const uint8_t *Table1, const uint8_t *Table2,$/;"	f	class:llvm::RVGPUDisassembler	typeref:typename:DecodeStatus
tryFoldClamp	SIFoldOperands.cpp	/^bool SIFoldOperands::tryFoldClamp(MachineInstr &MI) {$/;"	f	class:SIFoldOperands	typeref:typename:bool
tryFoldCndMask	SIFoldOperands.cpp	/^bool SIFoldOperands::tryFoldCndMask(MachineInstr &MI) const {$/;"	f	class:SIFoldOperands	typeref:typename:bool
tryFoldFoldableCopy	SIFoldOperands.cpp	/^bool SIFoldOperands::tryFoldFoldableCopy($/;"	f	class:SIFoldOperands	typeref:typename:bool
tryFoldImmWithOpSel	SIFoldOperands.cpp	/^bool SIFoldOperands::tryFoldImmWithOpSel(FoldCandidate &Fold) const {$/;"	f	class:SIFoldOperands	typeref:typename:bool
tryFoldLoad	SIFoldOperands.cpp	/^bool SIFoldOperands::tryFoldLoad(MachineInstr &MI) {$/;"	f	class:SIFoldOperands	typeref:typename:bool
tryFoldOMod	SIFoldOperands.cpp	/^bool SIFoldOperands::tryFoldOMod(MachineInstr &MI) {$/;"	f	class:SIFoldOperands	typeref:typename:bool
tryFoldPhiAGPR	SIFoldOperands.cpp	/^bool SIFoldOperands::tryFoldPhiAGPR(MachineInstr &PHI) {$/;"	f	class:SIFoldOperands	typeref:typename:bool
tryFoldRegSequence	SIFoldOperands.cpp	/^bool SIFoldOperands::tryFoldRegSequence(MachineInstr &MI) {$/;"	f	class:SIFoldOperands	typeref:typename:bool
tryFoldToMad64_32	RVISelLowering.cpp	/^SDValue RVTargetLowering::tryFoldToMad64_32(SDNode *N,$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
tryFoldZeroHighBits	SIFoldOperands.cpp	/^bool SIFoldOperands::tryFoldZeroHighBits(MachineInstr &MI) const {$/;"	f	class:SIFoldOperands	typeref:typename:bool
tryForceStoreSC0SC1	SIMemoryLegalizer.cpp	/^  bool tryForceStoreSC0SC1(const SIMemOpInfo &MOI,$/;"	f	class:__anon46517b8a0111::SIGfx940CacheControl	typeref:typename:bool	file:
tryForceStoreSC0SC1	SIMemoryLegalizer.cpp	/^  virtual bool tryForceStoreSC0SC1(const SIMemOpInfo &MOI,$/;"	f	class:__anon46517b8a0111::SICacheControl	typeref:typename:bool	file:
tryGreater	SIMachineScheduler.cpp	/^static bool tryGreater(int TryVal, int CandVal,$/;"	f	namespace:llvm::SISched	typeref:typename:bool	file:
tryLess	SIMachineScheduler.cpp	/^static bool tryLess(int TryVal, int CandVal,$/;"	f	namespace:llvm::SISched	typeref:typename:bool	file:
tryMaximizeOccupancy	GCNIterativeScheduler.cpp	/^unsigned GCNIterativeScheduler::tryMaximizeOccupancy(unsigned TargetOcc) {$/;"	f	class:GCNIterativeScheduler	typeref:typename:unsigned
tryMoveVGPRConstToSGPR	SIFixSGPRCopies.cpp	/^bool SIFixSGPRCopies::tryMoveVGPRConstToSGPR($/;"	f	class:SIFixSGPRCopies	typeref:typename:bool
tryOptimizeAGPRPhis	SIFoldOperands.cpp	/^bool SIFoldOperands::tryOptimizeAGPRPhis(MachineBasicBlock &MBB) {$/;"	f	class:SIFoldOperands	typeref:typename:bool
tryParseFmt	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::tryParseFmt(const char *Pref,$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
tryParseRegister	AsmParser/RVGPUAsmParser.cpp	/^ParseStatus RVGPUAsmParser::tryParseRegister(MCRegister &Reg, SMLoc &StartLoc,$/;"	f	class:RVGPUAsmParser	typeref:typename:ParseStatus
tryPromoteAllocaToLDS	RVGPUPromoteAlloca.cpp	/^bool RVGPUPromoteAllocaImpl::tryPromoteAllocaToLDS(AllocaInst &I,$/;"	f	class:RVGPUPromoteAllocaImpl	typeref:typename:bool
tryPromoteAllocaToVector	RVGPUPromoteAlloca.cpp	/^bool RVGPUPromoteAllocaImpl::tryPromoteAllocaToVector(AllocaInst &Alloca) {$/;"	f	class:RVGPUPromoteAllocaImpl	typeref:typename:bool
tryRecordOrSaveexecXorSequence	SIOptimizeExecMasking.cpp	/^void SIOptimizeExecMasking::tryRecordOrSaveexecXorSequence(MachineInstr &MI) {$/;"	f	class:SIOptimizeExecMasking	typeref:typename:void
tryRecordVCmpxAndSaveexecSequence	SIOptimizeExecMasking.cpp	/^void SIOptimizeExecMasking::tryRecordVCmpxAndSaveexecSequence($/;"	f	class:SIOptimizeExecMasking	typeref:typename:void
tryReplaceDeadSDST	SIShrinkInstructions.cpp	/^bool SIShrinkInstructions::tryReplaceDeadSDST(MachineInstr &MI) const {$/;"	f	class:SIShrinkInstructions	typeref:typename:bool
tryReplaceLibcallWithSimpleIntrinsic	RVGPULibCalls.cpp	/^bool RVGPULibCalls::tryReplaceLibcallWithSimpleIntrinsic($/;"	f	class:RVGPULibCalls	typeref:typename:bool
trySkipId	AsmParser/RVGPUAsmParser.cpp	/^RVGPUAsmParser::trySkipId(const StringRef Id) {$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
trySkipId	AsmParser/RVGPUAsmParser.cpp	/^RVGPUAsmParser::trySkipId(const StringRef Id, const AsmToken::TokenKind Kind) {$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
trySkipId	AsmParser/RVGPUAsmParser.cpp	/^RVGPUAsmParser::trySkipId(const StringRef Pref, const StringRef Id) {$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
trySkipToken	AsmParser/RVGPUAsmParser.cpp	/^RVGPUAsmParser::trySkipToken(const AsmToken::TokenKind Kind) {$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
trySubst	RVGPULibFunc.cpp	/^  bool trySubst(Stream& os, const RVGPULibFunc::Param& p) {$/;"	f	class:__anona5afe38d0311::ItaniumMangler	typeref:typename:bool	file:
tryToFoldACImm	SIFoldOperands.cpp	/^bool SIFoldOperands::tryToFoldACImm($/;"	f	class:SIFoldOperands	typeref:typename:bool
undoReleaseSucc	SIMachineScheduler.cpp	/^void SIScheduleBlock::undoReleaseSucc(SUnit *SU, SDep *SuccEdge) {$/;"	f	class:SIScheduleBlock	typeref:typename:void
undoSchedule	SIMachineScheduler.cpp	/^void SIScheduleBlock::undoSchedule() {$/;"	f	class:SIScheduleBlock	typeref:typename:void
unifyExtensionMD	RVGPUUnifyMetadata.cpp	/^  bool unifyExtensionMD(Module &M, StringRef Name) {$/;"	f	namespace:__anon26dde6960111	typeref:typename:bool
unifyMetadataImpl	RVGPUUnifyMetadata.cpp	/^  bool unifyMetadataImpl(Module &M) {$/;"	f	namespace:__anon26dde6960111	typeref:typename:bool
unifyReturnBlockSet	RVGPUUnifyDivergentExitNodes.cpp	/^BasicBlock *RVGPUUnifyDivergentExitNodesImpl::unifyReturnBlockSet($/;"	f	class:RVGPUUnifyDivergentExitNodesImpl	typeref:typename:BasicBlock *
unifyVersionMD	RVGPUUnifyMetadata.cpp	/^    bool unifyVersionMD(Module &M, StringRef Name, bool PickFirst) {$/;"	f	namespace:__anon26dde6960111	typeref:typename:bool
unpackBits	Utils/RVGPUBaseInfo.cpp	/^unsigned unpackBits(unsigned Src, unsigned Shift, unsigned Width) {$/;"	f	namespace:__anonc82e9e910111	typeref:typename:unsigned
unpackV2S16ToS32	RVGPURegisterBankInfo.cpp	/^unpackV2S16ToS32(MachineIRBuilder &B, Register Src, unsigned ExtOpcode) {$/;"	f	typeref:typename:std::pair<Register,Register>	file:
unsafeDSOffsetFoldingEnabled	GCNSubtarget.h	/^  bool unsafeDSOffsetFoldingEnabled() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
unsafeFPAtomicsDisabled	RVISelLowering.cpp	/^bool unsafeFPAtomicsDisabled(Function *F) {$/;"	f	typeref:typename:bool
updateBaseAndOffset	SILoadStoreOptimizer.cpp	/^void SILoadStoreOptimizer::updateBaseAndOffset(MachineInstr &MI,$/;"	f	class:SILoadStoreOptimizer	typeref:typename:void
updateByEvent	SIInsertWaitcnts.cpp	/^void WaitcntBrackets::updateByEvent(const RVInstrInfo *TII,$/;"	f	class:WaitcntBrackets	typeref:typename:void
updateEventWaitcntAfter	SIInsertWaitcnts.cpp	/^void SIInsertWaitcnts::updateEventWaitcntAfter(MachineInstr &Inst,$/;"	f	class:SIInsertWaitcnts	typeref:typename:void
updateGprCountSymbols	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::updateGprCountSymbols(RegisterKind RegKind,$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
updateImpl	RVGPUAttributor.cpp	/^  ChangeStatus updateImpl(Attributor &A) override {$/;"	f	struct:__anon512e119a0111::AARVAttributesFunction	typeref:typename:ChangeStatus	file:
updateImpl	RVGPUAttributor.cpp	/^  ChangeStatus updateImpl(Attributor &A) override {$/;"	f	struct:__anon512e119a0111::AARVFlatWorkGroupSize	typeref:typename:ChangeStatus	file:
updateImpl	RVGPUAttributor.cpp	/^  ChangeStatus updateImpl(Attributor &A) override {$/;"	f	struct:__anon512e119a0111::AARVWavesPerEU	typeref:typename:ChangeStatus	file:
updateImpl	RVGPUAttributor.cpp	/^  ChangeStatus updateImpl(Attributor &A) override {$/;"	f	struct:__anon512e119a0111::AAUniformWorkGroupSizeFunction	typeref:typename:ChangeStatus	file:
updateImplImpl	RVGPUAttributor.cpp	/^  ChangeStatus updateImplImpl(Attributor &A) {$/;"	f	struct:__anon512e119a0111::AARVSizeRangeAttribute	typeref:typename:ChangeStatus	file:
updateLiveIntervals	GCNRewritePartialRegUses.cpp	/^void GCNRewritePartialRegUses::updateLiveIntervals(Register OldReg,$/;"	f	class:GCNRewritePartialRegUses	typeref:typename:void
updateLiveRangeInElseRegion	SIOptimizeVGPRLiveRange.cpp	/^void SIOptimizeVGPRLiveRange::updateLiveRangeInElseRegion($/;"	f	class:SIOptimizeVGPRLiveRange	typeref:typename:void
updateLiveRangeInThenRegion	SIOptimizeVGPRLiveRange.cpp	/^void SIOptimizeVGPRLiveRange::updateLiveRangeInThenRegion($/;"	f	class:SIOptimizeVGPRLiveRange	typeref:typename:void
updateLiveVariables	RVInstrInfo.cpp	/^static void updateLiveVariables(LiveVariables *LV, MachineInstr &MI,$/;"	f	typeref:typename:void	file:
updateLiveness	SILowerSGPRSpills.cpp	/^static void updateLiveness(MachineFunction &MF, ArrayRef<CalleeSavedInfo> CSI) {$/;"	f	typeref:typename:void	file:
updateOperand	SIFoldOperands.cpp	/^bool SIFoldOperands::updateOperand(FoldCandidate &Fold) const {$/;"	f	class:SIFoldOperands	typeref:typename:bool
updateOperandIfDifferent	SIInsertWaitcnts.cpp	/^static bool updateOperandIfDifferent(MachineInstr &MI, uint16_t OpName,$/;"	f	typeref:typename:bool	file:
updateRegionBoundaries	GCNSchedStrategy.cpp	/^void GCNScheduleDAGMILive::updateRegionBoundaries($/;"	f	class:GCNScheduleDAGMILive	typeref:typename:void
updateVMCntOnly	SIInsertWaitcnts.cpp	/^static bool updateVMCntOnly(const MachineInstr &Inst) {$/;"	f	namespace:__anona6cbb7940211	typeref:typename:bool	file:
useAA	RVGPUSubtarget.cpp	/^bool GCNSubtarget::useAA() const { return UseAA; }$/;"	f	class:GCNSubtarget	typeref:typename:bool
useDS128	GCNSubtarget.h	/^  bool useDS128() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
useDefaultRegisterAllocator	RVGPUTargetMachine.cpp	/^static FunctionPass *useDefaultRegisterAllocator() { return nullptr; }$/;"	f	namespace:__anon565c6f860111	typeref:typename:FunctionPass *	file:
useFlatForGlobal	GCNSubtarget.h	/^  bool useFlatForGlobal() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
useIPRA	RVGPUTargetMachine.h	/^  bool useIPRA() const override {$/;"	f	class:llvm::GCNTargetMachine	typeref:typename:bool
useNative	RVGPULibCalls.cpp	/^bool RVGPULibCalls::useNative(CallInst *aCI) {$/;"	f	class:RVGPULibCalls	typeref:typename:bool
useNativeFunc	RVGPULibCalls.cpp	/^bool RVGPULibCalls::useNativeFunc(const StringRef F) const {$/;"	f	class:RVGPULibCalls	typeref:typename:bool
usePRTStrictNull	GCNSubtarget.h	/^  bool usePRTStrictNull() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
useRealTrue16Insts	RVGPUSubtarget.cpp	/^bool RVGPUSubtarget::useRealTrue16Insts() const {$/;"	f	class:RVGPUSubtarget	typeref:typename:bool
useVGPRIndexMode	RVGPUSubtarget.cpp	/^bool GCNSubtarget::useVGPRIndexMode() const {$/;"	f	class:GCNSubtarget	typeref:typename:bool
usesAGPRs	RVMachineFunctionInfo.cpp	/^bool RVMachineFunctionInfo::usesAGPRs(const MachineFunction &MF) const {$/;"	f	class:RVMachineFunctionInfo	typeref:typename:bool
usesAgprAt	AsmParser/RVGPUAsmParser.cpp	/^  void usesAgprAt(int i) {$/;"	f	class:__anon672fa8550111::KernelScopeInfo	typeref:typename:void	file:
usesConstantBus	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::usesConstantBus(const MCInst &Inst, unsigned OpIdx) {$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
usesConstantBus	RVInstrInfo.cpp	/^bool RVInstrInfo::usesConstantBus(const MachineRegisterInfo &MRI,$/;"	f	class:RVInstrInfo	typeref:typename:bool
usesFPDPRounding	RVInstrInfo.h	/^  bool usesFPDPRounding(uint16_t Opcode) const {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
usesFPDPRounding	RVInstrInfo.h	/^  static bool usesFPDPRounding(const MachineInstr &MI) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
usesLGKM_CNT	RVInstrInfo.h	/^  static bool usesLGKM_CNT(const MachineInstr &MI) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
usesRegister	AsmParser/RVGPUAsmParser.cpp	/^  void usesRegister(RegisterKind RegKind, unsigned DwordRegIndex,$/;"	f	class:__anon672fa8550111::KernelScopeInfo	typeref:typename:void	file:
usesSgprAt	AsmParser/RVGPUAsmParser.cpp	/^  void usesSgprAt(int i) {$/;"	f	class:__anon672fa8550111::KernelScopeInfo	typeref:typename:void	file:
usesVM_CNT	RVInstrInfo.h	/^  static bool usesVM_CNT(const MachineInstr &MI) {$/;"	f	class:llvm::RVInstrInfo	typeref:typename:bool
usesVgprAt	AsmParser/RVGPUAsmParser.cpp	/^  void usesVgprAt(int i) {$/;"	f	class:__anon672fa8550111::KernelScopeInfo	typeref:typename:void	file:
validateAGPRLdSt	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::validateAGPRLdSt(const MCInst &Inst) const {$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
validateBLGP	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::validateBLGP(const MCInst &Inst,$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
validateCoherencyBits	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::validateCoherencyBits(const MCInst &Inst,$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
validateConstantBusLimitations	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::validateConstantBusLimitations($/;"	f	class:RVGPUAsmParser	typeref:typename:bool
validateDPP	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::validateDPP(const MCInst &Inst,$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
validateDS	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::validateDS(const MCInst &Inst,$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
validateDivScale	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::validateDivScale(const MCInst &Inst) {$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
validateExeczVcczOperands	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::validateExeczVcczOperands(const OperandVector &Operands) {$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
validateFlatOffset	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::validateFlatOffset(const MCInst &Inst,$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
validateGWS	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::validateGWS(const MCInst &Inst,$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
validateHwreg	AsmParser/RVGPUAsmParser.cpp	/^RVGPUAsmParser::validateHwreg(const OperandInfoTy &HwReg,$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
validateInstruction	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::validateInstruction(const MCInst &Inst,$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
validateIntClampSupported	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::validateIntClampSupported(const MCInst &Inst) {$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
validateLdsDirect	AsmParser/RVGPUAsmParser.cpp	/^RVGPUAsmParser::validateLdsDirect(const MCInst &Inst) {$/;"	f	class:RVGPUAsmParser	typeref:typename:std::optional<StringRef>
validateMAIAccWrite	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::validateMAIAccWrite(const MCInst &Inst,$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
validateMAISrc2	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::validateMAISrc2(const MCInst &Inst,$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
validateMFMA	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::validateMFMA(const MCInst &Inst,$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
validateMIMGAddrSize	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::validateMIMGAddrSize(const MCInst &Inst,$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
validateMIMGAtomicDMask	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::validateMIMGAtomicDMask(const MCInst &Inst) {$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
validateMIMGD16	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::validateMIMGD16(const MCInst &Inst) {$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
validateMIMGDataSize	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::validateMIMGDataSize(const MCInst &Inst,$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
validateMIMGGatherDMask	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::validateMIMGGatherDMask(const MCInst &Inst) {$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
validateMIMGMSAA	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::validateMIMGMSAA(const MCInst &Inst) {$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
validateMovrels	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::validateMovrels(const MCInst &Inst,$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
validateOffset	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::validateOffset(const MCInst &Inst,$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
validateOpSel	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::validateOpSel(const MCInst &Inst) {$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
validateSMEMOffset	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::validateSMEMOffset(const MCInst &Inst,$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
validateSOPLiteral	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::validateSOPLiteral(const MCInst &Inst) const {$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
validateSendMsg	AsmParser/RVGPUAsmParser.cpp	/^RVGPUAsmParser::validateSendMsg(const OperandInfoTy &Msg,$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
validateTFE	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::validateTFE(const MCInst &Inst,$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
validateTHAndScopeBits	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::validateTHAndScopeBits(const MCInst &Inst,$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
validateTargetOperandClass	AsmParser/RVGPUAsmParser.cpp	/^unsigned RVGPUAsmParser::validateTargetOperandClass(MCParsedAsmOperand &Op,$/;"	f	class:RVGPUAsmParser	typeref:typename:unsigned
validateVGPRAlign	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::validateVGPRAlign(const MCInst &Inst) const {$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
validateVOPDRegBankConstraints	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::validateVOPDRegBankConstraints($/;"	f	class:RVGPUAsmParser	typeref:typename:bool
validateVOPLiteral	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::validateVOPLiteral(const MCInst &Inst,$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
validateVccOperand	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::validateVccOperand(unsigned Reg) const {$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
validateWaitCnt	AsmParser/RVGPUAsmParser.cpp	/^bool RVGPUAsmParser::validateWaitCnt(const MCInst &Inst,$/;"	f	class:RVGPUAsmParser	typeref:typename:bool
valueIsKnownNeverF32Denorm	RVGPUISelLowering.cpp	/^static bool valueIsKnownNeverF32Denorm(SDValue Src) {$/;"	f	typeref:typename:bool	file:
valueIsKnownNeverF32Denorm	RVGPULegalizerInfo.cpp	/^static bool valueIsKnownNeverF32Denorm(const MachineRegisterInfo &MRI,$/;"	f	typeref:typename:bool	file:
vectorEltWillFoldAway	RVISelLowering.cpp	/^static bool vectorEltWillFoldAway(SDValue Op) {$/;"	f	typeref:typename:bool	file:
vectorSmallerThan	RVGPULegalizerInfo.cpp	/^static LegalityPredicate vectorSmallerThan(unsigned TypeIdx, unsigned Size) {$/;"	f	typeref:typename:LegalityPredicate	file:
vectorWiderThan	RVGPULegalizerInfo.cpp	/^static LegalityPredicate vectorWiderThan(unsigned TypeIdx, unsigned Size) {$/;"	f	typeref:typename:LegalityPredicate	file:
verify	RVGPUHSAMetadataStreamer.cpp	/^void MetadataStreamerMsgPackV4::verify(StringRef HSAMetadataString) const {$/;"	f	class:llvm::RVGPU::HSRV::MetadataStreamerMsgPackV4	typeref:typename:void
verifyCFIntrinsic	RVGPULegalizerInfo.cpp	/^verifyCFIntrinsic(MachineInstr &MI, MachineRegisterInfo &MRI, MachineInstr *&Br,$/;"	f	typeref:typename:MachineInstr *	file:
verifyInstruction	RVInstrInfo.cpp	/^bool RVInstrInfo::verifyInstruction(const MachineInstr &MI,$/;"	f	class:RVInstrInfo	typeref:typename:bool
visit	RVGPUPerfHintAnalysis.cpp	/^RVGPUPerfHintAnalysis::FuncInfo *RVGPUPerfHint::visit(const Function &F) {$/;"	f	class:__anon406ad74e0111::RVGPUPerfHint	typeref:typename:RVGPUPerfHintAnalysis::FuncInfo *
visitAtomicRMWInst	RVGPUAtomicOptimizer.cpp	/^void RVGPUAtomicOptimizerImpl::visitAtomicRMWInst(AtomicRMWInst &I) {$/;"	f	class:RVGPUAtomicOptimizerImpl	typeref:typename:void
visitBinaryOperator	RVGPUCodeGenPrepare.cpp	/^bool RVGPUCodeGenPrepareImpl::visitBinaryOperator(BinaryOperator &I) {$/;"	f	class:RVGPUCodeGenPrepareImpl	typeref:typename:bool
visitBitreverseIntrinsicInst	RVGPUCodeGenPrepare.cpp	/^bool RVGPUCodeGenPrepareImpl::visitBitreverseIntrinsicInst(IntrinsicInst &I) {$/;"	f	class:RVGPUCodeGenPrepareImpl	typeref:typename:bool
visitBranchInst	RVGPUAnnotateUniformValues.cpp	/^void RVGPUAnnotateUniformValues::visitBranchInst(BranchInst &I) {$/;"	f	class:RVGPUAnnotateUniformValues	typeref:typename:void
visitConstExpr	RVGPUAttributor.cpp	/^  static bool visitConstExpr(const ConstantExpr *CE) {$/;"	f	class:__anon512e119a0111::RVGPUInformationCache	typeref:typename:bool	file:
visitFDiv	RVGPUCodeGenPrepare.cpp	/^bool RVGPUCodeGenPrepareImpl::visitFDiv(BinaryOperator &FDiv) {$/;"	f	class:RVGPUCodeGenPrepareImpl	typeref:typename:bool
visitFDivElement	RVGPUCodeGenPrepare.cpp	/^Value *RVGPUCodeGenPrepareImpl::visitFDivElement($/;"	f	class:RVGPUCodeGenPrepareImpl	typeref:typename:Value *
visitICmpInst	RVGPUCodeGenPrepare.cpp	/^bool RVGPUCodeGenPrepareImpl::visitICmpInst(ICmpInst &I) {$/;"	f	class:RVGPUCodeGenPrepareImpl	typeref:typename:bool
visitInstruction	RVGPUCodeGenPrepare.cpp	/^  bool visitInstruction(Instruction &I) { return false; }$/;"	f	class:__anond35e324e0111::RVGPUCodeGenPrepareImpl	typeref:typename:bool	file:
visitInstruction	RVGPULateCodeGenPrepare.cpp	/^  bool visitInstruction(Instruction &) { return false; }$/;"	f	class:__anon4d9375140111::RVGPULateCodeGenPrepare	typeref:typename:bool	file:
visitIntrinsicInst	RVGPUAtomicOptimizer.cpp	/^void RVGPUAtomicOptimizerImpl::visitIntrinsicInst(IntrinsicInst &I) {$/;"	f	class:RVGPUAtomicOptimizerImpl	typeref:typename:void
visitIntrinsicInst	RVGPUCodeGenPrepare.cpp	/^bool RVGPUCodeGenPrepareImpl::visitIntrinsicInst(IntrinsicInst &I) {$/;"	f	class:RVGPUCodeGenPrepareImpl	typeref:typename:bool
visitLoadInst	RVGPUAnnotateUniformValues.cpp	/^void RVGPUAnnotateUniformValues::visitLoadInst(LoadInst &I) {$/;"	f	class:RVGPUAnnotateUniformValues	typeref:typename:void
visitLoadInst	RVGPUCodeGenPrepare.cpp	/^bool RVGPUCodeGenPrepareImpl::visitLoadInst(LoadInst &I) {$/;"	f	class:RVGPUCodeGenPrepareImpl	typeref:typename:bool
visitLoadInst	RVGPULateCodeGenPrepare.cpp	/^bool RVGPULateCodeGenPrepare::visitLoadInst(LoadInst &LI) {$/;"	f	class:RVGPULateCodeGenPrepare	typeref:typename:bool
visitMinNum	RVGPUCodeGenPrepare.cpp	/^bool RVGPUCodeGenPrepareImpl::visitMinNum(IntrinsicInst &I) {$/;"	f	class:RVGPUCodeGenPrepareImpl	typeref:typename:bool
visitPHINode	RVGPUCodeGenPrepare.cpp	/^bool RVGPUCodeGenPrepareImpl::visitPHINode(PHINode &I) {$/;"	f	class:RVGPUCodeGenPrepareImpl	typeref:typename:bool
visitSelectInst	RVGPUCodeGenPrepare.cpp	/^bool RVGPUCodeGenPrepareImpl::visitSelectInst(SelectInst &I) {$/;"	f	class:RVGPUCodeGenPrepareImpl	typeref:typename:bool
visitSqrt	RVGPUCodeGenPrepare.cpp	/^bool RVGPUCodeGenPrepareImpl::visitSqrt(IntrinsicInst &Sqrt) {$/;"	f	class:RVGPUCodeGenPrepareImpl	typeref:typename:bool
vmemWriteNeedsExpWaitcnt	GCNSubtarget.h	/^  bool vmemWriteNeedsExpWaitcnt() const {$/;"	f	class:llvm::GCNSubtarget	typeref:typename:bool
wavefront_sgpr_count	RVKernelCodeT.h	/^  uint16_t wavefront_sgpr_count;$/;"	m	struct:rv_kernel_code_t	typeref:typename:uint16_t
wavefront_size	RVKernelCodeT.h	/^  uint8_t wavefront_size;$/;"	m	struct:rv_kernel_code_t	typeref:typename:uint8_t
widen96To128	RVGPURegisterBankInfo.cpp	/^static LLT widen96To128(LLT Ty) {$/;"	f	typeref:typename:LLT	file:
widenLoad	RVISelLowering.cpp	/^SDValue RVTargetLowering::widenLoad(LoadSDNode *Ld, DAGCombinerInfo &DCI) const {$/;"	f	class:RVTargetLowering	typeref:typename:SDValue
widenToNextPowerOf2	RVGPULegalizerInfo.cpp	/^static LLT widenToNextPowerOf2(LLT Ty) {$/;"	f	typeref:typename:LLT	file:
widthsFit	SILoadStoreOptimizer.cpp	/^bool SILoadStoreOptimizer::widthsFit(const GCNSubtarget &STM,$/;"	f	class:SILoadStoreOptimizer	typeref:typename:bool
workgroup_fbarrier_count	RVKernelCodeT.h	/^  uint32_t workgroup_fbarrier_count;$/;"	m	struct:rv_kernel_code_t	typeref:typename:uint32_t
workgroup_group_segment_byte_size	RVKernelCodeT.h	/^  uint32_t workgroup_group_segment_byte_size;$/;"	m	struct:rv_kernel_code_t	typeref:typename:uint32_t
workitemIntrinsicDim	RVGPUISelLowering.cpp	/^static unsigned workitemIntrinsicDim(unsigned ID) {$/;"	f	typeref:typename:unsigned	file:
workitem_private_segment_byte_size	RVKernelCodeT.h	/^  uint32_t workitem_private_segment_byte_size;$/;"	m	struct:rv_kernel_code_t	typeref:typename:uint32_t
workitem_vgpr_count	RVKernelCodeT.h	/^  uint16_t workitem_vgpr_count;$/;"	m	struct:rv_kernel_code_t	typeref:typename:uint16_t
wrapAddr64Rsrc	RVISelLowering.cpp	/^MachineSDNode *RVTargetLowering::wrapAddr64Rsrc(SelectionDAG &DAG,$/;"	f	class:RVTargetLowering	typeref:typename:MachineSDNode *
write2Opcode	SILoadStoreOptimizer.cpp	/^unsigned SILoadStoreOptimizer::write2Opcode(unsigned EltSize) const {$/;"	f	class:SILoadStoreOptimizer	typeref:typename:unsigned
write2ST64Opcode	SILoadStoreOptimizer.cpp	/^unsigned SILoadStoreOptimizer::write2ST64Opcode(unsigned EltSize) const {$/;"	f	class:SILoadStoreOptimizer	typeref:typename:unsigned
writeName	RVGPULibFunc.cpp	/^void RVGPUMangledLibFunc::writeName(Stream &OS) const {$/;"	f	class:RVGPUMangledLibFunc	typeref:typename:void
writeNopData	MCTargetDesc/RVGPUAsmBackend.cpp	/^bool RVGPUAsmBackend::writeNopData(raw_ostream &OS, uint64_t Count,$/;"	f	class:RVGPUAsmBackend	typeref:typename:bool
x	RVKernelCodeT.h	/^  uint32_t x;$/;"	m	struct:hsa_dim3_s	typeref:typename:uint32_t
y	RVKernelCodeT.h	/^  uint32_t y;$/;"	m	struct:hsa_dim3_s	typeref:typename:uint32_t
yaml	RVMachineFunctionInfo.h	/^namespace yaml {$/;"	n	namespace:llvm
z	RVKernelCodeT.h	/^  uint32_t z;$/;"	m	struct:hsa_dim3_s	typeref:typename:uint32_t
zeroesHigh16BitsOfDest	RVGPUSubtarget.cpp	/^bool GCNSubtarget::zeroesHigh16BitsOfDest(unsigned Opcode) const {$/;"	f	class:GCNSubtarget	typeref:typename:bool
~ApplyRegBankMapping	RVGPURegisterBankInfo.cpp	/^  ~ApplyRegBankMapping() {$/;"	f	class:__anon0a1a7df70111::ApplyRegBankMapping	file:
~BuildDAG	GCNIterativeScheduler.cpp	/^  ~BuildDAG() {$/;"	f	class:GCNIterativeScheduler::BuildDAG	file:
~OverrideLegacyStrategy	GCNIterativeScheduler.cpp	/^  ~OverrideLegacyStrategy() {$/;"	f	class:GCNIterativeScheduler::OverrideLegacyStrategy	file:
~RegionMRT	RVGPUMachineCFGStructurizer.cpp	/^  ~RegionMRT() override {$/;"	f	class:__anon1695b1f50211::RegionMRT	file:
~SIArgument	RVMachineFunctionInfo.h	/^  ~SIArgument() {$/;"	f	struct:llvm::yaml::SIArgument
